

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri May 14 17:55:12 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F873
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F873 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  008C                     	;# 
    86  008D                     	;# 
    87  008E                     	;# 
    88  0091                     	;# 
    89  0092                     	;# 
    90  0093                     	;# 
    91  0094                     	;# 
    92  0098                     	;# 
    93  0099                     	;# 
    94  009E                     	;# 
    95  009F                     	;# 
    96  010C                     	;# 
    97  010D                     	;# 
    98  010E                     	;# 
    99  010F                     	;# 
   100  018C                     	;# 
   101  018D                     	;# 
   102  0000                     	;# 
   103  0001                     	;# 
   104  0002                     	;# 
   105  0003                     	;# 
   106  0004                     	;# 
   107  0005                     	;# 
   108  0006                     	;# 
   109  0007                     	;# 
   110  000A                     	;# 
   111  000B                     	;# 
   112  000C                     	;# 
   113  000D                     	;# 
   114  000E                     	;# 
   115  000E                     	;# 
   116  000F                     	;# 
   117  0010                     	;# 
   118  0011                     	;# 
   119  0012                     	;# 
   120  0013                     	;# 
   121  0014                     	;# 
   122  0015                     	;# 
   123  0015                     	;# 
   124  0016                     	;# 
   125  0017                     	;# 
   126  0018                     	;# 
   127  0019                     	;# 
   128  001A                     	;# 
   129  001B                     	;# 
   130  001B                     	;# 
   131  001C                     	;# 
   132  001D                     	;# 
   133  001E                     	;# 
   134  001F                     	;# 
   135  0081                     	;# 
   136  0085                     	;# 
   137  0086                     	;# 
   138  0087                     	;# 
   139  008C                     	;# 
   140  008D                     	;# 
   141  008E                     	;# 
   142  0091                     	;# 
   143  0092                     	;# 
   144  0093                     	;# 
   145  0094                     	;# 
   146  0098                     	;# 
   147  0099                     	;# 
   148  009E                     	;# 
   149  009F                     	;# 
   150  010C                     	;# 
   151  010D                     	;# 
   152  010E                     	;# 
   153  010F                     	;# 
   154  018C                     	;# 
   155  018D                     	;# 
   156  0007                     _PORTC	set	7
   157  0005                     _PORTA	set	5
   158  0006                     _PORTB	set	6
   159  0018                     _RCSTAbits	set	24
   160  0018                     _RCSTA	set	24
   161  001F                     _ADCON0	set	31
   162  001A                     _RCREG	set	26
   163  0019                     _TXREG	set	25
   164  000C                     _PIR1bits	set	12
   165  001E                     _ADRESH	set	30
   166  0001                     _TMR0	set	1
   167  0066                     _ADIF	set	102
   168  00FA                     _GO	set	250
   169  00F8                     _ADON	set	248
   170  00FB                     _CHS0	set	251
   171  00FC                     _CHS1	set	252
   172  00FD                     _CHS2	set	253
   173  0086                     _TRISB	set	134
   174  0099                     _SPBRG	set	153
   175  0098                     _TXSTA	set	152
   176  0081                     _OPTION_REG	set	129
   177  009F                     _ADCON1	set	159
   178  0098                     _TXSTAbits	set	152
   179  009E                     _ADRESL	set	158
   180  043F                     _TRISC7	set	1087
   181  043E                     _TRISC6	set	1086
   182  042A                     _TRISA2	set	1066
   183  0429                     _TRISA1	set	1065
   184  0428                     _TRISA0	set	1064
   185                           
   186                           	psect	cinit
   187  07F7                     start_initialization:	
   188                           ; #config settings
   189                           
   190  07F7                     __initialization:
   191                           
   192                           ; Clear objects allocated to BANK0
   193  07F7  1283               	bcf	3,5	;RP0=0, select bank0
   194  07F8  1303               	bcf	3,6	;RP1=0, select bank0
   195  07F9  01A0               	clrf	__pbssBANK0& (0+127)
   196  07FA  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   197  07FB  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   198  07FC  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   199  07FD                     end_of_initialization:	
   200                           ;End of C runtime variable initialization code
   201                           
   202  07FD                     __end_of__initialization:
   203  07FD  0183               	clrf	3
   204  07FE  118A  2F16         	ljmp	_main	;jump to C main() function
   205                           
   206                           	psect	bssBANK0
   207  0020                     __pbssBANK0:
   208  0020                     _ADRES:
   209  0020                     	ds	2
   210  0022                     _ECO:
   211  0022                     	ds	2
   212                           
   213                           	psect	cstackCOMMON
   214  0000                     __pcstackCOMMON:
   215  0000                     ??_iniciar_puertos:
   216  0000                     ??_main:	
   217                           ; 1 bytes @ 0x0
   218                           
   219                           
   220                           	psect	cstackBANK0
   221  0024                     __pcstackBANK0:	
   222                           ; 1 bytes @ 0x0
   223                           
   224  0024                     ?_iniciar_puertos:
   225  0024                     ?_Canal0:	
   226                           ; 1 bytes @ 0x0
   227                           
   228  0024                     ?_main:	
   229                           ; 1 bytes @ 0x0
   230                           
   231  0024                     Canal0@z:	
   232                           ; 2 bytes @ 0x0
   233                           
   234                           
   235                           ; 2 bytes @ 0x0
   236  0024                     	ds	2
   237  0026                     ??_Canal0:
   238                           
   239                           ; 1 bytes @ 0x2
   240  0026                     	ds	2
   241                           
   242                           	psect	maintext
   243  0716                     __pmaintext:	
   244 ;;
   245 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   246 ;;
   247 ;; *************** function _main *****************
   248 ;; Defined at:
   249 ;;		line 89 in file "main.c"
   250 ;; Parameters:    Size  Location     Type
   251 ;;		None
   252 ;; Auto vars:     Size  Location     Type
   253 ;;		None
   254 ;; Return value:  Size  Location     Type
   255 ;;                  2   92[None  ] int 
   256 ;; Registers used:
   257 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   258 ;; Tracked objects:
   259 ;;		On entry : B00/0
   260 ;;		On exit  : 0/0
   261 ;;		Unchanged: 0/0
   262 ;; Data sizes:     COMMON   BANK0   BANK1
   263 ;;      Params:         0       0       0
   264 ;;      Locals:         0       0       0
   265 ;;      Temps:          0       0       0
   266 ;;      Totals:         0       0       0
   267 ;;Total ram usage:        0 bytes
   268 ;; Hardware stack levels required when called: 1
   269 ;; This function calls:
   270 ;;		_Canal0
   271 ;;		_iniciar_puertos
   272 ;; This function is called by:
   273 ;;		Startup code after reset
   274 ;; This function uses a non-reentrant model
   275 ;;
   276                           
   277                           
   278                           ;psect for function _main
   279  0716                     _main:
   280  0716                     l844:	
   281                           ;incstack = 0
   282                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   283                           
   284                           
   285                           ;main.c: 91:     iniciar_puertos();
   286  0716  118A  26E5  118A   	fcall	_iniciar_puertos
   287  0719                     l846:
   288                           
   289                           ;main.c: 93:     ADCON0 = 0x80;
   290  0719  3080               	movlw	128
   291  071A  1283               	bcf	3,5	;RP0=0, select bank0
   292  071B  1303               	bcf	3,6	;RP1=0, select bank0
   293  071C  009F               	movwf	31	;volatile
   294  071D                     l848:
   295                           
   296                           ;main.c: 94:     ADCON1 = 0x8E;
   297  071D  308E               	movlw	142
   298  071E  1683               	bsf	3,5	;RP0=1, select bank1
   299  071F  1303               	bcf	3,6	;RP1=0, select bank1
   300  0720  009F               	movwf	31	;volatile
   301  0721                     l850:
   302                           
   303                           ;main.c: 98:     ADIF = 0;
   304  0721  1283               	bcf	3,5	;RP0=0, select bank0
   305  0722  1303               	bcf	3,6	;RP1=0, select bank0
   306  0723  130C               	bcf	12,6	;volatile
   307  0724                     l852:
   308                           
   309                           ;main.c: 101:     OPTION_REG = 0x51;
   310  0724  3051               	movlw	81
   311  0725  1683               	bsf	3,5	;RP0=1, select bank1
   312  0726  1303               	bcf	3,6	;RP1=0, select bank1
   313  0727  0081               	movwf	1	;volatile
   314  0728                     l854:
   315                           
   316                           ;main.c: 102:     TMR0 = 0;
   317  0728  1283               	bcf	3,5	;RP0=0, select bank0
   318  0729  1303               	bcf	3,6	;RP1=0, select bank0
   319  072A  0181               	clrf	1	;volatile
   320  072B                     l856:
   321                           
   322                           ;main.c: 105:     TXSTA = 0x00;
   323  072B  1683               	bsf	3,5	;RP0=1, select bank1
   324  072C  1303               	bcf	3,6	;RP1=0, select bank1
   325  072D  0198               	clrf	24	;volatile
   326  072E                     l858:
   327                           
   328                           ;main.c: 106:     RCSTA = 0x00;
   329  072E  1283               	bcf	3,5	;RP0=0, select bank0
   330  072F  1303               	bcf	3,6	;RP1=0, select bank0
   331  0730  0198               	clrf	24	;volatile
   332  0731                     l860:
   333                           
   334                           ;main.c: 107:     RCSTAbits.SPEN = 1;
   335  0731  1798               	bsf	24,7	;volatile
   336  0732                     l862:
   337                           
   338                           ;main.c: 108:     TXSTAbits.SYNC = 0;
   339  0732  1683               	bsf	3,5	;RP0=1, select bank1
   340  0733  1303               	bcf	3,6	;RP1=0, select bank1
   341  0734  1218               	bcf	24,4	;volatile
   342  0735                     l864:
   343                           
   344                           ;main.c: 109:     TXSTAbits.BRGH = 1;
   345  0735  1518               	bsf	24,2	;volatile
   346  0736                     l866:
   347                           
   348                           ;main.c: 110:     TXSTAbits.TXEN = 1;
   349  0736  1698               	bsf	24,5	;volatile
   350  0737                     l868:
   351                           
   352                           ;main.c: 111:     RCSTAbits.CREN = 1;
   353  0737  1283               	bcf	3,5	;RP0=0, select bank0
   354  0738  1303               	bcf	3,6	;RP1=0, select bank0
   355  0739  1618               	bsf	24,4	;volatile
   356  073A                     l870:
   357                           
   358                           ;main.c: 113:     SPBRG = 25;
   359  073A  3019               	movlw	25
   360  073B  1683               	bsf	3,5	;RP0=1, select bank1
   361  073C  1303               	bcf	3,6	;RP1=0, select bank1
   362  073D  0099               	movwf	25	;volatile
   363  073E                     l872:
   364                           
   365                           ;main.c: 117:     PORTB = 0x00;
   366  073E  1283               	bcf	3,5	;RP0=0, select bank0
   367  073F  1303               	bcf	3,6	;RP1=0, select bank0
   368  0740  0186               	clrf	6	;volatile
   369  0741                     l874:
   370                           
   371                           ;main.c: 119:             Canal0(2);
   372  0741  3002               	movlw	2
   373  0742  1283               	bcf	3,5	;RP0=0, select bank0
   374  0743  1303               	bcf	3,6	;RP1=0, select bank0
   375  0744  00A4               	movwf	Canal0@z
   376  0745  3000               	movlw	0
   377  0746  00A5               	movwf	Canal0@z+1
   378  0747  118A  26F3  118A   	fcall	_Canal0
   379  074A                     l876:
   380                           
   381                           ;main.c: 121:             if(ADRES < 127)
   382  074A  1283               	bcf	3,5	;RP0=0, select bank0
   383  074B  1303               	bcf	3,6	;RP1=0, select bank0
   384  074C  0821               	movf	_ADRES+1,w
   385  074D  3A80               	xorlw	128
   386  074E  00FF               	movwf	btemp+1
   387  074F  3080               	movlw	128
   388  0750  027F               	subwf	btemp+1,w
   389  0751  1D03               	skipz
   390  0752  2F55               	goto	u165
   391  0753  307F               	movlw	127
   392  0754  0220               	subwf	_ADRES,w
   393  0755                     u165:
   394  0755  1803               	skipnc
   395  0756  2F58               	goto	u161
   396  0757  2F59               	goto	u160
   397  0758                     u161:
   398  0758  2F5C               	goto	l880
   399  0759                     u160:
   400  0759                     l878:
   401                           
   402                           ;main.c: 122:                 PORTB = 0x00;
   403  0759  1283               	bcf	3,5	;RP0=0, select bank0
   404  075A  1303               	bcf	3,6	;RP1=0, select bank0
   405  075B  0186               	clrf	6	;volatile
   406  075C                     l880:
   407                           
   408                           ;main.c: 123:             if(ADRES > 127)
   409  075C  1283               	bcf	3,5	;RP0=0, select bank0
   410  075D  1303               	bcf	3,6	;RP1=0, select bank0
   411  075E  0821               	movf	_ADRES+1,w
   412  075F  3A80               	xorlw	128
   413  0760  00FF               	movwf	btemp+1
   414  0761  3080               	movlw	128
   415  0762  027F               	subwf	btemp+1,w
   416  0763  1D03               	skipz
   417  0764  2F67               	goto	u175
   418  0765  3080               	movlw	128
   419  0766  0220               	subwf	_ADRES,w
   420  0767                     u175:
   421  0767  1C03               	skipc
   422  0768  2F6A               	goto	u171
   423  0769  2F6B               	goto	u170
   424  076A                     u171:
   425  076A  2F6F               	goto	l884
   426  076B                     u170:
   427  076B                     l882:
   428                           
   429                           ;main.c: 124:                 PORTB = 0x01;
   430  076B  3001               	movlw	1
   431  076C  1283               	bcf	3,5	;RP0=0, select bank0
   432  076D  1303               	bcf	3,6	;RP1=0, select bank0
   433  076E  0086               	movwf	6	;volatile
   434  076F                     l884:
   435                           
   436                           ;main.c: 125:             if(ADRES > 255)
   437  076F  1283               	bcf	3,5	;RP0=0, select bank0
   438  0770  1303               	bcf	3,6	;RP1=0, select bank0
   439  0771  0821               	movf	_ADRES+1,w
   440  0772  3A80               	xorlw	128
   441  0773  00FF               	movwf	btemp+1
   442  0774  3081               	movlw	129
   443  0775  027F               	subwf	btemp+1,w
   444  0776  1D03               	skipz
   445  0777  2F7A               	goto	u185
   446  0778  3000               	movlw	0
   447  0779  0220               	subwf	_ADRES,w
   448  077A                     u185:
   449  077A  1C03               	skipc
   450  077B  2F7D               	goto	u181
   451  077C  2F7E               	goto	u180
   452  077D                     u181:
   453  077D  2F82               	goto	l888
   454  077E                     u180:
   455  077E                     l886:
   456                           
   457                           ;main.c: 126:                 PORTB = 0x03;
   458  077E  3003               	movlw	3
   459  077F  1283               	bcf	3,5	;RP0=0, select bank0
   460  0780  1303               	bcf	3,6	;RP1=0, select bank0
   461  0781  0086               	movwf	6	;volatile
   462  0782                     l888:
   463                           
   464                           ;main.c: 127:             if(ADRES > 352)
   465  0782  1283               	bcf	3,5	;RP0=0, select bank0
   466  0783  1303               	bcf	3,6	;RP1=0, select bank0
   467  0784  0821               	movf	_ADRES+1,w
   468  0785  3A80               	xorlw	128
   469  0786  00FF               	movwf	btemp+1
   470  0787  3081               	movlw	129
   471  0788  027F               	subwf	btemp+1,w
   472  0789  1D03               	skipz
   473  078A  2F8D               	goto	u195
   474  078B  3061               	movlw	97
   475  078C  0220               	subwf	_ADRES,w
   476  078D                     u195:
   477  078D  1C03               	skipc
   478  078E  2F90               	goto	u191
   479  078F  2F91               	goto	u190
   480  0790                     u191:
   481  0790  2F95               	goto	l892
   482  0791                     u190:
   483  0791                     l890:
   484                           
   485                           ;main.c: 128:                 PORTB = 0x07;
   486  0791  3007               	movlw	7
   487  0792  1283               	bcf	3,5	;RP0=0, select bank0
   488  0793  1303               	bcf	3,6	;RP1=0, select bank0
   489  0794  0086               	movwf	6	;volatile
   490  0795                     l892:
   491                           
   492                           ;main.c: 129:             if(ADRES > 511)
   493  0795  1283               	bcf	3,5	;RP0=0, select bank0
   494  0796  1303               	bcf	3,6	;RP1=0, select bank0
   495  0797  0821               	movf	_ADRES+1,w
   496  0798  3A80               	xorlw	128
   497  0799  00FF               	movwf	btemp+1
   498  079A  3082               	movlw	130
   499  079B  027F               	subwf	btemp+1,w
   500  079C  1D03               	skipz
   501  079D  2FA0               	goto	u205
   502  079E  3000               	movlw	0
   503  079F  0220               	subwf	_ADRES,w
   504  07A0                     u205:
   505  07A0  1C03               	skipc
   506  07A1  2FA3               	goto	u201
   507  07A2  2FA4               	goto	u200
   508  07A3                     u201:
   509  07A3  2FA8               	goto	l896
   510  07A4                     u200:
   511  07A4                     l894:
   512                           
   513                           ;main.c: 130:                 PORTB = 0x0F;
   514  07A4  300F               	movlw	15
   515  07A5  1283               	bcf	3,5	;RP0=0, select bank0
   516  07A6  1303               	bcf	3,6	;RP1=0, select bank0
   517  07A7  0086               	movwf	6	;volatile
   518  07A8                     l896:
   519                           
   520                           ;main.c: 131:             if(ADRES > 639)
   521  07A8  1283               	bcf	3,5	;RP0=0, select bank0
   522  07A9  1303               	bcf	3,6	;RP1=0, select bank0
   523  07AA  0821               	movf	_ADRES+1,w
   524  07AB  3A80               	xorlw	128
   525  07AC  00FF               	movwf	btemp+1
   526  07AD  3082               	movlw	130
   527  07AE  027F               	subwf	btemp+1,w
   528  07AF  1D03               	skipz
   529  07B0  2FB3               	goto	u215
   530  07B1  3080               	movlw	128
   531  07B2  0220               	subwf	_ADRES,w
   532  07B3                     u215:
   533  07B3  1C03               	skipc
   534  07B4  2FB6               	goto	u211
   535  07B5  2FB7               	goto	u210
   536  07B6                     u211:
   537  07B6  2FBB               	goto	l900
   538  07B7                     u210:
   539  07B7                     l898:
   540                           
   541                           ;main.c: 132:                 PORTB = 0x1F;
   542  07B7  301F               	movlw	31
   543  07B8  1283               	bcf	3,5	;RP0=0, select bank0
   544  07B9  1303               	bcf	3,6	;RP1=0, select bank0
   545  07BA  0086               	movwf	6	;volatile
   546  07BB                     l900:
   547                           
   548                           ;main.c: 133:             if(ADRES > 767)
   549  07BB  1283               	bcf	3,5	;RP0=0, select bank0
   550  07BC  1303               	bcf	3,6	;RP1=0, select bank0
   551  07BD  0821               	movf	_ADRES+1,w
   552  07BE  3A80               	xorlw	128
   553  07BF  00FF               	movwf	btemp+1
   554  07C0  3083               	movlw	131
   555  07C1  027F               	subwf	btemp+1,w
   556  07C2  1D03               	skipz
   557  07C3  2FC6               	goto	u225
   558  07C4  3000               	movlw	0
   559  07C5  0220               	subwf	_ADRES,w
   560  07C6                     u225:
   561  07C6  1C03               	skipc
   562  07C7  2FC9               	goto	u221
   563  07C8  2FCA               	goto	u220
   564  07C9                     u221:
   565  07C9  2FCE               	goto	l904
   566  07CA                     u220:
   567  07CA                     l902:
   568                           
   569                           ;main.c: 134:                 PORTB = 0x3F;
   570  07CA  303F               	movlw	63
   571  07CB  1283               	bcf	3,5	;RP0=0, select bank0
   572  07CC  1303               	bcf	3,6	;RP1=0, select bank0
   573  07CD  0086               	movwf	6	;volatile
   574  07CE                     l904:
   575                           
   576                           ;main.c: 135:             if(ADRES > 894)
   577  07CE  1283               	bcf	3,5	;RP0=0, select bank0
   578  07CF  1303               	bcf	3,6	;RP1=0, select bank0
   579  07D0  0821               	movf	_ADRES+1,w
   580  07D1  3A80               	xorlw	128
   581  07D2  00FF               	movwf	btemp+1
   582  07D3  3083               	movlw	131
   583  07D4  027F               	subwf	btemp+1,w
   584  07D5  1D03               	skipz
   585  07D6  2FD9               	goto	u235
   586  07D7  307F               	movlw	127
   587  07D8  0220               	subwf	_ADRES,w
   588  07D9                     u235:
   589  07D9  1C03               	skipc
   590  07DA  2FDC               	goto	u231
   591  07DB  2FDD               	goto	u230
   592  07DC                     u231:
   593  07DC  2FE1               	goto	l908
   594  07DD                     u230:
   595  07DD                     l906:
   596                           
   597                           ;main.c: 136:                 PORTB = 0x7F;
   598  07DD  307F               	movlw	127
   599  07DE  1283               	bcf	3,5	;RP0=0, select bank0
   600  07DF  1303               	bcf	3,6	;RP1=0, select bank0
   601  07E0  0086               	movwf	6	;volatile
   602  07E1                     l908:
   603                           
   604                           ;main.c: 137:             if(ADRES > 1022)
   605  07E1  1283               	bcf	3,5	;RP0=0, select bank0
   606  07E2  1303               	bcf	3,6	;RP1=0, select bank0
   607  07E3  0821               	movf	_ADRES+1,w
   608  07E4  3A80               	xorlw	128
   609  07E5  00FF               	movwf	btemp+1
   610  07E6  3083               	movlw	131
   611  07E7  027F               	subwf	btemp+1,w
   612  07E8  1D03               	skipz
   613  07E9  2FEC               	goto	u245
   614  07EA  30FF               	movlw	255
   615  07EB  0220               	subwf	_ADRES,w
   616  07EC                     u245:
   617  07EC  1C03               	skipc
   618  07ED  2FEF               	goto	u241
   619  07EE  2FF0               	goto	u240
   620  07EF                     u241:
   621  07EF  2F41               	goto	l874
   622  07F0                     u240:
   623  07F0                     l910:
   624                           
   625                           ;main.c: 138:                 PORTB = 0xFF;
   626  07F0  30FF               	movlw	255
   627  07F1  1283               	bcf	3,5	;RP0=0, select bank0
   628  07F2  1303               	bcf	3,6	;RP1=0, select bank0
   629  07F3  0086               	movwf	6	;volatile
   630  07F4  2F41               	goto	l874
   631  07F5  118A  2800         	ljmp	start
   632  07F7                     __end_of_main:
   633                           
   634                           	psect	text1
   635  06E5                     __ptext1:	
   636 ;; *************** function _iniciar_puertos *****************
   637 ;; Defined at:
   638 ;;		line 149 in file "main.c"
   639 ;; Parameters:    Size  Location     Type
   640 ;;		None
   641 ;; Auto vars:     Size  Location     Type
   642 ;;		None
   643 ;; Return value:  Size  Location     Type
   644 ;;                  1    wreg      void 
   645 ;; Registers used:
   646 ;;		status,2
   647 ;; Tracked objects:
   648 ;;		On entry : 0/0
   649 ;;		On exit  : 0/0
   650 ;;		Unchanged: 0/0
   651 ;; Data sizes:     COMMON   BANK0   BANK1
   652 ;;      Params:         0       0       0
   653 ;;      Locals:         0       0       0
   654 ;;      Temps:          0       0       0
   655 ;;      Totals:         0       0       0
   656 ;;Total ram usage:        0 bytes
   657 ;; Hardware stack levels used: 1
   658 ;; This function calls:
   659 ;;		Nothing
   660 ;; This function is called by:
   661 ;;		_main
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665                           
   666                           ;psect for function _iniciar_puertos
   667  06E5                     _iniciar_puertos:
   668  06E5                     l832:	
   669                           ;incstack = 0
   670                           ; Regs used in _iniciar_puertos: [status,2]
   671                           
   672                           
   673                           ;main.c: 159:     PORTA = 0;
   674  06E5  1283               	bcf	3,5	;RP0=0, select bank0
   675  06E6  1303               	bcf	3,6	;RP1=0, select bank0
   676  06E7  0185               	clrf	5	;volatile
   677                           
   678                           ;main.c: 160:     PORTB = 0;
   679  06E8  0186               	clrf	6	;volatile
   680                           
   681                           ;main.c: 161:     PORTC = 0;
   682  06E9  0187               	clrf	7	;volatile
   683  06EA                     l834:
   684                           
   685                           ;main.c: 163:     TRISA0 = 1;
   686  06EA  1683               	bsf	3,5	;RP0=1, select bank1
   687  06EB  1303               	bcf	3,6	;RP1=0, select bank1
   688  06EC  1405               	bsf	5,0	;volatile
   689  06ED                     l836:
   690                           
   691                           ;main.c: 164:     TRISA1 = 0;
   692  06ED  1085               	bcf	5,1	;volatile
   693  06EE                     l838:
   694                           
   695                           ;main.c: 165:     TRISA2 = 0;
   696  06EE  1105               	bcf	5,2	;volatile
   697  06EF                     l840:
   698                           
   699                           ;main.c: 166:     TRISC6 = 0;
   700  06EF  1307               	bcf	7,6	;volatile
   701  06F0                     l842:
   702                           
   703                           ;main.c: 167:     TRISC7 = 1;
   704  06F0  1787               	bsf	7,7	;volatile
   705                           
   706                           ;main.c: 168:     TRISB = 0x00;
   707  06F1  0186               	clrf	6	;volatile
   708  06F2                     l106:
   709  06F2  0008               	return
   710  06F3                     __end_of_iniciar_puertos:
   711                           
   712                           	psect	text2
   713  06F3                     __ptext2:	
   714 ;; *************** function _Canal0 *****************
   715 ;; Defined at:
   716 ;;		line 40 in file "main.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;  z               2    0[BANK0 ] int 
   719 ;; Auto vars:     Size  Location     Type
   720 ;;		None
   721 ;; Return value:  Size  Location     Type
   722 ;;                  1    wreg      void 
   723 ;; Registers used:
   724 ;;		wreg
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMMON   BANK0   BANK1
   730 ;;      Params:         0       2       0
   731 ;;      Locals:         0       0       0
   732 ;;      Temps:          0       2       0
   733 ;;      Totals:         0       4       0
   734 ;;Total ram usage:        4 bytes
   735 ;; Hardware stack levels used: 1
   736 ;; This function calls:
   737 ;;		Nothing
   738 ;; This function is called by:
   739 ;;		_main
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           
   744                           ;psect for function _Canal0
   745  06F3                     _Canal0:
   746  06F3                     l818:	
   747                           ;incstack = 0
   748                           ; Regs used in _Canal0: [wreg]
   749                           
   750                           
   751                           ;main.c: 40: void Canal0(int z);main.c: 41: {;main.c: 43:     CHS2 = 0;
   752  06F3  1283               	bcf	3,5	;RP0=0, select bank0
   753  06F4  1303               	bcf	3,6	;RP1=0, select bank0
   754  06F5  129F               	bcf	31,5	;volatile
   755                           
   756                           ;main.c: 44:     CHS1 = 0;
   757  06F6  121F               	bcf	31,4	;volatile
   758                           
   759                           ;main.c: 45:     CHS0 = 0;
   760  06F7  119F               	bcf	31,3	;volatile
   761                           
   762                           ;main.c: 47:     ADON = 1;
   763  06F8  141F               	bsf	31,0	;volatile
   764  06F9                     l820:
   765                           
   766                           ;main.c: 49:     _delay((unsigned long)((1)*(32000000/4000.0)));
   767  06F9  300B               	movlw	11
   768  06FA  1283               	bcf	3,5	;RP0=0, select bank0
   769  06FB  1303               	bcf	3,6	;RP1=0, select bank0
   770  06FC  00A7               	movwf	??_Canal0+1
   771  06FD  3062               	movlw	98
   772  06FE  00A6               	movwf	??_Canal0
   773  06FF                     u257:
   774  06FF  0BA6               	decfsz	??_Canal0,f
   775  0700  2EFF               	goto	u257
   776  0701  0BA7               	decfsz	??_Canal0+1,f
   777  0702  2EFF               	goto	u257
   778  0703                     l822:
   779                           
   780                           ;main.c: 51:      GO = 1;
   781  0703  1283               	bcf	3,5	;RP0=0, select bank0
   782  0704  1303               	bcf	3,6	;RP1=0, select bank0
   783  0705  151F               	bsf	31,2	;volatile
   784  0706                     l824:
   785  0706  1B0C               	btfsc	12,6	;volatile
   786  0707  2F09               	goto	u151
   787  0708  2F0A               	goto	u150
   788  0709                     u151:
   789  0709  2F0B               	goto	l77
   790  070A                     u150:
   791  070A  2F06               	goto	l824
   792  070B                     l77:
   793                           
   794                           ;main.c: 57:     ADON = 0;
   795  070B  101F               	bcf	31,0	;volatile
   796  070C                     l828:
   797                           
   798                           ;main.c: 59:     ADRES = (ADRESH << 8) | ADRESL;
   799  070C  081E               	movf	30,w	;volatile
   800  070D  00A1               	movwf	_ADRES+1
   801  070E  1683               	bsf	3,5	;RP0=1, select bank1
   802  070F  1303               	bcf	3,6	;RP1=0, select bank1
   803  0710  081E               	movf	30,w	;volatile
   804  0711  1283               	bcf	3,5	;RP0=0, select bank0
   805  0712  1303               	bcf	3,6	;RP1=0, select bank0
   806  0713  00A0               	movwf	_ADRES
   807  0714                     l830:
   808                           
   809                           ;main.c: 61:     ADIF = 0;
   810  0714  130C               	bcf	12,6	;volatile
   811  0715                     l78:
   812  0715  0008               	return
   813  0716                     __end_of_Canal0:
   814  007E                     btemp	set	126	;btemp
   815  007E                     wtemp0	set	126
   816                           
   817                           	psect	config
   818                           
   819                           ;Config register CONFIG @ 0x2007
   820                           ;	Oscillator Selection bits
   821                           ;	FOSC = XT, XT oscillator
   822                           ;	Watchdog Timer Enable bit
   823                           ;	WDTE = ON, WDT enabled
   824                           ;	Power-up Timer Enable bit
   825                           ;	PWRTE = ON, PWRT enabled
   826                           ;	FLASH Program Memory Code Protection bits
   827                           ;	CP = OFF, Code protection off
   828                           ;	Brown-out Reset Enable bit
   829                           ;	BOREN = OFF, BOR disabled
   830                           ;	Low Voltage In-Circuit Serial Programming Enable bit
   831                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   832                           ;	Data EE Memory Code Protection
   833                           ;	CPD = OFF, Code Protection off
   834                           ;	FLASH Program Memory Write Enable
   835                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
   836                           ;	In-Circuit Debugger Mode bit
   837                           ;	DEBUG = 0x1, unprogrammed default
   838  2007                     	org	8199
   839  2007  3D35               	dw	15669

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94      4       8
    BANK1            94      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Canal0

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      76
                             _Canal0
                    _iniciar_puertos
 ---------------------------------------------------------------------------------
 (1) _iniciar_puertos                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Canal0                                               4     2      2      76
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Canal0
   _iniciar_puertos

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            5E      0       0       3        0.0%
BANK0               5E      4       8       4        8.5%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            5E      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               5E      0       0       6        0.0%
ABS                  0      0       8       7        0.0%
DATA                 0      0       8       8        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri May 14 17:55:12 2021

                      l77 070B                        l78 0715                        _GO 00FA  
                     l106 06F2                       l820 06F9                       l900 07BB  
                     l830 0714                       l822 0703                       l910 07F0  
                     l902 07CA                       l824 0706                       l840 06EF  
                     l832 06E5                       l904 07CE                       l818 06F3  
                     l842 06F0                       l834 06EA                       l906 07DD  
                     l850 0721                       l828 070C                       l836 06ED  
                     l908 07E1                       l860 0731                       l852 0724  
                     l844 0716                       l838 06EE                       l870 073A  
                     l862 0732                       l854 0728                       l846 0719  
                     l880 075C                       l872 073E                       l864 0735  
                     l856 072B                       l848 071D                       _ECO 0022  
                     l890 0791                       l882 076B                       l874 0741  
                     l866 0736                       l858 072E                       l892 0795  
                     l884 076F                       l876 074A                       l868 0737  
                     l894 07A4                       l886 077E                       l878 0759  
                     l896 07A8                       l888 0782                       l898 07B7  
                     u200 07A4                       u201 07A3                       u210 07B7  
                     u211 07B6                       u220 07CA                       u221 07C9  
                     u205 07A0                       u150 070A                       u230 07DD  
                     u151 0709                       u231 07DC                       u215 07B3  
                     u240 07F0                       u160 0759                       u241 07EF  
                     u225 07C6                       u161 0758                       u170 076B  
                     u235 07D9                       u171 076A                       u180 077E  
                     u245 07EC                       u181 077D                       u165 0755  
                     u190 0791                       u191 0790                       u175 0767  
                     u257 06FF                       u185 077A                       u195 078D  
        ?_iniciar_puertos 0024                      _ADIF 0066                      _ADON 00F8  
                    _CHS0 00FB                      _CHS1 00FC                      _CHS2 00FD  
                    _TMR0 0001                      _main 0716                      btemp 007E  
                    start 0000                     ?_main 0024                     _ADRES 0020  
                   _RCREG 001A                     _RCSTA 0018                     _SPBRG 0099  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _TRISB 0086                     _TXREG 0019                     _TXSTA 0098  
                   status 0003                     wtemp0 007E           __initialization 07F7  
            __end_of_main 07F7                    ??_main 0000                    _ADCON0 001F  
                  _ADCON1 009F                    _ADRESH 001E                    _ADRESL 009E  
                  _TRISA0 0428                    _TRISA1 0429                    _TRISA2 042A  
                  _TRISC6 043E                    _TRISC7 043F                    _Canal0 06F3  
 __end_of__initialization 07FD            __pcstackCOMMON 0000                __pbssBANK0 0020  
                 ?_Canal0 0024                __pmaintext 0716                   Canal0@z 0024  
__size_of_iniciar_puertos 000E           __size_of_Canal0 0023                   __ptext1 06E5  
                 __ptext2 06F3      end_of_initialization 07FD                 _RCSTAbits 0018  
               _TXSTAbits 0098            __end_of_Canal0 0716         ??_iniciar_puertos 0000  
     start_initialization 07F7                  ??_Canal0 0026                 ___latbits 0001  
           __pcstackBANK0 0024                  _PIR1bits 000C           _iniciar_puertos 06E5  
           __size_of_main 00E1   __end_of_iniciar_puertos 06F3                _OPTION_REG 0081  
