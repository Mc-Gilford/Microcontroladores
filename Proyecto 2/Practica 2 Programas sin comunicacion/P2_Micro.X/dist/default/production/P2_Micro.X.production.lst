

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon May 17 01:34:03 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F873
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.20
    27                           ; Generated 12/02/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F873 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010F                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000D                     	;# 
   126  000E                     	;# 
   127  000E                     	;# 
   128  000F                     	;# 
   129  0010                     	;# 
   130  0011                     	;# 
   131  0012                     	;# 
   132  0013                     	;# 
   133  0014                     	;# 
   134  0015                     	;# 
   135  0015                     	;# 
   136  0016                     	;# 
   137  0017                     	;# 
   138  0018                     	;# 
   139  0019                     	;# 
   140  001A                     	;# 
   141  001B                     	;# 
   142  001B                     	;# 
   143  001C                     	;# 
   144  001D                     	;# 
   145  001E                     	;# 
   146  001F                     	;# 
   147  0081                     	;# 
   148  0085                     	;# 
   149  0086                     	;# 
   150  0087                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168                           
   169                           	psect	idataBANK0
   170  0439                     __pidataBANK0:
   171                           
   172                           ;initializer for _X
   173  0439  342F               	retlw	47
   174  043A  3400               	retlw	0
   175                           
   176                           ;initializer for _M
   177  043B  3445               	retlw	69
   178  043C  346C               	retlw	108
   179  043D  3420               	retlw	32
   180  043E  3441               	retlw	65
   181  043F  3444               	retlw	68
   182  0440  3443               	retlw	67
   183  0441  3420               	retlw	32
   184  0442  3479               	retlw	121
   185  0443  3420               	retlw	32
   186  0444  3465               	retlw	101
   187  0445  346C               	retlw	108
   188  0446  3420               	retlw	32
   189  0447  3455               	retlw	85
   190  0448  3441               	retlw	65
   191  0449  3452               	retlw	82
   192  044A  3454               	retlw	84
   193  044B  3420               	retlw	32
   194  044C  344A               	retlw	74
   195  044D  346F               	retlw	111
   196  044E  3473               	retlw	115
   197  044F  3465               	retlw	101
   198  0450  3420               	retlw	32
   199  0451  3452               	retlw	82
   200  0452  3464               	retlw	100
   201  0453  3467               	retlw	103
   202  0454  347A               	retlw	122
   203  0455  3420               	retlw	32
   204  0456  3479               	retlw	121
   205  0457  3420               	retlw	32
   206  0458  344B               	retlw	75
   207  0459  3461               	retlw	97
   208  045A  3472               	retlw	114
   209  045B  346C               	retlw	108
   210  045C  3461               	retlw	97
   211  045D  3420               	retlw	32
   212  045E  3452               	retlw	82
   213  045F  3465               	retlw	101
   214  0460  3479               	retlw	121
   215  0461  3465               	retlw	101
   216  0462  3473               	retlw	115
   217  0463  3400               	retlw	0
   218  0006                     _PORTB	set	6
   219  0005                     _PORTA	set	5
   220  0007                     _PORTC	set	7
   221  001A                     _RCREG	set	26
   222  0019                     _TXREG	set	25
   223  000C                     _PIR1bits	set	12
   224  0006                     _PORTBbits	set	6
   225  0005                     _PORTAbits	set	5
   226  003C                     _RC4	set	60
   227  002D                     _RA5	set	45
   228  002C                     _RA4	set	44
   229  002B                     _RA3	set	43
   230  0038                     _RC0	set	56
   231  0039                     _RC1	set	57
   232  003A                     _RC2	set	58
   233  003B                     _RC3	set	59
   234  009F                     _ADCON1	set	159
   235  0087                     _TRISC	set	135
   236  0098                     _TXSTAbits	set	152
   237  0086                     _TRISBbits	set	134
   238  0085                     _TRISAbits	set	133
   239                           
   240                           	psect	strings
   241  0002                     __pstrings:
   242  0002                     stringtab:
   243  0002                     __stringtab:
   244                           
   245                           ;	String table - string pointers are 1 byte each
   246  0002  1BFF               	btfsc	btemp+1,7
   247  0003  280C               	ljmp	stringcode
   248  0004  1383               	bcf	3,7
   249  0005  187F               	btfsc	btemp+1,0
   250  0006  1783               	bsf	3,7
   251  0007  0800               	movf	0,w
   252  0008  0A84               	incf	4,f
   253  0009  1903               	skipnz
   254  000A  0AFF               	incf	btemp+1,f
   255  000B  0008               	return
   256  000C                     stringcode:
   257  000C                     stringdir:
   258  000C  3000               	movlw	high stringdir
   259  000D  008A               	movwf	10
   260  000E  0804               	movf	4,w
   261  000F  0A84               	incf	4,f
   262  0010  0782               	addwf	2,f
   263  0011                     __stringbase:
   264  0011  3400               	retlw	0
   265  0012                     __end_of__stringtab:
   266  0012                     STR_1:
   267  0012  3445               	retlw	69	;'E'
   268  0013  346E               	retlw	110	;'n'
   269  0014  3476               	retlw	118	;'v'
   270  0015  3469               	retlw	105	;'i'
   271  0016  3461               	retlw	97	;'a'
   272  0017  3464               	retlw	100	;'d'
   273  0018  346F               	retlw	111	;'o'
   274  0019  3400               	retlw	0
   275                           
   276                           	psect	cinit
   277  07E8                     start_initialization:	
   278                           ; #config settings
   279                           
   280  07E8                     __initialization:
   281                           
   282                           ; Initialize objects allocated to BANK0
   283  07E8  1383               	bcf	3,7	;select IRP bank0
   284  07E9  304B               	movlw	low (__pdataBANK0+43)
   285  07EA  00FD               	movwf	btemp+-1
   286  07EB  3004               	movlw	high __pidataBANK0
   287  07EC  00FE               	movwf	btemp
   288  07ED  3039               	movlw	low __pidataBANK0
   289  07EE  00FF               	movwf	btemp+1
   290  07EF  3020               	movlw	low __pdataBANK0
   291  07F0  0084               	movwf	4
   292  07F1  118A  23F4  118A   	fcall	init_ram0
   293                           
   294                           ; Clear objects allocated to BANK0
   295  07F4  01E0               	clrf	__pbssBANK0& (0+127)
   296  07F5  01E1               	clrf	(__pbssBANK0+1)& (0+127)
   297  07F6  01E2               	clrf	(__pbssBANK0+2)& (0+127)
   298  07F7  01E3               	clrf	(__pbssBANK0+3)& (0+127)
   299  07F8  01E4               	clrf	(__pbssBANK0+4)& (0+127)
   300  07F9  01E5               	clrf	(__pbssBANK0+5)& (0+127)
   301  07FA  01E6               	clrf	(__pbssBANK0+6)& (0+127)
   302  07FB  01E7               	clrf	(__pbssBANK0+7)& (0+127)
   303                           
   304                           ; Clear objects allocated to BITBANK0
   305  07FC  01E8               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   306  07FD                     end_of_initialization:	
   307                           ;End of C runtime variable initialization code
   308                           
   309  07FD                     __end_of__initialization:
   310  07FD  0183               	clrf	3
   311  07FE  118A  2DC9         	ljmp	_main	;jump to C main() function
   312                           
   313                           	psect	bitbssBANK0
   314  0340                     __pbitbssBANK0:
   315  0340                     _RS:
   316  0340                     	ds	1
   317                           
   318                           	psect	bssBANK0
   319  0060                     __pbssBANK0:
   320  0060                     _number:
   321  0060                     	ds	4
   322  0064                     _ADRES:
   323  0064                     	ds	2
   324  0066                     _ECO:
   325  0066                     	ds	2
   326                           
   327                           	psect	dataBANK0
   328  0020                     __pdataBANK0:
   329  0020                     _X:
   330  0020                     	ds	2
   331  0022                     _M:
   332  0022                     	ds	41
   333                           
   334                           	psect	inittext
   335  03F0                     init_fetch0:	
   336                           ;	Called with low address in FSR and high address in W
   337                           
   338  03F0  087E               	movf	btemp,w
   339  03F1  008A               	movwf	10
   340  03F2  087F               	movf	btemp+1,w
   341  03F3  0082               	movwf	2
   342  03F4                     init_ram0:	
   343                           ;Called with:
   344                           ;	high address of idata address in btemp 
   345                           ;	low address of idata address in btemp+1 
   346                           ;	low address of data in FSR
   347                           ;	high address + 1 of data in btemp-1
   348                           
   349  03F4  118A  23F0  118A   	fcall	init_fetch0
   350  03F7  0080               	movwf	0
   351  03F8  0A84               	incf	4,f
   352  03F9  0804               	movf	4,w
   353  03FA  067D               	xorwf	btemp+-1,w
   354  03FB  1903               	btfsc	3,2
   355  03FC  3400               	retlw	0
   356  03FD  0AFF               	incf	btemp+1,f
   357  03FE  1903               	btfsc	3,2
   358  03FF  0AFE               	incf	btemp,f
   359  0400  2BF4               	goto	init_ram0
   360                           
   361                           	psect	cstackCOMMON
   362  0000                     __pcstackCOMMON:
   363  0000                     ??_iniciar_puertos:
   364                           
   365                           	psect	cstackBANK0
   366  004B                     __pcstackBANK0:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  004B                     ?_iniciar_puertos:
   370  004B                     ?_inicio_presentacion:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  004B                     ?_LCD_Write_Nibble:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  004B                     ??_LCD_Write_Nibble:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  004B                     ?_LCD_Cmd:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  004B                     ?_LCD_PutC:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  004B                     ?_LCD_Begin:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  004B                     ?_keypad_readkey:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  004B                     ??_keypad_readkey:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  004B                     ?_keypad_getkey:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  004B                     ?_main:	
   398                           ; 1 bytes @ 0x0
   399                           
   400                           
   401                           ; 2 bytes @ 0x0
   402  004B                     	ds	1
   403  004C                     ??_keypad_getkey:
   404                           
   405                           ; 1 bytes @ 0x1
   406  004C                     	ds	1
   407  004D                     LCD_Write_Nibble@n:
   408  004D                     keypad_getkey@key:	
   409                           ; 1 bytes @ 0x2
   410                           
   411                           
   412                           ; 1 bytes @ 0x2
   413  004D                     	ds	1
   414  004E                     ??_LCD_Cmd:
   415  004E                     ??_LCD_PutC:	
   416                           ; 1 bytes @ 0x3
   417                           
   418  004E                     ?_LCD_Print:	
   419                           ; 1 bytes @ 0x3
   420                           
   421  004E                     LCD_Print@LCD_Str:	
   422                           ; 1 bytes @ 0x3
   423                           
   424                           
   425                           ; 2 bytes @ 0x3
   426  004E                     	ds	1
   427  004F                     LCD_PutC@LCD_Char:
   428                           
   429                           ; 1 bytes @ 0x4
   430  004F                     	ds	1
   431  0050                     ??_LCD_Print:
   432  0050                     LCD_Cmd@Command:	
   433                           ; 1 bytes @ 0x5
   434                           
   435                           
   436                           ; 1 bytes @ 0x5
   437  0050                     	ds	1
   438  0051                     ?_LCD_Goto:
   439  0051                     ??_LCD_Begin:	
   440                           ; 1 bytes @ 0x6
   441                           
   442  0051                     LCD_Goto@row:	
   443                           ; 1 bytes @ 0x6
   444                           
   445  0051                     LCD_Print@i:	
   446                           ; 1 bytes @ 0x6
   447                           
   448                           
   449                           ; 1 bytes @ 0x6
   450  0051                     	ds	1
   451  0052                     ??_LCD_Goto:
   452                           
   453                           ; 1 bytes @ 0x7
   454  0052                     	ds	2
   455  0054                     LCD_Goto@col:
   456                           
   457                           ; 1 bytes @ 0x9
   458  0054                     	ds	1
   459  0055                     ??_inicio_presentacion:
   460                           
   461                           ; 1 bytes @ 0xA
   462  0055                     	ds	3
   463  0058                     inicio_presentacion@i:
   464                           
   465                           ; 2 bytes @ 0xD
   466  0058                     	ds	2
   467  005A                     ??_main:
   468                           
   469                           ; 1 bytes @ 0xF
   470  005A                     	ds	3
   471  005D                     main@i:
   472                           
   473                           ; 2 bytes @ 0x12
   474  005D                     	ds	2
   475  005F                     main@c:
   476                           
   477                           ; 1 bytes @ 0x14
   478  005F                     	ds	1
   479                           
   480                           	psect	maintext
   481  05C9                     __pmaintext:	
   482 ;;
   483 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   484 ;;
   485 ;; *************** function _main *****************
   486 ;; Defined at:
   487 ;;		line 45 in file "main.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;		None
   490 ;; Auto vars:     Size  Location     Type
   491 ;;  c               1   20[BANK0 ] unsigned char 
   492 ;;  i               2   18[BANK0 ] int 
   493 ;; Return value:  Size  Location     Type
   494 ;;                  2  218[None  ] int 
   495 ;; Registers used:
   496 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   497 ;; Tracked objects:
   498 ;;		On entry : B00/0
   499 ;;		On exit  : 0/0
   500 ;;		Unchanged: 0/0
   501 ;; Data sizes:     COMMON   BANK0   BANK1
   502 ;;      Params:         0       0       0
   503 ;;      Locals:         0       3       0
   504 ;;      Temps:          0       3       0
   505 ;;      Totals:         0       6       0
   506 ;;Total ram usage:        6 bytes
   507 ;; Hardware stack levels required when called: 4
   508 ;; This function calls:
   509 ;;		_LCD_Begin
   510 ;;		_LCD_Cmd
   511 ;;		_LCD_Goto
   512 ;;		_LCD_Print
   513 ;;		_LCD_PutC
   514 ;;		_iniciar_puertos
   515 ;;		_inicio_presentacion
   516 ;;		_keypad_getkey
   517 ;; This function is called by:
   518 ;;		Startup code after reset
   519 ;; This function uses a non-reentrant model
   520 ;;
   521                           
   522                           
   523                           ;psect for function _main
   524  05C9                     _main:
   525  05C9                     l1593:	
   526                           ;incstack = 0
   527                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   528                           
   529                           
   530                           ;main.c: 47:     int i=0;
   531  05C9  1283               	bcf	3,5	;RP0=0, select bank0
   532  05CA  1303               	bcf	3,6	;RP1=0, select bank0
   533  05CB  01DD               	clrf	main@i
   534  05CC  01DE               	clrf	main@i+1
   535  05CD                     l1595:
   536                           
   537                           ;main.c: 48:     iniciar_puertos();
   538  05CD  118A  23DF  118A   	fcall	_iniciar_puertos
   539  05D0                     l1597:
   540                           
   541                           ;main.c: 51:     LCD_Begin();
   542  05D0  118A  2653  118A   	fcall	_LCD_Begin
   543  05D3                     l1599:
   544                           
   545                           ;main.c: 52:     inicio_presentacion();
   546  05D3  118A  2562  118A   	fcall	_inicio_presentacion
   547  05D6                     l1601:
   548                           
   549                           ;main.c: 53:     _delay((unsigned long)((500)*(32000000/4000.0)));
   550  05D6  3015               	movlw	21
   551  05D7  1283               	bcf	3,5	;RP0=0, select bank0
   552  05D8  1303               	bcf	3,6	;RP1=0, select bank0
   553  05D9  00DC               	movwf	??_main+2
   554  05DA  304B               	movlw	75
   555  05DB  00DB               	movwf	??_main+1
   556  05DC  30BE               	movlw	190
   557  05DD  00DA               	movwf	??_main
   558  05DE                     u1977:
   559  05DE  0BDA               	decfsz	??_main,f
   560  05DF  2DDE               	goto	u1977
   561  05E0  0BDB               	decfsz	??_main+1,f
   562  05E1  2DDE               	goto	u1977
   563  05E2  0BDC               	decfsz	??_main+2,f
   564  05E3  2DDE               	goto	u1977
   565  05E4                     l1603:
   566                           
   567                           ;main.c: 54:     LCD_Goto(1, 1);
   568  05E4  1283               	bcf	3,5	;RP0=0, select bank0
   569  05E5  1303               	bcf	3,6	;RP1=0, select bank0
   570  05E6  01D1               	clrf	LCD_Goto@row
   571  05E7  0AD1               	incf	LCD_Goto@row,f
   572  05E8  3001               	movlw	1
   573  05E9  118A  2492  118A   	fcall	_LCD_Goto
   574  05EC                     l1605:
   575                           
   576                           ;main.c: 55:     _delay((unsigned long)((500)*(32000000/4000.0)));
   577  05EC  3015               	movlw	21
   578  05ED  1283               	bcf	3,5	;RP0=0, select bank0
   579  05EE  1303               	bcf	3,6	;RP1=0, select bank0
   580  05EF  00DC               	movwf	??_main+2
   581  05F0  304B               	movlw	75
   582  05F1  00DB               	movwf	??_main+1
   583  05F2  30BE               	movlw	190
   584  05F3  00DA               	movwf	??_main
   585  05F4                     u1987:
   586  05F4  0BDA               	decfsz	??_main,f
   587  05F5  2DF4               	goto	u1987
   588  05F6  0BDB               	decfsz	??_main+1,f
   589  05F7  2DF4               	goto	u1987
   590  05F8  0BDC               	decfsz	??_main+2,f
   591  05F9  2DF4               	goto	u1987
   592  05FA                     l1607:
   593                           
   594                           ;main.c: 63:     if(i<4)
   595  05FA  1283               	bcf	3,5	;RP0=0, select bank0
   596  05FB  1303               	bcf	3,6	;RP1=0, select bank0
   597  05FC  085E               	movf	main@i+1,w
   598  05FD  3A80               	xorlw	128
   599  05FE  00FF               	movwf	btemp+1
   600  05FF  3080               	movlw	128
   601  0600  027F               	subwf	btemp+1,w
   602  0601  1D03               	skipz
   603  0602  2E05               	goto	u1935
   604  0603  3004               	movlw	4
   605  0604  025D               	subwf	main@i,w
   606  0605                     u1935:
   607  0605  1803               	skipnc
   608  0606  2E08               	goto	u1931
   609  0607  2E09               	goto	u1930
   610  0608                     u1931:
   611  0608  2E3F               	goto	l1627
   612  0609                     u1930:
   613  0609                     l1609:
   614                           
   615                           ;main.c: 64:     {;main.c: 65:     char c = keypad_getkey();
   616  0609  118A  2418  118A   	fcall	_keypad_getkey
   617  060C  1283               	bcf	3,5	;RP0=0, select bank0
   618  060D  1303               	bcf	3,6	;RP1=0, select bank0
   619  060E  00DA               	movwf	??_main
   620  060F  085A               	movf	??_main,w
   621  0610  00DF               	movwf	main@c
   622  0611                     l1611:
   623                           
   624                           ;main.c: 66:         if(c!='=' && c!='A')
   625  0611  303D               	movlw	61
   626  0612  065F               	xorwf	main@c,w
   627  0613  1903               	btfsc	3,2
   628  0614  2E16               	goto	u1941
   629  0615  2E17               	goto	u1940
   630  0616                     u1941:
   631  0616  2E32               	goto	l1621
   632  0617                     u1940:
   633  0617                     l1613:
   634  0617  3041               	movlw	65
   635  0618  065F               	xorwf	main@c,w
   636  0619  1903               	btfsc	3,2
   637  061A  2E1C               	goto	u1951
   638  061B  2E1D               	goto	u1950
   639  061C                     u1951:
   640  061C  2E32               	goto	l1621
   641  061D                     u1950:
   642  061D                     l1615:
   643                           
   644                           ;main.c: 67:         {;main.c: 68:         LCD_PutC(c);
   645  061D  085F               	movf	main@c,w
   646  061E  118A  2401  118A   	fcall	_LCD_PutC
   647  0621                     l1617:
   648                           
   649                           ;main.c: 69:         number[i]=c;
   650  0621  1283               	bcf	3,5	;RP0=0, select bank0
   651  0622  1303               	bcf	3,6	;RP1=0, select bank0
   652  0623  085F               	movf	main@c,w
   653  0624  00DA               	movwf	??_main
   654  0625  085D               	movf	main@i,w
   655  0626  3E60               	addlw	(low (_number| 0))& (0+255)
   656  0627  0084               	movwf	4
   657  0628  085A               	movf	??_main,w
   658  0629  1383               	bcf	3,7	;select IRP bank0
   659  062A  0080               	movwf	0
   660  062B                     l1619:
   661                           
   662                           ;main.c: 70:         i++;
   663  062B  3001               	movlw	1
   664  062C  07DD               	addwf	main@i,f
   665  062D  1803               	skipnc
   666  062E  0ADE               	incf	main@i+1,f
   667  062F  3000               	movlw	0
   668  0630  07DE               	addwf	main@i+1,f
   669                           
   670                           ;main.c: 71:         }
   671  0631  2DEC               	goto	l1605
   672  0632                     l1621:
   673  0632  3041               	movlw	65
   674  0633  065F               	xorwf	main@c,w
   675  0634  1D03               	btfss	3,2
   676  0635  2E37               	goto	u1961
   677  0636  2E38               	goto	u1960
   678  0637                     u1961:
   679  0637  2DEC               	goto	l1605
   680  0638                     u1960:
   681  0638                     l1623:
   682                           
   683                           ;main.c: 73:         {;main.c: 74:             i=0;
   684  0638  01DD               	clrf	main@i
   685  0639  01DE               	clrf	main@i+1
   686  063A                     l1625:
   687                           
   688                           ;main.c: 75:             LCD_Cmd(0x01);
   689  063A  3001               	movlw	1
   690  063B  118A  2464  118A   	fcall	_LCD_Cmd
   691  063E  2DEC               	goto	l1605
   692  063F                     l1627:
   693                           
   694                           ;main.c: 84:     {;main.c: 85:          i=0;
   695  063F  1283               	bcf	3,5	;RP0=0, select bank0
   696  0640  1303               	bcf	3,6	;RP1=0, select bank0
   697  0641  01DD               	clrf	main@i
   698  0642  01DE               	clrf	main@i+1
   699  0643                     l1629:
   700                           
   701                           ;main.c: 86:          LCD_PutC(' ');
   702  0643  3020               	movlw	32
   703  0644  118A  2401  118A   	fcall	_LCD_PutC
   704  0647                     l1631:
   705                           
   706                           ;main.c: 87:          LCD_Print("Enviado");
   707  0647  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   708  0648  1283               	bcf	3,5	;RP0=0, select bank0
   709  0649  1303               	bcf	3,6	;RP1=0, select bank0
   710  064A  00CE               	movwf	LCD_Print@LCD_Str
   711  064B  3080               	movlw	128
   712  064C  00CF               	movwf	LCD_Print@LCD_Str+1
   713  064D  118A  24C2  118A   	fcall	_LCD_Print
   714  0650  2DEC               	goto	l1605
   715  0651  118A  2800         	ljmp	start
   716  0653                     __end_of_main:
   717                           
   718                           	psect	text1
   719  0418                     __ptext1:	
   720 ;; *************** function _keypad_getkey *****************
   721 ;; Defined at:
   722 ;;		line 114 in file "./kbd.h"
   723 ;; Parameters:    Size  Location     Type
   724 ;;		None
   725 ;; Auto vars:     Size  Location     Type
   726 ;;  key             1    2[BANK0 ] unsigned char 
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      unsigned char 
   729 ;; Registers used:
   730 ;;		wreg, status,2, status,0, pclath, cstack
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMMON   BANK0   BANK1
   736 ;;      Params:         0       0       0
   737 ;;      Locals:         0       1       0
   738 ;;      Temps:          0       1       0
   739 ;;      Totals:         0       2       0
   740 ;;Total ram usage:        2 bytes
   741 ;; Hardware stack levels used: 1
   742 ;; Hardware stack levels required when called: 1
   743 ;; This function calls:
   744 ;;		_keypad_readkey
   745 ;; This function is called by:
   746 ;;		_main
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           
   751                           ;psect for function _keypad_getkey
   752  0418                     _keypad_getkey:
   753  0418                     l1473:	
   754                           ;incstack = 0
   755                           ; Regs used in _keypad_getkey: [wreg+status,2+status,0+pclath+cstack]
   756                           
   757                           
   758                           ;./kbd.h: 116:  unsigned char key = 'x';
   759  0418  3078               	movlw	120
   760  0419  1283               	bcf	3,5	;RP0=0, select bank0
   761  041A  1303               	bcf	3,6	;RP1=0, select bank0
   762  041B  00CC               	movwf	??_keypad_getkey
   763  041C  084C               	movf	??_keypad_getkey,w
   764  041D  00CD               	movwf	keypad_getkey@key
   765                           
   766                           ;./kbd.h: 119:  while(key == 'x')
   767  041E  2C27               	goto	l1477
   768  041F                     l1475:
   769                           
   770                           ;./kbd.h: 120:   key = keypad_readkey();
   771  041F  118A  2710  118A   	fcall	_keypad_readkey
   772  0422  1283               	bcf	3,5	;RP0=0, select bank0
   773  0423  1303               	bcf	3,6	;RP1=0, select bank0
   774  0424  00CC               	movwf	??_keypad_getkey
   775  0425  084C               	movf	??_keypad_getkey,w
   776  0426  00CD               	movwf	keypad_getkey@key
   777  0427                     l1477:
   778                           
   779                           ;./kbd.h: 119:  while(key == 'x')
   780  0427  3078               	movlw	120
   781  0428  064D               	xorwf	keypad_getkey@key,w
   782  0429  1903               	btfsc	3,2
   783  042A  2C2C               	goto	u1421
   784  042B  2C2D               	goto	u1420
   785  042C                     u1421:
   786  042C  2C1F               	goto	l1475
   787  042D                     u1420:
   788  042D                     l1479:
   789  042D  118A  2710  118A   	fcall	_keypad_readkey
   790  0430  3A78               	xorlw	120
   791  0431  1D03               	skipz
   792  0432  2C34               	goto	u1431
   793  0433  2C35               	goto	u1430
   794  0434                     u1431:
   795  0434  2C2D               	goto	l1479
   796  0435                     u1430:
   797  0435                     l1481:
   798                           
   799                           ;./kbd.h: 125:  return key;
   800  0435  1283               	bcf	3,5	;RP0=0, select bank0
   801  0436  1303               	bcf	3,6	;RP1=0, select bank0
   802  0437  084D               	movf	keypad_getkey@key,w
   803  0438                     l194:
   804  0438  0008               	return
   805  0439                     __end_of_keypad_getkey:
   806                           
   807                           	psect	text2
   808  0710                     __ptext2:	
   809 ;; *************** function _keypad_readkey *****************
   810 ;; Defined at:
   811 ;;		line 59 in file "./kbd.h"
   812 ;; Parameters:    Size  Location     Type
   813 ;;		None
   814 ;; Auto vars:     Size  Location     Type
   815 ;;		None
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      unsigned char 
   818 ;; Registers used:
   819 ;;		wreg
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMMON   BANK0   BANK1
   825 ;;      Params:         0       0       0
   826 ;;      Locals:         0       0       0
   827 ;;      Temps:          0       1       0
   828 ;;      Totals:         0       1       0
   829 ;;Total ram usage:        1 bytes
   830 ;; Hardware stack levels used: 1
   831 ;; This function calls:
   832 ;;		Nothing
   833 ;; This function is called by:
   834 ;;		_keypad_getkey
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           
   839                           ;psect for function _keypad_readkey
   840  0710                     _keypad_readkey:
   841  0710                     l1323:	
   842                           ;incstack = 0
   843                           ; Regs used in _keypad_readkey: [wreg]
   844                           
   845                           
   846                           ;./kbd.h: 61:     RC3 = 1;
   847  0710  1283               	bcf	3,5	;RP0=0, select bank0
   848  0711  1303               	bcf	3,6	;RP1=0, select bank0
   849  0712  1587               	bsf	7,3	;volatile
   850                           
   851                           ;./kbd.h: 62:     RC2 = 0;
   852  0713  1107               	bcf	7,2	;volatile
   853                           
   854                           ;./kbd.h: 63:     RC1 = 0;
   855  0714  1087               	bcf	7,1	;volatile
   856                           
   857                           ;./kbd.h: 64:     RC0 = 0;
   858  0715  1007               	bcf	7,0	;volatile
   859  0716                     l1325:
   860                           
   861                           ;./kbd.h: 65:     _delay((unsigned long)((30)*(32000000/4000000.0)));
   862  0716  304F               	movlw	79
   863  0717  1283               	bcf	3,5	;RP0=0, select bank0
   864  0718  1303               	bcf	3,6	;RP1=0, select bank0
   865  0719  00CB               	movwf	??_keypad_readkey
   866  071A                     u1997:
   867  071A  0BCB               	decfsz	??_keypad_readkey,f
   868  071B  2F1A               	goto	u1997
   869  071C  0000               	nop
   870  071D                     l1327:
   871                           
   872                           ;./kbd.h: 67:     if(RC3==1 && RC2==0 && RC1==0 && RC0==0) {
   873  071D  1283               	bcf	3,5	;RP0=0, select bank0
   874  071E  1303               	bcf	3,6	;RP1=0, select bank0
   875  071F  1D87               	btfss	7,3	;volatile
   876  0720  2F22               	goto	u1091
   877  0721  2F23               	goto	u1090
   878  0722                     u1091:
   879  0722  2F47               	goto	l165
   880  0723                     u1090:
   881  0723                     l1329:
   882  0723  1907               	btfsc	7,2	;volatile
   883  0724  2F26               	goto	u1101
   884  0725  2F27               	goto	u1100
   885  0726                     u1101:
   886  0726  2F47               	goto	l165
   887  0727                     u1100:
   888  0727                     l1331:
   889  0727  1887               	btfsc	7,1	;volatile
   890  0728  2F2A               	goto	u1111
   891  0729  2F2B               	goto	u1110
   892  072A                     u1111:
   893  072A  2F47               	goto	l165
   894  072B                     u1110:
   895  072B                     l1333:
   896  072B  1807               	btfsc	7,0	;volatile
   897  072C  2F2E               	goto	u1121
   898  072D  2F2F               	goto	u1120
   899  072E                     u1121:
   900  072E  2F47               	goto	l165
   901  072F                     u1120:
   902  072F                     l1335:
   903                           
   904                           ;./kbd.h: 68:         if (RA3 == 1) return 'A';
   905  072F  1D85               	btfss	5,3	;volatile
   906  0730  2F32               	goto	u1131
   907  0731  2F33               	goto	u1130
   908  0732                     u1131:
   909  0732  2F35               	goto	l166
   910  0733                     u1130:
   911  0733                     l1337:
   912  0733  3041               	movlw	65
   913  0734  2FE7               	goto	l167
   914  0735                     l166:
   915                           
   916                           ;./kbd.h: 69:         if (RA4 == 1) return '0';
   917  0735  1E05               	btfss	5,4	;volatile
   918  0736  2F38               	goto	u1141
   919  0737  2F39               	goto	u1140
   920  0738                     u1141:
   921  0738  2F3B               	goto	l168
   922  0739                     u1140:
   923  0739                     l1341:
   924  0739  3030               	movlw	48
   925  073A  2FE7               	goto	l167
   926  073B                     l168:
   927                           
   928                           ;./kbd.h: 70:         if (RA5 == 1) return '=';
   929  073B  1E85               	btfss	5,5	;volatile
   930  073C  2F3E               	goto	u1151
   931  073D  2F3F               	goto	u1150
   932  073E                     u1151:
   933  073E  2F41               	goto	l169
   934  073F                     u1150:
   935  073F                     l1345:
   936  073F  303D               	movlw	61
   937  0740  2FE7               	goto	l167
   938  0741                     l169:
   939                           
   940                           ;./kbd.h: 71:         if (RC4 == 1) return '+';
   941  0741  1E07               	btfss	7,4	;volatile
   942  0742  2F44               	goto	u1161
   943  0743  2F45               	goto	u1160
   944  0744                     u1161:
   945  0744  2F47               	goto	l165
   946  0745                     u1160:
   947  0745                     l1349:
   948  0745  302B               	movlw	43
   949  0746  2FE7               	goto	l167
   950  0747                     l165:	
   951                           ;./kbd.h: 72:     }
   952                           
   953                           
   954                           ;./kbd.h: 73:     RC3 = 0;
   955  0747  1187               	bcf	7,3	;volatile
   956                           
   957                           ;./kbd.h: 74:     RC2 = 1;
   958  0748  1507               	bsf	7,2	;volatile
   959                           
   960                           ;./kbd.h: 75:     RC1 = 0;
   961  0749  1087               	bcf	7,1	;volatile
   962                           
   963                           ;./kbd.h: 76:     RC0 = 0;
   964  074A  1007               	bcf	7,0	;volatile
   965  074B                     l1353:
   966                           
   967                           ;./kbd.h: 77:     _delay((unsigned long)((30)*(32000000/4000000.0)));
   968  074B  304F               	movlw	79
   969  074C  1283               	bcf	3,5	;RP0=0, select bank0
   970  074D  1303               	bcf	3,6	;RP1=0, select bank0
   971  074E  00CB               	movwf	??_keypad_readkey
   972  074F                     u2007:
   973  074F  0BCB               	decfsz	??_keypad_readkey,f
   974  0750  2F4F               	goto	u2007
   975  0751  0000               	nop
   976  0752                     l1355:
   977                           
   978                           ;./kbd.h: 79:     if(RC3==0 && RC2==1 && RC1==0 && RC0==0) {
   979  0752  1283               	bcf	3,5	;RP0=0, select bank0
   980  0753  1303               	bcf	3,6	;RP1=0, select bank0
   981  0754  1987               	btfsc	7,3	;volatile
   982  0755  2F57               	goto	u1171
   983  0756  2F58               	goto	u1170
   984  0757                     u1171:
   985  0757  2F7C               	goto	l171
   986  0758                     u1170:
   987  0758                     l1357:
   988  0758  1D07               	btfss	7,2	;volatile
   989  0759  2F5B               	goto	u1181
   990  075A  2F5C               	goto	u1180
   991  075B                     u1181:
   992  075B  2F7C               	goto	l171
   993  075C                     u1180:
   994  075C                     l1359:
   995  075C  1887               	btfsc	7,1	;volatile
   996  075D  2F5F               	goto	u1191
   997  075E  2F60               	goto	u1190
   998  075F                     u1191:
   999  075F  2F7C               	goto	l171
  1000  0760                     u1190:
  1001  0760                     l1361:
  1002  0760  1807               	btfsc	7,0	;volatile
  1003  0761  2F63               	goto	u1201
  1004  0762  2F64               	goto	u1200
  1005  0763                     u1201:
  1006  0763  2F7C               	goto	l171
  1007  0764                     u1200:
  1008  0764                     l1363:
  1009                           
  1010                           ;./kbd.h: 80:         if (RA3 == 1) return '1';
  1011  0764  1D85               	btfss	5,3	;volatile
  1012  0765  2F67               	goto	u1211
  1013  0766  2F68               	goto	u1210
  1014  0767                     u1211:
  1015  0767  2F6A               	goto	l172
  1016  0768                     u1210:
  1017  0768                     l1365:
  1018  0768  3031               	movlw	49
  1019  0769  2FE7               	goto	l167
  1020  076A                     l172:
  1021                           
  1022                           ;./kbd.h: 81:         if (RA4 == 1) return '2';
  1023  076A  1E05               	btfss	5,4	;volatile
  1024  076B  2F6D               	goto	u1221
  1025  076C  2F6E               	goto	u1220
  1026  076D                     u1221:
  1027  076D  2F70               	goto	l173
  1028  076E                     u1220:
  1029  076E                     l1369:
  1030  076E  3032               	movlw	50
  1031  076F  2FE7               	goto	l167
  1032  0770                     l173:
  1033                           
  1034                           ;./kbd.h: 82:         if (RA5 == 1) return '3';
  1035  0770  1E85               	btfss	5,5	;volatile
  1036  0771  2F73               	goto	u1231
  1037  0772  2F74               	goto	u1230
  1038  0773                     u1231:
  1039  0773  2F76               	goto	l174
  1040  0774                     u1230:
  1041  0774                     l1373:
  1042  0774  3033               	movlw	51
  1043  0775  2FE7               	goto	l167
  1044  0776                     l174:
  1045                           
  1046                           ;./kbd.h: 83:         if (RC4 == 1) return '.';
  1047  0776  1E07               	btfss	7,4	;volatile
  1048  0777  2F79               	goto	u1241
  1049  0778  2F7A               	goto	u1240
  1050  0779                     u1241:
  1051  0779  2F7C               	goto	l171
  1052  077A                     u1240:
  1053  077A                     l1377:
  1054  077A  302E               	movlw	46
  1055  077B  2FE7               	goto	l167
  1056  077C                     l171:	
  1057                           ;./kbd.h: 84:     }
  1058                           
  1059                           
  1060                           ;./kbd.h: 86:     RC3 = 0;
  1061  077C  1187               	bcf	7,3	;volatile
  1062                           
  1063                           ;./kbd.h: 87:     RC2 = 0;
  1064  077D  1107               	bcf	7,2	;volatile
  1065                           
  1066                           ;./kbd.h: 88:     RC1 = 1;
  1067  077E  1487               	bsf	7,1	;volatile
  1068                           
  1069                           ;./kbd.h: 89:     RC0 = 0;
  1070  077F  1007               	bcf	7,0	;volatile
  1071  0780                     l1381:
  1072                           
  1073                           ;./kbd.h: 90:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  1074  0780  304F               	movlw	79
  1075  0781  1283               	bcf	3,5	;RP0=0, select bank0
  1076  0782  1303               	bcf	3,6	;RP1=0, select bank0
  1077  0783  00CB               	movwf	??_keypad_readkey
  1078  0784                     u2017:
  1079  0784  0BCB               	decfsz	??_keypad_readkey,f
  1080  0785  2F84               	goto	u2017
  1081  0786  0000               	nop
  1082  0787                     l1383:
  1083                           
  1084                           ;./kbd.h: 92:     if(RC3==0 && RC2==0 && RC1==1 && RC0==0) {
  1085  0787  1283               	bcf	3,5	;RP0=0, select bank0
  1086  0788  1303               	bcf	3,6	;RP1=0, select bank0
  1087  0789  1987               	btfsc	7,3	;volatile
  1088  078A  2F8C               	goto	u1251
  1089  078B  2F8D               	goto	u1250
  1090  078C                     u1251:
  1091  078C  2FB1               	goto	l176
  1092  078D                     u1250:
  1093  078D                     l1385:
  1094  078D  1907               	btfsc	7,2	;volatile
  1095  078E  2F90               	goto	u1261
  1096  078F  2F91               	goto	u1260
  1097  0790                     u1261:
  1098  0790  2FB1               	goto	l176
  1099  0791                     u1260:
  1100  0791                     l1387:
  1101  0791  1C87               	btfss	7,1	;volatile
  1102  0792  2F94               	goto	u1271
  1103  0793  2F95               	goto	u1270
  1104  0794                     u1271:
  1105  0794  2FB1               	goto	l176
  1106  0795                     u1270:
  1107  0795                     l1389:
  1108  0795  1807               	btfsc	7,0	;volatile
  1109  0796  2F98               	goto	u1281
  1110  0797  2F99               	goto	u1280
  1111  0798                     u1281:
  1112  0798  2FB1               	goto	l176
  1113  0799                     u1280:
  1114  0799                     l1391:
  1115                           
  1116                           ;./kbd.h: 93:         if (RA3 == 1) return '4';
  1117  0799  1D85               	btfss	5,3	;volatile
  1118  079A  2F9C               	goto	u1291
  1119  079B  2F9D               	goto	u1290
  1120  079C                     u1291:
  1121  079C  2F9F               	goto	l177
  1122  079D                     u1290:
  1123  079D                     l1393:
  1124  079D  3034               	movlw	52
  1125  079E  2FE7               	goto	l167
  1126  079F                     l177:
  1127                           
  1128                           ;./kbd.h: 94:         if (RA4 == 1) return '5';
  1129  079F  1E05               	btfss	5,4	;volatile
  1130  07A0  2FA2               	goto	u1301
  1131  07A1  2FA3               	goto	u1300
  1132  07A2                     u1301:
  1133  07A2  2FA5               	goto	l178
  1134  07A3                     u1300:
  1135  07A3                     l1397:
  1136  07A3  3035               	movlw	53
  1137  07A4  2FE7               	goto	l167
  1138  07A5                     l178:
  1139                           
  1140                           ;./kbd.h: 95:         if (RA5 == 1) return '6';
  1141  07A5  1E85               	btfss	5,5	;volatile
  1142  07A6  2FA8               	goto	u1311
  1143  07A7  2FA9               	goto	u1310
  1144  07A8                     u1311:
  1145  07A8  2FAB               	goto	l179
  1146  07A9                     u1310:
  1147  07A9                     l1401:
  1148  07A9  3036               	movlw	54
  1149  07AA  2FE7               	goto	l167
  1150  07AB                     l179:
  1151                           
  1152                           ;./kbd.h: 96:         if (RC4 == 1) return '*';
  1153  07AB  1E07               	btfss	7,4	;volatile
  1154  07AC  2FAE               	goto	u1321
  1155  07AD  2FAF               	goto	u1320
  1156  07AE                     u1321:
  1157  07AE  2FB1               	goto	l176
  1158  07AF                     u1320:
  1159  07AF                     l1405:
  1160  07AF  302A               	movlw	42
  1161  07B0  2FE7               	goto	l167
  1162  07B1                     l176:	
  1163                           ;./kbd.h: 97:     }
  1164                           
  1165                           
  1166                           ;./kbd.h: 99:     RC3 = 0;
  1167  07B1  1187               	bcf	7,3	;volatile
  1168                           
  1169                           ;./kbd.h: 100:     RC2 = 0;
  1170  07B2  1107               	bcf	7,2	;volatile
  1171                           
  1172                           ;./kbd.h: 101:     RC1 = 0;
  1173  07B3  1087               	bcf	7,1	;volatile
  1174                           
  1175                           ;./kbd.h: 102:     RC0 = 1;
  1176  07B4  1407               	bsf	7,0	;volatile
  1177  07B5                     l1409:
  1178                           
  1179                           ;./kbd.h: 103:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  1180  07B5  304F               	movlw	79
  1181  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  1182  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  1183  07B8  00CB               	movwf	??_keypad_readkey
  1184  07B9                     u2027:
  1185  07B9  0BCB               	decfsz	??_keypad_readkey,f
  1186  07BA  2FB9               	goto	u2027
  1187  07BB  0000               	nop
  1188  07BC                     l1411:
  1189                           
  1190                           ;./kbd.h: 105:     if(RC3==0 && RC2==0 && RC1==0 && RC0==1) {
  1191  07BC  1283               	bcf	3,5	;RP0=0, select bank0
  1192  07BD  1303               	bcf	3,6	;RP1=0, select bank0
  1193  07BE  1987               	btfsc	7,3	;volatile
  1194  07BF  2FC1               	goto	u1331
  1195  07C0  2FC2               	goto	u1330
  1196  07C1                     u1331:
  1197  07C1  2FE6               	goto	l1437
  1198  07C2                     u1330:
  1199  07C2                     l1413:
  1200  07C2  1907               	btfsc	7,2	;volatile
  1201  07C3  2FC5               	goto	u1341
  1202  07C4  2FC6               	goto	u1340
  1203  07C5                     u1341:
  1204  07C5  2FE6               	goto	l1437
  1205  07C6                     u1340:
  1206  07C6                     l1415:
  1207  07C6  1887               	btfsc	7,1	;volatile
  1208  07C7  2FC9               	goto	u1351
  1209  07C8  2FCA               	goto	u1350
  1210  07C9                     u1351:
  1211  07C9  2FE6               	goto	l1437
  1212  07CA                     u1350:
  1213  07CA                     l1417:
  1214  07CA  1C07               	btfss	7,0	;volatile
  1215  07CB  2FCD               	goto	u1361
  1216  07CC  2FCE               	goto	u1360
  1217  07CD                     u1361:
  1218  07CD  2FE6               	goto	l1437
  1219  07CE                     u1360:
  1220  07CE                     l1419:
  1221                           
  1222                           ;./kbd.h: 106:         if (RA3 == 1) return '7';
  1223  07CE  1D85               	btfss	5,3	;volatile
  1224  07CF  2FD1               	goto	u1371
  1225  07D0  2FD2               	goto	u1370
  1226  07D1                     u1371:
  1227  07D1  2FD4               	goto	l182
  1228  07D2                     u1370:
  1229  07D2                     l1421:
  1230  07D2  3037               	movlw	55
  1231  07D3  2FE7               	goto	l167
  1232  07D4                     l182:
  1233                           
  1234                           ;./kbd.h: 107:         if (RA4 == 1) return '8';
  1235  07D4  1E05               	btfss	5,4	;volatile
  1236  07D5  2FD7               	goto	u1381
  1237  07D6  2FD8               	goto	u1380
  1238  07D7                     u1381:
  1239  07D7  2FDA               	goto	l183
  1240  07D8                     u1380:
  1241  07D8                     l1425:
  1242  07D8  3038               	movlw	56
  1243  07D9  2FE7               	goto	l167
  1244  07DA                     l183:
  1245                           
  1246                           ;./kbd.h: 108:         if (RA5 == 1) return '9';
  1247  07DA  1E85               	btfss	5,5	;volatile
  1248  07DB  2FDD               	goto	u1391
  1249  07DC  2FDE               	goto	u1390
  1250  07DD                     u1391:
  1251  07DD  2FE0               	goto	l184
  1252  07DE                     u1390:
  1253  07DE                     l1429:
  1254  07DE  3039               	movlw	57
  1255  07DF  2FE7               	goto	l167
  1256  07E0                     l184:
  1257                           
  1258                           ;./kbd.h: 109:         if (RC4 == 1) return '/';
  1259  07E0  1E07               	btfss	7,4	;volatile
  1260  07E1  2FE3               	goto	u1401
  1261  07E2  2FE4               	goto	u1400
  1262  07E3                     u1401:
  1263  07E3  2FE6               	goto	l1437
  1264  07E4                     u1400:
  1265  07E4                     l1433:
  1266  07E4  302F               	movlw	47
  1267  07E5  2FE7               	goto	l167
  1268  07E6                     l1437:
  1269                           
  1270                           ;./kbd.h: 111:  return 'x';
  1271  07E6  3078               	movlw	120
  1272  07E7                     l167:
  1273  07E7  0008               	return
  1274  07E8                     __end_of_keypad_readkey:
  1275                           
  1276                           	psect	text3
  1277  0562                     __ptext3:	
  1278 ;; *************** function _inicio_presentacion *****************
  1279 ;; Defined at:
  1280 ;;		line 109 in file "main.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;		None
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;  i               2   13[BANK0 ] int 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMMON   BANK0   BANK1
  1294 ;;      Params:         0       0       0
  1295 ;;      Locals:         0       2       0
  1296 ;;      Temps:          0       3       0
  1297 ;;      Totals:         0       5       0
  1298 ;;Total ram usage:        5 bytes
  1299 ;; Hardware stack levels used: 1
  1300 ;; Hardware stack levels required when called: 3
  1301 ;; This function calls:
  1302 ;;		_LCD_Cmd
  1303 ;;		_LCD_Goto
  1304 ;;		_LCD_Print
  1305 ;; This function is called by:
  1306 ;;		_main
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           
  1311                           ;psect for function _inicio_presentacion
  1312  0562                     _inicio_presentacion:
  1313  0562                     l1495:	
  1314                           ;incstack = 0
  1315                           ; Regs used in _inicio_presentacion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  1316                           
  1317                           
  1318                           ;main.c: 111:     LCD_Goto(1,1);
  1319  0562  1283               	bcf	3,5	;RP0=0, select bank0
  1320  0563  1303               	bcf	3,6	;RP1=0, select bank0
  1321  0564  01D1               	clrf	LCD_Goto@row
  1322  0565  0AD1               	incf	LCD_Goto@row,f
  1323  0566  3001               	movlw	1
  1324  0567  118A  2492  118A   	fcall	_LCD_Goto
  1325  056A                     l1497:
  1326                           
  1327                           ;main.c: 112:     LCD_Print(M);
  1328  056A  3022               	movlw	(low (_M| 0))& (0+255)
  1329  056B  1283               	bcf	3,5	;RP0=0, select bank0
  1330  056C  1303               	bcf	3,6	;RP1=0, select bank0
  1331  056D  00CE               	movwf	LCD_Print@LCD_Str
  1332  056E  3000               	movlw	0
  1333  056F  00CF               	movwf	LCD_Print@LCD_Str+1
  1334  0570  118A  24C2  118A   	fcall	_LCD_Print
  1335  0573                     l1499:
  1336                           
  1337                           ;main.c: 113:     _delay((unsigned long)((50)*(32000000/4000.0)));
  1338  0573  3003               	movlw	3
  1339  0574  1283               	bcf	3,5	;RP0=0, select bank0
  1340  0575  1303               	bcf	3,6	;RP1=0, select bank0
  1341  0576  00D7               	movwf	??_inicio_presentacion+2
  1342  0577  3008               	movlw	8
  1343  0578  00D6               	movwf	??_inicio_presentacion+1
  1344  0579  3076               	movlw	118
  1345  057A  00D5               	movwf	??_inicio_presentacion
  1346  057B                     u2037:
  1347  057B  0BD5               	decfsz	??_inicio_presentacion,f
  1348  057C  2D7B               	goto	u2037
  1349  057D  0BD6               	decfsz	??_inicio_presentacion+1,f
  1350  057E  2D7B               	goto	u2037
  1351  057F  0BD7               	decfsz	??_inicio_presentacion+2,f
  1352  0580  2D7B               	goto	u2037
  1353  0581  2D82               	nop2
  1354  0582                     l1501:
  1355                           
  1356                           ;main.c: 114:     for(int i=0;i<40;i++){
  1357  0582  1283               	bcf	3,5	;RP0=0, select bank0
  1358  0583  1303               	bcf	3,6	;RP1=0, select bank0
  1359  0584  01D8               	clrf	inicio_presentacion@i
  1360  0585  01D9               	clrf	inicio_presentacion@i+1
  1361  0586                     l1507:
  1362                           
  1363                           ;main.c: 115:         LCD_Cmd(0x18);
  1364  0586  3018               	movlw	24
  1365  0587  118A  2464  118A   	fcall	_LCD_Cmd
  1366  058A                     l1509:
  1367                           
  1368                           ;main.c: 116:         _delay((unsigned long)((40)*(32000000/4000.0)));
  1369  058A  3002               	movlw	2
  1370  058B  1283               	bcf	3,5	;RP0=0, select bank0
  1371  058C  1303               	bcf	3,6	;RP1=0, select bank0
  1372  058D  00D7               	movwf	??_inicio_presentacion+2
  1373  058E  30A0               	movlw	160
  1374  058F  00D6               	movwf	??_inicio_presentacion+1
  1375  0590  3092               	movlw	146
  1376  0591  00D5               	movwf	??_inicio_presentacion
  1377  0592                     u2047:
  1378  0592  0BD5               	decfsz	??_inicio_presentacion,f
  1379  0593  2D92               	goto	u2047
  1380  0594  0BD6               	decfsz	??_inicio_presentacion+1,f
  1381  0595  2D92               	goto	u2047
  1382  0596  0BD7               	decfsz	??_inicio_presentacion+2,f
  1383  0597  2D92               	goto	u2047
  1384  0598                     l1511:
  1385                           
  1386                           ;main.c: 117:     }
  1387  0598  3001               	movlw	1
  1388  0599  1283               	bcf	3,5	;RP0=0, select bank0
  1389  059A  1303               	bcf	3,6	;RP1=0, select bank0
  1390  059B  07D8               	addwf	inicio_presentacion@i,f
  1391  059C  1803               	skipnc
  1392  059D  0AD9               	incf	inicio_presentacion@i+1,f
  1393  059E  3000               	movlw	0
  1394  059F  07D9               	addwf	inicio_presentacion@i+1,f
  1395  05A0                     l1513:
  1396  05A0  0859               	movf	inicio_presentacion@i+1,w
  1397  05A1  3A80               	xorlw	128
  1398  05A2  00FF               	movwf	btemp+1
  1399  05A3  3080               	movlw	128
  1400  05A4  027F               	subwf	btemp+1,w
  1401  05A5  1D03               	skipz
  1402  05A6  2DA9               	goto	u1445
  1403  05A7  3028               	movlw	40
  1404  05A8  0258               	subwf	inicio_presentacion@i,w
  1405  05A9                     u1445:
  1406  05A9  1C03               	skipc
  1407  05AA  2DAC               	goto	u1441
  1408  05AB  2DAD               	goto	u1440
  1409  05AC                     u1441:
  1410  05AC  2D86               	goto	l1507
  1411  05AD                     u1440:
  1412  05AD                     l1515:
  1413                           
  1414                           ;main.c: 118:     _delay((unsigned long)((50)*(32000000/4000.0)));
  1415  05AD  3003               	movlw	3
  1416  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  1417  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  1418  05B0  00D7               	movwf	??_inicio_presentacion+2
  1419  05B1  3008               	movlw	8
  1420  05B2  00D6               	movwf	??_inicio_presentacion+1
  1421  05B3  3076               	movlw	118
  1422  05B4  00D5               	movwf	??_inicio_presentacion
  1423  05B5                     u2057:
  1424  05B5  0BD5               	decfsz	??_inicio_presentacion,f
  1425  05B6  2DB5               	goto	u2057
  1426  05B7  0BD6               	decfsz	??_inicio_presentacion+1,f
  1427  05B8  2DB5               	goto	u2057
  1428  05B9  0BD7               	decfsz	??_inicio_presentacion+2,f
  1429  05BA  2DB5               	goto	u2057
  1430  05BB  2DBC               	nop2
  1431  05BC                     l1517:
  1432                           
  1433                           ;main.c: 119:     LCD_Cmd(0x01);
  1434  05BC  3001               	movlw	1
  1435  05BD  118A  2464  118A   	fcall	_LCD_Cmd
  1436  05C0                     l1519:
  1437                           
  1438                           ;main.c: 120:     LCD_Goto(1, 1);
  1439  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  1440  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  1441  05C2  01D1               	clrf	LCD_Goto@row
  1442  05C3  0AD1               	incf	LCD_Goto@row,f
  1443  05C4  3001               	movlw	1
  1444  05C5  118A  2492  118A   	fcall	_LCD_Goto
  1445  05C8                     l235:
  1446  05C8  0008               	return
  1447  05C9                     __end_of_inicio_presentacion:
  1448                           
  1449                           	psect	text4
  1450  04C2                     __ptext4:	
  1451 ;; *************** function _LCD_Print *****************
  1452 ;; Defined at:
  1453 ;;		line 113 in file "./lcd.h"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;  LCD_Str         2    3[BANK0 ] PTR unsigned char 
  1456 ;;		 -> M(41), STR_1(8), 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  i               1    6[BANK0 ] unsigned char 
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  1    wreg      void 
  1461 ;; Registers used:
  1462 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMMON   BANK0   BANK1
  1468 ;;      Params:         0       2       0
  1469 ;;      Locals:         0       1       0
  1470 ;;      Temps:          0       1       0
  1471 ;;      Totals:         0       4       0
  1472 ;;Total ram usage:        4 bytes
  1473 ;; Hardware stack levels used: 1
  1474 ;; Hardware stack levels required when called: 1
  1475 ;; This function calls:
  1476 ;;		_LCD_Write_Nibble
  1477 ;; This function is called by:
  1478 ;;		_main
  1479 ;;		_inicio_presentacion
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           
  1484                           ;psect for function _LCD_Print
  1485  04C2                     _LCD_Print:
  1486  04C2                     l1313:	
  1487                           ;incstack = 0
  1488                           ; Regs used in _LCD_Print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1489                           
  1490                           
  1491                           ;./lcd.h: 113: void LCD_Print(char* LCD_Str);./lcd.h: 114: {;./lcd.h: 115:   uint8_t i =
      +                           0;
  1492  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  1493  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  1494  04C4  01D1               	clrf	LCD_Print@i
  1495  04C5                     l1315:
  1496                           
  1497                           ;./lcd.h: 116:   RS = 1;
  1498  04C5  1468               	bsf	_RS/(0+8),_RS& (0+7)
  1499                           
  1500                           ;./lcd.h: 117:   while(LCD_Str[i] != '\0')
  1501  04C6  2CF1               	goto	l1321
  1502  04C7                     l1317:
  1503                           
  1504                           ;./lcd.h: 118:   {;./lcd.h: 119:     LCD_Write_Nibble(LCD_Str[i] >> 4);
  1505  04C7  0851               	movf	LCD_Print@i,w
  1506  04C8  074E               	addwf	LCD_Print@LCD_Str,w
  1507  04C9  0084               	movwf	4
  1508  04CA  084F               	movf	LCD_Print@LCD_Str+1,w
  1509  04CB  1803               	skipnc
  1510  04CC  0A4F               	incf	LCD_Print@LCD_Str+1,w
  1511  04CD  00FF               	movwf	btemp+1
  1512  04CE  118A  2002  118A   	fcall	stringtab
  1513  04D1  00D0               	movwf	??_LCD_Print
  1514  04D2  3004               	movlw	4
  1515  04D3                     u1075:
  1516  04D3  1003               	clrc
  1517  04D4  0CD0               	rrf	??_LCD_Print,f
  1518  04D5  3EFF               	addlw	-1
  1519  04D6  1D03               	skipz
  1520  04D7  2CD3               	goto	u1075
  1521  04D8  0850               	movf	??_LCD_Print,w
  1522  04D9  118A  2501  118A   	fcall	_LCD_Write_Nibble
  1523                           
  1524                           ;./lcd.h: 120:     LCD_Write_Nibble(LCD_Str[i++] );
  1525  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  1526  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  1527  04DE  0851               	movf	LCD_Print@i,w
  1528  04DF  074E               	addwf	LCD_Print@LCD_Str,w
  1529  04E0  0084               	movwf	4
  1530  04E1  084F               	movf	LCD_Print@LCD_Str+1,w
  1531  04E2  1803               	skipnc
  1532  04E3  0A4F               	incf	LCD_Print@LCD_Str+1,w
  1533  04E4  00FF               	movwf	btemp+1
  1534  04E5  118A  2002  118A   	fcall	stringtab
  1535  04E8  118A  2501  118A   	fcall	_LCD_Write_Nibble
  1536  04EB                     l1319:
  1537  04EB  3001               	movlw	1
  1538  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  1539  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  1540  04EE  00D0               	movwf	??_LCD_Print
  1541  04EF  0850               	movf	??_LCD_Print,w
  1542  04F0  07D1               	addwf	LCD_Print@i,f
  1543  04F1                     l1321:
  1544                           
  1545                           ;./lcd.h: 117:   while(LCD_Str[i] != '\0')
  1546  04F1  0851               	movf	LCD_Print@i,w
  1547  04F2  074E               	addwf	LCD_Print@LCD_Str,w
  1548  04F3  0084               	movwf	4
  1549  04F4  084F               	movf	LCD_Print@LCD_Str+1,w
  1550  04F5  1803               	skipnc
  1551  04F6  0A4F               	incf	LCD_Print@LCD_Str+1,w
  1552  04F7  00FF               	movwf	btemp+1
  1553  04F8  118A  2002  118A   	fcall	stringtab
  1554  04FB  3A00               	xorlw	0
  1555  04FC  1D03               	skipz
  1556  04FD  2CFF               	goto	u1081
  1557  04FE  2D00               	goto	u1080
  1558  04FF                     u1081:
  1559  04FF  2CC7               	goto	l1317
  1560  0500                     u1080:
  1561  0500                     l77:
  1562  0500  0008               	return
  1563  0501                     __end_of_LCD_Print:
  1564                           
  1565                           	psect	text5
  1566  0492                     __ptext5:	
  1567 ;; *************** function _LCD_Goto *****************
  1568 ;; Defined at:
  1569 ;;		line 87 in file "./lcd.h"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;  col             1    wreg     unsigned char 
  1572 ;;  row             1    6[BANK0 ] unsigned char 
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;  col             1    9[BANK0 ] unsigned char 
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      void 
  1577 ;; Registers used:
  1578 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMMON   BANK0   BANK1
  1584 ;;      Params:         0       1       0
  1585 ;;      Locals:         0       1       0
  1586 ;;      Temps:          0       2       0
  1587 ;;      Totals:         0       4       0
  1588 ;;Total ram usage:        4 bytes
  1589 ;; Hardware stack levels used: 1
  1590 ;; Hardware stack levels required when called: 2
  1591 ;; This function calls:
  1592 ;;		_LCD_Cmd
  1593 ;; This function is called by:
  1594 ;;		_main
  1595 ;;		_inicio_presentacion
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           
  1600                           ;psect for function _LCD_Goto
  1601  0492                     _LCD_Goto:
  1602                           
  1603                           ;incstack = 0
  1604                           ; Regs used in _LCD_Goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1605                           ;LCD_Goto@col stored from wreg
  1606  0492  1283               	bcf	3,5	;RP0=0, select bank0
  1607  0493  1303               	bcf	3,6	;RP1=0, select bank0
  1608  0494  00D4               	movwf	LCD_Goto@col
  1609  0495                     l1295:
  1610                           
  1611                           ;./lcd.h: 87: void LCD_Goto(uint8_t col, uint8_t row);./lcd.h: 88: {;./lcd.h: 89:   swit
      +                          ch(row)
  1612  0495  2CAE               	goto	l1305
  1613  0496                     l1297:
  1614                           
  1615                           ;./lcd.h: 92:       LCD_Cmd(0xC0 + col - 1);
  1616  0496  0854               	movf	LCD_Goto@col,w
  1617  0497  3EBF               	addlw	191
  1618  0498  118A  2464  118A   	fcall	_LCD_Cmd
  1619                           
  1620                           ;./lcd.h: 93:       break;
  1621  049B  2CC1               	goto	l68
  1622  049C                     l1299:
  1623                           
  1624                           ;./lcd.h: 95:       LCD_Cmd(0x94 + col - 1);
  1625  049C  0854               	movf	LCD_Goto@col,w
  1626  049D  3E93               	addlw	147
  1627  049E  118A  2464  118A   	fcall	_LCD_Cmd
  1628                           
  1629                           ;./lcd.h: 96:       break;
  1630  04A1  2CC1               	goto	l68
  1631  04A2                     l1301:
  1632                           
  1633                           ;./lcd.h: 98:       LCD_Cmd(0xD4 + col - 1);
  1634  04A2  0854               	movf	LCD_Goto@col,w
  1635  04A3  3ED3               	addlw	211
  1636  04A4  118A  2464  118A   	fcall	_LCD_Cmd
  1637                           
  1638                           ;./lcd.h: 99:     break;
  1639  04A7  2CC1               	goto	l68
  1640  04A8                     l1303:
  1641                           
  1642                           ;./lcd.h: 101:       LCD_Cmd(0x80 + col - 1);
  1643  04A8  0854               	movf	LCD_Goto@col,w
  1644  04A9  3E7F               	addlw	127
  1645  04AA  118A  2464  118A   	fcall	_LCD_Cmd
  1646                           
  1647                           ;./lcd.h: 102:   }
  1648  04AD  2CC1               	goto	l68
  1649  04AE                     l1305:
  1650  04AE  0851               	movf	LCD_Goto@row,w
  1651  04AF  00D2               	movwf	??_LCD_Goto
  1652  04B0  01D3               	clrf	??_LCD_Goto+1
  1653                           
  1654                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1655                           ; Switch size 1, requested type "simple"
  1656                           ; Number of cases is 1, Range of values is 0 to 0
  1657                           ; switch strategies available:
  1658                           ; Name         Instructions Cycles
  1659                           ; simple_byte            4     3 (average)
  1660                           ; direct_byte            9     7 (fixed)
  1661                           ; jumptable            260     6 (fixed)
  1662                           ;	Chosen strategy is simple_byte
  1663  04B1  0853               	movf	??_LCD_Goto+1,w
  1664  04B2  3A00               	xorlw	0	; case 0
  1665  04B3  1903               	skipnz
  1666  04B4  2CB6               	goto	l1665
  1667  04B5  2CA8               	goto	l1303
  1668  04B6                     l1665:
  1669                           
  1670                           ; Switch size 1, requested type "simple"
  1671                           ; Number of cases is 3, Range of values is 2 to 4
  1672                           ; switch strategies available:
  1673                           ; Name         Instructions Cycles
  1674                           ; simple_byte           10     6 (average)
  1675                           ; direct_byte           16    10 (fixed)
  1676                           ; jumptable            263     9 (fixed)
  1677                           ;	Chosen strategy is simple_byte
  1678  04B6  0852               	movf	??_LCD_Goto,w
  1679  04B7  3A02               	xorlw	2	; case 2
  1680  04B8  1903               	skipnz
  1681  04B9  2C96               	goto	l1297
  1682  04BA  3A01               	xorlw	1	; case 3
  1683  04BB  1903               	skipnz
  1684  04BC  2C9C               	goto	l1299
  1685  04BD  3A07               	xorlw	7	; case 4
  1686  04BE  1903               	skipnz
  1687  04BF  2CA2               	goto	l1301
  1688  04C0  2CA8               	goto	l1303
  1689  04C1                     l68:
  1690  04C1  0008               	return
  1691  04C2                     __end_of_LCD_Goto:
  1692                           
  1693                           	psect	text6
  1694  03DF                     __ptext6:	
  1695 ;; *************** function _iniciar_puertos *****************
  1696 ;; Defined at:
  1697 ;;		line 93 in file "main.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;		None
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;		None
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		wreg, status,2
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMMON   BANK0   BANK1
  1711 ;;      Params:         0       0       0
  1712 ;;      Locals:         0       0       0
  1713 ;;      Temps:          0       0       0
  1714 ;;      Totals:         0       0       0
  1715 ;;Total ram usage:        0 bytes
  1716 ;; Hardware stack levels used: 1
  1717 ;; This function calls:
  1718 ;;		Nothing
  1719 ;; This function is called by:
  1720 ;;		_main
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           
  1725                           ;psect for function _iniciar_puertos
  1726  03DF                     _iniciar_puertos:
  1727  03DF                     l1485:	
  1728                           ;incstack = 0
  1729                           ; Regs used in _iniciar_puertos: [wreg+status,2]
  1730                           
  1731                           
  1732                           ;main.c: 97:     PORTC=0X00;
  1733  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  1734  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  1735  03E1  0187               	clrf	7	;volatile
  1736  03E2                     l1487:
  1737                           
  1738                           ;main.c: 98:     TRISC=0XF0;
  1739  03E2  30F0               	movlw	240
  1740  03E3  1683               	bsf	3,5	;RP0=1, select bank1
  1741  03E4  1303               	bcf	3,6	;RP1=0, select bank1
  1742  03E5  0087               	movwf	7	;volatile
  1743  03E6                     l1489:
  1744                           
  1745                           ;main.c: 99:     PORTA = 0;
  1746  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  1747  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  1748  03E8  0185               	clrf	5	;volatile
  1749  03E9                     l1491:
  1750                           
  1751                           ;main.c: 100:     PORTB = 0;
  1752  03E9  0186               	clrf	6	;volatile
  1753  03EA                     l1493:
  1754                           
  1755                           ;main.c: 101:     PORTC = 0;
  1756  03EA  0187               	clrf	7	;volatile
  1757                           
  1758                           ;main.c: 106:     ADCON1 = 0b00000110;
  1759  03EB  3006               	movlw	6
  1760  03EC  1683               	bsf	3,5	;RP0=1, select bank1
  1761  03ED  1303               	bcf	3,6	;RP1=0, select bank1
  1762  03EE  009F               	movwf	31	;volatile
  1763  03EF                     l230:
  1764  03EF  0008               	return
  1765  03F0                     __end_of_iniciar_puertos:
  1766                           
  1767                           	psect	text7
  1768  0401                     __ptext7:	
  1769 ;; *************** function _LCD_PutC *****************
  1770 ;; Defined at:
  1771 ;;		line 106 in file "./lcd.h"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;  LCD_Char        1    wreg     unsigned char 
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;  LCD_Char        1    4[BANK0 ] unsigned char 
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  1    wreg      void 
  1778 ;; Registers used:
  1779 ;;		wreg, status,2, status,0, pclath, cstack
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMMON   BANK0   BANK1
  1785 ;;      Params:         0       0       0
  1786 ;;      Locals:         0       1       0
  1787 ;;      Temps:          0       1       0
  1788 ;;      Totals:         0       2       0
  1789 ;;Total ram usage:        2 bytes
  1790 ;; Hardware stack levels used: 1
  1791 ;; Hardware stack levels required when called: 1
  1792 ;; This function calls:
  1793 ;;		_LCD_Write_Nibble
  1794 ;; This function is called by:
  1795 ;;		_main
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           
  1800                           ;psect for function _LCD_PutC
  1801  0401                     _LCD_PutC:
  1802                           
  1803                           ;incstack = 0
  1804                           ; Regs used in _LCD_PutC: [wreg+status,2+status,0+pclath+cstack]
  1805                           ;LCD_PutC@LCD_Char stored from wreg
  1806  0401  1283               	bcf	3,5	;RP0=0, select bank0
  1807  0402  1303               	bcf	3,6	;RP1=0, select bank0
  1808  0403  00CF               	movwf	LCD_PutC@LCD_Char
  1809  0404                     l1441:
  1810                           
  1811                           ;./lcd.h: 106: void LCD_PutC(char LCD_Char);./lcd.h: 107: {;./lcd.h: 108:   RS = 1;
  1812  0404  1468               	bsf	_RS/(0+8),_RS& (0+7)
  1813  0405                     l1443:
  1814                           
  1815                           ;./lcd.h: 109:   LCD_Write_Nibble(LCD_Char >> 4);
  1816  0405  084F               	movf	LCD_PutC@LCD_Char,w
  1817  0406  00CE               	movwf	??_LCD_PutC
  1818  0407  3004               	movlw	4
  1819  0408                     u1415:
  1820  0408  1003               	clrc
  1821  0409  0CCE               	rrf	??_LCD_PutC,f
  1822  040A  3EFF               	addlw	-1
  1823  040B  1D03               	skipz
  1824  040C  2C08               	goto	u1415
  1825  040D  084E               	movf	??_LCD_PutC,w
  1826  040E  118A  2501  118A   	fcall	_LCD_Write_Nibble
  1827                           
  1828                           ;./lcd.h: 110:   LCD_Write_Nibble(LCD_Char );
  1829  0411  1283               	bcf	3,5	;RP0=0, select bank0
  1830  0412  1303               	bcf	3,6	;RP1=0, select bank0
  1831  0413  084F               	movf	LCD_PutC@LCD_Char,w
  1832  0414  118A  2501  118A   	fcall	_LCD_Write_Nibble
  1833  0417                     l71:
  1834  0417  0008               	return
  1835  0418                     __end_of_LCD_PutC:
  1836                           
  1837                           	psect	text8
  1838  0653                     __ptext8:	
  1839 ;; *************** function _LCD_Begin *****************
  1840 ;; Defined at:
  1841 ;;		line 124 in file "./lcd.h"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;		None
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;		None
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  1    wreg      void 
  1848 ;; Registers used:
  1849 ;;		wreg, status,2, status,0, pclath, cstack
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMMON   BANK0   BANK1
  1855 ;;      Params:         0       0       0
  1856 ;;      Locals:         0       0       0
  1857 ;;      Temps:          0       3       0
  1858 ;;      Totals:         0       3       0
  1859 ;;Total ram usage:        3 bytes
  1860 ;; Hardware stack levels used: 1
  1861 ;; Hardware stack levels required when called: 2
  1862 ;; This function calls:
  1863 ;;		_LCD_Cmd
  1864 ;; This function is called by:
  1865 ;;		_main
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869                           
  1870                           ;psect for function _LCD_Begin
  1871  0653                     _LCD_Begin:
  1872  0653                     l1445:	
  1873                           ;incstack = 0
  1874                           ; Regs used in _LCD_Begin: [wreg+status,2+status,0+pclath+cstack]
  1875                           
  1876                           
  1877                           ;./lcd.h: 126:   RS = 0;
  1878  0653  1283               	bcf	3,5	;RP0=0, select bank0
  1879  0654  1303               	bcf	3,6	;RP1=0, select bank0
  1880  0655  1068               	bcf	_RS/(0+8),_RS& (0+7)
  1881                           
  1882                           ;./lcd.h: 127:   PORTAbits.RA0 = 0;
  1883  0656  1005               	bcf	5,0	;volatile
  1884                           
  1885                           ;./lcd.h: 128:   PORTAbits.RA1 = 0;
  1886  0657  1085               	bcf	5,1	;volatile
  1887                           
  1888                           ;./lcd.h: 129:   PORTAbits.RA2 = 0;
  1889  0658  1105               	bcf	5,2	;volatile
  1890                           
  1891                           ;./lcd.h: 134:   PORTBbits.RB4 = 0;
  1892  0659  1206               	bcf	6,4	;volatile
  1893                           
  1894                           ;./lcd.h: 135:   PORTBbits.RB5 = 0;
  1895  065A  1286               	bcf	6,5	;volatile
  1896                           
  1897                           ;./lcd.h: 136:   PORTBbits.RB6 = 0;
  1898  065B  1306               	bcf	6,6	;volatile
  1899                           
  1900                           ;./lcd.h: 137:   PORTBbits.RB7 = 0;
  1901  065C  1386               	bcf	6,7	;volatile
  1902                           
  1903                           ;./lcd.h: 138:   TRISAbits.TRISA0 = 0;
  1904  065D  1683               	bsf	3,5	;RP0=1, select bank1
  1905  065E  1303               	bcf	3,6	;RP1=0, select bank1
  1906  065F  1005               	bcf	5,0	;volatile
  1907                           
  1908                           ;./lcd.h: 139:   TRISAbits.TRISA1 = 0;
  1909  0660  1085               	bcf	5,1	;volatile
  1910                           
  1911                           ;./lcd.h: 140:   TRISAbits.TRISA2 = 0;
  1912  0661  1105               	bcf	5,2	;volatile
  1913                           
  1914                           ;./lcd.h: 145:   TRISBbits.TRISB4 = 0;
  1915  0662  1206               	bcf	6,4	;volatile
  1916                           
  1917                           ;./lcd.h: 146:   TRISBbits.TRISB5 = 0;
  1918  0663  1286               	bcf	6,5	;volatile
  1919                           
  1920                           ;./lcd.h: 147:   TRISBbits.TRISB6 = 0;
  1921  0664  1306               	bcf	6,6	;volatile
  1922                           
  1923                           ;./lcd.h: 148:   TRISBbits.TRISB7 = 0;
  1924  0665  1386               	bcf	6,7	;volatile
  1925  0666                     l1447:
  1926                           
  1927                           ;./lcd.h: 149:   _delay((unsigned long)((40)*(32000000/4000.0)));
  1928  0666  3002               	movlw	2
  1929  0667  1283               	bcf	3,5	;RP0=0, select bank0
  1930  0668  1303               	bcf	3,6	;RP1=0, select bank0
  1931  0669  00D3               	movwf	??_LCD_Begin+2
  1932  066A  30A0               	movlw	160
  1933  066B  00D2               	movwf	??_LCD_Begin+1
  1934  066C  3092               	movlw	146
  1935  066D  00D1               	movwf	??_LCD_Begin
  1936  066E                     u2067:
  1937  066E  0BD1               	decfsz	??_LCD_Begin,f
  1938  066F  2E6E               	goto	u2067
  1939  0670  0BD2               	decfsz	??_LCD_Begin+1,f
  1940  0671  2E6E               	goto	u2067
  1941  0672  0BD3               	decfsz	??_LCD_Begin+2,f
  1942  0673  2E6E               	goto	u2067
  1943  0674                     l1449:
  1944                           
  1945                           ;./lcd.h: 150:   LCD_Cmd(3);
  1946  0674  3003               	movlw	3
  1947  0675  118A  2464  118A   	fcall	_LCD_Cmd
  1948  0678                     l1451:
  1949                           
  1950                           ;./lcd.h: 151:   _delay((unsigned long)((5)*(32000000/4000.0)));
  1951  0678  3034               	movlw	52
  1952  0679  1283               	bcf	3,5	;RP0=0, select bank0
  1953  067A  1303               	bcf	3,6	;RP1=0, select bank0
  1954  067B  00D2               	movwf	??_LCD_Begin+1
  1955  067C  30F1               	movlw	241
  1956  067D  00D1               	movwf	??_LCD_Begin
  1957  067E                     u2077:
  1958  067E  0BD1               	decfsz	??_LCD_Begin,f
  1959  067F  2E7E               	goto	u2077
  1960  0680  0BD2               	decfsz	??_LCD_Begin+1,f
  1961  0681  2E7E               	goto	u2077
  1962  0682  0000               	nop
  1963                           
  1964                           ;./lcd.h: 152:   LCD_Cmd(3);
  1965  0683  3003               	movlw	3
  1966  0684  118A  2464  118A   	fcall	_LCD_Cmd
  1967  0687                     l1453:
  1968                           
  1969                           ;./lcd.h: 153:   _delay((unsigned long)((5)*(32000000/4000.0)));
  1970  0687  3034               	movlw	52
  1971  0688  1283               	bcf	3,5	;RP0=0, select bank0
  1972  0689  1303               	bcf	3,6	;RP1=0, select bank0
  1973  068A  00D2               	movwf	??_LCD_Begin+1
  1974  068B  30F1               	movlw	241
  1975  068C  00D1               	movwf	??_LCD_Begin
  1976  068D                     u2087:
  1977  068D  0BD1               	decfsz	??_LCD_Begin,f
  1978  068E  2E8D               	goto	u2087
  1979  068F  0BD2               	decfsz	??_LCD_Begin+1,f
  1980  0690  2E8D               	goto	u2087
  1981  0691  0000               	nop
  1982  0692                     l1455:
  1983                           
  1984                           ;./lcd.h: 154:   LCD_Cmd(3);
  1985  0692  3003               	movlw	3
  1986  0693  118A  2464  118A   	fcall	_LCD_Cmd
  1987                           
  1988                           ;./lcd.h: 155:   _delay((unsigned long)((5)*(32000000/4000.0)));
  1989  0696  3034               	movlw	52
  1990  0697  1283               	bcf	3,5	;RP0=0, select bank0
  1991  0698  1303               	bcf	3,6	;RP1=0, select bank0
  1992  0699  00D2               	movwf	??_LCD_Begin+1
  1993  069A  30F1               	movlw	241
  1994  069B  00D1               	movwf	??_LCD_Begin
  1995  069C                     u2097:
  1996  069C  0BD1               	decfsz	??_LCD_Begin,f
  1997  069D  2E9C               	goto	u2097
  1998  069E  0BD2               	decfsz	??_LCD_Begin+1,f
  1999  069F  2E9C               	goto	u2097
  2000  06A0  0000               	nop
  2001  06A1                     l1457:
  2002                           
  2003                           ;./lcd.h: 156:   LCD_Cmd(0x02);
  2004  06A1  3002               	movlw	2
  2005  06A2  118A  2464  118A   	fcall	_LCD_Cmd
  2006  06A5                     l1459:
  2007                           
  2008                           ;./lcd.h: 157:   _delay((unsigned long)((5)*(32000000/4000.0)));
  2009  06A5  3034               	movlw	52
  2010  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  2011  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  2012  06A8  00D2               	movwf	??_LCD_Begin+1
  2013  06A9  30F1               	movlw	241
  2014  06AA  00D1               	movwf	??_LCD_Begin
  2015  06AB                     u2107:
  2016  06AB  0BD1               	decfsz	??_LCD_Begin,f
  2017  06AC  2EAB               	goto	u2107
  2018  06AD  0BD2               	decfsz	??_LCD_Begin+1,f
  2019  06AE  2EAB               	goto	u2107
  2020  06AF  0000               	nop
  2021                           
  2022                           ;./lcd.h: 158:   LCD_Cmd(0x20 | (2 << 2));
  2023  06B0  3028               	movlw	40
  2024  06B1  118A  2464  118A   	fcall	_LCD_Cmd
  2025  06B4                     l1461:
  2026                           
  2027                           ;./lcd.h: 159:   _delay((unsigned long)((50)*(32000000/4000.0)));
  2028  06B4  3003               	movlw	3
  2029  06B5  1283               	bcf	3,5	;RP0=0, select bank0
  2030  06B6  1303               	bcf	3,6	;RP1=0, select bank0
  2031  06B7  00D3               	movwf	??_LCD_Begin+2
  2032  06B8  3008               	movlw	8
  2033  06B9  00D2               	movwf	??_LCD_Begin+1
  2034  06BA  3076               	movlw	118
  2035  06BB  00D1               	movwf	??_LCD_Begin
  2036  06BC                     u2117:
  2037  06BC  0BD1               	decfsz	??_LCD_Begin,f
  2038  06BD  2EBC               	goto	u2117
  2039  06BE  0BD2               	decfsz	??_LCD_Begin+1,f
  2040  06BF  2EBC               	goto	u2117
  2041  06C0  0BD3               	decfsz	??_LCD_Begin+2,f
  2042  06C1  2EBC               	goto	u2117
  2043  06C2  2EC3               	nop2
  2044  06C3                     l1463:
  2045                           
  2046                           ;./lcd.h: 160:   LCD_Cmd(0x0C);
  2047  06C3  300C               	movlw	12
  2048  06C4  118A  2464  118A   	fcall	_LCD_Cmd
  2049                           
  2050                           ;./lcd.h: 161:   _delay((unsigned long)((50)*(32000000/4000.0)));
  2051  06C7  3003               	movlw	3
  2052  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  2053  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  2054  06CA  00D3               	movwf	??_LCD_Begin+2
  2055  06CB  3008               	movlw	8
  2056  06CC  00D2               	movwf	??_LCD_Begin+1
  2057  06CD  3076               	movlw	118
  2058  06CE  00D1               	movwf	??_LCD_Begin
  2059  06CF                     u2127:
  2060  06CF  0BD1               	decfsz	??_LCD_Begin,f
  2061  06D0  2ECF               	goto	u2127
  2062  06D1  0BD2               	decfsz	??_LCD_Begin+1,f
  2063  06D2  2ECF               	goto	u2127
  2064  06D3  0BD3               	decfsz	??_LCD_Begin+2,f
  2065  06D4  2ECF               	goto	u2127
  2066  06D5  2ED6               	nop2
  2067  06D6                     l1465:
  2068                           
  2069                           ;./lcd.h: 162:   LCD_Cmd(0x01);
  2070  06D6  3001               	movlw	1
  2071  06D7  118A  2464  118A   	fcall	_LCD_Cmd
  2072  06DA                     l1467:
  2073                           
  2074                           ;./lcd.h: 163:   _delay((unsigned long)((50)*(32000000/4000.0)));
  2075  06DA  3003               	movlw	3
  2076  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  2077  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  2078  06DD  00D3               	movwf	??_LCD_Begin+2
  2079  06DE  3008               	movlw	8
  2080  06DF  00D2               	movwf	??_LCD_Begin+1
  2081  06E0  3076               	movlw	118
  2082  06E1  00D1               	movwf	??_LCD_Begin
  2083  06E2                     u2137:
  2084  06E2  0BD1               	decfsz	??_LCD_Begin,f
  2085  06E3  2EE2               	goto	u2137
  2086  06E4  0BD2               	decfsz	??_LCD_Begin+1,f
  2087  06E5  2EE2               	goto	u2137
  2088  06E6  0BD3               	decfsz	??_LCD_Begin+2,f
  2089  06E7  2EE2               	goto	u2137
  2090  06E8  2EE9               	nop2
  2091                           
  2092                           ;./lcd.h: 164:   LCD_Cmd(0x04 | 0x02);
  2093  06E9  3006               	movlw	6
  2094  06EA  118A  2464  118A   	fcall	_LCD_Cmd
  2095  06ED                     l1469:
  2096                           
  2097                           ;./lcd.h: 165:   _delay((unsigned long)((50)*(32000000/4000.0)));
  2098  06ED  3003               	movlw	3
  2099  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  2100  06EF  1303               	bcf	3,6	;RP1=0, select bank0
  2101  06F0  00D3               	movwf	??_LCD_Begin+2
  2102  06F1  3008               	movlw	8
  2103  06F2  00D2               	movwf	??_LCD_Begin+1
  2104  06F3  3076               	movlw	118
  2105  06F4  00D1               	movwf	??_LCD_Begin
  2106  06F5                     u2147:
  2107  06F5  0BD1               	decfsz	??_LCD_Begin,f
  2108  06F6  2EF5               	goto	u2147
  2109  06F7  0BD2               	decfsz	??_LCD_Begin+1,f
  2110  06F8  2EF5               	goto	u2147
  2111  06F9  0BD3               	decfsz	??_LCD_Begin+2,f
  2112  06FA  2EF5               	goto	u2147
  2113  06FB  2EFC               	nop2
  2114  06FC                     l1471:
  2115                           
  2116                           ;./lcd.h: 166:   LCD_Cmd(0x0F);
  2117  06FC  300F               	movlw	15
  2118  06FD  118A  2464  118A   	fcall	_LCD_Cmd
  2119                           
  2120                           ;./lcd.h: 167:   _delay((unsigned long)((50)*(32000000/4000.0)));
  2121  0700  3003               	movlw	3
  2122  0701  1283               	bcf	3,5	;RP0=0, select bank0
  2123  0702  1303               	bcf	3,6	;RP1=0, select bank0
  2124  0703  00D3               	movwf	??_LCD_Begin+2
  2125  0704  3008               	movlw	8
  2126  0705  00D2               	movwf	??_LCD_Begin+1
  2127  0706  3076               	movlw	118
  2128  0707  00D1               	movwf	??_LCD_Begin
  2129  0708                     u2157:
  2130  0708  0BD1               	decfsz	??_LCD_Begin,f
  2131  0709  2F08               	goto	u2157
  2132  070A  0BD2               	decfsz	??_LCD_Begin+1,f
  2133  070B  2F08               	goto	u2157
  2134  070C  0BD3               	decfsz	??_LCD_Begin+2,f
  2135  070D  2F08               	goto	u2157
  2136  070E  2F0F               	nop2
  2137  070F                     l80:
  2138  070F  0008               	return
  2139  0710                     __end_of_LCD_Begin:
  2140                           
  2141                           	psect	text9
  2142  0464                     __ptext9:	
  2143 ;; *************** function _LCD_Cmd *****************
  2144 ;; Defined at:
  2145 ;;		line 78 in file "./lcd.h"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;  Command         1    wreg     unsigned char 
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;  Command         1    5[BANK0 ] unsigned char 
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  1    wreg      void 
  2152 ;; Registers used:
  2153 ;;		wreg, status,2, status,0, pclath, cstack
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMMON   BANK0   BANK1
  2159 ;;      Params:         0       0       0
  2160 ;;      Locals:         0       1       0
  2161 ;;      Temps:          0       2       0
  2162 ;;      Totals:         0       3       0
  2163 ;;Total ram usage:        3 bytes
  2164 ;; Hardware stack levels used: 1
  2165 ;; Hardware stack levels required when called: 1
  2166 ;; This function calls:
  2167 ;;		_LCD_Write_Nibble
  2168 ;; This function is called by:
  2169 ;;		_LCD_Goto
  2170 ;;		_LCD_Begin
  2171 ;;		_main
  2172 ;;		_inicio_presentacion
  2173 ;;		_scan_key
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           
  2177                           
  2178                           ;psect for function _LCD_Cmd
  2179  0464                     _LCD_Cmd:
  2180                           
  2181                           ;incstack = 0
  2182                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2183                           ;LCD_Cmd@Command stored from wreg
  2184  0464  1283               	bcf	3,5	;RP0=0, select bank0
  2185  0465  1303               	bcf	3,6	;RP1=0, select bank0
  2186  0466  00D0               	movwf	LCD_Cmd@Command
  2187  0467                     l1285:
  2188                           
  2189                           ;./lcd.h: 78: void LCD_Cmd(uint8_t Command);./lcd.h: 79: {;./lcd.h: 80:   RS = 0;
  2190  0467  1068               	bcf	_RS/(0+8),_RS& (0+7)
  2191  0468                     l1287:
  2192                           
  2193                           ;./lcd.h: 81:   LCD_Write_Nibble(Command >> 4);
  2194  0468  0850               	movf	LCD_Cmd@Command,w
  2195  0469  00CE               	movwf	??_LCD_Cmd
  2196  046A  3004               	movlw	4
  2197  046B                     u1045:
  2198  046B  1003               	clrc
  2199  046C  0CCE               	rrf	??_LCD_Cmd,f
  2200  046D  3EFF               	addlw	-1
  2201  046E  1D03               	skipz
  2202  046F  2C6B               	goto	u1045
  2203  0470  084E               	movf	??_LCD_Cmd,w
  2204  0471  118A  2501  118A   	fcall	_LCD_Write_Nibble
  2205                           
  2206                           ;./lcd.h: 82:   LCD_Write_Nibble(Command);
  2207  0474  1283               	bcf	3,5	;RP0=0, select bank0
  2208  0475  1303               	bcf	3,6	;RP1=0, select bank0
  2209  0476  0850               	movf	LCD_Cmd@Command,w
  2210  0477  118A  2501  118A   	fcall	_LCD_Write_Nibble
  2211  047A                     l1289:
  2212                           
  2213                           ;./lcd.h: 83:   if((Command == 0x01) || (Command == 0x02))
  2214  047A  1283               	bcf	3,5	;RP0=0, select bank0
  2215  047B  1303               	bcf	3,6	;RP1=0, select bank0
  2216  047C  0350               	decf	LCD_Cmd@Command,w
  2217  047D  1903               	btfsc	3,2
  2218  047E  2C80               	goto	u1051
  2219  047F  2C81               	goto	u1050
  2220  0480                     u1051:
  2221  0480  2C87               	goto	l1293
  2222  0481                     u1050:
  2223  0481                     l1291:
  2224  0481  3002               	movlw	2
  2225  0482  0650               	xorwf	LCD_Cmd@Command,w
  2226  0483  1D03               	btfss	3,2
  2227  0484  2C86               	goto	u1061
  2228  0485  2C87               	goto	u1060
  2229  0486                     u1061:
  2230  0486  2C91               	goto	l59
  2231  0487                     u1060:
  2232  0487                     l1293:
  2233                           
  2234                           ;./lcd.h: 84:     _delay((unsigned long)((2)*(32000000/4000.0)));
  2235  0487  3015               	movlw	21
  2236  0488  1283               	bcf	3,5	;RP0=0, select bank0
  2237  0489  1303               	bcf	3,6	;RP1=0, select bank0
  2238  048A  00CF               	movwf	??_LCD_Cmd+1
  2239  048B  30C6               	movlw	198
  2240  048C  00CE               	movwf	??_LCD_Cmd
  2241  048D                     u2167:
  2242  048D  0BCE               	decfsz	??_LCD_Cmd,f
  2243  048E  2C8D               	goto	u2167
  2244  048F  0BCF               	decfsz	??_LCD_Cmd+1,f
  2245  0490  2C8D               	goto	u2167
  2246  0491                     l59:
  2247  0491  0008               	return
  2248  0492                     __end_of_LCD_Cmd:
  2249                           
  2250                           	psect	text10
  2251  0501                     __ptext10:	
  2252 ;; *************** function _LCD_Write_Nibble *****************
  2253 ;; Defined at:
  2254 ;;		line 61 in file "./lcd.h"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;  n               1    wreg     unsigned char 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  n               1    2[BANK0 ] unsigned char 
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  1    wreg      void 
  2261 ;; Registers used:
  2262 ;;		wreg, status,2, status,0
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMMON   BANK0   BANK1
  2268 ;;      Params:         0       0       0
  2269 ;;      Locals:         0       1       0
  2270 ;;      Temps:          0       2       0
  2271 ;;      Totals:         0       3       0
  2272 ;;Total ram usage:        3 bytes
  2273 ;; Hardware stack levels used: 1
  2274 ;; This function calls:
  2275 ;;		Nothing
  2276 ;; This function is called by:
  2277 ;;		_LCD_Cmd
  2278 ;;		_LCD_PutC
  2279 ;;		_LCD_Print
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           
  2284                           ;psect for function _LCD_Write_Nibble
  2285  0501                     _LCD_Write_Nibble:
  2286                           
  2287                           ;incstack = 0
  2288                           ; Regs used in _LCD_Write_Nibble: [wreg+status,2+status,0]
  2289                           ;LCD_Write_Nibble@n stored from wreg
  2290  0501  1283               	bcf	3,5	;RP0=0, select bank0
  2291  0502  1303               	bcf	3,6	;RP1=0, select bank0
  2292  0503  00CD               	movwf	LCD_Write_Nibble@n
  2293  0504                     l1269:
  2294                           
  2295                           ;./lcd.h: 61: void LCD_Write_Nibble(uint8_t n);./lcd.h: 62: {;./lcd.h: 63:   PORTAbits.R
      +                          A0 = RS;
  2296  0504  1868               	btfsc	_RS/(0+8),_RS& (0+7)
  2297  0505  2D07               	goto	u1001
  2298  0506  2D0B               	goto	u1000
  2299  0507                     u1001:
  2300  0507  1283               	bcf	3,5	;RP0=0, select bank0
  2301  0508  1303               	bcf	3,6	;RP1=0, select bank0
  2302  0509  1405               	bsf	5,0	;volatile
  2303  050A  2D0E               	goto	u1014
  2304  050B                     u1000:
  2305  050B  1283               	bcf	3,5	;RP0=0, select bank0
  2306  050C  1303               	bcf	3,6	;RP1=0, select bank0
  2307  050D  1005               	bcf	5,0	;volatile
  2308  050E                     u1014:
  2309  050E                     l1271:
  2310                           
  2311                           ;./lcd.h: 64:   PORTBbits.RB4 = n & 0x01;
  2312  050E  084D               	movf	LCD_Write_Nibble@n,w
  2313  050F  3901               	andlw	1
  2314  0510  00CB               	movwf	??_LCD_Write_Nibble
  2315  0511  0ECB               	swapf	??_LCD_Write_Nibble,f
  2316  0512  0806               	movf	6,w	;volatile
  2317  0513  064B               	xorwf	??_LCD_Write_Nibble,w
  2318  0514  39EF               	andlw	-17
  2319  0515  064B               	xorwf	??_LCD_Write_Nibble,w
  2320  0516  0086               	movwf	6	;volatile
  2321                           
  2322                           ;./lcd.h: 65:   PORTBbits.RB5 = (n >> 1) & 0x01;
  2323  0517  084D               	movf	LCD_Write_Nibble@n,w
  2324  0518  00CB               	movwf	??_LCD_Write_Nibble
  2325  0519  1003               	clrc
  2326  051A  0C4B               	rrf	??_LCD_Write_Nibble,w
  2327  051B  3901               	andlw	1
  2328  051C  00CC               	movwf	??_LCD_Write_Nibble+1
  2329  051D  0ECC               	swapf	??_LCD_Write_Nibble+1,f
  2330  051E  0DCC               	rlf	??_LCD_Write_Nibble+1,f
  2331  051F  0806               	movf	6,w	;volatile
  2332  0520  064C               	xorwf	??_LCD_Write_Nibble+1,w
  2333  0521  39DF               	andlw	-33
  2334  0522  064C               	xorwf	??_LCD_Write_Nibble+1,w
  2335  0523  0086               	movwf	6	;volatile
  2336                           
  2337                           ;./lcd.h: 66:   PORTBbits.RB6 = (n >> 2) & 0x01;
  2338  0524  084D               	movf	LCD_Write_Nibble@n,w
  2339  0525  00CB               	movwf	??_LCD_Write_Nibble
  2340  0526  3002               	movlw	2
  2341  0527                     u1025:
  2342  0527  1003               	clrc
  2343  0528  0CCB               	rrf	??_LCD_Write_Nibble,f
  2344  0529  3EFF               	addlw	-1
  2345  052A  1D03               	skipz
  2346  052B  2D27               	goto	u1025
  2347  052C  084B               	movf	??_LCD_Write_Nibble,w
  2348  052D  3901               	andlw	1
  2349  052E  00CC               	movwf	??_LCD_Write_Nibble+1
  2350  052F  0ECC               	swapf	??_LCD_Write_Nibble+1,f
  2351  0530  0DCC               	rlf	??_LCD_Write_Nibble+1,f
  2352  0531  0DCC               	rlf	??_LCD_Write_Nibble+1,f
  2353  0532  0806               	movf	6,w	;volatile
  2354  0533  064C               	xorwf	??_LCD_Write_Nibble+1,w
  2355  0534  39BF               	andlw	-65
  2356  0535  064C               	xorwf	??_LCD_Write_Nibble+1,w
  2357  0536  0086               	movwf	6	;volatile
  2358                           
  2359                           ;./lcd.h: 67:   PORTBbits.RB7 = (n >> 3) & 0x01;
  2360  0537  084D               	movf	LCD_Write_Nibble@n,w
  2361  0538  00CB               	movwf	??_LCD_Write_Nibble
  2362  0539  3003               	movlw	3
  2363  053A                     u1035:
  2364  053A  1003               	clrc
  2365  053B  0CCB               	rrf	??_LCD_Write_Nibble,f
  2366  053C  3EFF               	addlw	-1
  2367  053D  1D03               	skipz
  2368  053E  2D3A               	goto	u1035
  2369  053F  084B               	movf	??_LCD_Write_Nibble,w
  2370  0540  3901               	andlw	1
  2371  0541  00CC               	movwf	??_LCD_Write_Nibble+1
  2372  0542  0CCC               	rrf	??_LCD_Write_Nibble+1,f
  2373  0543  0CCC               	rrf	??_LCD_Write_Nibble+1,f
  2374  0544  0806               	movf	6,w	;volatile
  2375  0545  064C               	xorwf	??_LCD_Write_Nibble+1,w
  2376  0546  397F               	andlw	-129
  2377  0547  064C               	xorwf	??_LCD_Write_Nibble+1,w
  2378  0548  0086               	movwf	6	;volatile
  2379  0549                     l1273:
  2380                           
  2381                           ;./lcd.h: 70:   PORTAbits.RA2 = 0;
  2382  0549  1105               	bcf	5,2	;volatile
  2383  054A                     l1275:
  2384                           
  2385                           ;./lcd.h: 71:   _delay((unsigned long)((1)*(32000000/4000000.0)));
  2386  054A  2D4B               	nop2	;2 cycle nop
  2387  054B  2D4C               	nop2	;2 cycle nop
  2388  054C  2D4D               	nop2	;2 cycle nop
  2389  054D  2D4E               	nop2	;2 cycle nop
  2390  054E                     l1277:
  2391                           
  2392                           ;./lcd.h: 72:   PORTAbits.RA2 = 1;
  2393  054E  1283               	bcf	3,5	;RP0=0, select bank0
  2394  054F  1303               	bcf	3,6	;RP1=0, select bank0
  2395  0550  1505               	bsf	5,2	;volatile
  2396  0551                     l1279:
  2397                           
  2398                           ;./lcd.h: 73:   _delay((unsigned long)((1)*(32000000/4000000.0)));
  2399  0551  2D52               	nop2	;2 cycle nop
  2400  0552  2D53               	nop2	;2 cycle nop
  2401  0553  2D54               	nop2	;2 cycle nop
  2402  0554  2D55               	nop2	;2 cycle nop
  2403  0555                     l1281:
  2404                           
  2405                           ;./lcd.h: 74:   PORTAbits.RA2 = 0;
  2406  0555  1283               	bcf	3,5	;RP0=0, select bank0
  2407  0556  1303               	bcf	3,6	;RP1=0, select bank0
  2408  0557  1105               	bcf	5,2	;volatile
  2409  0558                     l1283:
  2410                           
  2411                           ;./lcd.h: 75:   _delay((unsigned long)((100)*(32000000/4000000.0)));
  2412  0558  309F               	movlw	159
  2413  0559  1283               	bcf	3,5	;RP0=0, select bank0
  2414  055A  1303               	bcf	3,6	;RP1=0, select bank0
  2415  055B  00CB               	movwf	??_LCD_Write_Nibble
  2416  055C                     u2177:
  2417  055C  2D5D               	nop2
  2418  055D  0BCB               	decfsz	??_LCD_Write_Nibble,f
  2419  055E  2D5C               	goto	u2177
  2420  055F  2D60               	nop2
  2421  0560  0000               	nop
  2422  0561                     l53:
  2423  0561  0008               	return
  2424  0562                     __end_of_LCD_Write_Nibble:
  2425  007E                     btemp	set	126	;btemp
  2426  007E                     wtemp0	set	126

Data Sizes:
    Strings     8
    Constant    0
    Data        43
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94     21      73
    BANK1            94      0       0

Pointer List with Targets:

    LCD_Print@LCD_Str	PTR unsigned char  size(2) Largest target is 41
		 -> M(BANK0[41]), STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_inicio_presentacion
    _keypad_getkey->_keypad_readkey
    _inicio_presentacion->_LCD_Goto
    _LCD_Print->_LCD_Write_Nibble
    _LCD_Goto->_LCD_Cmd
    _LCD_PutC->_LCD_Write_Nibble
    _LCD_Begin->_LCD_Cmd
    _LCD_Cmd->_LCD_Write_Nibble

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    2687
                                             15 BANK0      6     6      0
                          _LCD_Begin
                            _LCD_Cmd
                           _LCD_Goto
                          _LCD_Print
                           _LCD_PutC
                    _iniciar_puertos
                _inicio_presentacion
                      _keypad_getkey
 ---------------------------------------------------------------------------------
 (1) _keypad_getkey                                        2     2      0      46
                                              1 BANK0      2     2      0
                     _keypad_readkey
 ---------------------------------------------------------------------------------
 (2) _keypad_readkey                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicio_presentacion                                  5     5      0    1110
                                             10 BANK0      5     5      0
                            _LCD_Cmd
                           _LCD_Goto
                          _LCD_Print
 ---------------------------------------------------------------------------------
 (2) _LCD_Print                                            4     2      2     374
                                              3 BANK0      4     2      2
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Goto                                             4     3      1     514
                                              6 BANK0      4     3      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _iniciar_puertos                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_PutC                                             2     2      0     132
                                              3 BANK0      2     2      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            3     3      0     176
                                              6 BANK0      3     3      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0     176
                                              3 BANK0      3     3      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Nibble                                     3     3      0      88
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Begin
     _LCD_Cmd
       _LCD_Write_Nibble
   _LCD_Cmd
   _LCD_Goto
     _LCD_Cmd
   _LCD_Print
     _LCD_Write_Nibble
   _LCD_PutC
     _LCD_Write_Nibble
   _iniciar_puertos
   _inicio_presentacion
     _LCD_Cmd
     _LCD_Goto
     _LCD_Print
   _keypad_getkey
     _keypad_readkey

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               5E      0       0       6        0.0%
BITBANK1            5E      0       0       5        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               5E     15      49       4       77.7%
BITBANK0            5E      0       1       3        1.1%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      49       8        0.0%
ABS                  0      0      49       7        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon May 17 01:34:03 2021

                           _M 0022                             _X 0020                             pc 0002  
                          l53 0561                            l71 0417                            l80 070F  
                          l59 0491                            l68 04C1                            l77 0500  
                          _RS 0340                            fsr 0004                           l230 03EF  
                         l235 05C8                           l171 077C                           l172 076A  
                         l173 0770                           l165 0747                           l182 07D4  
                         l174 0776                           l166 0735                           l183 07DA  
                         l167 07E7                           l184 07E0                           l176 07B1  
                         l168 073B                           l177 079F                           l169 0741  
                         l178 07A5                           l194 0438                           l179 07AB  
                         _ECO 0066                           _RA3 002B                           _RC0 0038  
                         _RA4 002C                           _RC1 0039                           _RA5 002D  
                         _RC2 003A                           _RC3 003B                           _RC4 003C  
            ?_iniciar_puertos 004B                           fsr0 0004                           indf 0000  
             __end_of_LCD_Cmd 0492                          l1301 04A2                          l1303 04A8  
                        l1305 04AE                          l1321 04F1                          l1313 04C2  
                        l1401 07A9                          l1315 04C5                          l1411 07BC  
                        l1331 0727                          l1323 0710                          l1317 04C7  
                        l1501 0582                          l1421 07D2                          l1413 07C2  
                        l1405 07AF                          l1341 0739                          l1333 072B  
                        l1325 0716                          l1271 050E                          l1319 04EB  
                        l1511 0598                          l1415 07C6                          l1335 072F  
                        l1327 071D                          l1281 0555                          l1273 0549  
                        l1441 0404                          l1513 05A0                          l1433 07E4  
                        l1425 07D8                          l1417 07CA                          l1409 07B5  
                        l1361 0760                          l1353 074B                          l1345 073F  
                        l1337 0733                          l1329 0723                          l1601 05D6  
                        l1283 0558                          l1275 054A                          l1291 0481  
                        l1451 0678                          l1443 0405                          l1515 05AD  
                        l1507 0586                          l1419 07CE                          l1363 0764  
                        l1355 0752                          l1611 0611                          l1603 05E4  
                        l1277 054E                          l1269 0504                          l1293 0487  
                        l1285 0467                          l1461 06B4                          l1453 0687  
                        l1445 0653                          l1517 05BC                          l1509 058A  
                        l1429 07DE                          l1437 07E6                          l1381 0780  
                        l1373 0774                          l1365 0768                          l1357 0758  
                        l1349 0745                          l1613 0617                          l1621 0632  
                        l1605 05EC                          l1279 0551                          l1287 0468  
                        l1471 06FC                          l1463 06C3                          l1455 0692  
                        l1447 0666                          l1295 0495                          l1519 05C0  
                        l1391 0799                          l1383 0787                          l1359 075C  
                        l1631 0647                          l1623 0638                          l1615 061D  
                        l1607 05FA                          l1289 047A                          l1465 06D6  
                        l1457 06A1                          l1449 0674                          l1297 0496  
                        l1393 079D                          l1385 078D                          l1377 077A  
                        l1369 076E                          l1481 0435                          l1473 0418  
                        l1625 063A                          l1617 0621                          l1609 0609  
                        l1467 06DA                          l1459 06A5                          l1491 03E9  
                        l1299 049C                          l1387 0791                          l1475 041F  
                        l1619 062B                          l1627 063F                          l1469 06ED  
                        l1493 03EA                          l1485 03DF                          l1397 07A3  
                        l1389 0795                          l1477 0427                          l1629 0643  
                        l1487 03E2                          l1495 0562                          l1479 042D  
                        l1489 03E6                          l1665 04B6                          l1497 056A  
                        l1593 05C9                          l1499 0573                          l1595 05CD  
                        l1597 05D0                          l1599 05D3             ?_LCD_Write_Nibble 004B  
                        STR_1 0012                          u1000 050B                          u1001 0507  
                        u1100 0727                          u1101 0726                          u1014 050E  
                        u1110 072B                          u1111 072A                          u1200 0764  
                        u1120 072F                          u1025 0527                          u1201 0763  
                        u1121 072E                          u1050 0481                          u1210 0768  
                        u1130 0733                          u1035 053A                          u1051 0480  
                        u1211 0767                          u1131 0732                          u1060 0487  
                        u1300 07A3                          u1220 076E                          u1140 0739  
                        u1061 0486                          u1045 046B                          u1301 07A2  
                        u1221 076D                          u1141 0738                          u1310 07A9  
                        u1230 0774                          u1150 073F                          u1311 07A8  
                        u1231 0773                          u2007 074F                          u1151 073E  
                        u1080 0500                          u1400 07E4                          u1320 07AF  
                        u1240 077A                          u1160 0745                          u1081 04FF  
                        u1401 07E3                          u1321 07AE                          u2017 0784  
                        u1241 0779                          u1161 0744                          u1330 07C2  
                        u1250 078D                          u1170 0758                          u1090 0723  
                        u2107 06AB                          u1075 04D3                          u1331 07C1  
                        u2027 07B9                          u1251 078C                          u1171 0757  
                        u1091 0722                          u1340 07C6                          u1260 0791  
                        u1180 075C                          u1420 042D                          u2117 06BC  
                        u2037 057B                          u1341 07C5                          u1261 0790  
                        u1181 075B                          u1421 042C                          u1350 07CA  
                        u1270 0795                          u1190 0760                          u1430 0435  
                        u2127 06CF                          u1415 0408                          u2047 0592  
                        u1351 07C9                          u1271 0794                          u1191 075F  
                        u1431 0434                          u1440 05AD                          u1360 07CE  
                        u1280 0799                          u2137 06E2                          u2057 05B5  
                        u1441 05AC                          u1361 07CD                          u1281 0798  
                        u1370 07D2                          u1290 079D                          u2147 06F5  
                        u2067 066E                          u1371 07D1                          u1291 079C  
                        u1380 07D8                          u2157 0708                          u2077 067E  
                        u1445 05A9                          u1381 07D7                          u1390 07DE  
                        u2167 048D                          u2087 068D                          u1391 07DD  
                        u2177 055C                          u2097 069C                          u1930 0609  
                        u1931 0608                          u1940 0617                          u1941 0616  
                        u1950 061D                          u1951 061C                          u1935 0605  
                        u1960 0638                          u1961 0637                          u1977 05DE  
                        u1987 05F4                          u1997 071A            ??_LCD_Write_Nibble 004B  
                        _main 05C9            __size_of_LCD_Begin 00BD                          btemp 007E  
          __size_of_LCD_Print 003F                          start 0000                   LCD_Goto@col 0054  
                 LCD_Goto@row 0051              __end_of_LCD_Goto 04C2              __end_of_LCD_PutC 0418  
                       ?_main 004B                         _ADRES 0064                         _RCREG 001A  
                       _PORTA 0005                         _PORTB 0006                         _PORTC 0007  
                       _TRISC 0087                         _TXREG 0019              ??_keypad_readkey 004B  
                       main@c 005F                         main@i 005D                         pclath 000A  
                       status 0003                         wtemp0 007E               __initialization 07E8  
                __end_of_main 0653                        ??_main 005A             __end_of_LCD_Begin 0710  
                   ??_LCD_Cmd 004E             __end_of_LCD_Print 0501                        _ADCON1 009F  
                      _number 0060       __end_of__initialization 07FD                     ?_LCD_Goto 0051  
                   ?_LCD_PutC 004B        __size_of_keypad_getkey 0021  __size_of_inicio_presentacion 0067  
              __pcstackCOMMON 0000                  __pidataBANK0 0439                LCD_Cmd@Command 0050  
                  __pbssBANK0 0060                    ??_LCD_Goto 0052                    ??_LCD_PutC 004E  
                  __pmaintext 05C9     __size_of_LCD_Write_Nibble 0061                 _keypad_getkey 0418  
                     _LCD_Cmd 0464                    __stringtab 0002      __size_of_iniciar_puertos 0011  
            LCD_PutC@LCD_Char 004F                       __ptext1 0418                       __ptext2 0710  
                     __ptext3 0562                       __ptext4 04C2                       __ptext5 0492  
                     __ptext6 03DF                       __ptext7 0401                       __ptext8 0653  
                     __ptext9 0464                ?_keypad_getkey 004B                     _LCD_Begin 0653  
                   _LCD_Print 04C2          end_of_initialization 07FD             LCD_Write_Nibble@n 004D  
                   _PORTAbits 0005                     _PORTBbits 0006                     _TRISAbits 0085  
                   _TRISBbits 0086                    ?_LCD_Begin 004B           _inicio_presentacion 0562  
                  ?_LCD_Print 004E                     _TXSTAbits 0098       __size_of_keypad_readkey 00D8  
           __size_of_LCD_Goto 0030             __size_of_LCD_PutC 0017             ??_iniciar_puertos 0000  
        ?_inicio_presentacion 004B              _LCD_Write_Nibble 0501                    LCD_Print@i 0051  
             ??_keypad_getkey 004C                 __pbitbssBANK0 0340           start_initialization 07E8  
        inicio_presentacion@i 0058         ??_inicio_presentacion 0055                    init_fetch0 03F0  
                 __pdataBANK0 0020                      ?_LCD_Cmd 004B                     ___latbits 0001  
               __pcstackBANK0 004B                   ??_LCD_Begin 0051                   ??_LCD_Print 0050  
            LCD_Print@LCD_Str 004E                     __pstrings 0002                      _LCD_Goto 0492  
                    _LCD_PutC 0401                _keypad_readkey 0710                      _PIR1bits 000C  
                 __stringbase 0011              __size_of_LCD_Cmd 002E      __end_of_LCD_Write_Nibble 0562  
             _iniciar_puertos 03DF        __end_of_keypad_readkey 07E8            __end_of__stringtab 0012  
                    __ptext10 0501               ?_keypad_readkey 004B                 __size_of_main 008A  
       __end_of_keypad_getkey 0439       __end_of_iniciar_puertos 03F0              keypad_getkey@key 004D  
                    init_ram0 03F4   __end_of_inicio_presentacion 05C9                     stringcode 000C  
                    stringdir 000C                      stringtab 0002  
