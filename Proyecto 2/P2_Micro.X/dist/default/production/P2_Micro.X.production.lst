

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon May 17 21:03:01 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F873
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F873 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010F                     	;# 
   118  018C                     	;# 
   119  018D                     	;# 
   120  0000                     	;# 
   121  0001                     	;# 
   122  0002                     	;# 
   123  0003                     	;# 
   124  0004                     	;# 
   125  0005                     	;# 
   126  0006                     	;# 
   127  0007                     	;# 
   128  000A                     	;# 
   129  000B                     	;# 
   130  000C                     	;# 
   131  000D                     	;# 
   132  000E                     	;# 
   133  000E                     	;# 
   134  000F                     	;# 
   135  0010                     	;# 
   136  0011                     	;# 
   137  0012                     	;# 
   138  0013                     	;# 
   139  0014                     	;# 
   140  0015                     	;# 
   141  0015                     	;# 
   142  0016                     	;# 
   143  0017                     	;# 
   144  0018                     	;# 
   145  0019                     	;# 
   146  001A                     	;# 
   147  001B                     	;# 
   148  001B                     	;# 
   149  001C                     	;# 
   150  001D                     	;# 
   151  001E                     	;# 
   152  001F                     	;# 
   153  0081                     	;# 
   154  0085                     	;# 
   155  0086                     	;# 
   156  0087                     	;# 
   157  008C                     	;# 
   158  008D                     	;# 
   159  008E                     	;# 
   160  0091                     	;# 
   161  0092                     	;# 
   162  0093                     	;# 
   163  0094                     	;# 
   164  0098                     	;# 
   165  0099                     	;# 
   166  009E                     	;# 
   167  009F                     	;# 
   168  010C                     	;# 
   169  010D                     	;# 
   170  010E                     	;# 
   171  010F                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174                           
   175                           	psect	idataBANK0
   176  034C                     __pidataBANK0:
   177                           
   178                           ;initializer for _X
   179  034C  342F               	retlw	47
   180  034D  3400               	retlw	0
   181                           
   182                           ;initializer for _M
   183  034E  3445               	retlw	69
   184  034F  346C               	retlw	108
   185  0350  3420               	retlw	32
   186  0351  3441               	retlw	65
   187  0352  3444               	retlw	68
   188  0353  3443               	retlw	67
   189  0354  3420               	retlw	32
   190  0355  3479               	retlw	121
   191  0356  3420               	retlw	32
   192  0357  3465               	retlw	101
   193  0358  346C               	retlw	108
   194  0359  3420               	retlw	32
   195  035A  3455               	retlw	85
   196  035B  3441               	retlw	65
   197  035C  3452               	retlw	82
   198  035D  3454               	retlw	84
   199  035E  3420               	retlw	32
   200  035F  344A               	retlw	74
   201  0360  346F               	retlw	111
   202  0361  3473               	retlw	115
   203  0362  3465               	retlw	101
   204  0363  3420               	retlw	32
   205  0364  3452               	retlw	82
   206  0365  3464               	retlw	100
   207  0366  3467               	retlw	103
   208  0367  347A               	retlw	122
   209  0368  3420               	retlw	32
   210  0369  3479               	retlw	121
   211  036A  3420               	retlw	32
   212  036B  344B               	retlw	75
   213  036C  3461               	retlw	97
   214  036D  3472               	retlw	114
   215  036E  346C               	retlw	108
   216  036F  3461               	retlw	97
   217  0370  3420               	retlw	32
   218  0371  3452               	retlw	82
   219  0372  3465               	retlw	101
   220  0373  3479               	retlw	121
   221  0374  3465               	retlw	101
   222  0375  3473               	retlw	115
   223  0376  3400               	retlw	0
   224  0006                     _PORTB	set	6
   225  0005                     _PORTA	set	5
   226  0007                     _PORTC	set	7
   227  001E                     _ADRESH	set	30
   228  001A                     _RCREG	set	26
   229  0019                     _TXREG	set	25
   230  000C                     _PIR1bits	set	12
   231  0018                     _RCSTAbits	set	24
   232  0018                     _RCSTA	set	24
   233  0001                     _TMR0	set	1
   234  001F                     _ADCON0	set	31
   235  0006                     _PORTBbits	set	6
   236  0005                     _PORTAbits	set	5
   237  00FA                     _GO	set	250
   238  00F8                     _ADON	set	248
   239  00FB                     _CHS0	set	251
   240  00FC                     _CHS1	set	252
   241  00FD                     _CHS2	set	253
   242  0066                     _ADIF	set	102
   243  003C                     _RC4	set	60
   244  002D                     _RA5	set	45
   245  002C                     _RA4	set	44
   246  002B                     _RA3	set	43
   247  0038                     _RC0	set	56
   248  0039                     _RC1	set	57
   249  003A                     _RC2	set	58
   250  003B                     _RC3	set	59
   251  0087                     _TRISCbits	set	135
   252  009E                     _ADRESL	set	158
   253  0099                     _SPBRG	set	153
   254  0098                     _TXSTAbits	set	152
   255  0098                     _TXSTA	set	152
   256  0081                     _OPTION_REG	set	129
   257  009F                     _ADCON1	set	159
   258  0086                     _TRISBbits	set	134
   259  0085                     _TRISAbits	set	133
   260                           
   261                           	psect	strings
   262  0002                     __pstrings:
   263  0002                     stringtab:
   264  0002                     __stringtab:
   265                           
   266                           ;	String table - string pointers are 1 byte each
   267  0002  1BFF               	btfsc	btemp+1,7
   268  0003  280C               	ljmp	stringcode
   269  0004  1383               	bcf	3,7
   270  0005  187F               	btfsc	btemp+1,0
   271  0006  1783               	bsf	3,7
   272  0007  0800               	movf	0,w
   273  0008  0A84               	incf	4,f
   274  0009  1903               	skipnz
   275  000A  0AFF               	incf	btemp+1,f
   276  000B  0008               	return
   277  000C                     stringcode:
   278  000C                     stringdir:
   279  000C  3000               	movlw	high stringdir
   280  000D  008A               	movwf	10
   281  000E  0804               	movf	4,w
   282  000F  0A84               	incf	4,f
   283  0010  0782               	addwf	2,f
   284  0011                     __stringbase:
   285  0011  3400               	retlw	0
   286  0012                     __end_of__stringtab:
   287  0012                     STR_6:
   288  0012  3433               	retlw	51	;'3'
   289  0013  342E               	retlw	46	;'.'
   290  0014  3431               	retlw	49	;'1'
   291  0015  3432               	retlw	50	;'2'
   292  0016  3456               	retlw	86	;'V'
   293  0017  3400               	retlw	0
   294  0018                     STR_3:
   295  0018  3431               	retlw	49	;'1'
   296  0019  342E               	retlw	46	;'.'
   297  001A  3432               	retlw	50	;'2'
   298  001B  3435               	retlw	53	;'5'
   299  001C  3456               	retlw	86	;'V'
   300  001D  3400               	retlw	0
   301  001E                     STR_7:
   302  001E  3433               	retlw	51	;'3'
   303  001F  342E               	retlw	46	;'.'
   304  0020  3437               	retlw	55	;'7'
   305  0021  3435               	retlw	53	;'5'
   306  0022  3456               	retlw	86	;'V'
   307  0023  3400               	retlw	0
   308  0024                     STR_8:
   309  0024  3434               	retlw	52	;'4'
   310  0025  342E               	retlw	46	;'.'
   311  0026  3433               	retlw	51	;'3'
   312  0027  3437               	retlw	55	;'7'
   313  0028  3456               	retlw	86	;'V'
   314  0029  3400               	retlw	0
   315  002A                     STR_4:
   316  002A  3431               	retlw	49	;'1'
   317  002B  342E               	retlw	46	;'.'
   318  002C  3439               	retlw	57	;'9'
   319  002D  3437               	retlw	55	;'7'
   320  002E  3456               	retlw	86	;'V'
   321  002F  3400               	retlw	0
   322  0030                     STR_2:
   323  0030  3436               	retlw	54	;'6'
   324  0031  3432               	retlw	50	;'2'
   325  0032  3435               	retlw	53	;'5'
   326  0033  346D               	retlw	109	;'m'
   327  0034  3476               	retlw	118	;'v'
   328  0035  3400               	retlw	0
   329  0036                     STR_10:
   330  0036  3452               	retlw	82	;'R'
   331  0037  3465               	retlw	101	;'e'
   332  0038  3463               	retlw	99	;'c'
   333  0039  3420               	retlw	32	;' '
   334  003A  3400               	retlw	0
   335  003B                     STR_5:
   336  003B  3432               	retlw	50	;'2'
   337  003C  342E               	retlw	46	;'.'
   338  003D  3435               	retlw	53	;'5'
   339  003E  3456               	retlw	86	;'V'
   340  003F  3400               	retlw	0
   341  0040                     STR_11:
   342  0040  3445               	retlw	69	;'E'
   343  0041  346E               	retlw	110	;'n'
   344  0042  3476               	retlw	118	;'v'
   345  0043  3400               	retlw	0
   346  0044                     STR_1:
   347  0044  3430               	retlw	48	;'0'
   348  0045  3456               	retlw	86	;'V'
   349  0046  3400               	retlw	0
   350  003D                     
   351                           	psect	cinit
   352  07E8                     start_initialization:	
   353                           ; #config settings
   354                           
   355  07E8                     __initialization:
   356                           
   357                           ; Initialize objects allocated to BANK0
   358  07E8  1383               	bcf	3,7	;select IRP bank0
   359  07E9  304B               	movlw	low (__pdataBANK0+43)
   360  07EA  00FD               	movwf	btemp+-1
   361  07EB  3003               	movlw	high __pidataBANK0
   362  07EC  00FE               	movwf	btemp
   363  07ED  304C               	movlw	low __pidataBANK0
   364  07EE  00FF               	movwf	btemp+1
   365  07EF  3020               	movlw	low __pdataBANK0
   366  07F0  0084               	movwf	4
   367  07F1  118A  22A3  118A   	fcall	init_ram0
   368                           
   369                           ; Clear objects allocated to BANK0
   370  07F4  01E0               	clrf	__pbssBANK0& (0+127)
   371  07F5  01E1               	clrf	(__pbssBANK0+1)& (0+127)
   372  07F6  01E2               	clrf	(__pbssBANK0+2)& (0+127)
   373  07F7  01E3               	clrf	(__pbssBANK0+3)& (0+127)
   374  07F8  01E4               	clrf	(__pbssBANK0+4)& (0+127)
   375  07F9  01E5               	clrf	(__pbssBANK0+5)& (0+127)
   376  07FA  01E6               	clrf	(__pbssBANK0+6)& (0+127)
   377  07FB  01E7               	clrf	(__pbssBANK0+7)& (0+127)
   378                           
   379                           ; Clear objects allocated to BITBANK0
   380  07FC  01E8               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   381  07FD                     end_of_initialization:	
   382                           ;End of C runtime variable initialization code
   383                           
   384  07FD                     __end_of__initialization:
   385  07FD  0183               	clrf	3
   386  07FE  118A  2CDC         	ljmp	_main	;jump to C main() function
   387                           
   388                           	psect	bitbssBANK0
   389  0340                     __pbitbssBANK0:
   390  0340                     _RS:
   391  0340                     	ds	1
   392                           
   393                           	psect	bssBANK0
   394  0060                     __pbssBANK0:
   395  0060                     _number:
   396  0060                     	ds	4
   397  0064                     _ADRES:
   398  0064                     	ds	2
   399  0066                     _ECO:
   400  0066                     	ds	2
   401                           
   402                           	psect	dataBANK0
   403  0020                     __pdataBANK0:
   404  0020                     _X:
   405  0020                     	ds	2
   406  0022                     _M:
   407  0022                     	ds	41
   408                           
   409                           	psect	inittext
   410  029F                     init_fetch0:	
   411                           ;	Called with low address in FSR and high address in W
   412                           
   413  029F  087E               	movf	btemp,w
   414  02A0  008A               	movwf	10
   415  02A1  087F               	movf	btemp+1,w
   416  02A2  0082               	movwf	2
   417  02A3                     init_ram0:	
   418                           ;Called with:
   419                           ;	high address of idata address in btemp 
   420                           ;	low address of idata address in btemp+1 
   421                           ;	low address of data in FSR
   422                           ;	high address + 1 of data in btemp-1
   423                           
   424  02A3  118A  229F  118A   	fcall	init_fetch0
   425  02A6  0080               	movwf	0
   426  02A7  0A84               	incf	4,f
   427  02A8  0804               	movf	4,w
   428  02A9  067D               	xorwf	btemp+-1,w
   429  02AA  1903               	btfsc	3,2
   430  02AB  3400               	retlw	0
   431  02AC  0AFF               	incf	btemp+1,f
   432  02AD  1903               	btfsc	3,2
   433  02AE  0AFE               	incf	btemp,f
   434  02AF  2AA3               	goto	init_ram0
   435                           
   436                           	psect	cstackCOMMON
   437  0000                     __pcstackCOMMON:
   438  0000                     ??_iniciar_puertos:
   439  0000                     ??_set_configuraciones:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0000                     ??_Tx_Dato:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0000                     ??_Rx_Dato:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0000                     ??_evaluar_dato:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0000                     ??_imprimir_valor_leds:	
   452                           ; 1 bytes @ 0x0
   453                           
   454                           
   455                           	psect	cstackBANK0
   456  004B                     __pcstackBANK0:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  004B                     ?_iniciar_puertos:
   460  004B                     ?_inicio_presentacion:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  004B                     ?_LCD_Write_Nibble:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  004B                     ??_LCD_Write_Nibble:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  004B                     ?_LCD_Cmd:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  004B                     ?_LCD_PutC:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  004B                     ?_LCD_Begin:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  004B                     ?_keypad_readkey:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  004B                     ??_keypad_readkey:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  004B                     ?_keypad_getkey:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  004B                     ?_set_configuraciones:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  004B                     ?_Tx_Dato:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  004B                     ?_Rx_Dato:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  004B                     ?_evaluar_dato:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  004B                     ?_imprimir_valor_leds:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  004B                     ?_main:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  004B                     Tx_Dato@X:	
   506                           ; 2 bytes @ 0x0
   507                           
   508                           
   509                           ; 1 bytes @ 0x0
   510  004B                     	ds	1
   511  004C                     ??_keypad_getkey:
   512                           
   513                           ; 1 bytes @ 0x1
   514  004C                     	ds	1
   515  004D                     LCD_Write_Nibble@n:
   516  004D                     keypad_getkey@key:	
   517                           ; 1 bytes @ 0x2
   518                           
   519                           
   520                           ; 1 bytes @ 0x2
   521  004D                     	ds	1
   522  004E                     ??_LCD_Cmd:
   523  004E                     ??_LCD_PutC:	
   524                           ; 1 bytes @ 0x3
   525                           
   526  004E                     ?_LCD_Print:	
   527                           ; 1 bytes @ 0x3
   528                           
   529  004E                     LCD_Print@LCD_Str:	
   530                           ; 1 bytes @ 0x3
   531                           
   532                           
   533                           ; 2 bytes @ 0x3
   534  004E                     	ds	1
   535  004F                     LCD_PutC@LCD_Char:
   536                           
   537                           ; 1 bytes @ 0x4
   538  004F                     	ds	1
   539  0050                     ??_LCD_Print:
   540  0050                     LCD_Cmd@Command:	
   541                           ; 1 bytes @ 0x5
   542                           
   543                           
   544                           ; 1 bytes @ 0x5
   545  0050                     	ds	1
   546  0051                     ?_LCD_Goto:
   547  0051                     ??_LCD_Begin:	
   548                           ; 1 bytes @ 0x6
   549                           
   550  0051                     LCD_Goto@row:	
   551                           ; 1 bytes @ 0x6
   552                           
   553  0051                     LCD_Print@i:	
   554                           ; 1 bytes @ 0x6
   555                           
   556                           
   557                           ; 1 bytes @ 0x6
   558  0051                     	ds	1
   559  0052                     ??_LCD_Goto:
   560                           
   561                           ; 1 bytes @ 0x7
   562  0052                     	ds	2
   563  0054                     LCD_Goto@col:
   564                           
   565                           ; 1 bytes @ 0x9
   566  0054                     	ds	1
   567  0055                     ??_inicio_presentacion:
   568                           
   569                           ; 1 bytes @ 0xA
   570  0055                     	ds	3
   571  0058                     inicio_presentacion@i:
   572                           
   573                           ; 2 bytes @ 0xD
   574  0058                     	ds	2
   575  005A                     ??_main:
   576                           
   577                           ; 1 bytes @ 0xF
   578  005A                     	ds	3
   579  005D                     main@i:
   580                           
   581                           ; 2 bytes @ 0x12
   582  005D                     	ds	2
   583  005F                     main@c:
   584                           
   585                           ; 1 bytes @ 0x14
   586  005F                     	ds	1
   587                           
   588                           	psect	maintext
   589  04DC                     __pmaintext:	
   590 ;;
   591 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   592 ;;
   593 ;; *************** function _main *****************
   594 ;; Defined at:
   595 ;;		line 145 in file "main.c"
   596 ;; Parameters:    Size  Location     Type
   597 ;;		None
   598 ;; Auto vars:     Size  Location     Type
   599 ;;  c               1   20[BANK0 ] unsigned char 
   600 ;;  i               2   18[BANK0 ] int 
   601 ;; Return value:  Size  Location     Type
   602 ;;                  2  204[None  ] int 
   603 ;; Registers used:
   604 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   605 ;; Tracked objects:
   606 ;;		On entry : B00/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMMON   BANK0   BANK1
   610 ;;      Params:         0       0       0
   611 ;;      Locals:         0       3       0
   612 ;;      Temps:          0       3       0
   613 ;;      Totals:         0       6       0
   614 ;;Total ram usage:        6 bytes
   615 ;; Hardware stack levels required when called: 4
   616 ;; This function calls:
   617 ;;		_LCD_Begin
   618 ;;		_LCD_Cmd
   619 ;;		_LCD_Goto
   620 ;;		_LCD_Print
   621 ;;		_LCD_PutC
   622 ;;		_imprimir_valor_leds
   623 ;;		_iniciar_puertos
   624 ;;		_inicio_presentacion
   625 ;;		_keypad_getkey
   626 ;;		_set_configuraciones
   627 ;; This function is called by:
   628 ;;		Startup code after reset
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           
   633                           ;psect for function _main
   634  04DC                     _main:
   635  04DC                     l1631:	
   636                           ;incstack = 0
   637                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   638                           
   639                           
   640                           ;main.c: 147:     int i=0;
   641  04DC  1283               	bcf	3,5	;RP0=0, select bank0
   642  04DD  1303               	bcf	3,6	;RP1=0, select bank0
   643  04DE  01DD               	clrf	main@i
   644  04DF  01DE               	clrf	main@i+1
   645  04E0                     l1633:
   646                           
   647                           ;main.c: 148:     set_configuraciones();
   648  04E0  118A  22FD  118A   	fcall	_set_configuraciones
   649  04E3                     l1635:
   650                           
   651                           ;main.c: 150:     iniciar_puertos();
   652  04E3  118A  22B0  118A   	fcall	_iniciar_puertos
   653  04E6                     l1637:
   654                           
   655                           ;main.c: 153:     LCD_Begin();
   656  04E6  118A  257A  118A   	fcall	_LCD_Begin
   657  04E9                     l1639:
   658                           
   659                           ;main.c: 154:     inicio_presentacion();
   660  04E9  118A  2475  118A   	fcall	_inicio_presentacion
   661  04EC                     l1641:
   662                           
   663                           ;main.c: 155:     _delay((unsigned long)((500)*(32000000/4000.0)));
   664  04EC  3015               	movlw	21
   665  04ED  1283               	bcf	3,5	;RP0=0, select bank0
   666  04EE  1303               	bcf	3,6	;RP1=0, select bank0
   667  04EF  00DC               	movwf	??_main+2
   668  04F0  304B               	movlw	75
   669  04F1  00DB               	movwf	??_main+1
   670  04F2  30BE               	movlw	190
   671  04F3  00DA               	movwf	??_main
   672  04F4                     u1227:
   673  04F4  0BDA               	decfsz	??_main,f
   674  04F5  2CF4               	goto	u1227
   675  04F6  0BDB               	decfsz	??_main+1,f
   676  04F7  2CF4               	goto	u1227
   677  04F8  0BDC               	decfsz	??_main+2,f
   678  04F9  2CF4               	goto	u1227
   679  04FA                     l1643:
   680                           
   681                           ;main.c: 156:     LCD_Goto(1, 1);
   682  04FA  1283               	bcf	3,5	;RP0=0, select bank0
   683  04FB  1303               	bcf	3,6	;RP1=0, select bank0
   684  04FC  01D1               	clrf	LCD_Goto@row
   685  04FD  0AD1               	incf	LCD_Goto@row,f
   686  04FE  3001               	movlw	1
   687  04FF  118A  23A5  118A   	fcall	_LCD_Goto
   688  0502                     l1645:
   689                           
   690                           ;main.c: 157:     _delay((unsigned long)((500)*(32000000/4000.0)));
   691  0502  3015               	movlw	21
   692  0503  1283               	bcf	3,5	;RP0=0, select bank0
   693  0504  1303               	bcf	3,6	;RP1=0, select bank0
   694  0505  00DC               	movwf	??_main+2
   695  0506  304B               	movlw	75
   696  0507  00DB               	movwf	??_main+1
   697  0508  30BE               	movlw	190
   698  0509  00DA               	movwf	??_main
   699  050A                     u1237:
   700  050A  0BDA               	decfsz	??_main,f
   701  050B  2D0A               	goto	u1237
   702  050C  0BDB               	decfsz	??_main+1,f
   703  050D  2D0A               	goto	u1237
   704  050E  0BDC               	decfsz	??_main+2,f
   705  050F  2D0A               	goto	u1237
   706  0510                     l1647:
   707                           
   708                           ;main.c: 158:     imprimir_valor_leds();
   709  0510  118A  2323  118A   	fcall	_imprimir_valor_leds
   710  0513                     l1649:
   711                           
   712                           ;main.c: 163:     if(i<4)
   713  0513  1283               	bcf	3,5	;RP0=0, select bank0
   714  0514  1303               	bcf	3,6	;RP1=0, select bank0
   715  0515  085E               	movf	main@i+1,w
   716  0516  3A80               	xorlw	128
   717  0517  00FF               	movwf	btemp+1
   718  0518  3080               	movlw	128
   719  0519  027F               	subwf	btemp+1,w
   720  051A  1D03               	skipz
   721  051B  2D1E               	goto	u1185
   722  051C  3004               	movlw	4
   723  051D  025D               	subwf	main@i,w
   724  051E                     u1185:
   725  051E  1803               	skipnc
   726  051F  2D21               	goto	u1181
   727  0520  2D22               	goto	u1180
   728  0521                     u1181:
   729  0521  2D58               	goto	l1669
   730  0522                     u1180:
   731  0522                     l1651:
   732                           
   733                           ;main.c: 164:     {;main.c: 165:     char c = keypad_getkey();
   734  0522  118A  22DC  118A   	fcall	_keypad_getkey
   735  0525  1283               	bcf	3,5	;RP0=0, select bank0
   736  0526  1303               	bcf	3,6	;RP1=0, select bank0
   737  0527  00DA               	movwf	??_main
   738  0528  085A               	movf	??_main,w
   739  0529  00DF               	movwf	main@c
   740  052A                     l1653:
   741                           
   742                           ;main.c: 166:         if(c!='=' && c!='A')
   743  052A  303D               	movlw	61
   744  052B  065F               	xorwf	main@c,w
   745  052C  1903               	btfsc	3,2
   746  052D  2D2F               	goto	u1191
   747  052E  2D30               	goto	u1190
   748  052F                     u1191:
   749  052F  2D4B               	goto	l1663
   750  0530                     u1190:
   751  0530                     l1655:
   752  0530  3041               	movlw	65
   753  0531  065F               	xorwf	main@c,w
   754  0532  1903               	btfsc	3,2
   755  0533  2D35               	goto	u1201
   756  0534  2D36               	goto	u1200
   757  0535                     u1201:
   758  0535  2D4B               	goto	l1663
   759  0536                     u1200:
   760  0536                     l1657:
   761                           
   762                           ;main.c: 167:         {;main.c: 168:         LCD_PutC(c);
   763  0536  085F               	movf	main@c,w
   764  0537  118A  22C5  118A   	fcall	_LCD_PutC
   765  053A                     l1659:
   766                           
   767                           ;main.c: 169:         number[i]=c;
   768  053A  1283               	bcf	3,5	;RP0=0, select bank0
   769  053B  1303               	bcf	3,6	;RP1=0, select bank0
   770  053C  085F               	movf	main@c,w
   771  053D  00DA               	movwf	??_main
   772  053E  085D               	movf	main@i,w
   773  053F  3E60               	addlw	(low (_number| 0))& (0+255)
   774  0540  0084               	movwf	4
   775  0541  085A               	movf	??_main,w
   776  0542  1383               	bcf	3,7	;select IRP bank0
   777  0543  0080               	movwf	0
   778  0544                     l1661:
   779                           
   780                           ;main.c: 170:         i++;
   781  0544  3001               	movlw	1
   782  0545  07DD               	addwf	main@i,f
   783  0546  1803               	skipnc
   784  0547  0ADE               	incf	main@i+1,f
   785  0548  3000               	movlw	0
   786  0549  07DE               	addwf	main@i+1,f
   787                           
   788                           ;main.c: 171:         }
   789  054A  2D69               	goto	l1675
   790  054B                     l1663:
   791  054B  3041               	movlw	65
   792  054C  065F               	xorwf	main@c,w
   793  054D  1D03               	btfss	3,2
   794  054E  2D50               	goto	u1211
   795  054F  2D51               	goto	u1210
   796  0550                     u1211:
   797  0550  2D69               	goto	l1675
   798  0551                     u1210:
   799  0551                     l1665:
   800                           
   801                           ;main.c: 173:         {;main.c: 174:             i=0;
   802  0551  01DD               	clrf	main@i
   803  0552  01DE               	clrf	main@i+1
   804  0553                     l1667:
   805                           
   806                           ;main.c: 175:             LCD_Cmd(0x01);
   807  0553  3001               	movlw	1
   808  0554  118A  2377  118A   	fcall	_LCD_Cmd
   809  0557  2D69               	goto	l1675
   810  0558                     l1669:
   811                           
   812                           ;main.c: 184:     {;main.c: 185:          i=0;
   813  0558  1283               	bcf	3,5	;RP0=0, select bank0
   814  0559  1303               	bcf	3,6	;RP1=0, select bank0
   815  055A  01DD               	clrf	main@i
   816  055B  01DE               	clrf	main@i+1
   817  055C                     l1671:
   818                           
   819                           ;main.c: 186:          LCD_PutC(' ');
   820  055C  3020               	movlw	32
   821  055D  118A  22C5  118A   	fcall	_LCD_PutC
   822  0560                     l1673:
   823                           
   824                           ;main.c: 187:          LCD_Print("Env");
   825  0560  302F               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
   826  0561  1283               	bcf	3,5	;RP0=0, select bank0
   827  0562  1303               	bcf	3,6	;RP1=0, select bank0
   828  0563  00CE               	movwf	LCD_Print@LCD_Str
   829  0564  3080               	movlw	128
   830  0565  00CF               	movwf	LCD_Print@LCD_Str+1
   831  0566  118A  23D5  118A   	fcall	_LCD_Print
   832  0569                     l1675:
   833                           
   834                           ;main.c: 195:     _delay((unsigned long)((500)*(32000000/4000.0)));
   835  0569  3015               	movlw	21
   836  056A  1283               	bcf	3,5	;RP0=0, select bank0
   837  056B  1303               	bcf	3,6	;RP1=0, select bank0
   838  056C  00DC               	movwf	??_main+2
   839  056D  304B               	movlw	75
   840  056E  00DB               	movwf	??_main+1
   841  056F  30BE               	movlw	190
   842  0570  00DA               	movwf	??_main
   843  0571                     u1247:
   844  0571  0BDA               	decfsz	??_main,f
   845  0572  2D71               	goto	u1247
   846  0573  0BDB               	decfsz	??_main+1,f
   847  0574  2D71               	goto	u1247
   848  0575  0BDC               	decfsz	??_main+2,f
   849  0576  2D71               	goto	u1247
   850  0577  2D13               	goto	l1649
   851  0578  118A  2800         	ljmp	start
   852  057A                     __end_of_main:
   853                           
   854                           	psect	text1
   855  02FD                     __ptext1:	
   856 ;; *************** function _set_configuraciones *****************
   857 ;; Defined at:
   858 ;;		line 31 in file "main.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;		None
   861 ;; Auto vars:     Size  Location     Type
   862 ;;		None
   863 ;; Return value:  Size  Location     Type
   864 ;;                  1    wreg      void 
   865 ;; Registers used:
   866 ;;		wreg, status,2
   867 ;; Tracked objects:
   868 ;;		On entry : 0/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMMON   BANK0   BANK1
   872 ;;      Params:         0       0       0
   873 ;;      Locals:         0       0       0
   874 ;;      Temps:          0       0       0
   875 ;;      Totals:         0       0       0
   876 ;;Total ram usage:        0 bytes
   877 ;; Hardware stack levels used: 1
   878 ;; This function calls:
   879 ;;		Nothing
   880 ;; This function is called by:
   881 ;;		_main
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           
   886                           ;psect for function _set_configuraciones
   887  02FD                     _set_configuraciones:
   888  02FD                     l1547:	
   889                           ;incstack = 0
   890                           ; Regs used in _set_configuraciones: [wreg+status,2]
   891                           
   892                           
   893                           ;main.c: 35:     ADCON0 = 0x80;
   894  02FD  3080               	movlw	128
   895  02FE  1283               	bcf	3,5	;RP0=0, select bank0
   896  02FF  1303               	bcf	3,6	;RP1=0, select bank0
   897  0300  009F               	movwf	31	;volatile
   898                           
   899                           ;main.c: 36:     ADCON1 = 0x8E;
   900  0301  308E               	movlw	142
   901  0302  1683               	bsf	3,5	;RP0=1, select bank1
   902  0303  1303               	bcf	3,6	;RP1=0, select bank1
   903  0304  009F               	movwf	31	;volatile
   904  0305                     l1549:
   905                           
   906                           ;main.c: 40:     ADIF = 0;
   907  0305  1283               	bcf	3,5	;RP0=0, select bank0
   908  0306  1303               	bcf	3,6	;RP1=0, select bank0
   909  0307  130C               	bcf	12,6	;volatile
   910                           
   911                           ;main.c: 43:     OPTION_REG = 0x51;
   912  0308  3051               	movlw	81
   913  0309  1683               	bsf	3,5	;RP0=1, select bank1
   914  030A  1303               	bcf	3,6	;RP1=0, select bank1
   915  030B  0081               	movwf	1	;volatile
   916  030C                     l1551:
   917                           
   918                           ;main.c: 44:     TMR0 = 0;
   919  030C  1283               	bcf	3,5	;RP0=0, select bank0
   920  030D  1303               	bcf	3,6	;RP1=0, select bank0
   921  030E  0181               	clrf	1	;volatile
   922  030F                     l1553:
   923                           
   924                           ;main.c: 47:     TXSTA = 0x00;
   925  030F  1683               	bsf	3,5	;RP0=1, select bank1
   926  0310  1303               	bcf	3,6	;RP1=0, select bank1
   927  0311  0198               	clrf	24	;volatile
   928  0312                     l1555:
   929                           
   930                           ;main.c: 48:     RCSTA = 0x00;
   931  0312  1283               	bcf	3,5	;RP0=0, select bank0
   932  0313  1303               	bcf	3,6	;RP1=0, select bank0
   933  0314  0198               	clrf	24	;volatile
   934  0315                     l1557:
   935                           
   936                           ;main.c: 49:     RCSTAbits.SPEN = 1;
   937  0315  1798               	bsf	24,7	;volatile
   938  0316                     l1559:
   939                           
   940                           ;main.c: 50:     TXSTAbits.SYNC = 0;
   941  0316  1683               	bsf	3,5	;RP0=1, select bank1
   942  0317  1303               	bcf	3,6	;RP1=0, select bank1
   943  0318  1218               	bcf	24,4	;volatile
   944  0319                     l1561:
   945                           
   946                           ;main.c: 51:     TXSTAbits.BRGH = 1;
   947  0319  1518               	bsf	24,2	;volatile
   948  031A                     l1563:
   949                           
   950                           ;main.c: 52:     TXSTAbits.TXEN = 1;
   951  031A  1698               	bsf	24,5	;volatile
   952  031B                     l1565:
   953                           
   954                           ;main.c: 53:     RCSTAbits.CREN = 1;
   955  031B  1283               	bcf	3,5	;RP0=0, select bank0
   956  031C  1303               	bcf	3,6	;RP1=0, select bank0
   957  031D  1618               	bsf	24,4	;volatile
   958  031E                     l1567:
   959                           
   960                           ;main.c: 55:     SPBRG = 25;
   961  031E  3019               	movlw	25
   962  031F  1683               	bsf	3,5	;RP0=1, select bank1
   963  0320  1303               	bcf	3,6	;RP1=0, select bank1
   964  0321  0099               	movwf	25	;volatile
   965  0322                     l170:
   966  0322  0008               	return
   967  0323                     __end_of_set_configuraciones:
   968                           
   969                           	psect	text2
   970  02DC                     __ptext2:	
   971 ;; *************** function _keypad_getkey *****************
   972 ;; Defined at:
   973 ;;		line 90 in file "./kbd.h"
   974 ;; Parameters:    Size  Location     Type
   975 ;;		None
   976 ;; Auto vars:     Size  Location     Type
   977 ;;  key             1    2[BANK0 ] unsigned char 
   978 ;; Return value:  Size  Location     Type
   979 ;;                  1    wreg      unsigned char 
   980 ;; Registers used:
   981 ;;		wreg, status,2, status,0, pclath, cstack
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMMON   BANK0   BANK1
   987 ;;      Params:         0       0       0
   988 ;;      Locals:         0       1       0
   989 ;;      Temps:          0       1       0
   990 ;;      Totals:         0       2       0
   991 ;;Total ram usage:        2 bytes
   992 ;; Hardware stack levels used: 1
   993 ;; Hardware stack levels required when called: 1
   994 ;; This function calls:
   995 ;;		_keypad_readkey
   996 ;; This function is called by:
   997 ;;		_main
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           
  1002                           ;psect for function _keypad_getkey
  1003  02DC                     _keypad_getkey:
  1004  02DC                     l1535:	
  1005                           ;incstack = 0
  1006                           ; Regs used in _keypad_getkey: [wreg+status,2+status,0+pclath+cstack]
  1007                           
  1008                           
  1009                           ;./kbd.h: 92:  unsigned char key = 'x';
  1010  02DC  3078               	movlw	120
  1011  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  1012  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  1013  02DF  00CC               	movwf	??_keypad_getkey
  1014  02E0  084C               	movf	??_keypad_getkey,w
  1015  02E1  00CD               	movwf	keypad_getkey@key
  1016                           
  1017                           ;./kbd.h: 95:  while(key == 'x')
  1018  02E2  2AEB               	goto	l1539
  1019  02E3                     l1537:
  1020                           
  1021                           ;./kbd.h: 96:   key = keypad_readkey();
  1022  02E3  118A  2637  118A   	fcall	_keypad_readkey
  1023  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  1024  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  1025  02E8  00CC               	movwf	??_keypad_getkey
  1026  02E9  084C               	movf	??_keypad_getkey,w
  1027  02EA  00CD               	movwf	keypad_getkey@key
  1028  02EB                     l1539:
  1029                           
  1030                           ;./kbd.h: 95:  while(key == 'x')
  1031  02EB  3078               	movlw	120
  1032  02EC  064D               	xorwf	keypad_getkey@key,w
  1033  02ED  1903               	btfsc	3,2
  1034  02EE  2AF0               	goto	u1151
  1035  02EF  2AF1               	goto	u1150
  1036  02F0                     u1151:
  1037  02F0  2AE3               	goto	l1537
  1038  02F1                     u1150:
  1039  02F1                     l1541:
  1040  02F1  118A  2637  118A   	fcall	_keypad_readkey
  1041  02F4  3A78               	xorlw	120
  1042  02F5  1D03               	skipz
  1043  02F6  2AF8               	goto	u1161
  1044  02F7  2AF9               	goto	u1160
  1045  02F8                     u1161:
  1046  02F8  2AF1               	goto	l1541
  1047  02F9                     u1160:
  1048  02F9                     l1543:
  1049                           
  1050                           ;./kbd.h: 101:  return key;
  1051  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  1052  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  1053  02FB  084D               	movf	keypad_getkey@key,w
  1054  02FC                     l157:
  1055  02FC  0008               	return
  1056  02FD                     __end_of_keypad_getkey:
  1057                           
  1058                           	psect	text3
  1059  0637                     __ptext3:	
  1060 ;; *************** function _keypad_readkey *****************
  1061 ;; Defined at:
  1062 ;;		line 35 in file "./kbd.h"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;		None
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;		None
  1067 ;; Return value:  Size  Location     Type
  1068 ;;                  1    wreg      unsigned char 
  1069 ;; Registers used:
  1070 ;;		wreg
  1071 ;; Tracked objects:
  1072 ;;		On entry : 0/0
  1073 ;;		On exit  : 0/0
  1074 ;;		Unchanged: 0/0
  1075 ;; Data sizes:     COMMON   BANK0   BANK1
  1076 ;;      Params:         0       0       0
  1077 ;;      Locals:         0       0       0
  1078 ;;      Temps:          0       1       0
  1079 ;;      Totals:         0       1       0
  1080 ;;Total ram usage:        1 bytes
  1081 ;; Hardware stack levels used: 1
  1082 ;; This function calls:
  1083 ;;		Nothing
  1084 ;; This function is called by:
  1085 ;;		_keypad_getkey
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089                           
  1090                           ;psect for function _keypad_readkey
  1091  0637                     _keypad_readkey:
  1092  0637                     l1335:	
  1093                           ;incstack = 0
  1094                           ; Regs used in _keypad_readkey: [wreg]
  1095                           
  1096                           
  1097                           ;./kbd.h: 37:     RC3 = 1;
  1098  0637  1283               	bcf	3,5	;RP0=0, select bank0
  1099  0638  1303               	bcf	3,6	;RP1=0, select bank0
  1100  0639  1587               	bsf	7,3	;volatile
  1101                           
  1102                           ;./kbd.h: 38:     RC2 = 0;
  1103  063A  1107               	bcf	7,2	;volatile
  1104                           
  1105                           ;./kbd.h: 39:     RC1 = 0;
  1106  063B  1087               	bcf	7,1	;volatile
  1107                           
  1108                           ;./kbd.h: 40:     RC0 = 0;
  1109  063C  1007               	bcf	7,0	;volatile
  1110  063D                     l1337:
  1111                           
  1112                           ;./kbd.h: 41:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  1113  063D  304F               	movlw	79
  1114  063E  1283               	bcf	3,5	;RP0=0, select bank0
  1115  063F  1303               	bcf	3,6	;RP1=0, select bank0
  1116  0640  00CB               	movwf	??_keypad_readkey
  1117  0641                     u1257:
  1118  0641  0BCB               	decfsz	??_keypad_readkey,f
  1119  0642  2E41               	goto	u1257
  1120  0643  0000               	nop
  1121  0644                     l1339:
  1122                           
  1123                           ;./kbd.h: 43:     if(RC3==1 && RC2==0 && RC1==0 && RC0==0) {
  1124  0644  1283               	bcf	3,5	;RP0=0, select bank0
  1125  0645  1303               	bcf	3,6	;RP1=0, select bank0
  1126  0646  1D87               	btfss	7,3	;volatile
  1127  0647  2E49               	goto	u711
  1128  0648  2E4A               	goto	u710
  1129  0649                     u711:
  1130  0649  2E6E               	goto	l128
  1131  064A                     u710:
  1132  064A                     l1341:
  1133  064A  1907               	btfsc	7,2	;volatile
  1134  064B  2E4D               	goto	u721
  1135  064C  2E4E               	goto	u720
  1136  064D                     u721:
  1137  064D  2E6E               	goto	l128
  1138  064E                     u720:
  1139  064E                     l1343:
  1140  064E  1887               	btfsc	7,1	;volatile
  1141  064F  2E51               	goto	u731
  1142  0650  2E52               	goto	u730
  1143  0651                     u731:
  1144  0651  2E6E               	goto	l128
  1145  0652                     u730:
  1146  0652                     l1345:
  1147  0652  1807               	btfsc	7,0	;volatile
  1148  0653  2E55               	goto	u741
  1149  0654  2E56               	goto	u740
  1150  0655                     u741:
  1151  0655  2E6E               	goto	l128
  1152  0656                     u740:
  1153  0656                     l1347:
  1154                           
  1155                           ;./kbd.h: 44:         if (RA3 == 1) return 'A';
  1156  0656  1D85               	btfss	5,3	;volatile
  1157  0657  2E59               	goto	u751
  1158  0658  2E5A               	goto	u750
  1159  0659                     u751:
  1160  0659  2E5C               	goto	l129
  1161  065A                     u750:
  1162  065A                     l1349:
  1163  065A  3041               	movlw	65
  1164  065B  2F0E               	goto	l130
  1165  065C                     l129:
  1166                           
  1167                           ;./kbd.h: 45:         if (RA4 == 1) return '0';
  1168  065C  1E05               	btfss	5,4	;volatile
  1169  065D  2E5F               	goto	u761
  1170  065E  2E60               	goto	u760
  1171  065F                     u761:
  1172  065F  2E62               	goto	l131
  1173  0660                     u760:
  1174  0660                     l1353:
  1175  0660  3030               	movlw	48
  1176  0661  2F0E               	goto	l130
  1177  0662                     l131:
  1178                           
  1179                           ;./kbd.h: 46:         if (RA5 == 1) return '=';
  1180  0662  1E85               	btfss	5,5	;volatile
  1181  0663  2E65               	goto	u771
  1182  0664  2E66               	goto	u770
  1183  0665                     u771:
  1184  0665  2E68               	goto	l132
  1185  0666                     u770:
  1186  0666                     l1357:
  1187  0666  303D               	movlw	61
  1188  0667  2F0E               	goto	l130
  1189  0668                     l132:
  1190                           
  1191                           ;./kbd.h: 47:         if (RC4 == 1) return '+';
  1192  0668  1E07               	btfss	7,4	;volatile
  1193  0669  2E6B               	goto	u781
  1194  066A  2E6C               	goto	u780
  1195  066B                     u781:
  1196  066B  2E6E               	goto	l128
  1197  066C                     u780:
  1198  066C                     l1361:
  1199  066C  302B               	movlw	43
  1200  066D  2F0E               	goto	l130
  1201  066E                     l128:	
  1202                           ;./kbd.h: 48:     }
  1203                           
  1204                           
  1205                           ;./kbd.h: 49:     RC3 = 0;
  1206  066E  1187               	bcf	7,3	;volatile
  1207                           
  1208                           ;./kbd.h: 50:     RC2 = 1;
  1209  066F  1507               	bsf	7,2	;volatile
  1210                           
  1211                           ;./kbd.h: 51:     RC1 = 0;
  1212  0670  1087               	bcf	7,1	;volatile
  1213                           
  1214                           ;./kbd.h: 52:     RC0 = 0;
  1215  0671  1007               	bcf	7,0	;volatile
  1216  0672                     l1365:
  1217                           
  1218                           ;./kbd.h: 53:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  1219  0672  304F               	movlw	79
  1220  0673  1283               	bcf	3,5	;RP0=0, select bank0
  1221  0674  1303               	bcf	3,6	;RP1=0, select bank0
  1222  0675  00CB               	movwf	??_keypad_readkey
  1223  0676                     u1267:
  1224  0676  0BCB               	decfsz	??_keypad_readkey,f
  1225  0677  2E76               	goto	u1267
  1226  0678  0000               	nop
  1227  0679                     l1367:
  1228                           
  1229                           ;./kbd.h: 55:     if(RC3==0 && RC2==1 && RC1==0 && RC0==0) {
  1230  0679  1283               	bcf	3,5	;RP0=0, select bank0
  1231  067A  1303               	bcf	3,6	;RP1=0, select bank0
  1232  067B  1987               	btfsc	7,3	;volatile
  1233  067C  2E7E               	goto	u791
  1234  067D  2E7F               	goto	u790
  1235  067E                     u791:
  1236  067E  2EA3               	goto	l134
  1237  067F                     u790:
  1238  067F                     l1369:
  1239  067F  1D07               	btfss	7,2	;volatile
  1240  0680  2E82               	goto	u801
  1241  0681  2E83               	goto	u800
  1242  0682                     u801:
  1243  0682  2EA3               	goto	l134
  1244  0683                     u800:
  1245  0683                     l1371:
  1246  0683  1887               	btfsc	7,1	;volatile
  1247  0684  2E86               	goto	u811
  1248  0685  2E87               	goto	u810
  1249  0686                     u811:
  1250  0686  2EA3               	goto	l134
  1251  0687                     u810:
  1252  0687                     l1373:
  1253  0687  1807               	btfsc	7,0	;volatile
  1254  0688  2E8A               	goto	u821
  1255  0689  2E8B               	goto	u820
  1256  068A                     u821:
  1257  068A  2EA3               	goto	l134
  1258  068B                     u820:
  1259  068B                     l1375:
  1260                           
  1261                           ;./kbd.h: 56:         if (RA3 == 1) return '1';
  1262  068B  1D85               	btfss	5,3	;volatile
  1263  068C  2E8E               	goto	u831
  1264  068D  2E8F               	goto	u830
  1265  068E                     u831:
  1266  068E  2E91               	goto	l135
  1267  068F                     u830:
  1268  068F                     l1377:
  1269  068F  3031               	movlw	49
  1270  0690  2F0E               	goto	l130
  1271  0691                     l135:
  1272                           
  1273                           ;./kbd.h: 57:         if (RA4 == 1) return '2';
  1274  0691  1E05               	btfss	5,4	;volatile
  1275  0692  2E94               	goto	u841
  1276  0693  2E95               	goto	u840
  1277  0694                     u841:
  1278  0694  2E97               	goto	l136
  1279  0695                     u840:
  1280  0695                     l1381:
  1281  0695  3032               	movlw	50
  1282  0696  2F0E               	goto	l130
  1283  0697                     l136:
  1284                           
  1285                           ;./kbd.h: 58:         if (RA5 == 1) return '3';
  1286  0697  1E85               	btfss	5,5	;volatile
  1287  0698  2E9A               	goto	u851
  1288  0699  2E9B               	goto	u850
  1289  069A                     u851:
  1290  069A  2E9D               	goto	l137
  1291  069B                     u850:
  1292  069B                     l1385:
  1293  069B  3033               	movlw	51
  1294  069C  2F0E               	goto	l130
  1295  069D                     l137:
  1296                           
  1297                           ;./kbd.h: 59:         if (RC4 == 1) return '.';
  1298  069D  1E07               	btfss	7,4	;volatile
  1299  069E  2EA0               	goto	u861
  1300  069F  2EA1               	goto	u860
  1301  06A0                     u861:
  1302  06A0  2EA3               	goto	l134
  1303  06A1                     u860:
  1304  06A1                     l1389:
  1305  06A1  302E               	movlw	46
  1306  06A2  2F0E               	goto	l130
  1307  06A3                     l134:	
  1308                           ;./kbd.h: 60:     }
  1309                           
  1310                           
  1311                           ;./kbd.h: 62:     RC3 = 0;
  1312  06A3  1187               	bcf	7,3	;volatile
  1313                           
  1314                           ;./kbd.h: 63:     RC2 = 0;
  1315  06A4  1107               	bcf	7,2	;volatile
  1316                           
  1317                           ;./kbd.h: 64:     RC1 = 1;
  1318  06A5  1487               	bsf	7,1	;volatile
  1319                           
  1320                           ;./kbd.h: 65:     RC0 = 0;
  1321  06A6  1007               	bcf	7,0	;volatile
  1322  06A7                     l1393:
  1323                           
  1324                           ;./kbd.h: 66:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  1325  06A7  304F               	movlw	79
  1326  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  1327  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  1328  06AA  00CB               	movwf	??_keypad_readkey
  1329  06AB                     u1277:
  1330  06AB  0BCB               	decfsz	??_keypad_readkey,f
  1331  06AC  2EAB               	goto	u1277
  1332  06AD  0000               	nop
  1333  06AE                     l1395:
  1334                           
  1335                           ;./kbd.h: 68:     if(RC3==0 && RC2==0 && RC1==1 && RC0==0) {
  1336  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  1337  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  1338  06B0  1987               	btfsc	7,3	;volatile
  1339  06B1  2EB3               	goto	u871
  1340  06B2  2EB4               	goto	u870
  1341  06B3                     u871:
  1342  06B3  2ED8               	goto	l139
  1343  06B4                     u870:
  1344  06B4                     l1397:
  1345  06B4  1907               	btfsc	7,2	;volatile
  1346  06B5  2EB7               	goto	u881
  1347  06B6  2EB8               	goto	u880
  1348  06B7                     u881:
  1349  06B7  2ED8               	goto	l139
  1350  06B8                     u880:
  1351  06B8                     l1399:
  1352  06B8  1C87               	btfss	7,1	;volatile
  1353  06B9  2EBB               	goto	u891
  1354  06BA  2EBC               	goto	u890
  1355  06BB                     u891:
  1356  06BB  2ED8               	goto	l139
  1357  06BC                     u890:
  1358  06BC                     l1401:
  1359  06BC  1807               	btfsc	7,0	;volatile
  1360  06BD  2EBF               	goto	u901
  1361  06BE  2EC0               	goto	u900
  1362  06BF                     u901:
  1363  06BF  2ED8               	goto	l139
  1364  06C0                     u900:
  1365  06C0                     l1403:
  1366                           
  1367                           ;./kbd.h: 69:         if (RA3 == 1) return '4';
  1368  06C0  1D85               	btfss	5,3	;volatile
  1369  06C1  2EC3               	goto	u911
  1370  06C2  2EC4               	goto	u910
  1371  06C3                     u911:
  1372  06C3  2EC6               	goto	l140
  1373  06C4                     u910:
  1374  06C4                     l1405:
  1375  06C4  3034               	movlw	52
  1376  06C5  2F0E               	goto	l130
  1377  06C6                     l140:
  1378                           
  1379                           ;./kbd.h: 70:         if (RA4 == 1) return '5';
  1380  06C6  1E05               	btfss	5,4	;volatile
  1381  06C7  2EC9               	goto	u921
  1382  06C8  2ECA               	goto	u920
  1383  06C9                     u921:
  1384  06C9  2ECC               	goto	l141
  1385  06CA                     u920:
  1386  06CA                     l1409:
  1387  06CA  3035               	movlw	53
  1388  06CB  2F0E               	goto	l130
  1389  06CC                     l141:
  1390                           
  1391                           ;./kbd.h: 71:         if (RA5 == 1) return '6';
  1392  06CC  1E85               	btfss	5,5	;volatile
  1393  06CD  2ECF               	goto	u931
  1394  06CE  2ED0               	goto	u930
  1395  06CF                     u931:
  1396  06CF  2ED2               	goto	l142
  1397  06D0                     u930:
  1398  06D0                     l1413:
  1399  06D0  3036               	movlw	54
  1400  06D1  2F0E               	goto	l130
  1401  06D2                     l142:
  1402                           
  1403                           ;./kbd.h: 72:         if (RC4 == 1) return '*';
  1404  06D2  1E07               	btfss	7,4	;volatile
  1405  06D3  2ED5               	goto	u941
  1406  06D4  2ED6               	goto	u940
  1407  06D5                     u941:
  1408  06D5  2ED8               	goto	l139
  1409  06D6                     u940:
  1410  06D6                     l1417:
  1411  06D6  302A               	movlw	42
  1412  06D7  2F0E               	goto	l130
  1413  06D8                     l139:	
  1414                           ;./kbd.h: 73:     }
  1415                           
  1416                           
  1417                           ;./kbd.h: 75:     RC3 = 0;
  1418  06D8  1187               	bcf	7,3	;volatile
  1419                           
  1420                           ;./kbd.h: 76:     RC2 = 0;
  1421  06D9  1107               	bcf	7,2	;volatile
  1422                           
  1423                           ;./kbd.h: 77:     RC1 = 0;
  1424  06DA  1087               	bcf	7,1	;volatile
  1425                           
  1426                           ;./kbd.h: 78:     RC0 = 1;
  1427  06DB  1407               	bsf	7,0	;volatile
  1428  06DC                     l1421:
  1429                           
  1430                           ;./kbd.h: 79:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  1431  06DC  304F               	movlw	79
  1432  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  1433  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  1434  06DF  00CB               	movwf	??_keypad_readkey
  1435  06E0                     u1287:
  1436  06E0  0BCB               	decfsz	??_keypad_readkey,f
  1437  06E1  2EE0               	goto	u1287
  1438  06E2  0000               	nop
  1439  06E3                     l1423:
  1440                           
  1441                           ;./kbd.h: 81:     if(RC3==0 && RC2==0 && RC1==0 && RC0==1) {
  1442  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  1443  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  1444  06E5  1987               	btfsc	7,3	;volatile
  1445  06E6  2EE8               	goto	u951
  1446  06E7  2EE9               	goto	u950
  1447  06E8                     u951:
  1448  06E8  2F0D               	goto	l1449
  1449  06E9                     u950:
  1450  06E9                     l1425:
  1451  06E9  1907               	btfsc	7,2	;volatile
  1452  06EA  2EEC               	goto	u961
  1453  06EB  2EED               	goto	u960
  1454  06EC                     u961:
  1455  06EC  2F0D               	goto	l1449
  1456  06ED                     u960:
  1457  06ED                     l1427:
  1458  06ED  1887               	btfsc	7,1	;volatile
  1459  06EE  2EF0               	goto	u971
  1460  06EF  2EF1               	goto	u970
  1461  06F0                     u971:
  1462  06F0  2F0D               	goto	l1449
  1463  06F1                     u970:
  1464  06F1                     l1429:
  1465  06F1  1C07               	btfss	7,0	;volatile
  1466  06F2  2EF4               	goto	u981
  1467  06F3  2EF5               	goto	u980
  1468  06F4                     u981:
  1469  06F4  2F0D               	goto	l1449
  1470  06F5                     u980:
  1471  06F5                     l1431:
  1472                           
  1473                           ;./kbd.h: 82:         if (RA3 == 1) return '7';
  1474  06F5  1D85               	btfss	5,3	;volatile
  1475  06F6  2EF8               	goto	u991
  1476  06F7  2EF9               	goto	u990
  1477  06F8                     u991:
  1478  06F8  2EFB               	goto	l145
  1479  06F9                     u990:
  1480  06F9                     l1433:
  1481  06F9  3037               	movlw	55
  1482  06FA  2F0E               	goto	l130
  1483  06FB                     l145:
  1484                           
  1485                           ;./kbd.h: 83:         if (RA4 == 1) return '8';
  1486  06FB  1E05               	btfss	5,4	;volatile
  1487  06FC  2EFE               	goto	u1001
  1488  06FD  2EFF               	goto	u1000
  1489  06FE                     u1001:
  1490  06FE  2F01               	goto	l146
  1491  06FF                     u1000:
  1492  06FF                     l1437:
  1493  06FF  3038               	movlw	56
  1494  0700  2F0E               	goto	l130
  1495  0701                     l146:
  1496                           
  1497                           ;./kbd.h: 84:         if (RA5 == 1) return '9';
  1498  0701  1E85               	btfss	5,5	;volatile
  1499  0702  2F04               	goto	u1011
  1500  0703  2F05               	goto	u1010
  1501  0704                     u1011:
  1502  0704  2F07               	goto	l147
  1503  0705                     u1010:
  1504  0705                     l1441:
  1505  0705  3039               	movlw	57
  1506  0706  2F0E               	goto	l130
  1507  0707                     l147:
  1508                           
  1509                           ;./kbd.h: 85:         if (RC4 == 1) return '/';
  1510  0707  1E07               	btfss	7,4	;volatile
  1511  0708  2F0A               	goto	u1021
  1512  0709  2F0B               	goto	u1020
  1513  070A                     u1021:
  1514  070A  2F0D               	goto	l1449
  1515  070B                     u1020:
  1516  070B                     l1445:
  1517  070B  302F               	movlw	47
  1518  070C  2F0E               	goto	l130
  1519  070D                     l1449:
  1520                           
  1521                           ;./kbd.h: 87:  return 'x';
  1522  070D  3078               	movlw	120
  1523  070E                     l130:
  1524  070E  0008               	return
  1525  070F                     __end_of_keypad_readkey:
  1526                           
  1527                           	psect	text4
  1528  0475                     __ptext4:	
  1529 ;; *************** function _inicio_presentacion *****************
  1530 ;; Defined at:
  1531 ;;		line 226 in file "main.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;		None
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;  i               2   13[BANK0 ] int 
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  1    wreg      void 
  1538 ;; Registers used:
  1539 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMMON   BANK0   BANK1
  1545 ;;      Params:         0       0       0
  1546 ;;      Locals:         0       2       0
  1547 ;;      Temps:          0       3       0
  1548 ;;      Totals:         0       5       0
  1549 ;;Total ram usage:        5 bytes
  1550 ;; Hardware stack levels used: 1
  1551 ;; Hardware stack levels required when called: 3
  1552 ;; This function calls:
  1553 ;;		_LCD_Cmd
  1554 ;;		_LCD_Goto
  1555 ;;		_LCD_Print
  1556 ;; This function is called by:
  1557 ;;		_main
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           
  1562                           ;psect for function _inicio_presentacion
  1563  0475                     _inicio_presentacion:
  1564  0475                     l1605:	
  1565                           ;incstack = 0
  1566                           ; Regs used in _inicio_presentacion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  1567                           
  1568                           
  1569                           ;main.c: 228:     LCD_Goto(1,1);
  1570  0475  1283               	bcf	3,5	;RP0=0, select bank0
  1571  0476  1303               	bcf	3,6	;RP1=0, select bank0
  1572  0477  01D1               	clrf	LCD_Goto@row
  1573  0478  0AD1               	incf	LCD_Goto@row,f
  1574  0479  3001               	movlw	1
  1575  047A  118A  23A5  118A   	fcall	_LCD_Goto
  1576  047D                     l1607:
  1577                           
  1578                           ;main.c: 229:     LCD_Print(M);
  1579  047D  3022               	movlw	(low (_M| 0))& (0+255)
  1580  047E  1283               	bcf	3,5	;RP0=0, select bank0
  1581  047F  1303               	bcf	3,6	;RP1=0, select bank0
  1582  0480  00CE               	movwf	LCD_Print@LCD_Str
  1583  0481  3000               	movlw	0
  1584  0482  00CF               	movwf	LCD_Print@LCD_Str+1
  1585  0483  118A  23D5  118A   	fcall	_LCD_Print
  1586  0486                     l1609:
  1587                           
  1588                           ;main.c: 230:     _delay((unsigned long)((50)*(32000000/4000.0)));
  1589  0486  3003               	movlw	3
  1590  0487  1283               	bcf	3,5	;RP0=0, select bank0
  1591  0488  1303               	bcf	3,6	;RP1=0, select bank0
  1592  0489  00D7               	movwf	??_inicio_presentacion+2
  1593  048A  3008               	movlw	8
  1594  048B  00D6               	movwf	??_inicio_presentacion+1
  1595  048C  3076               	movlw	118
  1596  048D  00D5               	movwf	??_inicio_presentacion
  1597  048E                     u1297:
  1598  048E  0BD5               	decfsz	??_inicio_presentacion,f
  1599  048F  2C8E               	goto	u1297
  1600  0490  0BD6               	decfsz	??_inicio_presentacion+1,f
  1601  0491  2C8E               	goto	u1297
  1602  0492  0BD7               	decfsz	??_inicio_presentacion+2,f
  1603  0493  2C8E               	goto	u1297
  1604  0494  2C95               	nop2
  1605  0495                     l1611:
  1606                           
  1607                           ;main.c: 231:     for(int i=0;i<40;i++){
  1608  0495  1283               	bcf	3,5	;RP0=0, select bank0
  1609  0496  1303               	bcf	3,6	;RP1=0, select bank0
  1610  0497  01D8               	clrf	inicio_presentacion@i
  1611  0498  01D9               	clrf	inicio_presentacion@i+1
  1612  0499                     l1617:
  1613                           
  1614                           ;main.c: 232:         LCD_Cmd(0x18);
  1615  0499  3018               	movlw	24
  1616  049A  118A  2377  118A   	fcall	_LCD_Cmd
  1617  049D                     l1619:
  1618                           
  1619                           ;main.c: 233:         _delay((unsigned long)((40)*(32000000/4000.0)));
  1620  049D  3002               	movlw	2
  1621  049E  1283               	bcf	3,5	;RP0=0, select bank0
  1622  049F  1303               	bcf	3,6	;RP1=0, select bank0
  1623  04A0  00D7               	movwf	??_inicio_presentacion+2
  1624  04A1  30A0               	movlw	160
  1625  04A2  00D6               	movwf	??_inicio_presentacion+1
  1626  04A3  3092               	movlw	146
  1627  04A4  00D5               	movwf	??_inicio_presentacion
  1628  04A5                     u1307:
  1629  04A5  0BD5               	decfsz	??_inicio_presentacion,f
  1630  04A6  2CA5               	goto	u1307
  1631  04A7  0BD6               	decfsz	??_inicio_presentacion+1,f
  1632  04A8  2CA5               	goto	u1307
  1633  04A9  0BD7               	decfsz	??_inicio_presentacion+2,f
  1634  04AA  2CA5               	goto	u1307
  1635  04AB                     l1621:
  1636                           
  1637                           ;main.c: 234:     }
  1638  04AB  3001               	movlw	1
  1639  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  1640  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  1641  04AE  07D8               	addwf	inicio_presentacion@i,f
  1642  04AF  1803               	skipnc
  1643  04B0  0AD9               	incf	inicio_presentacion@i+1,f
  1644  04B1  3000               	movlw	0
  1645  04B2  07D9               	addwf	inicio_presentacion@i+1,f
  1646  04B3                     l1623:
  1647  04B3  0859               	movf	inicio_presentacion@i+1,w
  1648  04B4  3A80               	xorlw	128
  1649  04B5  00FF               	movwf	btemp+1
  1650  04B6  3080               	movlw	128
  1651  04B7  027F               	subwf	btemp+1,w
  1652  04B8  1D03               	skipz
  1653  04B9  2CBC               	goto	u1175
  1654  04BA  3028               	movlw	40
  1655  04BB  0258               	subwf	inicio_presentacion@i,w
  1656  04BC                     u1175:
  1657  04BC  1C03               	skipc
  1658  04BD  2CBF               	goto	u1171
  1659  04BE  2CC0               	goto	u1170
  1660  04BF                     u1171:
  1661  04BF  2C99               	goto	l1617
  1662  04C0                     u1170:
  1663  04C0                     l1625:
  1664                           
  1665                           ;main.c: 235:     _delay((unsigned long)((50)*(32000000/4000.0)));
  1666  04C0  3003               	movlw	3
  1667  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  1668  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  1669  04C3  00D7               	movwf	??_inicio_presentacion+2
  1670  04C4  3008               	movlw	8
  1671  04C5  00D6               	movwf	??_inicio_presentacion+1
  1672  04C6  3076               	movlw	118
  1673  04C7  00D5               	movwf	??_inicio_presentacion
  1674  04C8                     u1317:
  1675  04C8  0BD5               	decfsz	??_inicio_presentacion,f
  1676  04C9  2CC8               	goto	u1317
  1677  04CA  0BD6               	decfsz	??_inicio_presentacion+1,f
  1678  04CB  2CC8               	goto	u1317
  1679  04CC  0BD7               	decfsz	??_inicio_presentacion+2,f
  1680  04CD  2CC8               	goto	u1317
  1681  04CE  2CCF               	nop2
  1682  04CF                     l1627:
  1683                           
  1684                           ;main.c: 236:     LCD_Cmd(0x01);
  1685  04CF  3001               	movlw	1
  1686  04D0  118A  2377  118A   	fcall	_LCD_Cmd
  1687  04D3                     l1629:
  1688                           
  1689                           ;main.c: 237:     LCD_Goto(1, 1);
  1690  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  1691  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  1692  04D5  01D1               	clrf	LCD_Goto@row
  1693  04D6  0AD1               	incf	LCD_Goto@row,f
  1694  04D7  3001               	movlw	1
  1695  04D8  118A  23A5  118A   	fcall	_LCD_Goto
  1696  04DB                     l221:
  1697  04DB  0008               	return
  1698  04DC                     __end_of_inicio_presentacion:
  1699                           
  1700                           	psect	text5
  1701  03A5                     __ptext5:	
  1702 ;; *************** function _LCD_Goto *****************
  1703 ;; Defined at:
  1704 ;;		line 87 in file "./lcd.h"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;  col             1    wreg     unsigned char 
  1707 ;;  row             1    6[BANK0 ] unsigned char 
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;  col             1    9[BANK0 ] unsigned char 
  1710 ;; Return value:  Size  Location     Type
  1711 ;;                  1    wreg      void 
  1712 ;; Registers used:
  1713 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMMON   BANK0   BANK1
  1719 ;;      Params:         0       1       0
  1720 ;;      Locals:         0       1       0
  1721 ;;      Temps:          0       2       0
  1722 ;;      Totals:         0       4       0
  1723 ;;Total ram usage:        4 bytes
  1724 ;; Hardware stack levels used: 1
  1725 ;; Hardware stack levels required when called: 2
  1726 ;; This function calls:
  1727 ;;		_LCD_Cmd
  1728 ;; This function is called by:
  1729 ;;		_main
  1730 ;;		_inicio_presentacion
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734                           
  1735                           ;psect for function _LCD_Goto
  1736  03A5                     _LCD_Goto:
  1737                           
  1738                           ;incstack = 0
  1739                           ; Regs used in _LCD_Goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1740                           ;LCD_Goto@col stored from wreg
  1741  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  1742  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  1743  03A7  00D4               	movwf	LCD_Goto@col
  1744  03A8                     l1317:
  1745                           
  1746                           ;./lcd.h: 87: void LCD_Goto(uint8_t col, uint8_t row);./lcd.h: 88: {;./lcd.h: 89:   swit
      +                          ch(row)
  1747  03A8  2BC1               	goto	l1327
  1748  03A9                     l1319:
  1749                           
  1750                           ;./lcd.h: 92:       LCD_Cmd(0xC0 + col - 1);
  1751  03A9  0854               	movf	LCD_Goto@col,w
  1752  03AA  3EBF               	addlw	191
  1753  03AB  118A  2377  118A   	fcall	_LCD_Cmd
  1754                           
  1755                           ;./lcd.h: 93:       break;
  1756  03AE  2BD4               	goto	l98
  1757  03AF                     l1321:
  1758                           
  1759                           ;./lcd.h: 95:       LCD_Cmd(0x94 + col - 1);
  1760  03AF  0854               	movf	LCD_Goto@col,w
  1761  03B0  3E93               	addlw	147
  1762  03B1  118A  2377  118A   	fcall	_LCD_Cmd
  1763                           
  1764                           ;./lcd.h: 96:       break;
  1765  03B4  2BD4               	goto	l98
  1766  03B5                     l1323:
  1767                           
  1768                           ;./lcd.h: 98:       LCD_Cmd(0xD4 + col - 1);
  1769  03B5  0854               	movf	LCD_Goto@col,w
  1770  03B6  3ED3               	addlw	211
  1771  03B7  118A  2377  118A   	fcall	_LCD_Cmd
  1772                           
  1773                           ;./lcd.h: 99:     break;
  1774  03BA  2BD4               	goto	l98
  1775  03BB                     l1325:
  1776                           
  1777                           ;./lcd.h: 101:       LCD_Cmd(0x80 + col - 1);
  1778  03BB  0854               	movf	LCD_Goto@col,w
  1779  03BC  3E7F               	addlw	127
  1780  03BD  118A  2377  118A   	fcall	_LCD_Cmd
  1781                           
  1782                           ;./lcd.h: 102:   }
  1783  03C0  2BD4               	goto	l98
  1784  03C1                     l1327:
  1785  03C1  0851               	movf	LCD_Goto@row,w
  1786  03C2  00D2               	movwf	??_LCD_Goto
  1787  03C3  01D3               	clrf	??_LCD_Goto+1
  1788                           
  1789                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1790                           ; Switch size 1, requested type "simple"
  1791                           ; Number of cases is 1, Range of values is 0 to 0
  1792                           ; switch strategies available:
  1793                           ; Name         Instructions Cycles
  1794                           ; simple_byte            4     3 (average)
  1795                           ; direct_byte            9     7 (fixed)
  1796                           ; jumptable            260     6 (fixed)
  1797                           ;	Chosen strategy is simple_byte
  1798  03C4  0853               	movf	??_LCD_Goto+1,w
  1799  03C5  3A00               	xorlw	0	; case 0
  1800  03C6  1903               	skipnz
  1801  03C7  2BC9               	goto	l1707
  1802  03C8  2BBB               	goto	l1325
  1803  03C9                     l1707:
  1804                           
  1805                           ; Switch size 1, requested type "simple"
  1806                           ; Number of cases is 3, Range of values is 2 to 4
  1807                           ; switch strategies available:
  1808                           ; Name         Instructions Cycles
  1809                           ; simple_byte           10     6 (average)
  1810                           ; direct_byte           16    10 (fixed)
  1811                           ; jumptable            263     9 (fixed)
  1812                           ;	Chosen strategy is simple_byte
  1813  03C9  0852               	movf	??_LCD_Goto,w
  1814  03CA  3A02               	xorlw	2	; case 2
  1815  03CB  1903               	skipnz
  1816  03CC  2BA9               	goto	l1319
  1817  03CD  3A01               	xorlw	1	; case 3
  1818  03CE  1903               	skipnz
  1819  03CF  2BAF               	goto	l1321
  1820  03D0  3A07               	xorlw	7	; case 4
  1821  03D1  1903               	skipnz
  1822  03D2  2BB5               	goto	l1323
  1823  03D3  2BBB               	goto	l1325
  1824  03D4                     l98:
  1825  03D4  0008               	return
  1826  03D5                     __end_of_LCD_Goto:
  1827                           
  1828                           	psect	text6
  1829  02B0                     __ptext6:	
  1830 ;; *************** function _iniciar_puertos *****************
  1831 ;; Defined at:
  1832 ;;		line 199 in file "main.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;		None
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;		None
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  1    wreg      void 
  1839 ;; Registers used:
  1840 ;;		wreg, status,2
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMMON   BANK0   BANK1
  1846 ;;      Params:         0       0       0
  1847 ;;      Locals:         0       0       0
  1848 ;;      Temps:          0       0       0
  1849 ;;      Totals:         0       0       0
  1850 ;;Total ram usage:        0 bytes
  1851 ;; Hardware stack levels used: 1
  1852 ;; This function calls:
  1853 ;;		Nothing
  1854 ;; This function is called by:
  1855 ;;		_main
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           
  1860                           ;psect for function _iniciar_puertos
  1861  02B0                     _iniciar_puertos:
  1862  02B0                     l1581:	
  1863                           ;incstack = 0
  1864                           ; Regs used in _iniciar_puertos: [wreg+status,2]
  1865                           
  1866                           
  1867                           ;main.c: 203:     PORTC=0X00;
  1868  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  1869  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  1870  02B2  0187               	clrf	7	;volatile
  1871                           
  1872                           ;main.c: 204:     PORTA = 0;
  1873  02B3  0185               	clrf	5	;volatile
  1874                           
  1875                           ;main.c: 205:     PORTB = 0;
  1876  02B4  0186               	clrf	6	;volatile
  1877                           
  1878                           ;main.c: 206:     PORTC = 0;
  1879  02B5  0187               	clrf	7	;volatile
  1880  02B6                     l1583:
  1881                           
  1882                           ;main.c: 208:     TRISCbits.TRISC0 = 0;
  1883  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  1884  02B7  1303               	bcf	3,6	;RP1=0, select bank1
  1885  02B8  1007               	bcf	7,0	;volatile
  1886  02B9                     l1585:
  1887                           
  1888                           ;main.c: 209:     TRISCbits.TRISC1 = 0;
  1889  02B9  1087               	bcf	7,1	;volatile
  1890  02BA                     l1587:
  1891                           
  1892                           ;main.c: 210:     TRISCbits.TRISC2 = 0;
  1893  02BA  1107               	bcf	7,2	;volatile
  1894  02BB                     l1589:
  1895                           
  1896                           ;main.c: 211:     TRISCbits.TRISC3 = 0;
  1897  02BB  1187               	bcf	7,3	;volatile
  1898  02BC                     l1591:
  1899                           
  1900                           ;main.c: 212:     TRISCbits.TRISC4 = 1;
  1901  02BC  1607               	bsf	7,4	;volatile
  1902  02BD                     l1593:
  1903                           
  1904                           ;main.c: 213:     TRISCbits.TRISC6 = 0;
  1905  02BD  1307               	bcf	7,6	;volatile
  1906  02BE                     l1595:
  1907                           
  1908                           ;main.c: 214:     TRISCbits.TRISC7 = 1;
  1909  02BE  1787               	bsf	7,7	;volatile
  1910  02BF                     l1597:
  1911                           
  1912                           ;main.c: 216:     TRISAbits.TRISA0 = 0;
  1913  02BF  1005               	bcf	5,0	;volatile
  1914  02C0                     l1599:
  1915                           
  1916                           ;main.c: 217:     TRISAbits.TRISA1 = 0;
  1917  02C0  1085               	bcf	5,1	;volatile
  1918  02C1                     l1601:
  1919                           
  1920                           ;main.c: 218:     TRISAbits.TRISA2 = 0;
  1921  02C1  1105               	bcf	5,2	;volatile
  1922  02C2                     l1603:
  1923                           
  1924                           ;main.c: 223:     ADCON1 = 0b00000110;
  1925  02C2  3006               	movlw	6
  1926  02C3  009F               	movwf	31	;volatile
  1927  02C4                     l216:
  1928  02C4  0008               	return
  1929  02C5                     __end_of_iniciar_puertos:
  1930                           
  1931                           	psect	text7
  1932  0323                     __ptext7:	
  1933 ;; *************** function _imprimir_valor_leds *****************
  1934 ;; Defined at:
  1935 ;;		line 107 in file "main.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;		None
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;		None
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  1    wreg      void 
  1942 ;; Registers used:
  1943 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMMON   BANK0   BANK1
  1949 ;;      Params:         0       0       0
  1950 ;;      Locals:         0       0       0
  1951 ;;      Temps:          0       0       0
  1952 ;;      Totals:         0       0       0
  1953 ;;Total ram usage:        0 bytes
  1954 ;; Hardware stack levels used: 1
  1955 ;; Hardware stack levels required when called: 3
  1956 ;; This function calls:
  1957 ;;		_LCD_Print
  1958 ;;		_Rx_Dato
  1959 ;;		_Tx_Dato
  1960 ;;		_evaluar_dato
  1961 ;; This function is called by:
  1962 ;;		_main
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           
  1967                           ;psect for function _imprimir_valor_leds
  1968  0323                     _imprimir_valor_leds:
  1969  0323                     l1569:	
  1970                           ;incstack = 0
  1971                           ; Regs used in _imprimir_valor_leds: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  1972                           
  1973                           
  1974                           ;main.c: 110:     ADRESL = Rx_Dato();
  1975  0323  118A  2287  118A   	fcall	_Rx_Dato
  1976  0326  1683               	bsf	3,5	;RP0=1, select bank1
  1977  0327  1303               	bcf	3,6	;RP1=0, select bank1
  1978  0328  009E               	movwf	30	;volatile
  1979  0329                     l1571:
  1980                           
  1981                           ;main.c: 111:     Tx_Dato(ADRESL);
  1982  0329  081E               	movf	30,w	;volatile
  1983  032A  118A  2291  118A   	fcall	_Tx_Dato
  1984  032D                     l1573:
  1985                           
  1986                           ;main.c: 112:     ADRESH = Rx_Dato();
  1987  032D  118A  2287  118A   	fcall	_Rx_Dato
  1988  0330  1283               	bcf	3,5	;RP0=0, select bank0
  1989  0331  1303               	bcf	3,6	;RP1=0, select bank0
  1990  0332  009E               	movwf	30	;volatile
  1991                           
  1992                           ;main.c: 113:     Tx_Dato(ADRESH);
  1993  0333  081E               	movf	30,w	;volatile
  1994  0334  118A  2291  118A   	fcall	_Tx_Dato
  1995  0337                     l1575:
  1996                           
  1997                           ;main.c: 115:     ADRES = (ADRESH << 8) | ADRESL;
  1998  0337  1283               	bcf	3,5	;RP0=0, select bank0
  1999  0338  1303               	bcf	3,6	;RP1=0, select bank0
  2000  0339  081E               	movf	30,w	;volatile
  2001  033A  00E5               	movwf	_ADRES+1
  2002  033B  1683               	bsf	3,5	;RP0=1, select bank1
  2003  033C  1303               	bcf	3,6	;RP1=0, select bank1
  2004  033D  081E               	movf	30,w	;volatile
  2005  033E  1283               	bcf	3,5	;RP0=0, select bank0
  2006  033F  1303               	bcf	3,6	;RP1=0, select bank0
  2007  0340  00E4               	movwf	_ADRES
  2008  0341                     l1577:
  2009                           
  2010                           ;main.c: 116:     LCD_Print("Rec ");
  2011  0341  3025               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2012  0342  00CE               	movwf	LCD_Print@LCD_Str
  2013  0343  3080               	movlw	128
  2014  0344  00CF               	movwf	LCD_Print@LCD_Str+1
  2015  0345  118A  23D5  118A   	fcall	_LCD_Print
  2016  0348                     l1579:
  2017                           
  2018                           ;main.c: 117:     evaluar_dato();
  2019  0348  118A  270F  118A   	fcall	_evaluar_dato
  2020  034B                     l195:
  2021  034B  0008               	return
  2022  034C                     __end_of_imprimir_valor_leds:
  2023                           
  2024                           	psect	text8
  2025  070F                     __ptext8:	
  2026 ;; *************** function _evaluar_dato *****************
  2027 ;; Defined at:
  2028 ;;		line 84 in file "main.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;		None
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;		None
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  1    wreg      void 
  2035 ;; Registers used:
  2036 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMMON   BANK0   BANK1
  2042 ;;      Params:         0       0       0
  2043 ;;      Locals:         0       0       0
  2044 ;;      Temps:          0       0       0
  2045 ;;      Totals:         0       0       0
  2046 ;;Total ram usage:        0 bytes
  2047 ;; Hardware stack levels used: 1
  2048 ;; Hardware stack levels required when called: 2
  2049 ;; This function calls:
  2050 ;;		_LCD_Print
  2051 ;; This function is called by:
  2052 ;;		_imprimir_valor_leds
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           
  2057                           ;psect for function _evaluar_dato
  2058  070F                     _evaluar_dato:
  2059  070F                     l1467:	
  2060                           ;incstack = 0
  2061                           ; Regs used in _evaluar_dato: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2062                           
  2063                           
  2064                           ;main.c: 86:             if(ADRES < 127)
  2065  070F  1283               	bcf	3,5	;RP0=0, select bank0
  2066  0710  1303               	bcf	3,6	;RP1=0, select bank0
  2067  0711  0865               	movf	_ADRES+1,w
  2068  0712  3A80               	xorlw	128
  2069  0713  00FF               	movwf	btemp+1
  2070  0714  3080               	movlw	128
  2071  0715  027F               	subwf	btemp+1,w
  2072  0716  1D03               	skipz
  2073  0717  2F1A               	goto	u1055
  2074  0718  307F               	movlw	127
  2075  0719  0264               	subwf	_ADRES,w
  2076  071A                     u1055:
  2077  071A  1803               	skipnc
  2078  071B  2F1D               	goto	u1051
  2079  071C  2F1E               	goto	u1050
  2080  071D                     u1051:
  2081  071D  2F27               	goto	l1471
  2082  071E                     u1050:
  2083  071E                     l1469:
  2084                           
  2085                           ;main.c: 87:                 LCD_Print("0V");
  2086  071E  3033               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2087  071F  1283               	bcf	3,5	;RP0=0, select bank0
  2088  0720  1303               	bcf	3,6	;RP1=0, select bank0
  2089  0721  00CE               	movwf	LCD_Print@LCD_Str
  2090  0722  3080               	movlw	128
  2091  0723  00CF               	movwf	LCD_Print@LCD_Str+1
  2092  0724  118A  23D5  118A   	fcall	_LCD_Print
  2093  0727                     l1471:
  2094                           
  2095                           ;main.c: 88:             if(ADRES > 127)
  2096  0727  1283               	bcf	3,5	;RP0=0, select bank0
  2097  0728  1303               	bcf	3,6	;RP1=0, select bank0
  2098  0729  0865               	movf	_ADRES+1,w
  2099  072A  3A80               	xorlw	128
  2100  072B  00FF               	movwf	btemp+1
  2101  072C  3080               	movlw	128
  2102  072D  027F               	subwf	btemp+1,w
  2103  072E  1D03               	skipz
  2104  072F  2F32               	goto	u1065
  2105  0730  3080               	movlw	128
  2106  0731  0264               	subwf	_ADRES,w
  2107  0732                     u1065:
  2108  0732  1C03               	skipc
  2109  0733  2F35               	goto	u1061
  2110  0734  2F36               	goto	u1060
  2111  0735                     u1061:
  2112  0735  2F3F               	goto	l1475
  2113  0736                     u1060:
  2114  0736                     l1473:
  2115                           
  2116                           ;main.c: 89:                 LCD_Print("625mv");
  2117  0736  301F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2118  0737  1283               	bcf	3,5	;RP0=0, select bank0
  2119  0738  1303               	bcf	3,6	;RP1=0, select bank0
  2120  0739  00CE               	movwf	LCD_Print@LCD_Str
  2121  073A  3080               	movlw	128
  2122  073B  00CF               	movwf	LCD_Print@LCD_Str+1
  2123  073C  118A  23D5  118A   	fcall	_LCD_Print
  2124  073F                     l1475:
  2125                           
  2126                           ;main.c: 90:             if(ADRES > 255)
  2127  073F  1283               	bcf	3,5	;RP0=0, select bank0
  2128  0740  1303               	bcf	3,6	;RP1=0, select bank0
  2129  0741  0865               	movf	_ADRES+1,w
  2130  0742  3A80               	xorlw	128
  2131  0743  00FF               	movwf	btemp+1
  2132  0744  3081               	movlw	129
  2133  0745  027F               	subwf	btemp+1,w
  2134  0746  1D03               	skipz
  2135  0747  2F4A               	goto	u1075
  2136  0748  3000               	movlw	0
  2137  0749  0264               	subwf	_ADRES,w
  2138  074A                     u1075:
  2139  074A  1C03               	skipc
  2140  074B  2F4D               	goto	u1071
  2141  074C  2F4E               	goto	u1070
  2142  074D                     u1071:
  2143  074D  2F57               	goto	l1479
  2144  074E                     u1070:
  2145  074E                     l1477:
  2146                           
  2147                           ;main.c: 91:                 LCD_Print("1.25V");
  2148  074E  3007               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2149  074F  1283               	bcf	3,5	;RP0=0, select bank0
  2150  0750  1303               	bcf	3,6	;RP1=0, select bank0
  2151  0751  00CE               	movwf	LCD_Print@LCD_Str
  2152  0752  3080               	movlw	128
  2153  0753  00CF               	movwf	LCD_Print@LCD_Str+1
  2154  0754  118A  23D5  118A   	fcall	_LCD_Print
  2155  0757                     l1479:
  2156                           
  2157                           ;main.c: 92:             if(ADRES > 352)
  2158  0757  1283               	bcf	3,5	;RP0=0, select bank0
  2159  0758  1303               	bcf	3,6	;RP1=0, select bank0
  2160  0759  0865               	movf	_ADRES+1,w
  2161  075A  3A80               	xorlw	128
  2162  075B  00FF               	movwf	btemp+1
  2163  075C  3081               	movlw	129
  2164  075D  027F               	subwf	btemp+1,w
  2165  075E  1D03               	skipz
  2166  075F  2F62               	goto	u1085
  2167  0760  3061               	movlw	97
  2168  0761  0264               	subwf	_ADRES,w
  2169  0762                     u1085:
  2170  0762  1C03               	skipc
  2171  0763  2F65               	goto	u1081
  2172  0764  2F66               	goto	u1080
  2173  0765                     u1081:
  2174  0765  2F6F               	goto	l1483
  2175  0766                     u1080:
  2176  0766                     l1481:
  2177                           
  2178                           ;main.c: 93:                 LCD_Print("1.97V");
  2179  0766  3019               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2180  0767  1283               	bcf	3,5	;RP0=0, select bank0
  2181  0768  1303               	bcf	3,6	;RP1=0, select bank0
  2182  0769  00CE               	movwf	LCD_Print@LCD_Str
  2183  076A  3080               	movlw	128
  2184  076B  00CF               	movwf	LCD_Print@LCD_Str+1
  2185  076C  118A  23D5  118A   	fcall	_LCD_Print
  2186  076F                     l1483:
  2187                           
  2188                           ;main.c: 94:             if(ADRES > 511)
  2189  076F  1283               	bcf	3,5	;RP0=0, select bank0
  2190  0770  1303               	bcf	3,6	;RP1=0, select bank0
  2191  0771  0865               	movf	_ADRES+1,w
  2192  0772  3A80               	xorlw	128
  2193  0773  00FF               	movwf	btemp+1
  2194  0774  3082               	movlw	130
  2195  0775  027F               	subwf	btemp+1,w
  2196  0776  1D03               	skipz
  2197  0777  2F7A               	goto	u1095
  2198  0778  3000               	movlw	0
  2199  0779  0264               	subwf	_ADRES,w
  2200  077A                     u1095:
  2201  077A  1C03               	skipc
  2202  077B  2F7D               	goto	u1091
  2203  077C  2F7E               	goto	u1090
  2204  077D                     u1091:
  2205  077D  2F87               	goto	l1487
  2206  077E                     u1090:
  2207  077E                     l1485:
  2208                           
  2209                           ;main.c: 95:                 LCD_Print("2.5V");
  2210  077E  302A               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2211  077F  1283               	bcf	3,5	;RP0=0, select bank0
  2212  0780  1303               	bcf	3,6	;RP1=0, select bank0
  2213  0781  00CE               	movwf	LCD_Print@LCD_Str
  2214  0782  3080               	movlw	128
  2215  0783  00CF               	movwf	LCD_Print@LCD_Str+1
  2216  0784  118A  23D5  118A   	fcall	_LCD_Print
  2217  0787                     l1487:
  2218                           
  2219                           ;main.c: 96:             if(ADRES > 639)
  2220  0787  1283               	bcf	3,5	;RP0=0, select bank0
  2221  0788  1303               	bcf	3,6	;RP1=0, select bank0
  2222  0789  0865               	movf	_ADRES+1,w
  2223  078A  3A80               	xorlw	128
  2224  078B  00FF               	movwf	btemp+1
  2225  078C  3082               	movlw	130
  2226  078D  027F               	subwf	btemp+1,w
  2227  078E  1D03               	skipz
  2228  078F  2F92               	goto	u1105
  2229  0790  3080               	movlw	128
  2230  0791  0264               	subwf	_ADRES,w
  2231  0792                     u1105:
  2232  0792  1C03               	skipc
  2233  0793  2F95               	goto	u1101
  2234  0794  2F96               	goto	u1100
  2235  0795                     u1101:
  2236  0795  2F9F               	goto	l1491
  2237  0796                     u1100:
  2238  0796                     l1489:
  2239                           
  2240                           ;main.c: 97:                 LCD_Print("3.12V");
  2241  0796  3001               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2242  0797  1283               	bcf	3,5	;RP0=0, select bank0
  2243  0798  1303               	bcf	3,6	;RP1=0, select bank0
  2244  0799  00CE               	movwf	LCD_Print@LCD_Str
  2245  079A  3080               	movlw	128
  2246  079B  00CF               	movwf	LCD_Print@LCD_Str+1
  2247  079C  118A  23D5  118A   	fcall	_LCD_Print
  2248  079F                     l1491:
  2249                           
  2250                           ;main.c: 98:             if(ADRES > 767)
  2251  079F  1283               	bcf	3,5	;RP0=0, select bank0
  2252  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  2253  07A1  0865               	movf	_ADRES+1,w
  2254  07A2  3A80               	xorlw	128
  2255  07A3  00FF               	movwf	btemp+1
  2256  07A4  3083               	movlw	131
  2257  07A5  027F               	subwf	btemp+1,w
  2258  07A6  1D03               	skipz
  2259  07A7  2FAA               	goto	u1115
  2260  07A8  3000               	movlw	0
  2261  07A9  0264               	subwf	_ADRES,w
  2262  07AA                     u1115:
  2263  07AA  1C03               	skipc
  2264  07AB  2FAD               	goto	u1111
  2265  07AC  2FAE               	goto	u1110
  2266  07AD                     u1111:
  2267  07AD  2FB7               	goto	l1495
  2268  07AE                     u1110:
  2269  07AE                     l1493:
  2270                           
  2271                           ;main.c: 99:                 LCD_Print("3.75V");
  2272  07AE  300D               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2273  07AF  1283               	bcf	3,5	;RP0=0, select bank0
  2274  07B0  1303               	bcf	3,6	;RP1=0, select bank0
  2275  07B1  00CE               	movwf	LCD_Print@LCD_Str
  2276  07B2  3080               	movlw	128
  2277  07B3  00CF               	movwf	LCD_Print@LCD_Str+1
  2278  07B4  118A  23D5  118A   	fcall	_LCD_Print
  2279  07B7                     l1495:
  2280                           
  2281                           ;main.c: 100:             if(ADRES > 894)
  2282  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  2283  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  2284  07B9  0865               	movf	_ADRES+1,w
  2285  07BA  3A80               	xorlw	128
  2286  07BB  00FF               	movwf	btemp+1
  2287  07BC  3083               	movlw	131
  2288  07BD  027F               	subwf	btemp+1,w
  2289  07BE  1D03               	skipz
  2290  07BF  2FC2               	goto	u1125
  2291  07C0  307F               	movlw	127
  2292  07C1  0264               	subwf	_ADRES,w
  2293  07C2                     u1125:
  2294  07C2  1C03               	skipc
  2295  07C3  2FC5               	goto	u1121
  2296  07C4  2FC6               	goto	u1120
  2297  07C5                     u1121:
  2298  07C5  2FCF               	goto	l1499
  2299  07C6                     u1120:
  2300  07C6                     l1497:
  2301                           
  2302                           ;main.c: 101:                 LCD_Print("4.37V");
  2303  07C6  3013               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2304  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  2305  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  2306  07C9  00CE               	movwf	LCD_Print@LCD_Str
  2307  07CA  3080               	movlw	128
  2308  07CB  00CF               	movwf	LCD_Print@LCD_Str+1
  2309  07CC  118A  23D5  118A   	fcall	_LCD_Print
  2310  07CF                     l1499:
  2311                           
  2312                           ;main.c: 102:             if(ADRES > 1022)
  2313  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  2314  07D0  1303               	bcf	3,6	;RP1=0, select bank0
  2315  07D1  0865               	movf	_ADRES+1,w
  2316  07D2  3A80               	xorlw	128
  2317  07D3  00FF               	movwf	btemp+1
  2318  07D4  3083               	movlw	131
  2319  07D5  027F               	subwf	btemp+1,w
  2320  07D6  1D03               	skipz
  2321  07D7  2FDA               	goto	u1135
  2322  07D8  30FF               	movlw	255
  2323  07D9  0264               	subwf	_ADRES,w
  2324  07DA                     u1135:
  2325  07DA  1C03               	skipc
  2326  07DB  2FDD               	goto	u1131
  2327  07DC  2FDE               	goto	u1130
  2328  07DD                     u1131:
  2329  07DD  2FE7               	goto	l192
  2330  07DE                     u1130:
  2331  07DE                     l1501:
  2332                           
  2333                           ;main.c: 103:                 LCD_Print("5V");
  2334  07DE  302C               	movlw	(low (((STR_5+2)-__stringbase)| (0+32768)))& (0+255)
  2335  07DF  1283               	bcf	3,5	;RP0=0, select bank0
  2336  07E0  1303               	bcf	3,6	;RP1=0, select bank0
  2337  07E1  00CE               	movwf	LCD_Print@LCD_Str
  2338  07E2  3080               	movlw	128
  2339  07E3  00CF               	movwf	LCD_Print@LCD_Str+1
  2340  07E4  118A  23D5  118A   	fcall	_LCD_Print
  2341  07E7                     l192:
  2342  07E7  0008               	return
  2343  07E8                     __end_of_evaluar_dato:
  2344                           
  2345                           	psect	text9
  2346  03D5                     __ptext9:	
  2347 ;; *************** function _LCD_Print *****************
  2348 ;; Defined at:
  2349 ;;		line 113 in file "./lcd.h"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;  LCD_Str         2    3[BANK0 ] PTR unsigned char 
  2352 ;;		 -> M(41), STR_11(4), STR_10(5), STR_9(3), 
  2353 ;;		 -> STR_8(6), STR_7(6), STR_6(6), STR_5(5), 
  2354 ;;		 -> STR_4(6), STR_3(6), STR_2(6), STR_1(3), 
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;  i               1    6[BANK0 ] unsigned char 
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  1    wreg      void 
  2359 ;; Registers used:
  2360 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMMON   BANK0   BANK1
  2366 ;;      Params:         0       2       0
  2367 ;;      Locals:         0       1       0
  2368 ;;      Temps:          0       1       0
  2369 ;;      Totals:         0       4       0
  2370 ;;Total ram usage:        4 bytes
  2371 ;; Hardware stack levels used: 1
  2372 ;; Hardware stack levels required when called: 1
  2373 ;; This function calls:
  2374 ;;		_LCD_Write_Nibble
  2375 ;; This function is called by:
  2376 ;;		_evaluar_dato
  2377 ;;		_imprimir_valor_leds
  2378 ;;		_main
  2379 ;;		_inicio_presentacion
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           
  2384                           ;psect for function _LCD_Print
  2385  03D5                     _LCD_Print:
  2386  03D5                     l1307:	
  2387                           ;incstack = 0
  2388                           ; Regs used in _LCD_Print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2389                           
  2390                           
  2391                           ;./lcd.h: 113: void LCD_Print(char* LCD_Str);./lcd.h: 114: {;./lcd.h: 115:   uint8_t i =
      +                           0;
  2392  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  2393  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  2394  03D7  01D1               	clrf	LCD_Print@i
  2395  03D8                     l1309:
  2396                           
  2397                           ;./lcd.h: 116:   RS = 1;
  2398  03D8  1468               	bsf	_RS/(0+8),_RS& (0+7)
  2399                           
  2400                           ;./lcd.h: 117:   while(LCD_Str[i] != '\0')
  2401  03D9  2C04               	goto	l1315
  2402  03DA                     l1311:
  2403                           
  2404                           ;./lcd.h: 118:   {;./lcd.h: 119:     LCD_Write_Nibble(LCD_Str[i] >> 4);
  2405  03DA  0851               	movf	LCD_Print@i,w
  2406  03DB  074E               	addwf	LCD_Print@LCD_Str,w
  2407  03DC  0084               	movwf	4
  2408  03DD  084F               	movf	LCD_Print@LCD_Str+1,w
  2409  03DE  1803               	skipnc
  2410  03DF  0A4F               	incf	LCD_Print@LCD_Str+1,w
  2411  03E0  00FF               	movwf	btemp+1
  2412  03E1  118A  2002  118A   	fcall	stringtab
  2413  03E4  00D0               	movwf	??_LCD_Print
  2414  03E5  3004               	movlw	4
  2415  03E6                     u695:
  2416  03E6  1003               	clrc
  2417  03E7  0CD0               	rrf	??_LCD_Print,f
  2418  03E8  3EFF               	addlw	-1
  2419  03E9  1D03               	skipz
  2420  03EA  2BE6               	goto	u695
  2421  03EB  0850               	movf	??_LCD_Print,w
  2422  03EC  118A  2414  118A   	fcall	_LCD_Write_Nibble
  2423                           
  2424                           ;./lcd.h: 120:     LCD_Write_Nibble(LCD_Str[i++] );
  2425  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2426  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2427  03F1  0851               	movf	LCD_Print@i,w
  2428  03F2  074E               	addwf	LCD_Print@LCD_Str,w
  2429  03F3  0084               	movwf	4
  2430  03F4  084F               	movf	LCD_Print@LCD_Str+1,w
  2431  03F5  1803               	skipnc
  2432  03F6  0A4F               	incf	LCD_Print@LCD_Str+1,w
  2433  03F7  00FF               	movwf	btemp+1
  2434  03F8  118A  2002  118A   	fcall	stringtab
  2435  03FB  118A  2414  118A   	fcall	_LCD_Write_Nibble
  2436  03FE                     l1313:
  2437  03FE  3001               	movlw	1
  2438  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  2439  0400  1303               	bcf	3,6	;RP1=0, select bank0
  2440  0401  00D0               	movwf	??_LCD_Print
  2441  0402  0850               	movf	??_LCD_Print,w
  2442  0403  07D1               	addwf	LCD_Print@i,f
  2443  0404                     l1315:
  2444                           
  2445                           ;./lcd.h: 117:   while(LCD_Str[i] != '\0')
  2446  0404  0851               	movf	LCD_Print@i,w
  2447  0405  074E               	addwf	LCD_Print@LCD_Str,w
  2448  0406  0084               	movwf	4
  2449  0407  084F               	movf	LCD_Print@LCD_Str+1,w
  2450  0408  1803               	skipnc
  2451  0409  0A4F               	incf	LCD_Print@LCD_Str+1,w
  2452  040A  00FF               	movwf	btemp+1
  2453  040B  118A  2002  118A   	fcall	stringtab
  2454  040E  3A00               	xorlw	0
  2455  040F  1D03               	skipz
  2456  0410  2C12               	goto	u701
  2457  0411  2C13               	goto	u700
  2458  0412                     u701:
  2459  0412  2BDA               	goto	l1311
  2460  0413                     u700:
  2461  0413                     l107:
  2462  0413  0008               	return
  2463  0414                     __end_of_LCD_Print:
  2464                           
  2465                           	psect	text10
  2466  0291                     __ptext10:	
  2467 ;; *************** function _Tx_Dato *****************
  2468 ;; Defined at:
  2469 ;;		line 62 in file "main.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;  X               1    wreg     unsigned char 
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;  X               1    0[BANK0 ] unsigned char 
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  1    wreg      void 
  2476 ;; Registers used:
  2477 ;;		wreg
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMMON   BANK0   BANK1
  2483 ;;      Params:         0       0       0
  2484 ;;      Locals:         0       1       0
  2485 ;;      Temps:          0       0       0
  2486 ;;      Totals:         0       1       0
  2487 ;;Total ram usage:        1 bytes
  2488 ;; Hardware stack levels used: 1
  2489 ;; This function calls:
  2490 ;;		Nothing
  2491 ;; This function is called by:
  2492 ;;		_imprimir_valor_leds
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           
  2497                           ;psect for function _Tx_Dato
  2498  0291                     _Tx_Dato:
  2499                           
  2500                           ;incstack = 0
  2501                           ; Regs used in _Tx_Dato: [wreg]
  2502                           ;Tx_Dato@X stored from wreg
  2503  0291  1283               	bcf	3,5	;RP0=0, select bank0
  2504  0292  1303               	bcf	3,6	;RP1=0, select bank0
  2505  0293  00CB               	movwf	Tx_Dato@X
  2506  0294                     l1453:
  2507                           
  2508                           ;main.c: 62: void Tx_Dato(unsigned char X);main.c: 63: {;main.c: 64:     PIR1bits.TXIF =
      +                           0;
  2509  0294  120C               	bcf	12,4	;volatile
  2510  0295                     l1455:
  2511                           
  2512                           ;main.c: 65:     TXREG = X;
  2513  0295  084B               	movf	Tx_Dato@X,w
  2514  0296  0099               	movwf	25	;volatile
  2515  0297                     l1457:
  2516                           
  2517                           ;main.c: 69:                 if(TXSTAbits.TRMT == 0)
  2518  0297  1683               	bsf	3,5	;RP0=1, select bank1
  2519  0298  1303               	bcf	3,6	;RP1=0, select bank1
  2520  0299  1898               	btfsc	24,1	;volatile
  2521  029A  2A9C               	goto	u1031
  2522  029B  2A9D               	goto	u1030
  2523  029C                     u1031:
  2524  029C  2A9E               	goto	l175
  2525  029D                     u1030:
  2526  029D  2A97               	goto	l1457
  2527  029E                     l175:
  2528  029E  0008               	return
  2529  029F                     __end_of_Tx_Dato:
  2530                           
  2531                           	psect	text11
  2532  0287                     __ptext11:	
  2533 ;; *************** function _Rx_Dato *****************
  2534 ;; Defined at:
  2535 ;;		line 75 in file "main.c"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;		None
  2538 ;; Auto vars:     Size  Location     Type
  2539 ;;		None
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  1    wreg      unsigned char 
  2542 ;; Registers used:
  2543 ;;		wreg
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMMON   BANK0   BANK1
  2549 ;;      Params:         0       0       0
  2550 ;;      Locals:         0       0       0
  2551 ;;      Temps:          0       0       0
  2552 ;;      Totals:         0       0       0
  2553 ;;Total ram usage:        0 bytes
  2554 ;; Hardware stack levels used: 1
  2555 ;; This function calls:
  2556 ;;		Nothing
  2557 ;; This function is called by:
  2558 ;;		_imprimir_valor_leds
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562                           
  2563                           ;psect for function _Rx_Dato
  2564  0287                     _Rx_Dato:
  2565  0287                     l178:	
  2566                           ;incstack = 0
  2567                           ; Regs used in _Rx_Dato: [wreg]
  2568                           ;main.c: 77:     wait:
  2569                           
  2570                           
  2571                           ;main.c: 78:         if(PIR1bits.RCIF == 0)
  2572  0287  1283               	bcf	3,5	;RP0=0, select bank0
  2573  0288  1303               	bcf	3,6	;RP1=0, select bank0
  2574  0289  1A8C               	btfsc	12,5	;volatile
  2575  028A  2A8C               	goto	u1041
  2576  028B  2A8D               	goto	u1040
  2577  028C                     u1041:
  2578  028C  2A8E               	goto	l179
  2579  028D                     u1040:
  2580  028D  2A87               	goto	l178
  2581  028E                     l179:
  2582                           
  2583                           ;main.c: 80:     PIR1bits.RCIF = 0;
  2584  028E  128C               	bcf	12,5	;volatile
  2585  028F                     l1463:
  2586                           
  2587                           ;main.c: 81:     return RCREG;
  2588  028F  081A               	movf	26,w	;volatile
  2589  0290                     l180:
  2590  0290  0008               	return
  2591  0291                     __end_of_Rx_Dato:
  2592                           
  2593                           	psect	text12
  2594  02C5                     __ptext12:	
  2595 ;; *************** function _LCD_PutC *****************
  2596 ;; Defined at:
  2597 ;;		line 106 in file "./lcd.h"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;  LCD_Char        1    wreg     unsigned char 
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;  LCD_Char        1    4[BANK0 ] unsigned char 
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  1    wreg      void 
  2604 ;; Registers used:
  2605 ;;		wreg, status,2, status,0, pclath, cstack
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMMON   BANK0   BANK1
  2611 ;;      Params:         0       0       0
  2612 ;;      Locals:         0       1       0
  2613 ;;      Temps:          0       1       0
  2614 ;;      Totals:         0       2       0
  2615 ;;Total ram usage:        2 bytes
  2616 ;; Hardware stack levels used: 1
  2617 ;; Hardware stack levels required when called: 1
  2618 ;; This function calls:
  2619 ;;		_LCD_Write_Nibble
  2620 ;; This function is called by:
  2621 ;;		_main
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           
  2626                           ;psect for function _LCD_PutC
  2627  02C5                     _LCD_PutC:
  2628                           
  2629                           ;incstack = 0
  2630                           ; Regs used in _LCD_PutC: [wreg+status,2+status,0+pclath+cstack]
  2631                           ;LCD_PutC@LCD_Char stored from wreg
  2632  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  2633  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  2634  02C7  00CF               	movwf	LCD_PutC@LCD_Char
  2635  02C8                     l1503:
  2636                           
  2637                           ;./lcd.h: 106: void LCD_PutC(char LCD_Char);./lcd.h: 107: {;./lcd.h: 108:   RS = 1;
  2638  02C8  1468               	bsf	_RS/(0+8),_RS& (0+7)
  2639  02C9                     l1505:
  2640                           
  2641                           ;./lcd.h: 109:   LCD_Write_Nibble(LCD_Char >> 4);
  2642  02C9  084F               	movf	LCD_PutC@LCD_Char,w
  2643  02CA  00CE               	movwf	??_LCD_PutC
  2644  02CB  3004               	movlw	4
  2645  02CC                     u1145:
  2646  02CC  1003               	clrc
  2647  02CD  0CCE               	rrf	??_LCD_PutC,f
  2648  02CE  3EFF               	addlw	-1
  2649  02CF  1D03               	skipz
  2650  02D0  2ACC               	goto	u1145
  2651  02D1  084E               	movf	??_LCD_PutC,w
  2652  02D2  118A  2414  118A   	fcall	_LCD_Write_Nibble
  2653                           
  2654                           ;./lcd.h: 110:   LCD_Write_Nibble(LCD_Char );
  2655  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  2656  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  2657  02D7  084F               	movf	LCD_PutC@LCD_Char,w
  2658  02D8  118A  2414  118A   	fcall	_LCD_Write_Nibble
  2659  02DB                     l101:
  2660  02DB  0008               	return
  2661  02DC                     __end_of_LCD_PutC:
  2662                           
  2663                           	psect	text13
  2664  057A                     __ptext13:	
  2665 ;; *************** function _LCD_Begin *****************
  2666 ;; Defined at:
  2667 ;;		line 124 in file "./lcd.h"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;		None
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;		None
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  1    wreg      void 
  2674 ;; Registers used:
  2675 ;;		wreg, status,2, status,0, pclath, cstack
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMMON   BANK0   BANK1
  2681 ;;      Params:         0       0       0
  2682 ;;      Locals:         0       0       0
  2683 ;;      Temps:          0       3       0
  2684 ;;      Totals:         0       3       0
  2685 ;;Total ram usage:        3 bytes
  2686 ;; Hardware stack levels used: 1
  2687 ;; Hardware stack levels required when called: 2
  2688 ;; This function calls:
  2689 ;;		_LCD_Cmd
  2690 ;; This function is called by:
  2691 ;;		_main
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           
  2696                           ;psect for function _LCD_Begin
  2697  057A                     _LCD_Begin:
  2698  057A                     l1507:	
  2699                           ;incstack = 0
  2700                           ; Regs used in _LCD_Begin: [wreg+status,2+status,0+pclath+cstack]
  2701                           
  2702                           
  2703                           ;./lcd.h: 126:   RS = 0;
  2704  057A  1283               	bcf	3,5	;RP0=0, select bank0
  2705  057B  1303               	bcf	3,6	;RP1=0, select bank0
  2706  057C  1068               	bcf	_RS/(0+8),_RS& (0+7)
  2707                           
  2708                           ;./lcd.h: 127:   PORTAbits.RA0 = 0;
  2709  057D  1005               	bcf	5,0	;volatile
  2710                           
  2711                           ;./lcd.h: 128:   PORTAbits.RA1 = 0;
  2712  057E  1085               	bcf	5,1	;volatile
  2713                           
  2714                           ;./lcd.h: 129:   PORTAbits.RA2 = 0;
  2715  057F  1105               	bcf	5,2	;volatile
  2716                           
  2717                           ;./lcd.h: 134:   PORTBbits.RB4 = 0;
  2718  0580  1206               	bcf	6,4	;volatile
  2719                           
  2720                           ;./lcd.h: 135:   PORTBbits.RB5 = 0;
  2721  0581  1286               	bcf	6,5	;volatile
  2722                           
  2723                           ;./lcd.h: 136:   PORTBbits.RB6 = 0;
  2724  0582  1306               	bcf	6,6	;volatile
  2725                           
  2726                           ;./lcd.h: 137:   PORTBbits.RB7 = 0;
  2727  0583  1386               	bcf	6,7	;volatile
  2728                           
  2729                           ;./lcd.h: 138:   TRISAbits.TRISA0 = 0;
  2730  0584  1683               	bsf	3,5	;RP0=1, select bank1
  2731  0585  1303               	bcf	3,6	;RP1=0, select bank1
  2732  0586  1005               	bcf	5,0	;volatile
  2733                           
  2734                           ;./lcd.h: 139:   TRISAbits.TRISA1 = 0;
  2735  0587  1085               	bcf	5,1	;volatile
  2736                           
  2737                           ;./lcd.h: 140:   TRISAbits.TRISA2 = 0;
  2738  0588  1105               	bcf	5,2	;volatile
  2739                           
  2740                           ;./lcd.h: 145:   TRISBbits.TRISB4 = 0;
  2741  0589  1206               	bcf	6,4	;volatile
  2742                           
  2743                           ;./lcd.h: 146:   TRISBbits.TRISB5 = 0;
  2744  058A  1286               	bcf	6,5	;volatile
  2745                           
  2746                           ;./lcd.h: 147:   TRISBbits.TRISB6 = 0;
  2747  058B  1306               	bcf	6,6	;volatile
  2748                           
  2749                           ;./lcd.h: 148:   TRISBbits.TRISB7 = 0;
  2750  058C  1386               	bcf	6,7	;volatile
  2751  058D                     l1509:
  2752                           
  2753                           ;./lcd.h: 149:   _delay((unsigned long)((40)*(32000000/4000.0)));
  2754  058D  3002               	movlw	2
  2755  058E  1283               	bcf	3,5	;RP0=0, select bank0
  2756  058F  1303               	bcf	3,6	;RP1=0, select bank0
  2757  0590  00D3               	movwf	??_LCD_Begin+2
  2758  0591  30A0               	movlw	160
  2759  0592  00D2               	movwf	??_LCD_Begin+1
  2760  0593  3092               	movlw	146
  2761  0594  00D1               	movwf	??_LCD_Begin
  2762  0595                     u1327:
  2763  0595  0BD1               	decfsz	??_LCD_Begin,f
  2764  0596  2D95               	goto	u1327
  2765  0597  0BD2               	decfsz	??_LCD_Begin+1,f
  2766  0598  2D95               	goto	u1327
  2767  0599  0BD3               	decfsz	??_LCD_Begin+2,f
  2768  059A  2D95               	goto	u1327
  2769  059B                     l1511:
  2770                           
  2771                           ;./lcd.h: 150:   LCD_Cmd(3);
  2772  059B  3003               	movlw	3
  2773  059C  118A  2377  118A   	fcall	_LCD_Cmd
  2774  059F                     l1513:
  2775                           
  2776                           ;./lcd.h: 151:   _delay((unsigned long)((5)*(32000000/4000.0)));
  2777  059F  3034               	movlw	52
  2778  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  2779  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  2780  05A2  00D2               	movwf	??_LCD_Begin+1
  2781  05A3  30F1               	movlw	241
  2782  05A4  00D1               	movwf	??_LCD_Begin
  2783  05A5                     u1337:
  2784  05A5  0BD1               	decfsz	??_LCD_Begin,f
  2785  05A6  2DA5               	goto	u1337
  2786  05A7  0BD2               	decfsz	??_LCD_Begin+1,f
  2787  05A8  2DA5               	goto	u1337
  2788  05A9  0000               	nop
  2789                           
  2790                           ;./lcd.h: 152:   LCD_Cmd(3);
  2791  05AA  3003               	movlw	3
  2792  05AB  118A  2377  118A   	fcall	_LCD_Cmd
  2793  05AE                     l1515:
  2794                           
  2795                           ;./lcd.h: 153:   _delay((unsigned long)((5)*(32000000/4000.0)));
  2796  05AE  3034               	movlw	52
  2797  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  2798  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  2799  05B1  00D2               	movwf	??_LCD_Begin+1
  2800  05B2  30F1               	movlw	241
  2801  05B3  00D1               	movwf	??_LCD_Begin
  2802  05B4                     u1347:
  2803  05B4  0BD1               	decfsz	??_LCD_Begin,f
  2804  05B5  2DB4               	goto	u1347
  2805  05B6  0BD2               	decfsz	??_LCD_Begin+1,f
  2806  05B7  2DB4               	goto	u1347
  2807  05B8  0000               	nop
  2808  05B9                     l1517:
  2809                           
  2810                           ;./lcd.h: 154:   LCD_Cmd(3);
  2811  05B9  3003               	movlw	3
  2812  05BA  118A  2377  118A   	fcall	_LCD_Cmd
  2813                           
  2814                           ;./lcd.h: 155:   _delay((unsigned long)((5)*(32000000/4000.0)));
  2815  05BD  3034               	movlw	52
  2816  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  2817  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  2818  05C0  00D2               	movwf	??_LCD_Begin+1
  2819  05C1  30F1               	movlw	241
  2820  05C2  00D1               	movwf	??_LCD_Begin
  2821  05C3                     u1357:
  2822  05C3  0BD1               	decfsz	??_LCD_Begin,f
  2823  05C4  2DC3               	goto	u1357
  2824  05C5  0BD2               	decfsz	??_LCD_Begin+1,f
  2825  05C6  2DC3               	goto	u1357
  2826  05C7  0000               	nop
  2827  05C8                     l1519:
  2828                           
  2829                           ;./lcd.h: 156:   LCD_Cmd(0x02);
  2830  05C8  3002               	movlw	2
  2831  05C9  118A  2377  118A   	fcall	_LCD_Cmd
  2832  05CC                     l1521:
  2833                           
  2834                           ;./lcd.h: 157:   _delay((unsigned long)((5)*(32000000/4000.0)));
  2835  05CC  3034               	movlw	52
  2836  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  2837  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  2838  05CF  00D2               	movwf	??_LCD_Begin+1
  2839  05D0  30F1               	movlw	241
  2840  05D1  00D1               	movwf	??_LCD_Begin
  2841  05D2                     u1367:
  2842  05D2  0BD1               	decfsz	??_LCD_Begin,f
  2843  05D3  2DD2               	goto	u1367
  2844  05D4  0BD2               	decfsz	??_LCD_Begin+1,f
  2845  05D5  2DD2               	goto	u1367
  2846  05D6  0000               	nop
  2847                           
  2848                           ;./lcd.h: 158:   LCD_Cmd(0x20 | (2 << 2));
  2849  05D7  3028               	movlw	40
  2850  05D8  118A  2377  118A   	fcall	_LCD_Cmd
  2851  05DB                     l1523:
  2852                           
  2853                           ;./lcd.h: 159:   _delay((unsigned long)((50)*(32000000/4000.0)));
  2854  05DB  3003               	movlw	3
  2855  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  2856  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  2857  05DE  00D3               	movwf	??_LCD_Begin+2
  2858  05DF  3008               	movlw	8
  2859  05E0  00D2               	movwf	??_LCD_Begin+1
  2860  05E1  3076               	movlw	118
  2861  05E2  00D1               	movwf	??_LCD_Begin
  2862  05E3                     u1377:
  2863  05E3  0BD1               	decfsz	??_LCD_Begin,f
  2864  05E4  2DE3               	goto	u1377
  2865  05E5  0BD2               	decfsz	??_LCD_Begin+1,f
  2866  05E6  2DE3               	goto	u1377
  2867  05E7  0BD3               	decfsz	??_LCD_Begin+2,f
  2868  05E8  2DE3               	goto	u1377
  2869  05E9  2DEA               	nop2
  2870  05EA                     l1525:
  2871                           
  2872                           ;./lcd.h: 160:   LCD_Cmd(0x0C);
  2873  05EA  300C               	movlw	12
  2874  05EB  118A  2377  118A   	fcall	_LCD_Cmd
  2875                           
  2876                           ;./lcd.h: 161:   _delay((unsigned long)((50)*(32000000/4000.0)));
  2877  05EE  3003               	movlw	3
  2878  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  2879  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  2880  05F1  00D3               	movwf	??_LCD_Begin+2
  2881  05F2  3008               	movlw	8
  2882  05F3  00D2               	movwf	??_LCD_Begin+1
  2883  05F4  3076               	movlw	118
  2884  05F5  00D1               	movwf	??_LCD_Begin
  2885  05F6                     u1387:
  2886  05F6  0BD1               	decfsz	??_LCD_Begin,f
  2887  05F7  2DF6               	goto	u1387
  2888  05F8  0BD2               	decfsz	??_LCD_Begin+1,f
  2889  05F9  2DF6               	goto	u1387
  2890  05FA  0BD3               	decfsz	??_LCD_Begin+2,f
  2891  05FB  2DF6               	goto	u1387
  2892  05FC  2DFD               	nop2
  2893  05FD                     l1527:
  2894                           
  2895                           ;./lcd.h: 162:   LCD_Cmd(0x01);
  2896  05FD  3001               	movlw	1
  2897  05FE  118A  2377  118A   	fcall	_LCD_Cmd
  2898  0601                     l1529:
  2899                           
  2900                           ;./lcd.h: 163:   _delay((unsigned long)((50)*(32000000/4000.0)));
  2901  0601  3003               	movlw	3
  2902  0602  1283               	bcf	3,5	;RP0=0, select bank0
  2903  0603  1303               	bcf	3,6	;RP1=0, select bank0
  2904  0604  00D3               	movwf	??_LCD_Begin+2
  2905  0605  3008               	movlw	8
  2906  0606  00D2               	movwf	??_LCD_Begin+1
  2907  0607  3076               	movlw	118
  2908  0608  00D1               	movwf	??_LCD_Begin
  2909  0609                     u1397:
  2910  0609  0BD1               	decfsz	??_LCD_Begin,f
  2911  060A  2E09               	goto	u1397
  2912  060B  0BD2               	decfsz	??_LCD_Begin+1,f
  2913  060C  2E09               	goto	u1397
  2914  060D  0BD3               	decfsz	??_LCD_Begin+2,f
  2915  060E  2E09               	goto	u1397
  2916  060F  2E10               	nop2
  2917                           
  2918                           ;./lcd.h: 164:   LCD_Cmd(0x04 | 0x02);
  2919  0610  3006               	movlw	6
  2920  0611  118A  2377  118A   	fcall	_LCD_Cmd
  2921  0614                     l1531:
  2922                           
  2923                           ;./lcd.h: 165:   _delay((unsigned long)((50)*(32000000/4000.0)));
  2924  0614  3003               	movlw	3
  2925  0615  1283               	bcf	3,5	;RP0=0, select bank0
  2926  0616  1303               	bcf	3,6	;RP1=0, select bank0
  2927  0617  00D3               	movwf	??_LCD_Begin+2
  2928  0618  3008               	movlw	8
  2929  0619  00D2               	movwf	??_LCD_Begin+1
  2930  061A  3076               	movlw	118
  2931  061B  00D1               	movwf	??_LCD_Begin
  2932  061C                     u1407:
  2933  061C  0BD1               	decfsz	??_LCD_Begin,f
  2934  061D  2E1C               	goto	u1407
  2935  061E  0BD2               	decfsz	??_LCD_Begin+1,f
  2936  061F  2E1C               	goto	u1407
  2937  0620  0BD3               	decfsz	??_LCD_Begin+2,f
  2938  0621  2E1C               	goto	u1407
  2939  0622  2E23               	nop2
  2940  0623                     l1533:
  2941                           
  2942                           ;./lcd.h: 166:   LCD_Cmd(0x0F);
  2943  0623  300F               	movlw	15
  2944  0624  118A  2377  118A   	fcall	_LCD_Cmd
  2945                           
  2946                           ;./lcd.h: 167:   _delay((unsigned long)((50)*(32000000/4000.0)));
  2947  0627  3003               	movlw	3
  2948  0628  1283               	bcf	3,5	;RP0=0, select bank0
  2949  0629  1303               	bcf	3,6	;RP1=0, select bank0
  2950  062A  00D3               	movwf	??_LCD_Begin+2
  2951  062B  3008               	movlw	8
  2952  062C  00D2               	movwf	??_LCD_Begin+1
  2953  062D  3076               	movlw	118
  2954  062E  00D1               	movwf	??_LCD_Begin
  2955  062F                     u1417:
  2956  062F  0BD1               	decfsz	??_LCD_Begin,f
  2957  0630  2E2F               	goto	u1417
  2958  0631  0BD2               	decfsz	??_LCD_Begin+1,f
  2959  0632  2E2F               	goto	u1417
  2960  0633  0BD3               	decfsz	??_LCD_Begin+2,f
  2961  0634  2E2F               	goto	u1417
  2962  0635  2E36               	nop2
  2963  0636                     l110:
  2964  0636  0008               	return
  2965  0637                     __end_of_LCD_Begin:
  2966                           
  2967                           	psect	text14
  2968  0377                     __ptext14:	
  2969 ;; *************** function _LCD_Cmd *****************
  2970 ;; Defined at:
  2971 ;;		line 78 in file "./lcd.h"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;  Command         1    wreg     unsigned char 
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;  Command         1    5[BANK0 ] unsigned char 
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  1    wreg      void 
  2978 ;; Registers used:
  2979 ;;		wreg, status,2, status,0, pclath, cstack
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMMON   BANK0   BANK1
  2985 ;;      Params:         0       0       0
  2986 ;;      Locals:         0       1       0
  2987 ;;      Temps:          0       2       0
  2988 ;;      Totals:         0       3       0
  2989 ;;Total ram usage:        3 bytes
  2990 ;; Hardware stack levels used: 1
  2991 ;; Hardware stack levels required when called: 1
  2992 ;; This function calls:
  2993 ;;		_LCD_Write_Nibble
  2994 ;; This function is called by:
  2995 ;;		_LCD_Goto
  2996 ;;		_LCD_Begin
  2997 ;;		_main
  2998 ;;		_inicio_presentacion
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002                           
  3003                           ;psect for function _LCD_Cmd
  3004  0377                     _LCD_Cmd:
  3005                           
  3006                           ;incstack = 0
  3007                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3008                           ;LCD_Cmd@Command stored from wreg
  3009  0377  1283               	bcf	3,5	;RP0=0, select bank0
  3010  0378  1303               	bcf	3,6	;RP1=0, select bank0
  3011  0379  00D0               	movwf	LCD_Cmd@Command
  3012  037A                     l1297:
  3013                           
  3014                           ;./lcd.h: 78: void LCD_Cmd(uint8_t Command);./lcd.h: 79: {;./lcd.h: 80:   RS = 0;
  3015  037A  1068               	bcf	_RS/(0+8),_RS& (0+7)
  3016  037B                     l1299:
  3017                           
  3018                           ;./lcd.h: 81:   LCD_Write_Nibble(Command >> 4);
  3019  037B  0850               	movf	LCD_Cmd@Command,w
  3020  037C  00CE               	movwf	??_LCD_Cmd
  3021  037D  3004               	movlw	4
  3022  037E                     u665:
  3023  037E  1003               	clrc
  3024  037F  0CCE               	rrf	??_LCD_Cmd,f
  3025  0380  3EFF               	addlw	-1
  3026  0381  1D03               	skipz
  3027  0382  2B7E               	goto	u665
  3028  0383  084E               	movf	??_LCD_Cmd,w
  3029  0384  118A  2414  118A   	fcall	_LCD_Write_Nibble
  3030                           
  3031                           ;./lcd.h: 82:   LCD_Write_Nibble(Command);
  3032  0387  1283               	bcf	3,5	;RP0=0, select bank0
  3033  0388  1303               	bcf	3,6	;RP1=0, select bank0
  3034  0389  0850               	movf	LCD_Cmd@Command,w
  3035  038A  118A  2414  118A   	fcall	_LCD_Write_Nibble
  3036  038D                     l1301:
  3037                           
  3038                           ;./lcd.h: 83:   if((Command == 0x01) || (Command == 0x02))
  3039  038D  1283               	bcf	3,5	;RP0=0, select bank0
  3040  038E  1303               	bcf	3,6	;RP1=0, select bank0
  3041  038F  0350               	decf	LCD_Cmd@Command,w
  3042  0390  1903               	btfsc	3,2
  3043  0391  2B93               	goto	u671
  3044  0392  2B94               	goto	u670
  3045  0393                     u671:
  3046  0393  2B9A               	goto	l1305
  3047  0394                     u670:
  3048  0394                     l1303:
  3049  0394  3002               	movlw	2
  3050  0395  0650               	xorwf	LCD_Cmd@Command,w
  3051  0396  1D03               	btfss	3,2
  3052  0397  2B99               	goto	u681
  3053  0398  2B9A               	goto	u680
  3054  0399                     u681:
  3055  0399  2BA4               	goto	l89
  3056  039A                     u680:
  3057  039A                     l1305:
  3058                           
  3059                           ;./lcd.h: 84:     _delay((unsigned long)((2)*(32000000/4000.0)));
  3060  039A  3015               	movlw	21
  3061  039B  1283               	bcf	3,5	;RP0=0, select bank0
  3062  039C  1303               	bcf	3,6	;RP1=0, select bank0
  3063  039D  00CF               	movwf	??_LCD_Cmd+1
  3064  039E  30C6               	movlw	198
  3065  039F  00CE               	movwf	??_LCD_Cmd
  3066  03A0                     u1427:
  3067  03A0  0BCE               	decfsz	??_LCD_Cmd,f
  3068  03A1  2BA0               	goto	u1427
  3069  03A2  0BCF               	decfsz	??_LCD_Cmd+1,f
  3070  03A3  2BA0               	goto	u1427
  3071  03A4                     l89:
  3072  03A4  0008               	return
  3073  03A5                     __end_of_LCD_Cmd:
  3074                           
  3075                           	psect	text15
  3076  0414                     __ptext15:	
  3077 ;; *************** function _LCD_Write_Nibble *****************
  3078 ;; Defined at:
  3079 ;;		line 61 in file "./lcd.h"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;  n               1    wreg     unsigned char 
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;  n               1    2[BANK0 ] unsigned char 
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  1    wreg      void 
  3086 ;; Registers used:
  3087 ;;		wreg, status,2, status,0
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMMON   BANK0   BANK1
  3093 ;;      Params:         0       0       0
  3094 ;;      Locals:         0       1       0
  3095 ;;      Temps:          0       2       0
  3096 ;;      Totals:         0       3       0
  3097 ;;Total ram usage:        3 bytes
  3098 ;; Hardware stack levels used: 1
  3099 ;; This function calls:
  3100 ;;		Nothing
  3101 ;; This function is called by:
  3102 ;;		_LCD_Cmd
  3103 ;;		_LCD_PutC
  3104 ;;		_LCD_Print
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           
  3109                           ;psect for function _LCD_Write_Nibble
  3110  0414                     _LCD_Write_Nibble:
  3111                           
  3112                           ;incstack = 0
  3113                           ; Regs used in _LCD_Write_Nibble: [wreg+status,2+status,0]
  3114                           ;LCD_Write_Nibble@n stored from wreg
  3115  0414  1283               	bcf	3,5	;RP0=0, select bank0
  3116  0415  1303               	bcf	3,6	;RP1=0, select bank0
  3117  0416  00CD               	movwf	LCD_Write_Nibble@n
  3118  0417                     l1281:
  3119                           
  3120                           ;./lcd.h: 61: void LCD_Write_Nibble(uint8_t n);./lcd.h: 62: {;./lcd.h: 63:   PORTAbits.R
      +                          A0 = RS;
  3121  0417  1868               	btfsc	_RS/(0+8),_RS& (0+7)
  3122  0418  2C1A               	goto	u621
  3123  0419  2C1E               	goto	u620
  3124  041A                     u621:
  3125  041A  1283               	bcf	3,5	;RP0=0, select bank0
  3126  041B  1303               	bcf	3,6	;RP1=0, select bank0
  3127  041C  1405               	bsf	5,0	;volatile
  3128  041D  2C21               	goto	u634
  3129  041E                     u620:
  3130  041E  1283               	bcf	3,5	;RP0=0, select bank0
  3131  041F  1303               	bcf	3,6	;RP1=0, select bank0
  3132  0420  1005               	bcf	5,0	;volatile
  3133  0421                     u634:
  3134  0421                     l1283:
  3135                           
  3136                           ;./lcd.h: 64:   PORTBbits.RB4 = n & 0x01;
  3137  0421  084D               	movf	LCD_Write_Nibble@n,w
  3138  0422  3901               	andlw	1
  3139  0423  00CB               	movwf	??_LCD_Write_Nibble
  3140  0424  0ECB               	swapf	??_LCD_Write_Nibble,f
  3141  0425  0806               	movf	6,w	;volatile
  3142  0426  064B               	xorwf	??_LCD_Write_Nibble,w
  3143  0427  39EF               	andlw	-17
  3144  0428  064B               	xorwf	??_LCD_Write_Nibble,w
  3145  0429  0086               	movwf	6	;volatile
  3146                           
  3147                           ;./lcd.h: 65:   PORTBbits.RB5 = (n >> 1) & 0x01;
  3148  042A  084D               	movf	LCD_Write_Nibble@n,w
  3149  042B  00CB               	movwf	??_LCD_Write_Nibble
  3150  042C  1003               	clrc
  3151  042D  0C4B               	rrf	??_LCD_Write_Nibble,w
  3152  042E  3901               	andlw	1
  3153  042F  00CC               	movwf	??_LCD_Write_Nibble+1
  3154  0430  0ECC               	swapf	??_LCD_Write_Nibble+1,f
  3155  0431  0DCC               	rlf	??_LCD_Write_Nibble+1,f
  3156  0432  0806               	movf	6,w	;volatile
  3157  0433  064C               	xorwf	??_LCD_Write_Nibble+1,w
  3158  0434  39DF               	andlw	-33
  3159  0435  064C               	xorwf	??_LCD_Write_Nibble+1,w
  3160  0436  0086               	movwf	6	;volatile
  3161                           
  3162                           ;./lcd.h: 66:   PORTBbits.RB6 = (n >> 2) & 0x01;
  3163  0437  084D               	movf	LCD_Write_Nibble@n,w
  3164  0438  00CB               	movwf	??_LCD_Write_Nibble
  3165  0439  3002               	movlw	2
  3166  043A                     u645:
  3167  043A  1003               	clrc
  3168  043B  0CCB               	rrf	??_LCD_Write_Nibble,f
  3169  043C  3EFF               	addlw	-1
  3170  043D  1D03               	skipz
  3171  043E  2C3A               	goto	u645
  3172  043F  084B               	movf	??_LCD_Write_Nibble,w
  3173  0440  3901               	andlw	1
  3174  0441  00CC               	movwf	??_LCD_Write_Nibble+1
  3175  0442  0ECC               	swapf	??_LCD_Write_Nibble+1,f
  3176  0443  0DCC               	rlf	??_LCD_Write_Nibble+1,f
  3177  0444  0DCC               	rlf	??_LCD_Write_Nibble+1,f
  3178  0445  0806               	movf	6,w	;volatile
  3179  0446  064C               	xorwf	??_LCD_Write_Nibble+1,w
  3180  0447  39BF               	andlw	-65
  3181  0448  064C               	xorwf	??_LCD_Write_Nibble+1,w
  3182  0449  0086               	movwf	6	;volatile
  3183                           
  3184                           ;./lcd.h: 67:   PORTBbits.RB7 = (n >> 3) & 0x01;
  3185  044A  084D               	movf	LCD_Write_Nibble@n,w
  3186  044B  00CB               	movwf	??_LCD_Write_Nibble
  3187  044C  3003               	movlw	3
  3188  044D                     u655:
  3189  044D  1003               	clrc
  3190  044E  0CCB               	rrf	??_LCD_Write_Nibble,f
  3191  044F  3EFF               	addlw	-1
  3192  0450  1D03               	skipz
  3193  0451  2C4D               	goto	u655
  3194  0452  084B               	movf	??_LCD_Write_Nibble,w
  3195  0453  3901               	andlw	1
  3196  0454  00CC               	movwf	??_LCD_Write_Nibble+1
  3197  0455  0CCC               	rrf	??_LCD_Write_Nibble+1,f
  3198  0456  0CCC               	rrf	??_LCD_Write_Nibble+1,f
  3199  0457  0806               	movf	6,w	;volatile
  3200  0458  064C               	xorwf	??_LCD_Write_Nibble+1,w
  3201  0459  397F               	andlw	-129
  3202  045A  064C               	xorwf	??_LCD_Write_Nibble+1,w
  3203  045B  0086               	movwf	6	;volatile
  3204  045C                     l1285:
  3205                           
  3206                           ;./lcd.h: 70:   PORTAbits.RA2 = 0;
  3207  045C  1105               	bcf	5,2	;volatile
  3208  045D                     l1287:
  3209                           
  3210                           ;./lcd.h: 71:   _delay((unsigned long)((1)*(32000000/4000000.0)));
  3211  045D  2C5E               	nop2	;2 cycle nop
  3212  045E  2C5F               	nop2	;2 cycle nop
  3213  045F  2C60               	nop2	;2 cycle nop
  3214  0460  2C61               	nop2	;2 cycle nop
  3215  0461                     l1289:
  3216                           
  3217                           ;./lcd.h: 72:   PORTAbits.RA2 = 1;
  3218  0461  1283               	bcf	3,5	;RP0=0, select bank0
  3219  0462  1303               	bcf	3,6	;RP1=0, select bank0
  3220  0463  1505               	bsf	5,2	;volatile
  3221  0464                     l1291:
  3222                           
  3223                           ;./lcd.h: 73:   _delay((unsigned long)((1)*(32000000/4000000.0)));
  3224  0464  2C65               	nop2	;2 cycle nop
  3225  0465  2C66               	nop2	;2 cycle nop
  3226  0466  2C67               	nop2	;2 cycle nop
  3227  0467  2C68               	nop2	;2 cycle nop
  3228  0468                     l1293:
  3229                           
  3230                           ;./lcd.h: 74:   PORTAbits.RA2 = 0;
  3231  0468  1283               	bcf	3,5	;RP0=0, select bank0
  3232  0469  1303               	bcf	3,6	;RP1=0, select bank0
  3233  046A  1105               	bcf	5,2	;volatile
  3234  046B                     l1295:
  3235                           
  3236                           ;./lcd.h: 75:   _delay((unsigned long)((100)*(32000000/4000000.0)));
  3237  046B  309F               	movlw	159
  3238  046C  1283               	bcf	3,5	;RP0=0, select bank0
  3239  046D  1303               	bcf	3,6	;RP1=0, select bank0
  3240  046E  00CB               	movwf	??_LCD_Write_Nibble
  3241  046F                     u1437:
  3242  046F  2C70               	nop2
  3243  0470  0BCB               	decfsz	??_LCD_Write_Nibble,f
  3244  0471  2C6F               	goto	u1437
  3245  0472  2C73               	nop2
  3246  0473  0000               	nop
  3247  0474                     l83:
  3248  0474  0008               	return
  3249  0475                     __end_of_LCD_Write_Nibble:
  3250  007E                     btemp	set	126	;btemp
  3251  007E                     wtemp0	set	126
  3252                           
  3253                           	psect	config
  3254                           
  3255                           ;Config register CONFIG @ 0x2007
  3256                           ;	Oscillator Selection bits
  3257                           ;	FOSC = XT, XT oscillator
  3258                           ;	Watchdog Timer Enable bit
  3259                           ;	WDTE = OFF, WDT disabled
  3260                           ;	Power-up Timer Enable bit
  3261                           ;	PWRTE = OFF, PWRT disabled
  3262                           ;	FLASH Program Memory Code Protection bits
  3263                           ;	CP = OFF, Code protection off
  3264                           ;	Brown-out Reset Enable bit
  3265                           ;	BOREN = OFF, BOR disabled
  3266                           ;	Low Voltage In-Circuit Serial Programming Enable bit
  3267                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3268                           ;	Data EE Memory Code Protection
  3269                           ;	CPD = OFF, Code Protection off
  3270                           ;	FLASH Program Memory Write Enable
  3271                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
  3272                           ;	In-Circuit Debugger Mode bit
  3273                           ;	DEBUG = 0x1, unprogrammed default
  3274  2007                     	org	8199
  3275  2007  3D39               	dw	15673

Data Sizes:
    Strings     53
    Constant    0
    Data        43
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94     21      73
    BANK1            94      0       0

Pointer List with Targets:

    LCD_Print@LCD_Str	PTR unsigned char  size(2) Largest target is 41
		 -> M(BANK0[41]), STR_11(CODE[4]), STR_10(CODE[5]), STR_9(CODE[3]), 
		 -> STR_8(CODE[6]), STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[5]), 
		 -> STR_4(CODE[6]), STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_inicio_presentacion
    _keypad_getkey->_keypad_readkey
    _inicio_presentacion->_LCD_Goto
    _LCD_Goto->_LCD_Cmd
    _imprimir_valor_leds->_LCD_Print
    _evaluar_dato->_LCD_Print
    _LCD_Print->_LCD_Write_Nibble
    _LCD_PutC->_LCD_Write_Nibble
    _LCD_Begin->_LCD_Cmd
    _LCD_Cmd->_LCD_Write_Nibble

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    6497
                                             15 BANK0      6     6      0
                          _LCD_Begin
                            _LCD_Cmd
                           _LCD_Goto
                          _LCD_Print
                           _LCD_PutC
                _imprimir_valor_leds
                    _iniciar_puertos
                _inicio_presentacion
                      _keypad_getkey
                _set_configuraciones
 ---------------------------------------------------------------------------------
 (1) _set_configuraciones                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keypad_getkey                                        2     2      0      46
                                              1 BANK0      2     2      0
                     _keypad_readkey
 ---------------------------------------------------------------------------------
 (2) _keypad_readkey                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicio_presentacion                                  5     5      0    1870
                                             10 BANK0      5     5      0
                            _LCD_Cmd
                           _LCD_Goto
                          _LCD_Print
 ---------------------------------------------------------------------------------
 (2) _LCD_Goto                                             4     3      1     514
                                              6 BANK0      4     3      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _iniciar_puertos                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _imprimir_valor_leds                                  0     0      0    2290
                          _LCD_Print
                            _Rx_Dato
                            _Tx_Dato
                       _evaluar_dato
 ---------------------------------------------------------------------------------
 (2) _evaluar_dato                                         0     0      0    1134
                          _LCD_Print
 ---------------------------------------------------------------------------------
 (2) _LCD_Print                                            4     2      2    1134
                                              3 BANK0      4     2      2
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (2) _Tx_Dato                                              1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Rx_Dato                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_PutC                                             2     2      0     132
                                              3 BANK0      2     2      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            3     3      0     176
                                              6 BANK0      3     3      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0     176
                                              3 BANK0      3     3      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Nibble                                     3     3      0      88
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Begin
     _LCD_Cmd
       _LCD_Write_Nibble
   _LCD_Cmd
   _LCD_Goto
     _LCD_Cmd
   _LCD_Print
     _LCD_Write_Nibble
   _LCD_PutC
     _LCD_Write_Nibble
   _imprimir_valor_leds
     _LCD_Print
     _Rx_Dato
     _Tx_Dato
     _evaluar_dato
       _LCD_Print
   _iniciar_puertos
   _inicio_presentacion
     _LCD_Cmd
     _LCD_Goto
     _LCD_Print
   _keypad_getkey
     _keypad_readkey
   _set_configuraciones

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               5E      0       0       6        0.0%
BITBANK1            5E      0       0       5        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               5E     15      49       4       77.7%
BITBANK0            5E      0       1       3        1.1%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      49       8        0.0%
ABS                  0      0      49       7        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon May 17 21:03:01 2021

                           _M 0022                             _X 0020                             pc 0002  
                          l83 0474                            l89 03A4                            _GO 00FA  
                          l98 03D4                            _RS 0340                            fsr 0004  
         _set_configuraciones 02FD                           l101 02DB                           l110 0636  
                         l130 070E                           l107 0413                           l131 0662  
                         l140 06C6                           l132 0668                           l221 04DB  
                         l141 06CC                           l142 06D2                           l134 06A3  
                         l135 0691                           l216 02C4                           l136 0697  
                         l128 066E                           l145 06FB                           l137 069D  
                         l129 065C                           l146 0701                           l170 0322  
                         l147 0707                           l139 06D8                           l180 0290  
                         l157 02FC                           l175 029E                           l192 07E7  
                         l178 0287                           l179 028E                           l195 034B  
                         _ECO 0066                           _RA3 002B                           _RC0 0038  
                         _RA4 002C                           _RC1 0039                           _RA5 002D  
                         _RC2 003A                           _RC3 003B                           _RC4 003C  
                         u620 041E                           u700 0413                           u621 041A  
                         u701 0412                           u710 064A                           u711 0649  
                         u800 0683                           u720 064E                           u801 0682  
                         u721 064D                           u634 0421                           u810 0687  
                         u730 0652                           u811 0686                           u731 0651  
                         u900 06C0                           u820 068B                           u740 0656  
                         u645 043A                           u901 06BF                           u821 068A  
                         u741 0655                           u670 0394                           u910 06C4  
                         u830 068F                           u750 065A                           u655 044D  
                         u671 0393                           u911 06C3                           u831 068E  
                         u751 0659                           u680 039A                           u920 06CA  
                         u840 0695                           u760 0660                           u681 0399  
                         u665 037E                           u921 06C9                           u841 0694  
                         u761 065F                           u930 06D0                           u850 069B  
                         u770 0666                           u931 06CF                           u851 069A  
                         u771 0665                           u940 06D6                           u860 06A1  
                         u780 066C                           u941 06D5                           u861 06A0  
                         u781 066B                           u950 06E9                           u870 06B4  
                         u790 067F                           u695 03E6                           u951 06E8  
                         u871 06B3                           u791 067E                           u960 06ED  
                         u880 06B8                           u961 06EC                           u881 06B7  
                         u970 06F1                           u890 06BC                           u971 06F0  
                         u891 06BB                           u980 06F5                           u981 06F4  
                         u990 06F9                           u991 06F8              ?_iniciar_puertos 004B  
                         fsr0 0004                           indf 0000               __end_of_LCD_Cmd 03A5  
                        l1301 038D                          l1303 0394                          l1311 03DA  
                        l1305 039A                          l1313 03FE                          l1321 03AF  
                        l1401 06BC                          l1315 0404                          l1307 03D5  
                        l1323 03B5                          l1403 06C0                          l1309 03D8  
                        l1501 07DE                          l1325 03BB                          l1317 03A8  
                        l1421 06DC                          l1413 06D0                          l1405 06C4  
                        l1341 064A                          l1511 059B                          l1503 02C8  
                        l1319 03A9                          l1327 03C1                          l1431 06F5  
                        l1423 06E3                          l1343 064E                          l1335 0637  
                        l1281 0417                          l1521 05CC                          l1513 059F  
                        l1505 02C9                          l1601 02C1                          l1441 0705  
                        l1433 06F9                          l1425 06E9                          l1417 06D6  
                        l1409 06CA                          l1361 066C                          l1353 0660  
                        l1345 0652                          l1337 063D                          l1291 0464  
                        l1283 0421                          l1531 0614                          l1523 05DB  
                        l1515 05AE                          l1507 057A                          l1603 02C2  
                        l1611 0495                          l1427 06ED                          l1371 0683  
                        l1347 0656                          l1339 0644                          l1293 0468  
                        l1285 045C                          l1533 0623                          l1525 05EA  
                        l1517 05B9                          l1509 058D                          l1453 0294  
                        l1621 04AB                          l1605 0475                          l1445 070B  
                        l1437 06FF                          l1429 06F1                          l1381 0695  
                        l1373 0687                          l1365 0672                          l1357 0666  
                        l1349 065A                          l1541 02F1                          l1295 046B  
                        l1287 045D                          l1527 05FD                          l1519 05C8  
                        l1463 028F                          l1455 0295                          l1471 0727  
                        l1623 04B3                          l1607 047D                          l1375 068B  
                        l1367 0679                          l1543 02F9                          l1535 02DC  
                        l1551 030C                          l1631 04DC                          l1289 0461  
                        l1297 037A                          l1529 0601                          l1457 0297  
                        l1481 0766                          l1473 0736                          l1625 04C0  
                        l1617 0499                          l1609 0486                          l1449 070D  
                        l1393 06A7                          l1385 069B                          l1377 068F  
                        l1369 067F                          l1537 02E3                          l1561 0319  
                        l1553 030F                          l1641 04EC                          l1633 04E0  
                        l1299 037B                          l1491 079F                          l1483 076F  
                        l1475 073F                          l1467 070F                          l1571 0329  
                        l1707 03C9                          l1627 04CF                          l1619 049D  
                        l1395 06AE                          l1539 02EB                          l1563 031A  
                        l1555 0312                          l1547 02FD                          l1651 0522  
                        l1643 04FA                          l1635 04E3                          l1493 07AE  
                        l1485 077E                          l1477 074E                          l1469 071E  
                        l1573 032D                          l1581 02B0                          l1629 04D3  
                        l1397 06B4                          l1389 06A1                          l1565 031B  
                        l1557 0315                          l1549 0305                          l1661 0544  
                        l1653 052A                          l1645 0502                          l1637 04E6  
                        l1495 07B7                          l1487 0787                          l1479 0757  
                        l1575 0337                          l1591 02BC                          l1583 02B6  
                        l1399 06B8                          l1567 031E                          l1559 0316  
                        l1671 055C                          l1655 0530                          l1663 054B  
                        l1647 0510                          l1639 04E9                          l1497 07C6  
                        l1489 0796                          l1577 0341                          l1569 0323  
                        l1593 02BD                          l1585 02B9                          l1673 0560  
                        l1665 0551                          l1657 0536                          l1649 0513  
                        l1499 07CF                          l1579 0348                          l1595 02BE  
                        l1587 02BA                          l1667 0553                          l1675 0569  
                        l1659 053A                          l1597 02BF                          l1589 02BB  
                        l1669 0558                          l1599 02C0             ?_LCD_Write_Nibble 004B  
                        _ADIF 0066                          _ADON 00F8                          _CHS0 00FB  
                        _CHS1 00FC                          _CHS2 00FD                          STR_1 0044  
                        STR_2 0030                          STR_3 0018                          STR_4 002A  
                        STR_5 003B                          STR_6 0012                          STR_7 001E  
                        STR_8 0024                          STR_9 003D  __size_of_imprimir_valor_leds 0029  
                        u1000 06FF                          u1001 06FE                          u1010 0705  
                        u1011 0704                          u1100 0796                          u1020 070B  
                        u1101 0795                          u1021 070A                          u1030 029D  
                        u1110 07AE                          u1031 029C                          u1111 07AD  
                        u1040 028D                          u1120 07C6                          u1200 0536  
                        u1041 028C                          u1121 07C5                          u1105 0792  
                        u1201 0535                          u1130 07DE                          u1050 071E  
                        u1210 0551                          u1131 07DD                          u1115 07AA  
                        u1051 071D                          u1211 0550                          u1060 0736  
                        u1125 07C2                          u1061 0735                          u1070 074E  
                        u1150 02F1                          u1135 07DA                          u1071 074D  
                        u1055 071A                          u1151 02F0                          u1080 0766  
                        u1160 02F9                          u1145 02CC                          u1081 0765  
                        u1065 0732                          u1161 02F8                          u1090 077E  
                        u1170 04C0                          u1091 077D                          u1075 074A  
                        u1171 04BF                          u1307 04A5                          u1227 04F4  
                        u1180 0522                          u1085 0762                          u1317 04C8  
                        u1181 0521                          u1237 050A                          u1190 0530  
                        u1407 061C                          u1327 0595                          u1095 077A  
                        u1175 04BC                          u1247 0571                          u1191 052F  
                        u1417 062F                          u1337 05A5                          u1257 0641  
                        u1185 051E                          u1427 03A0                          u1347 05B4  
                        u1267 0676                          u1437 046F                          u1357 05C3  
                        u1277 06AB                          u1367 05D2                          u1287 06E0  
                        u1377 05E3                          u1297 048E                          u1387 05F6  
                        u1397 0609                          _TMR0 0001          ?_set_configuraciones 004B  
          ??_LCD_Write_Nibble 004B                          _main 04DC            __size_of_LCD_Begin 00BD  
                        btemp 007E            __size_of_LCD_Print 003F                          start 0000  
                 LCD_Goto@col 0054                   LCD_Goto@row 0051              __end_of_LCD_Goto 03D5  
             __end_of_Rx_Dato 0291              __end_of_LCD_PutC 02DC               __end_of_Tx_Dato 029F  
                       ?_main 004B                         _ADRES 0064                         STR_10 0036  
                       STR_11 0040                         _RCREG 001A                         _RCSTA 0018  
                       _SPBRG 0099                         _PORTA 0005                         _PORTB 0006  
                       _PORTC 0007                         _TXREG 0019                         _TXSTA 0098  
            ??_keypad_readkey 004B                         main@c 005F                         main@i 005D  
                       pclath 000A         ??_set_configuraciones 0000                         status 0003  
                       wtemp0 007E                 ?_evaluar_dato 004B               __initialization 07E8  
                __end_of_main 057A                        ??_main 005A             __end_of_LCD_Begin 0637  
                   ??_LCD_Cmd 004E             __end_of_LCD_Print 0414                        _ADCON0 001F  
                      _ADCON1 009F                        _ADRESH 001E                        _ADRESL 009E  
              ??_evaluar_dato 0000                     ??_Rx_Dato 0000                     ??_Tx_Dato 0000  
                      _number 0060       __end_of__initialization 07FD                     ?_LCD_Goto 0051  
                   ?_LCD_PutC 004B        __size_of_keypad_getkey 0021  __size_of_inicio_presentacion 0067  
              __pcstackCOMMON 0000                  __pidataBANK0 034C           _imprimir_valor_leds 0323  
              LCD_Cmd@Command 0050          ?_imprimir_valor_leds 004B                    __pbssBANK0 0060  
                  ??_LCD_Goto 0052                    ??_LCD_PutC 004E                    __pmaintext 04DC  
   __size_of_LCD_Write_Nibble 0061          __end_of_evaluar_dato 07E8                 _keypad_getkey 02DC  
                     _LCD_Cmd 0377         ??_imprimir_valor_leds 0000                    __stringtab 0002  
    __size_of_iniciar_puertos 0015                       _Rx_Dato 0287                       _Tx_Dato 0291  
            LCD_PutC@LCD_Char 004F                       __ptext1 02FD                       __ptext2 02DC  
                     __ptext3 0637                       __ptext4 0475                       __ptext5 03A5  
                     __ptext6 02B0                       __ptext7 0323                       __ptext8 070F  
                     __ptext9 03D5                ?_keypad_getkey 004B   __end_of_set_configuraciones 0323  
                   _LCD_Begin 057A                     _LCD_Print 03D5          end_of_initialization 07FD  
                   _RCSTAbits 0018             LCD_Write_Nibble@n 004D                     _PORTAbits 0005  
                   _PORTBbits 0006                     _TRISAbits 0085                     _TRISBbits 0086  
                   _TRISCbits 0087                    ?_LCD_Begin 004B           _inicio_presentacion 0475  
                  ?_LCD_Print 004E                     _TXSTAbits 0098       __size_of_keypad_readkey 00D8  
           __size_of_LCD_Goto 0030             __size_of_LCD_PutC 0017             ??_iniciar_puertos 0000  
        ?_inicio_presentacion 004B              _LCD_Write_Nibble 0414         __size_of_evaluar_dato 00D9  
                  LCD_Print@i 0051               ??_keypad_getkey 004C                 __pbitbssBANK0 0340  
         start_initialization 07E8          inicio_presentacion@i 0058                  _evaluar_dato 070F  
       ??_inicio_presentacion 0055                    init_fetch0 029F                   __pdataBANK0 0020  
                    ?_LCD_Cmd 004B                     ___latbits 0001                 __pcstackBANK0 004B  
                 ??_LCD_Begin 0051                   ??_LCD_Print 0050                      ?_Rx_Dato 004B  
                    ?_Tx_Dato 004B              LCD_Print@LCD_Str 004E                     __pstrings 0002  
 __end_of_imprimir_valor_leds 034C                      _LCD_Goto 03A5                      _LCD_PutC 02C5  
              _keypad_readkey 0637                      _PIR1bits 000C                   __stringbase 0011  
            __size_of_LCD_Cmd 002E      __end_of_LCD_Write_Nibble 0475               _iniciar_puertos 02B0  
      __end_of_keypad_readkey 070F  __size_of_set_configuraciones 0026                      Tx_Dato@X 004B  
            __size_of_Rx_Dato 000A              __size_of_Tx_Dato 000E            __end_of__stringtab 0012  
                    __ptext10 0291                      __ptext11 0287                      __ptext12 02C5  
                    __ptext13 057A                      __ptext14 0377                      __ptext15 0414  
             ?_keypad_readkey 004B                 __size_of_main 009E         __end_of_keypad_getkey 02FD  
     __end_of_iniciar_puertos 02C5              keypad_getkey@key 004D                      init_ram0 02A3  
 __end_of_inicio_presentacion 04DC                     stringcode 000C                    _OPTION_REG 0081  
                    stringdir 000C                      stringtab 0002  
