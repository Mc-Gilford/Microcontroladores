

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon May 17 19:13:01 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F873
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F873 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  010E                     	;# 
   113  010F                     	;# 
   114  018C                     	;# 
   115  018D                     	;# 
   116  0000                     	;# 
   117  0001                     	;# 
   118  0002                     	;# 
   119  0003                     	;# 
   120  0004                     	;# 
   121  0005                     	;# 
   122  0006                     	;# 
   123  0007                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  0091                     	;# 
   157  0092                     	;# 
   158  0093                     	;# 
   159  0094                     	;# 
   160  0098                     	;# 
   161  0099                     	;# 
   162  009E                     	;# 
   163  009F                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170                           
   171                           	psect	idataBANK0
   172  042A                     __pidataBANK0:
   173                           
   174                           ;initializer for _X
   175  042A  342F               	retlw	47
   176  042B  3400               	retlw	0
   177                           
   178                           ;initializer for _M
   179  042C  3445               	retlw	69
   180  042D  346C               	retlw	108
   181  042E  3420               	retlw	32
   182  042F  3441               	retlw	65
   183  0430  3444               	retlw	68
   184  0431  3443               	retlw	67
   185  0432  3420               	retlw	32
   186  0433  3479               	retlw	121
   187  0434  3420               	retlw	32
   188  0435  3465               	retlw	101
   189  0436  346C               	retlw	108
   190  0437  3420               	retlw	32
   191  0438  3455               	retlw	85
   192  0439  3441               	retlw	65
   193  043A  3452               	retlw	82
   194  043B  3454               	retlw	84
   195  043C  3420               	retlw	32
   196  043D  344A               	retlw	74
   197  043E  346F               	retlw	111
   198  043F  3473               	retlw	115
   199  0440  3465               	retlw	101
   200  0441  3420               	retlw	32
   201  0442  3452               	retlw	82
   202  0443  3464               	retlw	100
   203  0444  3467               	retlw	103
   204  0445  347A               	retlw	122
   205  0446  3420               	retlw	32
   206  0447  3479               	retlw	121
   207  0448  3420               	retlw	32
   208  0449  344B               	retlw	75
   209  044A  3461               	retlw	97
   210  044B  3472               	retlw	114
   211  044C  346C               	retlw	108
   212  044D  3461               	retlw	97
   213  044E  3420               	retlw	32
   214  044F  3452               	retlw	82
   215  0450  3465               	retlw	101
   216  0451  3479               	retlw	121
   217  0452  3465               	retlw	101
   218  0453  3473               	retlw	115
   219  0454  3400               	retlw	0
   220  0006                     _PORTB	set	6
   221  0005                     _PORTA	set	5
   222  0007                     _PORTC	set	7
   223  001E                     _ADRESH	set	30
   224  001A                     _RCREG	set	26
   225  0019                     _TXREG	set	25
   226  000C                     _PIR1bits	set	12
   227  0018                     _RCSTAbits	set	24
   228  0018                     _RCSTA	set	24
   229  0001                     _TMR0	set	1
   230  001F                     _ADCON0	set	31
   231  0006                     _PORTBbits	set	6
   232  0005                     _PORTAbits	set	5
   233  00FA                     _GO	set	250
   234  00F8                     _ADON	set	248
   235  00FB                     _CHS0	set	251
   236  00FC                     _CHS1	set	252
   237  00FD                     _CHS2	set	253
   238  0066                     _ADIF	set	102
   239  003C                     _RC4	set	60
   240  002D                     _RA5	set	45
   241  002C                     _RA4	set	44
   242  002B                     _RA3	set	43
   243  0038                     _RC0	set	56
   244  0039                     _RC1	set	57
   245  003A                     _RC2	set	58
   246  003B                     _RC3	set	59
   247  0087                     _TRISCbits	set	135
   248  009E                     _ADRESL	set	158
   249  0099                     _SPBRG	set	153
   250  0098                     _TXSTAbits	set	152
   251  0098                     _TXSTA	set	152
   252  0081                     _OPTION_REG	set	129
   253  009F                     _ADCON1	set	159
   254  0086                     _TRISBbits	set	134
   255  0085                     _TRISAbits	set	133
   256                           
   257                           	psect	strings
   258  0002                     __pstrings:
   259  0002                     stringtab:
   260  0002                     __stringtab:
   261                           
   262                           ;	String table - string pointers are 1 byte each
   263  0002  1BFF               	btfsc	btemp+1,7
   264  0003  280C               	ljmp	stringcode
   265  0004  1383               	bcf	3,7
   266  0005  187F               	btfsc	btemp+1,0
   267  0006  1783               	bsf	3,7
   268  0007  0800               	movf	0,w
   269  0008  0A84               	incf	4,f
   270  0009  1903               	skipnz
   271  000A  0AFF               	incf	btemp+1,f
   272  000B  0008               	return
   273  000C                     stringcode:
   274  000C                     stringdir:
   275  000C  3000               	movlw	high stringdir
   276  000D  008A               	movwf	10
   277  000E  0804               	movf	4,w
   278  000F  0A84               	incf	4,f
   279  0010  0782               	addwf	2,f
   280  0011                     __stringbase:
   281  0011  3400               	retlw	0
   282  0012                     __end_of__stringtab:
   283  0012                     STR_1:
   284  0012  3452               	retlw	82	;'R'
   285  0013  3465               	retlw	101	;'e'
   286  0014  3463               	retlw	99	;'c'
   287  0015  3420               	retlw	32	;' '
   288  0016  3400               	retlw	0
   289  0017                     STR_3:
   290  0017  3445               	retlw	69	;'E'
   291  0018  346E               	retlw	110	;'n'
   292  0019  3476               	retlw	118	;'v'
   293  001A  3400               	retlw	0
   294  001B                     STR_2:
   295  001B  3420               	retlw	32	;' '
   296  001C  347C               	retlw	124	;'|'
   297  001D  3400               	retlw	0
   298                           
   299                           	psect	cinit
   300  07E8                     start_initialization:	
   301                           ; #config settings
   302                           
   303  07E8                     __initialization:
   304                           
   305                           ; Initialize objects allocated to BANK0
   306  07E8  1383               	bcf	3,7	;select IRP bank0
   307  07E9  304B               	movlw	low (__pdataBANK0+43)
   308  07EA  00FD               	movwf	btemp+-1
   309  07EB  3004               	movlw	high __pidataBANK0
   310  07EC  00FE               	movwf	btemp
   311  07ED  302A               	movlw	low __pidataBANK0
   312  07EE  00FF               	movwf	btemp+1
   313  07EF  3020               	movlw	low __pdataBANK0
   314  07F0  0084               	movwf	4
   315  07F1  118A  23AA  118A   	fcall	init_ram0
   316                           
   317                           ; Clear objects allocated to BANK0
   318  07F4  01E0               	clrf	__pbssBANK0& (0+127)
   319  07F5  01E1               	clrf	(__pbssBANK0+1)& (0+127)
   320  07F6  01E2               	clrf	(__pbssBANK0+2)& (0+127)
   321  07F7  01E3               	clrf	(__pbssBANK0+3)& (0+127)
   322  07F8  01E4               	clrf	(__pbssBANK0+4)& (0+127)
   323  07F9  01E5               	clrf	(__pbssBANK0+5)& (0+127)
   324  07FA  01E6               	clrf	(__pbssBANK0+6)& (0+127)
   325  07FB  01E7               	clrf	(__pbssBANK0+7)& (0+127)
   326                           
   327                           ; Clear objects allocated to BITBANK0
   328  07FC  01E8               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   329  07FD                     end_of_initialization:	
   330                           ;End of C runtime variable initialization code
   331                           
   332  07FD                     __end_of__initialization:
   333  07FD  0183               	clrf	3
   334  07FE  118A  2DC6         	ljmp	_main	;jump to C main() function
   335                           
   336                           	psect	bitbssBANK0
   337  0340                     __pbitbssBANK0:
   338  0340                     _RS:
   339  0340                     	ds	1
   340                           
   341                           	psect	bssBANK0
   342  0060                     __pbssBANK0:
   343  0060                     _number:
   344  0060                     	ds	4
   345  0064                     _ADRES:
   346  0064                     	ds	2
   347  0066                     _ECO:
   348  0066                     	ds	2
   349                           
   350                           	psect	dataBANK0
   351  0020                     __pdataBANK0:
   352  0020                     _X:
   353  0020                     	ds	2
   354  0022                     _M:
   355  0022                     	ds	41
   356                           
   357                           	psect	inittext
   358  03A6                     init_fetch0:	
   359                           ;	Called with low address in FSR and high address in W
   360                           
   361  03A6  087E               	movf	btemp,w
   362  03A7  008A               	movwf	10
   363  03A8  087F               	movf	btemp+1,w
   364  03A9  0082               	movwf	2
   365  03AA                     init_ram0:	
   366                           ;Called with:
   367                           ;	high address of idata address in btemp 
   368                           ;	low address of idata address in btemp+1 
   369                           ;	low address of data in FSR
   370                           ;	high address + 1 of data in btemp-1
   371                           
   372  03AA  118A  23A6  118A   	fcall	init_fetch0
   373  03AD  0080               	movwf	0
   374  03AE  0A84               	incf	4,f
   375  03AF  0804               	movf	4,w
   376  03B0  067D               	xorwf	btemp+-1,w
   377  03B1  1903               	btfsc	3,2
   378  03B2  3400               	retlw	0
   379  03B3  0AFF               	incf	btemp+1,f
   380  03B4  1903               	btfsc	3,2
   381  03B5  0AFE               	incf	btemp,f
   382  03B6  2BAA               	goto	init_ram0
   383                           
   384                           	psect	cstackCOMMON
   385  0000                     __pcstackCOMMON:
   386  0000                     ??_iniciar_puertos:
   387  0000                     ??_set_configuraciones:	
   388                           ; 1 bytes @ 0x0
   389                           
   390                           
   391                           	psect	cstackBANK0
   392  004B                     __pcstackBANK0:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  004B                     ?_iniciar_puertos:
   396  004B                     ?_inicio_presentacion:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  004B                     ?_LCD_Write_Nibble:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  004B                     ??_LCD_Write_Nibble:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  004B                     ?_LCD_Cmd:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  004B                     ?_LCD_PutC:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  004B                     ?_LCD_Begin:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  004B                     ?_keypad_readkey:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  004B                     ??_keypad_readkey:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  004B                     ?_keypad_getkey:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  004B                     ?_set_configuraciones:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  004B                     ?_main:	
   427                           ; 1 bytes @ 0x0
   428                           
   429                           
   430                           ; 2 bytes @ 0x0
   431  004B                     	ds	1
   432  004C                     ??_keypad_getkey:
   433                           
   434                           ; 1 bytes @ 0x1
   435  004C                     	ds	1
   436  004D                     LCD_Write_Nibble@n:
   437  004D                     keypad_getkey@key:	
   438                           ; 1 bytes @ 0x2
   439                           
   440                           
   441                           ; 1 bytes @ 0x2
   442  004D                     	ds	1
   443  004E                     ??_LCD_Cmd:
   444  004E                     ??_LCD_PutC:	
   445                           ; 1 bytes @ 0x3
   446                           
   447  004E                     ?_LCD_Print:	
   448                           ; 1 bytes @ 0x3
   449                           
   450  004E                     LCD_Print@LCD_Str:	
   451                           ; 1 bytes @ 0x3
   452                           
   453                           
   454                           ; 2 bytes @ 0x3
   455  004E                     	ds	1
   456  004F                     LCD_PutC@LCD_Char:
   457                           
   458                           ; 1 bytes @ 0x4
   459  004F                     	ds	1
   460  0050                     ??_LCD_Print:
   461  0050                     LCD_Cmd@Command:	
   462                           ; 1 bytes @ 0x5
   463                           
   464                           
   465                           ; 1 bytes @ 0x5
   466  0050                     	ds	1
   467  0051                     ?_LCD_Goto:
   468  0051                     ??_LCD_Begin:	
   469                           ; 1 bytes @ 0x6
   470                           
   471  0051                     LCD_Goto@row:	
   472                           ; 1 bytes @ 0x6
   473                           
   474                           
   475                           ; 1 bytes @ 0x6
   476  0051                     	ds	1
   477  0052                     ??_LCD_Goto:
   478                           
   479                           ; 1 bytes @ 0x7
   480  0052                     	ds	1
   481  0053                     LCD_Print@i:
   482                           
   483                           ; 1 bytes @ 0x8
   484  0053                     	ds	1
   485  0054                     LCD_Goto@col:
   486                           
   487                           ; 1 bytes @ 0x9
   488  0054                     	ds	1
   489  0055                     ??_inicio_presentacion:
   490                           
   491                           ; 1 bytes @ 0xA
   492  0055                     	ds	3
   493  0058                     inicio_presentacion@i:
   494                           
   495                           ; 2 bytes @ 0xD
   496  0058                     	ds	2
   497  005A                     ??_main:
   498                           
   499                           ; 1 bytes @ 0xF
   500  005A                     	ds	3
   501  005D                     main@i:
   502                           
   503                           ; 2 bytes @ 0x12
   504  005D                     	ds	2
   505  005F                     main@c:
   506                           
   507                           ; 1 bytes @ 0x14
   508  005F                     	ds	1
   509                           
   510                           	psect	maintext
   511  05C6                     __pmaintext:	
   512 ;;
   513 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   514 ;;
   515 ;; *************** function _main *****************
   516 ;; Defined at:
   517 ;;		line 123 in file "main.c"
   518 ;; Parameters:    Size  Location     Type
   519 ;;		None
   520 ;; Auto vars:     Size  Location     Type
   521 ;;  c               1   20[BANK0 ] unsigned char 
   522 ;;  i               2   18[BANK0 ] int 
   523 ;; Return value:  Size  Location     Type
   524 ;;                  2  192[None  ] int 
   525 ;; Registers used:
   526 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   527 ;; Tracked objects:
   528 ;;		On entry : B00/0
   529 ;;		On exit  : 0/0
   530 ;;		Unchanged: 0/0
   531 ;; Data sizes:     COMMON   BANK0   BANK1
   532 ;;      Params:         0       0       0
   533 ;;      Locals:         0       3       0
   534 ;;      Temps:          0       3       0
   535 ;;      Totals:         0       6       0
   536 ;;Total ram usage:        6 bytes
   537 ;; Hardware stack levels required when called: 4
   538 ;; This function calls:
   539 ;;		_LCD_Begin
   540 ;;		_LCD_Cmd
   541 ;;		_LCD_Goto
   542 ;;		_LCD_Print
   543 ;;		_LCD_PutC
   544 ;;		_iniciar_puertos
   545 ;;		_inicio_presentacion
   546 ;;		_keypad_getkey
   547 ;;		_set_configuraciones
   548 ;; This function is called by:
   549 ;;		Startup code after reset
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553                           
   554                           ;psect for function _main
   555  05C6                     _main:
   556  05C6                     l1535:	
   557                           ;incstack = 0
   558                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   559                           
   560                           
   561                           ;main.c: 125:     int i=0;
   562  05C6  1283               	bcf	3,5	;RP0=0, select bank0
   563  05C7  1303               	bcf	3,6	;RP1=0, select bank0
   564  05C8  01DD               	clrf	main@i
   565  05C9  01DE               	clrf	main@i+1
   566  05CA                     l1537:
   567                           
   568                           ;main.c: 126:     set_configuraciones();
   569  05CA  118A  2404  118A   	fcall	_set_configuraciones
   570  05CD                     l1539:
   571                           
   572                           ;main.c: 128:     iniciar_puertos();
   573  05CD  118A  23B7  118A   	fcall	_iniciar_puertos
   574  05D0                     l1541:
   575                           
   576                           ;main.c: 131:     LCD_Begin();
   577  05D0  118A  2653  118A   	fcall	_LCD_Begin
   578  05D3                     l1543:
   579                           
   580                           ;main.c: 132:     inicio_presentacion();
   581  05D3  118A  255F  118A   	fcall	_inicio_presentacion
   582  05D6                     l1545:
   583                           
   584                           ;main.c: 133:     _delay((unsigned long)((500)*(32000000/4000.0)));
   585  05D6  3015               	movlw	21
   586  05D7  1283               	bcf	3,5	;RP0=0, select bank0
   587  05D8  1303               	bcf	3,6	;RP1=0, select bank0
   588  05D9  00DC               	movwf	??_main+2
   589  05DA  304B               	movlw	75
   590  05DB  00DB               	movwf	??_main+1
   591  05DC  30BE               	movlw	190
   592  05DD  00DA               	movwf	??_main
   593  05DE                     u1027:
   594  05DE  0BDA               	decfsz	??_main,f
   595  05DF  2DDE               	goto	u1027
   596  05E0  0BDB               	decfsz	??_main+1,f
   597  05E1  2DDE               	goto	u1027
   598  05E2  0BDC               	decfsz	??_main+2,f
   599  05E3  2DDE               	goto	u1027
   600  05E4                     l1547:
   601                           
   602                           ;main.c: 134:     LCD_Goto(1, 1);
   603  05E4  1283               	bcf	3,5	;RP0=0, select bank0
   604  05E5  1303               	bcf	3,6	;RP1=0, select bank0
   605  05E6  01D1               	clrf	LCD_Goto@row
   606  05E7  0AD1               	incf	LCD_Goto@row,f
   607  05E8  3001               	movlw	1
   608  05E9  118A  2483  118A   	fcall	_LCD_Goto
   609  05EC                     l1549:
   610                           
   611                           ;main.c: 135:     _delay((unsigned long)((500)*(32000000/4000.0)));
   612  05EC  3015               	movlw	21
   613  05ED  1283               	bcf	3,5	;RP0=0, select bank0
   614  05EE  1303               	bcf	3,6	;RP1=0, select bank0
   615  05EF  00DC               	movwf	??_main+2
   616  05F0  304B               	movlw	75
   617  05F1  00DB               	movwf	??_main+1
   618  05F2  30BE               	movlw	190
   619  05F3  00DA               	movwf	??_main
   620  05F4                     u1037:
   621  05F4  0BDA               	decfsz	??_main,f
   622  05F5  2DF4               	goto	u1037
   623  05F6  0BDB               	decfsz	??_main+1,f
   624  05F7  2DF4               	goto	u1037
   625  05F8  0BDC               	decfsz	??_main+2,f
   626  05F9  2DF4               	goto	u1037
   627  05FA                     l1551:
   628                           
   629                           ;main.c: 140:     if(i<4)
   630  05FA  1283               	bcf	3,5	;RP0=0, select bank0
   631  05FB  1303               	bcf	3,6	;RP1=0, select bank0
   632  05FC  085E               	movf	main@i+1,w
   633  05FD  3A80               	xorlw	128
   634  05FE  00FF               	movwf	btemp+1
   635  05FF  3080               	movlw	128
   636  0600  027F               	subwf	btemp+1,w
   637  0601  1D03               	skipz
   638  0602  2E05               	goto	u985
   639  0603  3004               	movlw	4
   640  0604  025D               	subwf	main@i,w
   641  0605                     u985:
   642  0605  1803               	skipnc
   643  0606  2E08               	goto	u981
   644  0607  2E09               	goto	u980
   645  0608                     u981:
   646  0608  2E3F               	goto	l1571
   647  0609                     u980:
   648  0609                     l1553:
   649                           
   650                           ;main.c: 141:     {;main.c: 142:     char c = keypad_getkey();
   651  0609  118A  23E3  118A   	fcall	_keypad_getkey
   652  060C  1283               	bcf	3,5	;RP0=0, select bank0
   653  060D  1303               	bcf	3,6	;RP1=0, select bank0
   654  060E  00DA               	movwf	??_main
   655  060F  085A               	movf	??_main,w
   656  0610  00DF               	movwf	main@c
   657  0611                     l1555:
   658                           
   659                           ;main.c: 143:         if(c!='=' && c!='A')
   660  0611  303D               	movlw	61
   661  0612  065F               	xorwf	main@c,w
   662  0613  1903               	btfsc	3,2
   663  0614  2E16               	goto	u991
   664  0615  2E17               	goto	u990
   665  0616                     u991:
   666  0616  2E32               	goto	l1565
   667  0617                     u990:
   668  0617                     l1557:
   669  0617  3041               	movlw	65
   670  0618  065F               	xorwf	main@c,w
   671  0619  1903               	btfsc	3,2
   672  061A  2E1C               	goto	u1001
   673  061B  2E1D               	goto	u1000
   674  061C                     u1001:
   675  061C  2E32               	goto	l1565
   676  061D                     u1000:
   677  061D                     l1559:
   678                           
   679                           ;main.c: 144:         {;main.c: 145:         LCD_PutC(c);
   680  061D  085F               	movf	main@c,w
   681  061E  118A  23CC  118A   	fcall	_LCD_PutC
   682  0621                     l1561:
   683                           
   684                           ;main.c: 146:         number[i]=c;
   685  0621  1283               	bcf	3,5	;RP0=0, select bank0
   686  0622  1303               	bcf	3,6	;RP1=0, select bank0
   687  0623  085F               	movf	main@c,w
   688  0624  00DA               	movwf	??_main
   689  0625  085D               	movf	main@i,w
   690  0626  3E60               	addlw	(low (_number| 0))& (0+255)
   691  0627  0084               	movwf	4
   692  0628  085A               	movf	??_main,w
   693  0629  1383               	bcf	3,7	;select IRP bank0
   694  062A  0080               	movwf	0
   695  062B                     l1563:
   696                           
   697                           ;main.c: 147:         i++;
   698  062B  3001               	movlw	1
   699  062C  07DD               	addwf	main@i,f
   700  062D  1803               	skipnc
   701  062E  0ADE               	incf	main@i+1,f
   702  062F  3000               	movlw	0
   703  0630  07DE               	addwf	main@i+1,f
   704                           
   705                           ;main.c: 148:         }
   706  0631  2DEC               	goto	l1549
   707  0632                     l1565:
   708  0632  3041               	movlw	65
   709  0633  065F               	xorwf	main@c,w
   710  0634  1D03               	btfss	3,2
   711  0635  2E37               	goto	u1011
   712  0636  2E38               	goto	u1010
   713  0637                     u1011:
   714  0637  2DEC               	goto	l1549
   715  0638                     u1010:
   716  0638                     l1567:
   717                           
   718                           ;main.c: 150:         {;main.c: 151:             i=0;
   719  0638  01DD               	clrf	main@i
   720  0639  01DE               	clrf	main@i+1
   721  063A                     l1569:
   722                           
   723                           ;main.c: 152:             LCD_Cmd(0x01);
   724  063A  3001               	movlw	1
   725  063B  118A  2455  118A   	fcall	_LCD_Cmd
   726  063E  2DEC               	goto	l1549
   727  063F                     l1571:
   728                           
   729                           ;main.c: 161:     {;main.c: 162:          i=0;
   730  063F  1283               	bcf	3,5	;RP0=0, select bank0
   731  0640  1303               	bcf	3,6	;RP1=0, select bank0
   732  0641  01DD               	clrf	main@i
   733  0642  01DE               	clrf	main@i+1
   734  0643                     l1573:
   735                           
   736                           ;main.c: 163:          LCD_PutC(' ');
   737  0643  3020               	movlw	32
   738  0644  118A  23CC  118A   	fcall	_LCD_PutC
   739  0647                     l1575:
   740                           
   741                           ;main.c: 164:          LCD_Print("Env");
   742  0647  3006               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   743  0648  1283               	bcf	3,5	;RP0=0, select bank0
   744  0649  1303               	bcf	3,6	;RP1=0, select bank0
   745  064A  00CE               	movwf	LCD_Print@LCD_Str
   746  064B  3080               	movlw	128
   747  064C  00CF               	movwf	LCD_Print@LCD_Str+1
   748  064D  118A  24B3  118A   	fcall	_LCD_Print
   749  0650  2DEC               	goto	l1549
   750  0651  118A  2800         	ljmp	start
   751  0653                     __end_of_main:
   752                           
   753                           	psect	text1
   754  0404                     __ptext1:	
   755 ;; *************** function _set_configuraciones *****************
   756 ;; Defined at:
   757 ;;		line 31 in file "main.c"
   758 ;; Parameters:    Size  Location     Type
   759 ;;		None
   760 ;; Auto vars:     Size  Location     Type
   761 ;;		None
   762 ;; Return value:  Size  Location     Type
   763 ;;                  1    wreg      void 
   764 ;; Registers used:
   765 ;;		wreg, status,2
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMMON   BANK0   BANK1
   771 ;;      Params:         0       0       0
   772 ;;      Locals:         0       0       0
   773 ;;      Temps:          0       0       0
   774 ;;      Totals:         0       0       0
   775 ;;Total ram usage:        0 bytes
   776 ;; Hardware stack levels used: 1
   777 ;; This function calls:
   778 ;;		Nothing
   779 ;; This function is called by:
   780 ;;		_main
   781 ;; This function uses a non-reentrant model
   782 ;;
   783                           
   784                           
   785                           ;psect for function _set_configuraciones
   786  0404                     _set_configuraciones:
   787  0404                     l1449:	
   788                           ;incstack = 0
   789                           ; Regs used in _set_configuraciones: [wreg+status,2]
   790                           
   791                           
   792                           ;main.c: 35:     ADCON0 = 0x80;
   793  0404  3080               	movlw	128
   794  0405  1283               	bcf	3,5	;RP0=0, select bank0
   795  0406  1303               	bcf	3,6	;RP1=0, select bank0
   796  0407  009F               	movwf	31	;volatile
   797                           
   798                           ;main.c: 36:     ADCON1 = 0x8E;
   799  0408  308E               	movlw	142
   800  0409  1683               	bsf	3,5	;RP0=1, select bank1
   801  040A  1303               	bcf	3,6	;RP1=0, select bank1
   802  040B  009F               	movwf	31	;volatile
   803  040C                     l1451:
   804                           
   805                           ;main.c: 40:     ADIF = 0;
   806  040C  1283               	bcf	3,5	;RP0=0, select bank0
   807  040D  1303               	bcf	3,6	;RP1=0, select bank0
   808  040E  130C               	bcf	12,6	;volatile
   809                           
   810                           ;main.c: 43:     OPTION_REG = 0x51;
   811  040F  3051               	movlw	81
   812  0410  1683               	bsf	3,5	;RP0=1, select bank1
   813  0411  1303               	bcf	3,6	;RP1=0, select bank1
   814  0412  0081               	movwf	1	;volatile
   815  0413                     l1453:
   816                           
   817                           ;main.c: 44:     TMR0 = 0;
   818  0413  1283               	bcf	3,5	;RP0=0, select bank0
   819  0414  1303               	bcf	3,6	;RP1=0, select bank0
   820  0415  0181               	clrf	1	;volatile
   821  0416                     l1455:
   822                           
   823                           ;main.c: 47:     TXSTA = 0x00;
   824  0416  1683               	bsf	3,5	;RP0=1, select bank1
   825  0417  1303               	bcf	3,6	;RP1=0, select bank1
   826  0418  0198               	clrf	24	;volatile
   827  0419                     l1457:
   828                           
   829                           ;main.c: 48:     RCSTA = 0x00;
   830  0419  1283               	bcf	3,5	;RP0=0, select bank0
   831  041A  1303               	bcf	3,6	;RP1=0, select bank0
   832  041B  0198               	clrf	24	;volatile
   833  041C                     l1459:
   834                           
   835                           ;main.c: 49:     RCSTAbits.SPEN = 1;
   836  041C  1798               	bsf	24,7	;volatile
   837  041D                     l1461:
   838                           
   839                           ;main.c: 50:     TXSTAbits.SYNC = 0;
   840  041D  1683               	bsf	3,5	;RP0=1, select bank1
   841  041E  1303               	bcf	3,6	;RP1=0, select bank1
   842  041F  1218               	bcf	24,4	;volatile
   843  0420                     l1463:
   844                           
   845                           ;main.c: 51:     TXSTAbits.BRGH = 1;
   846  0420  1518               	bsf	24,2	;volatile
   847  0421                     l1465:
   848                           
   849                           ;main.c: 52:     TXSTAbits.TXEN = 1;
   850  0421  1698               	bsf	24,5	;volatile
   851  0422                     l1467:
   852                           
   853                           ;main.c: 53:     RCSTAbits.CREN = 1;
   854  0422  1283               	bcf	3,5	;RP0=0, select bank0
   855  0423  1303               	bcf	3,6	;RP1=0, select bank0
   856  0424  1618               	bsf	24,4	;volatile
   857  0425                     l1469:
   858                           
   859                           ;main.c: 55:     SPBRG = 25;
   860  0425  3019               	movlw	25
   861  0426  1683               	bsf	3,5	;RP0=1, select bank1
   862  0427  1303               	bcf	3,6	;RP1=0, select bank1
   863  0428  0099               	movwf	25	;volatile
   864  0429                     l170:
   865  0429  0008               	return
   866  042A                     __end_of_set_configuraciones:
   867                           
   868                           	psect	text2
   869  03E3                     __ptext2:	
   870 ;; *************** function _keypad_getkey *****************
   871 ;; Defined at:
   872 ;;		line 90 in file "./kbd.h"
   873 ;; Parameters:    Size  Location     Type
   874 ;;		None
   875 ;; Auto vars:     Size  Location     Type
   876 ;;  key             1    2[BANK0 ] unsigned char 
   877 ;; Return value:  Size  Location     Type
   878 ;;                  1    wreg      unsigned char 
   879 ;; Registers used:
   880 ;;		wreg, status,2, status,0, pclath, cstack
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMMON   BANK0   BANK1
   886 ;;      Params:         0       0       0
   887 ;;      Locals:         0       1       0
   888 ;;      Temps:          0       1       0
   889 ;;      Totals:         0       2       0
   890 ;;Total ram usage:        2 bytes
   891 ;; Hardware stack levels used: 1
   892 ;; Hardware stack levels required when called: 1
   893 ;; This function calls:
   894 ;;		_keypad_readkey
   895 ;; This function is called by:
   896 ;;		_main
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           
   901                           ;psect for function _keypad_getkey
   902  03E3                     _keypad_getkey:
   903  03E3                     l1437:	
   904                           ;incstack = 0
   905                           ; Regs used in _keypad_getkey: [wreg+status,2+status,0+pclath+cstack]
   906                           
   907                           
   908                           ;./kbd.h: 92:  unsigned char key = 'x';
   909  03E3  3078               	movlw	120
   910  03E4  1283               	bcf	3,5	;RP0=0, select bank0
   911  03E5  1303               	bcf	3,6	;RP1=0, select bank0
   912  03E6  00CC               	movwf	??_keypad_getkey
   913  03E7  084C               	movf	??_keypad_getkey,w
   914  03E8  00CD               	movwf	keypad_getkey@key
   915                           
   916                           ;./kbd.h: 95:  while(key == 'x')
   917  03E9  2BF2               	goto	l1441
   918  03EA                     l1439:
   919                           
   920                           ;./kbd.h: 96:   key = keypad_readkey();
   921  03EA  118A  2710  118A   	fcall	_keypad_readkey
   922  03ED  1283               	bcf	3,5	;RP0=0, select bank0
   923  03EE  1303               	bcf	3,6	;RP1=0, select bank0
   924  03EF  00CC               	movwf	??_keypad_getkey
   925  03F0  084C               	movf	??_keypad_getkey,w
   926  03F1  00CD               	movwf	keypad_getkey@key
   927  03F2                     l1441:
   928                           
   929                           ;./kbd.h: 95:  while(key == 'x')
   930  03F2  3078               	movlw	120
   931  03F3  064D               	xorwf	keypad_getkey@key,w
   932  03F4  1903               	btfsc	3,2
   933  03F5  2BF7               	goto	u951
   934  03F6  2BF8               	goto	u950
   935  03F7                     u951:
   936  03F7  2BEA               	goto	l1439
   937  03F8                     u950:
   938  03F8                     l1443:
   939  03F8  118A  2710  118A   	fcall	_keypad_readkey
   940  03FB  3A78               	xorlw	120
   941  03FC  1D03               	skipz
   942  03FD  2BFF               	goto	u961
   943  03FE  2C00               	goto	u960
   944  03FF                     u961:
   945  03FF  2BF8               	goto	l1443
   946  0400                     u960:
   947  0400                     l1445:
   948                           
   949                           ;./kbd.h: 101:  return key;
   950  0400  1283               	bcf	3,5	;RP0=0, select bank0
   951  0401  1303               	bcf	3,6	;RP1=0, select bank0
   952  0402  084D               	movf	keypad_getkey@key,w
   953  0403                     l157:
   954  0403  0008               	return
   955  0404                     __end_of_keypad_getkey:
   956                           
   957                           	psect	text3
   958  0710                     __ptext3:	
   959 ;; *************** function _keypad_readkey *****************
   960 ;; Defined at:
   961 ;;		line 35 in file "./kbd.h"
   962 ;; Parameters:    Size  Location     Type
   963 ;;		None
   964 ;; Auto vars:     Size  Location     Type
   965 ;;		None
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      unsigned char 
   968 ;; Registers used:
   969 ;;		wreg
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMMON   BANK0   BANK1
   975 ;;      Params:         0       0       0
   976 ;;      Locals:         0       0       0
   977 ;;      Temps:          0       1       0
   978 ;;      Totals:         0       1       0
   979 ;;Total ram usage:        1 bytes
   980 ;; Hardware stack levels used: 1
   981 ;; This function calls:
   982 ;;		Nothing
   983 ;; This function is called by:
   984 ;;		_keypad_getkey
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988                           
   989                           ;psect for function _keypad_readkey
   990  0710                     _keypad_readkey:
   991  0710                     l1287:	
   992                           ;incstack = 0
   993                           ; Regs used in _keypad_readkey: [wreg]
   994                           
   995                           
   996                           ;./kbd.h: 37:     RC3 = 1;
   997  0710  1283               	bcf	3,5	;RP0=0, select bank0
   998  0711  1303               	bcf	3,6	;RP1=0, select bank0
   999  0712  1587               	bsf	7,3	;volatile
  1000                           
  1001                           ;./kbd.h: 38:     RC2 = 0;
  1002  0713  1107               	bcf	7,2	;volatile
  1003                           
  1004                           ;./kbd.h: 39:     RC1 = 0;
  1005  0714  1087               	bcf	7,1	;volatile
  1006                           
  1007                           ;./kbd.h: 40:     RC0 = 0;
  1008  0715  1007               	bcf	7,0	;volatile
  1009  0716                     l1289:
  1010                           
  1011                           ;./kbd.h: 41:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  1012  0716  304F               	movlw	79
  1013  0717  1283               	bcf	3,5	;RP0=0, select bank0
  1014  0718  1303               	bcf	3,6	;RP1=0, select bank0
  1015  0719  00CB               	movwf	??_keypad_readkey
  1016  071A                     u1047:
  1017  071A  0BCB               	decfsz	??_keypad_readkey,f
  1018  071B  2F1A               	goto	u1047
  1019  071C  0000               	nop
  1020  071D                     l1291:
  1021                           
  1022                           ;./kbd.h: 43:     if(RC3==1 && RC2==0 && RC1==0 && RC0==0) {
  1023  071D  1283               	bcf	3,5	;RP0=0, select bank0
  1024  071E  1303               	bcf	3,6	;RP1=0, select bank0
  1025  071F  1D87               	btfss	7,3	;volatile
  1026  0720  2F22               	goto	u621
  1027  0721  2F23               	goto	u620
  1028  0722                     u621:
  1029  0722  2F47               	goto	l128
  1030  0723                     u620:
  1031  0723                     l1293:
  1032  0723  1907               	btfsc	7,2	;volatile
  1033  0724  2F26               	goto	u631
  1034  0725  2F27               	goto	u630
  1035  0726                     u631:
  1036  0726  2F47               	goto	l128
  1037  0727                     u630:
  1038  0727                     l1295:
  1039  0727  1887               	btfsc	7,1	;volatile
  1040  0728  2F2A               	goto	u641
  1041  0729  2F2B               	goto	u640
  1042  072A                     u641:
  1043  072A  2F47               	goto	l128
  1044  072B                     u640:
  1045  072B                     l1297:
  1046  072B  1807               	btfsc	7,0	;volatile
  1047  072C  2F2E               	goto	u651
  1048  072D  2F2F               	goto	u650
  1049  072E                     u651:
  1050  072E  2F47               	goto	l128
  1051  072F                     u650:
  1052  072F                     l1299:
  1053                           
  1054                           ;./kbd.h: 44:         if (RA3 == 1) return 'A';
  1055  072F  1D85               	btfss	5,3	;volatile
  1056  0730  2F32               	goto	u661
  1057  0731  2F33               	goto	u660
  1058  0732                     u661:
  1059  0732  2F35               	goto	l129
  1060  0733                     u660:
  1061  0733                     l1301:
  1062  0733  3041               	movlw	65
  1063  0734  2FE7               	goto	l130
  1064  0735                     l129:
  1065                           
  1066                           ;./kbd.h: 45:         if (RA4 == 1) return '0';
  1067  0735  1E05               	btfss	5,4	;volatile
  1068  0736  2F38               	goto	u671
  1069  0737  2F39               	goto	u670
  1070  0738                     u671:
  1071  0738  2F3B               	goto	l131
  1072  0739                     u670:
  1073  0739                     l1305:
  1074  0739  3030               	movlw	48
  1075  073A  2FE7               	goto	l130
  1076  073B                     l131:
  1077                           
  1078                           ;./kbd.h: 46:         if (RA5 == 1) return '=';
  1079  073B  1E85               	btfss	5,5	;volatile
  1080  073C  2F3E               	goto	u681
  1081  073D  2F3F               	goto	u680
  1082  073E                     u681:
  1083  073E  2F41               	goto	l132
  1084  073F                     u680:
  1085  073F                     l1309:
  1086  073F  303D               	movlw	61
  1087  0740  2FE7               	goto	l130
  1088  0741                     l132:
  1089                           
  1090                           ;./kbd.h: 47:         if (RC4 == 1) return '+';
  1091  0741  1E07               	btfss	7,4	;volatile
  1092  0742  2F44               	goto	u691
  1093  0743  2F45               	goto	u690
  1094  0744                     u691:
  1095  0744  2F47               	goto	l128
  1096  0745                     u690:
  1097  0745                     l1313:
  1098  0745  302B               	movlw	43
  1099  0746  2FE7               	goto	l130
  1100  0747                     l128:	
  1101                           ;./kbd.h: 48:     }
  1102                           
  1103                           
  1104                           ;./kbd.h: 49:     RC3 = 0;
  1105  0747  1187               	bcf	7,3	;volatile
  1106                           
  1107                           ;./kbd.h: 50:     RC2 = 1;
  1108  0748  1507               	bsf	7,2	;volatile
  1109                           
  1110                           ;./kbd.h: 51:     RC1 = 0;
  1111  0749  1087               	bcf	7,1	;volatile
  1112                           
  1113                           ;./kbd.h: 52:     RC0 = 0;
  1114  074A  1007               	bcf	7,0	;volatile
  1115  074B                     l1317:
  1116                           
  1117                           ;./kbd.h: 53:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  1118  074B  304F               	movlw	79
  1119  074C  1283               	bcf	3,5	;RP0=0, select bank0
  1120  074D  1303               	bcf	3,6	;RP1=0, select bank0
  1121  074E  00CB               	movwf	??_keypad_readkey
  1122  074F                     u1057:
  1123  074F  0BCB               	decfsz	??_keypad_readkey,f
  1124  0750  2F4F               	goto	u1057
  1125  0751  0000               	nop
  1126  0752                     l1319:
  1127                           
  1128                           ;./kbd.h: 55:     if(RC3==0 && RC2==1 && RC1==0 && RC0==0) {
  1129  0752  1283               	bcf	3,5	;RP0=0, select bank0
  1130  0753  1303               	bcf	3,6	;RP1=0, select bank0
  1131  0754  1987               	btfsc	7,3	;volatile
  1132  0755  2F57               	goto	u701
  1133  0756  2F58               	goto	u700
  1134  0757                     u701:
  1135  0757  2F7C               	goto	l134
  1136  0758                     u700:
  1137  0758                     l1321:
  1138  0758  1D07               	btfss	7,2	;volatile
  1139  0759  2F5B               	goto	u711
  1140  075A  2F5C               	goto	u710
  1141  075B                     u711:
  1142  075B  2F7C               	goto	l134
  1143  075C                     u710:
  1144  075C                     l1323:
  1145  075C  1887               	btfsc	7,1	;volatile
  1146  075D  2F5F               	goto	u721
  1147  075E  2F60               	goto	u720
  1148  075F                     u721:
  1149  075F  2F7C               	goto	l134
  1150  0760                     u720:
  1151  0760                     l1325:
  1152  0760  1807               	btfsc	7,0	;volatile
  1153  0761  2F63               	goto	u731
  1154  0762  2F64               	goto	u730
  1155  0763                     u731:
  1156  0763  2F7C               	goto	l134
  1157  0764                     u730:
  1158  0764                     l1327:
  1159                           
  1160                           ;./kbd.h: 56:         if (RA3 == 1) return '1';
  1161  0764  1D85               	btfss	5,3	;volatile
  1162  0765  2F67               	goto	u741
  1163  0766  2F68               	goto	u740
  1164  0767                     u741:
  1165  0767  2F6A               	goto	l135
  1166  0768                     u740:
  1167  0768                     l1329:
  1168  0768  3031               	movlw	49
  1169  0769  2FE7               	goto	l130
  1170  076A                     l135:
  1171                           
  1172                           ;./kbd.h: 57:         if (RA4 == 1) return '2';
  1173  076A  1E05               	btfss	5,4	;volatile
  1174  076B  2F6D               	goto	u751
  1175  076C  2F6E               	goto	u750
  1176  076D                     u751:
  1177  076D  2F70               	goto	l136
  1178  076E                     u750:
  1179  076E                     l1333:
  1180  076E  3032               	movlw	50
  1181  076F  2FE7               	goto	l130
  1182  0770                     l136:
  1183                           
  1184                           ;./kbd.h: 58:         if (RA5 == 1) return '3';
  1185  0770  1E85               	btfss	5,5	;volatile
  1186  0771  2F73               	goto	u761
  1187  0772  2F74               	goto	u760
  1188  0773                     u761:
  1189  0773  2F76               	goto	l137
  1190  0774                     u760:
  1191  0774                     l1337:
  1192  0774  3033               	movlw	51
  1193  0775  2FE7               	goto	l130
  1194  0776                     l137:
  1195                           
  1196                           ;./kbd.h: 59:         if (RC4 == 1) return '.';
  1197  0776  1E07               	btfss	7,4	;volatile
  1198  0777  2F79               	goto	u771
  1199  0778  2F7A               	goto	u770
  1200  0779                     u771:
  1201  0779  2F7C               	goto	l134
  1202  077A                     u770:
  1203  077A                     l1341:
  1204  077A  302E               	movlw	46
  1205  077B  2FE7               	goto	l130
  1206  077C                     l134:	
  1207                           ;./kbd.h: 60:     }
  1208                           
  1209                           
  1210                           ;./kbd.h: 62:     RC3 = 0;
  1211  077C  1187               	bcf	7,3	;volatile
  1212                           
  1213                           ;./kbd.h: 63:     RC2 = 0;
  1214  077D  1107               	bcf	7,2	;volatile
  1215                           
  1216                           ;./kbd.h: 64:     RC1 = 1;
  1217  077E  1487               	bsf	7,1	;volatile
  1218                           
  1219                           ;./kbd.h: 65:     RC0 = 0;
  1220  077F  1007               	bcf	7,0	;volatile
  1221  0780                     l1345:
  1222                           
  1223                           ;./kbd.h: 66:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  1224  0780  304F               	movlw	79
  1225  0781  1283               	bcf	3,5	;RP0=0, select bank0
  1226  0782  1303               	bcf	3,6	;RP1=0, select bank0
  1227  0783  00CB               	movwf	??_keypad_readkey
  1228  0784                     u1067:
  1229  0784  0BCB               	decfsz	??_keypad_readkey,f
  1230  0785  2F84               	goto	u1067
  1231  0786  0000               	nop
  1232  0787                     l1347:
  1233                           
  1234                           ;./kbd.h: 68:     if(RC3==0 && RC2==0 && RC1==1 && RC0==0) {
  1235  0787  1283               	bcf	3,5	;RP0=0, select bank0
  1236  0788  1303               	bcf	3,6	;RP1=0, select bank0
  1237  0789  1987               	btfsc	7,3	;volatile
  1238  078A  2F8C               	goto	u781
  1239  078B  2F8D               	goto	u780
  1240  078C                     u781:
  1241  078C  2FB1               	goto	l139
  1242  078D                     u780:
  1243  078D                     l1349:
  1244  078D  1907               	btfsc	7,2	;volatile
  1245  078E  2F90               	goto	u791
  1246  078F  2F91               	goto	u790
  1247  0790                     u791:
  1248  0790  2FB1               	goto	l139
  1249  0791                     u790:
  1250  0791                     l1351:
  1251  0791  1C87               	btfss	7,1	;volatile
  1252  0792  2F94               	goto	u801
  1253  0793  2F95               	goto	u800
  1254  0794                     u801:
  1255  0794  2FB1               	goto	l139
  1256  0795                     u800:
  1257  0795                     l1353:
  1258  0795  1807               	btfsc	7,0	;volatile
  1259  0796  2F98               	goto	u811
  1260  0797  2F99               	goto	u810
  1261  0798                     u811:
  1262  0798  2FB1               	goto	l139
  1263  0799                     u810:
  1264  0799                     l1355:
  1265                           
  1266                           ;./kbd.h: 69:         if (RA3 == 1) return '4';
  1267  0799  1D85               	btfss	5,3	;volatile
  1268  079A  2F9C               	goto	u821
  1269  079B  2F9D               	goto	u820
  1270  079C                     u821:
  1271  079C  2F9F               	goto	l140
  1272  079D                     u820:
  1273  079D                     l1357:
  1274  079D  3034               	movlw	52
  1275  079E  2FE7               	goto	l130
  1276  079F                     l140:
  1277                           
  1278                           ;./kbd.h: 70:         if (RA4 == 1) return '5';
  1279  079F  1E05               	btfss	5,4	;volatile
  1280  07A0  2FA2               	goto	u831
  1281  07A1  2FA3               	goto	u830
  1282  07A2                     u831:
  1283  07A2  2FA5               	goto	l141
  1284  07A3                     u830:
  1285  07A3                     l1361:
  1286  07A3  3035               	movlw	53
  1287  07A4  2FE7               	goto	l130
  1288  07A5                     l141:
  1289                           
  1290                           ;./kbd.h: 71:         if (RA5 == 1) return '6';
  1291  07A5  1E85               	btfss	5,5	;volatile
  1292  07A6  2FA8               	goto	u841
  1293  07A7  2FA9               	goto	u840
  1294  07A8                     u841:
  1295  07A8  2FAB               	goto	l142
  1296  07A9                     u840:
  1297  07A9                     l1365:
  1298  07A9  3036               	movlw	54
  1299  07AA  2FE7               	goto	l130
  1300  07AB                     l142:
  1301                           
  1302                           ;./kbd.h: 72:         if (RC4 == 1) return '*';
  1303  07AB  1E07               	btfss	7,4	;volatile
  1304  07AC  2FAE               	goto	u851
  1305  07AD  2FAF               	goto	u850
  1306  07AE                     u851:
  1307  07AE  2FB1               	goto	l139
  1308  07AF                     u850:
  1309  07AF                     l1369:
  1310  07AF  302A               	movlw	42
  1311  07B0  2FE7               	goto	l130
  1312  07B1                     l139:	
  1313                           ;./kbd.h: 73:     }
  1314                           
  1315                           
  1316                           ;./kbd.h: 75:     RC3 = 0;
  1317  07B1  1187               	bcf	7,3	;volatile
  1318                           
  1319                           ;./kbd.h: 76:     RC2 = 0;
  1320  07B2  1107               	bcf	7,2	;volatile
  1321                           
  1322                           ;./kbd.h: 77:     RC1 = 0;
  1323  07B3  1087               	bcf	7,1	;volatile
  1324                           
  1325                           ;./kbd.h: 78:     RC0 = 1;
  1326  07B4  1407               	bsf	7,0	;volatile
  1327  07B5                     l1373:
  1328                           
  1329                           ;./kbd.h: 79:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  1330  07B5  304F               	movlw	79
  1331  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  1332  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  1333  07B8  00CB               	movwf	??_keypad_readkey
  1334  07B9                     u1077:
  1335  07B9  0BCB               	decfsz	??_keypad_readkey,f
  1336  07BA  2FB9               	goto	u1077
  1337  07BB  0000               	nop
  1338  07BC                     l1375:
  1339                           
  1340                           ;./kbd.h: 81:     if(RC3==0 && RC2==0 && RC1==0 && RC0==1) {
  1341  07BC  1283               	bcf	3,5	;RP0=0, select bank0
  1342  07BD  1303               	bcf	3,6	;RP1=0, select bank0
  1343  07BE  1987               	btfsc	7,3	;volatile
  1344  07BF  2FC1               	goto	u861
  1345  07C0  2FC2               	goto	u860
  1346  07C1                     u861:
  1347  07C1  2FE6               	goto	l1401
  1348  07C2                     u860:
  1349  07C2                     l1377:
  1350  07C2  1907               	btfsc	7,2	;volatile
  1351  07C3  2FC5               	goto	u871
  1352  07C4  2FC6               	goto	u870
  1353  07C5                     u871:
  1354  07C5  2FE6               	goto	l1401
  1355  07C6                     u870:
  1356  07C6                     l1379:
  1357  07C6  1887               	btfsc	7,1	;volatile
  1358  07C7  2FC9               	goto	u881
  1359  07C8  2FCA               	goto	u880
  1360  07C9                     u881:
  1361  07C9  2FE6               	goto	l1401
  1362  07CA                     u880:
  1363  07CA                     l1381:
  1364  07CA  1C07               	btfss	7,0	;volatile
  1365  07CB  2FCD               	goto	u891
  1366  07CC  2FCE               	goto	u890
  1367  07CD                     u891:
  1368  07CD  2FE6               	goto	l1401
  1369  07CE                     u890:
  1370  07CE                     l1383:
  1371                           
  1372                           ;./kbd.h: 82:         if (RA3 == 1) return '7';
  1373  07CE  1D85               	btfss	5,3	;volatile
  1374  07CF  2FD1               	goto	u901
  1375  07D0  2FD2               	goto	u900
  1376  07D1                     u901:
  1377  07D1  2FD4               	goto	l145
  1378  07D2                     u900:
  1379  07D2                     l1385:
  1380  07D2  3037               	movlw	55
  1381  07D3  2FE7               	goto	l130
  1382  07D4                     l145:
  1383                           
  1384                           ;./kbd.h: 83:         if (RA4 == 1) return '8';
  1385  07D4  1E05               	btfss	5,4	;volatile
  1386  07D5  2FD7               	goto	u911
  1387  07D6  2FD8               	goto	u910
  1388  07D7                     u911:
  1389  07D7  2FDA               	goto	l146
  1390  07D8                     u910:
  1391  07D8                     l1389:
  1392  07D8  3038               	movlw	56
  1393  07D9  2FE7               	goto	l130
  1394  07DA                     l146:
  1395                           
  1396                           ;./kbd.h: 84:         if (RA5 == 1) return '9';
  1397  07DA  1E85               	btfss	5,5	;volatile
  1398  07DB  2FDD               	goto	u921
  1399  07DC  2FDE               	goto	u920
  1400  07DD                     u921:
  1401  07DD  2FE0               	goto	l147
  1402  07DE                     u920:
  1403  07DE                     l1393:
  1404  07DE  3039               	movlw	57
  1405  07DF  2FE7               	goto	l130
  1406  07E0                     l147:
  1407                           
  1408                           ;./kbd.h: 85:         if (RC4 == 1) return '/';
  1409  07E0  1E07               	btfss	7,4	;volatile
  1410  07E1  2FE3               	goto	u931
  1411  07E2  2FE4               	goto	u930
  1412  07E3                     u931:
  1413  07E3  2FE6               	goto	l1401
  1414  07E4                     u930:
  1415  07E4                     l1397:
  1416  07E4  302F               	movlw	47
  1417  07E5  2FE7               	goto	l130
  1418  07E6                     l1401:
  1419                           
  1420                           ;./kbd.h: 87:  return 'x';
  1421  07E6  3078               	movlw	120
  1422  07E7                     l130:
  1423  07E7  0008               	return
  1424  07E8                     __end_of_keypad_readkey:
  1425                           
  1426                           	psect	text4
  1427  055F                     __ptext4:	
  1428 ;; *************** function _inicio_presentacion *****************
  1429 ;; Defined at:
  1430 ;;		line 203 in file "main.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;		None
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;  i               2   13[BANK0 ] int 
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  1    wreg      void 
  1437 ;; Registers used:
  1438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMMON   BANK0   BANK1
  1444 ;;      Params:         0       0       0
  1445 ;;      Locals:         0       2       0
  1446 ;;      Temps:          0       3       0
  1447 ;;      Totals:         0       5       0
  1448 ;;Total ram usage:        5 bytes
  1449 ;; Hardware stack levels used: 1
  1450 ;; Hardware stack levels required when called: 3
  1451 ;; This function calls:
  1452 ;;		_LCD_Cmd
  1453 ;;		_LCD_Goto
  1454 ;;		_LCD_Print
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           
  1461                           ;psect for function _inicio_presentacion
  1462  055F                     _inicio_presentacion:
  1463  055F                     l1495:	
  1464                           ;incstack = 0
  1465                           ; Regs used in _inicio_presentacion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  1466                           
  1467                           
  1468                           ;main.c: 205:     LCD_Goto(1,1);
  1469  055F  1283               	bcf	3,5	;RP0=0, select bank0
  1470  0560  1303               	bcf	3,6	;RP1=0, select bank0
  1471  0561  01D1               	clrf	LCD_Goto@row
  1472  0562  0AD1               	incf	LCD_Goto@row,f
  1473  0563  3001               	movlw	1
  1474  0564  118A  2483  118A   	fcall	_LCD_Goto
  1475  0567                     l1497:
  1476                           
  1477                           ;main.c: 206:     LCD_Print(M);
  1478  0567  3022               	movlw	(low (_M| 0))& (0+255)
  1479  0568  1283               	bcf	3,5	;RP0=0, select bank0
  1480  0569  1303               	bcf	3,6	;RP1=0, select bank0
  1481  056A  00CE               	movwf	LCD_Print@LCD_Str
  1482  056B  3000               	movlw	0
  1483  056C  00CF               	movwf	LCD_Print@LCD_Str+1
  1484  056D  118A  24B3  118A   	fcall	_LCD_Print
  1485  0570                     l1499:
  1486                           
  1487                           ;main.c: 207:     _delay((unsigned long)((50)*(32000000/4000.0)));
  1488  0570  3003               	movlw	3
  1489  0571  1283               	bcf	3,5	;RP0=0, select bank0
  1490  0572  1303               	bcf	3,6	;RP1=0, select bank0
  1491  0573  00D7               	movwf	??_inicio_presentacion+2
  1492  0574  3008               	movlw	8
  1493  0575  00D6               	movwf	??_inicio_presentacion+1
  1494  0576  3076               	movlw	118
  1495  0577  00D5               	movwf	??_inicio_presentacion
  1496  0578                     u1087:
  1497  0578  0BD5               	decfsz	??_inicio_presentacion,f
  1498  0579  2D78               	goto	u1087
  1499  057A  0BD6               	decfsz	??_inicio_presentacion+1,f
  1500  057B  2D78               	goto	u1087
  1501  057C  0BD7               	decfsz	??_inicio_presentacion+2,f
  1502  057D  2D78               	goto	u1087
  1503  057E  2D7F               	nop2
  1504  057F                     l1501:
  1505                           
  1506                           ;main.c: 208:     for(int i=0;i<40;i++){
  1507  057F  1283               	bcf	3,5	;RP0=0, select bank0
  1508  0580  1303               	bcf	3,6	;RP1=0, select bank0
  1509  0581  01D8               	clrf	inicio_presentacion@i
  1510  0582  01D9               	clrf	inicio_presentacion@i+1
  1511  0583                     l1507:
  1512                           
  1513                           ;main.c: 209:         LCD_Cmd(0x18);
  1514  0583  3018               	movlw	24
  1515  0584  118A  2455  118A   	fcall	_LCD_Cmd
  1516  0587                     l1509:
  1517                           
  1518                           ;main.c: 210:         _delay((unsigned long)((40)*(32000000/4000.0)));
  1519  0587  3002               	movlw	2
  1520  0588  1283               	bcf	3,5	;RP0=0, select bank0
  1521  0589  1303               	bcf	3,6	;RP1=0, select bank0
  1522  058A  00D7               	movwf	??_inicio_presentacion+2
  1523  058B  30A0               	movlw	160
  1524  058C  00D6               	movwf	??_inicio_presentacion+1
  1525  058D  3092               	movlw	146
  1526  058E  00D5               	movwf	??_inicio_presentacion
  1527  058F                     u1097:
  1528  058F  0BD5               	decfsz	??_inicio_presentacion,f
  1529  0590  2D8F               	goto	u1097
  1530  0591  0BD6               	decfsz	??_inicio_presentacion+1,f
  1531  0592  2D8F               	goto	u1097
  1532  0593  0BD7               	decfsz	??_inicio_presentacion+2,f
  1533  0594  2D8F               	goto	u1097
  1534  0595                     l1511:
  1535                           
  1536                           ;main.c: 211:     }
  1537  0595  3001               	movlw	1
  1538  0596  1283               	bcf	3,5	;RP0=0, select bank0
  1539  0597  1303               	bcf	3,6	;RP1=0, select bank0
  1540  0598  07D8               	addwf	inicio_presentacion@i,f
  1541  0599  1803               	skipnc
  1542  059A  0AD9               	incf	inicio_presentacion@i+1,f
  1543  059B  3000               	movlw	0
  1544  059C  07D9               	addwf	inicio_presentacion@i+1,f
  1545  059D                     l1513:
  1546  059D  0859               	movf	inicio_presentacion@i+1,w
  1547  059E  3A80               	xorlw	128
  1548  059F  00FF               	movwf	btemp+1
  1549  05A0  3080               	movlw	128
  1550  05A1  027F               	subwf	btemp+1,w
  1551  05A2  1D03               	skipz
  1552  05A3  2DA6               	goto	u975
  1553  05A4  3028               	movlw	40
  1554  05A5  0258               	subwf	inicio_presentacion@i,w
  1555  05A6                     u975:
  1556  05A6  1C03               	skipc
  1557  05A7  2DA9               	goto	u971
  1558  05A8  2DAA               	goto	u970
  1559  05A9                     u971:
  1560  05A9  2D83               	goto	l1507
  1561  05AA                     u970:
  1562  05AA                     l1515:
  1563                           
  1564                           ;main.c: 212:     _delay((unsigned long)((50)*(32000000/4000.0)));
  1565  05AA  3003               	movlw	3
  1566  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  1567  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  1568  05AD  00D7               	movwf	??_inicio_presentacion+2
  1569  05AE  3008               	movlw	8
  1570  05AF  00D6               	movwf	??_inicio_presentacion+1
  1571  05B0  3076               	movlw	118
  1572  05B1  00D5               	movwf	??_inicio_presentacion
  1573  05B2                     u1107:
  1574  05B2  0BD5               	decfsz	??_inicio_presentacion,f
  1575  05B3  2DB2               	goto	u1107
  1576  05B4  0BD6               	decfsz	??_inicio_presentacion+1,f
  1577  05B5  2DB2               	goto	u1107
  1578  05B6  0BD7               	decfsz	??_inicio_presentacion+2,f
  1579  05B7  2DB2               	goto	u1107
  1580  05B8  2DB9               	nop2
  1581  05B9                     l1517:
  1582                           
  1583                           ;main.c: 213:     LCD_Cmd(0x01);
  1584  05B9  3001               	movlw	1
  1585  05BA  118A  2455  118A   	fcall	_LCD_Cmd
  1586  05BD                     l1519:
  1587                           
  1588                           ;main.c: 214:     LCD_Goto(1, 1);
  1589  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  1590  05BE  1303               	bcf	3,6	;RP1=0, select bank0
  1591  05BF  01D1               	clrf	LCD_Goto@row
  1592  05C0  0AD1               	incf	LCD_Goto@row,f
  1593  05C1  3001               	movlw	1
  1594  05C2  118A  2483  118A   	fcall	_LCD_Goto
  1595  05C5                     l209:
  1596  05C5  0008               	return
  1597  05C6                     __end_of_inicio_presentacion:
  1598                           
  1599                           	psect	text5
  1600  04B3                     __ptext5:	
  1601 ;; *************** function _LCD_Print *****************
  1602 ;; Defined at:
  1603 ;;		line 113 in file "./lcd.h"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;  LCD_Str         2    3[BANK0 ] PTR unsigned char 
  1606 ;;		 -> M(41), STR_3(4), STR_2(3), RAM(512), 
  1607 ;;		 -> STR_1(5), 
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;  i               1    8[BANK0 ] unsigned char 
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  1    wreg      void 
  1612 ;; Registers used:
  1613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMMON   BANK0   BANK1
  1619 ;;      Params:         0       2       0
  1620 ;;      Locals:         0       1       0
  1621 ;;      Temps:          0       3       0
  1622 ;;      Totals:         0       6       0
  1623 ;;Total ram usage:        6 bytes
  1624 ;; Hardware stack levels used: 1
  1625 ;; Hardware stack levels required when called: 1
  1626 ;; This function calls:
  1627 ;;		_LCD_Write_Nibble
  1628 ;; This function is called by:
  1629 ;;		_main
  1630 ;;		_inicio_presentacion
  1631 ;;		_imprimir_valor_leds
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635                           
  1636                           ;psect for function _LCD_Print
  1637  04B3                     _LCD_Print:
  1638  04B3                     l1277:	
  1639                           ;incstack = 0
  1640                           ; Regs used in _LCD_Print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1641                           
  1642                           
  1643                           ;./lcd.h: 113: void LCD_Print(char* LCD_Str);./lcd.h: 114: {;./lcd.h: 115:   uint8_t i =
      +                           0;
  1644  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  1645  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  1646  04B5  01D3               	clrf	LCD_Print@i
  1647  04B6                     l1279:
  1648                           
  1649                           ;./lcd.h: 116:   RS = 1;
  1650  04B6  1468               	bsf	_RS/(0+8),_RS& (0+7)
  1651                           
  1652                           ;./lcd.h: 117:   while(LCD_Str[i] != '\0')
  1653  04B7  2CEA               	goto	l1285
  1654  04B8                     l1281:
  1655                           
  1656                           ;./lcd.h: 118:   {;./lcd.h: 119:     LCD_Write_Nibble(LCD_Str[i] >> 4);
  1657  04B8  0853               	movf	LCD_Print@i,w
  1658  04B9  00D0               	movwf	??_LCD_Print
  1659  04BA  01D1               	clrf	??_LCD_Print+1
  1660  04BB  0850               	movf	??_LCD_Print,w
  1661  04BC  074E               	addwf	LCD_Print@LCD_Str,w
  1662  04BD  0084               	movwf	4
  1663  04BE  0851               	movf	??_LCD_Print+1,w
  1664  04BF  1803               	skipnc
  1665  04C0  0A51               	incf	??_LCD_Print+1,w
  1666  04C1  074F               	addwf	LCD_Print@LCD_Str+1,w
  1667  04C2  00FF               	movwf	btemp+1
  1668  04C3  118A  2002  118A   	fcall	stringtab
  1669  04C6  00D2               	movwf	??_LCD_Print+2
  1670  04C7  3004               	movlw	4
  1671  04C8                     u605:
  1672  04C8  1003               	clrc
  1673  04C9  0CD2               	rrf	??_LCD_Print+2,f
  1674  04CA  3EFF               	addlw	-1
  1675  04CB  1D03               	skipz
  1676  04CC  2CC8               	goto	u605
  1677  04CD  0852               	movf	??_LCD_Print+2,w
  1678  04CE  118A  24FE  118A   	fcall	_LCD_Write_Nibble
  1679                           
  1680                           ;./lcd.h: 120:     LCD_Write_Nibble(LCD_Str[i++] );
  1681  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  1682  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  1683  04D3  0853               	movf	LCD_Print@i,w
  1684  04D4  00D0               	movwf	??_LCD_Print
  1685  04D5  01D1               	clrf	??_LCD_Print+1
  1686  04D6  0850               	movf	??_LCD_Print,w
  1687  04D7  074E               	addwf	LCD_Print@LCD_Str,w
  1688  04D8  0084               	movwf	4
  1689  04D9  0851               	movf	??_LCD_Print+1,w
  1690  04DA  1803               	skipnc
  1691  04DB  0A51               	incf	??_LCD_Print+1,w
  1692  04DC  074F               	addwf	LCD_Print@LCD_Str+1,w
  1693  04DD  00FF               	movwf	btemp+1
  1694  04DE  118A  2002  118A   	fcall	stringtab
  1695  04E1  118A  24FE  118A   	fcall	_LCD_Write_Nibble
  1696  04E4                     l1283:
  1697  04E4  3001               	movlw	1
  1698  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  1699  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  1700  04E7  00D0               	movwf	??_LCD_Print
  1701  04E8  0850               	movf	??_LCD_Print,w
  1702  04E9  07D3               	addwf	LCD_Print@i,f
  1703  04EA                     l1285:
  1704                           
  1705                           ;./lcd.h: 117:   while(LCD_Str[i] != '\0')
  1706  04EA  0853               	movf	LCD_Print@i,w
  1707  04EB  00D0               	movwf	??_LCD_Print
  1708  04EC  01D1               	clrf	??_LCD_Print+1
  1709  04ED  0850               	movf	??_LCD_Print,w
  1710  04EE  074E               	addwf	LCD_Print@LCD_Str,w
  1711  04EF  0084               	movwf	4
  1712  04F0  0851               	movf	??_LCD_Print+1,w
  1713  04F1  1803               	skipnc
  1714  04F2  0A51               	incf	??_LCD_Print+1,w
  1715  04F3  074F               	addwf	LCD_Print@LCD_Str+1,w
  1716  04F4  00FF               	movwf	btemp+1
  1717  04F5  118A  2002  118A   	fcall	stringtab
  1718  04F8  3A00               	xorlw	0
  1719  04F9  1D03               	skipz
  1720  04FA  2CFC               	goto	u611
  1721  04FB  2CFD               	goto	u610
  1722  04FC                     u611:
  1723  04FC  2CB8               	goto	l1281
  1724  04FD                     u610:
  1725  04FD                     l107:
  1726  04FD  0008               	return
  1727  04FE                     __end_of_LCD_Print:
  1728                           
  1729                           	psect	text6
  1730  0483                     __ptext6:	
  1731 ;; *************** function _LCD_Goto *****************
  1732 ;; Defined at:
  1733 ;;		line 87 in file "./lcd.h"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;  col             1    wreg     unsigned char 
  1736 ;;  row             1    6[BANK0 ] unsigned char 
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;  col             1    9[BANK0 ] unsigned char 
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  1    wreg      void 
  1741 ;; Registers used:
  1742 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMMON   BANK0   BANK1
  1748 ;;      Params:         0       1       0
  1749 ;;      Locals:         0       1       0
  1750 ;;      Temps:          0       2       0
  1751 ;;      Totals:         0       4       0
  1752 ;;Total ram usage:        4 bytes
  1753 ;; Hardware stack levels used: 1
  1754 ;; Hardware stack levels required when called: 2
  1755 ;; This function calls:
  1756 ;;		_LCD_Cmd
  1757 ;; This function is called by:
  1758 ;;		_main
  1759 ;;		_inicio_presentacion
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763                           
  1764                           ;psect for function _LCD_Goto
  1765  0483                     _LCD_Goto:
  1766                           
  1767                           ;incstack = 0
  1768                           ; Regs used in _LCD_Goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1769                           ;LCD_Goto@col stored from wreg
  1770  0483  1283               	bcf	3,5	;RP0=0, select bank0
  1771  0484  1303               	bcf	3,6	;RP1=0, select bank0
  1772  0485  00D4               	movwf	LCD_Goto@col
  1773  0486                     l1259:
  1774                           
  1775                           ;./lcd.h: 87: void LCD_Goto(uint8_t col, uint8_t row);./lcd.h: 88: {;./lcd.h: 89:   swit
      +                          ch(row)
  1776  0486  2C9F               	goto	l1269
  1777  0487                     l1261:
  1778                           
  1779                           ;./lcd.h: 92:       LCD_Cmd(0xC0 + col - 1);
  1780  0487  0854               	movf	LCD_Goto@col,w
  1781  0488  3EBF               	addlw	191
  1782  0489  118A  2455  118A   	fcall	_LCD_Cmd
  1783                           
  1784                           ;./lcd.h: 93:       break;
  1785  048C  2CB2               	goto	l98
  1786  048D                     l1263:
  1787                           
  1788                           ;./lcd.h: 95:       LCD_Cmd(0x94 + col - 1);
  1789  048D  0854               	movf	LCD_Goto@col,w
  1790  048E  3E93               	addlw	147
  1791  048F  118A  2455  118A   	fcall	_LCD_Cmd
  1792                           
  1793                           ;./lcd.h: 96:       break;
  1794  0492  2CB2               	goto	l98
  1795  0493                     l1265:
  1796                           
  1797                           ;./lcd.h: 98:       LCD_Cmd(0xD4 + col - 1);
  1798  0493  0854               	movf	LCD_Goto@col,w
  1799  0494  3ED3               	addlw	211
  1800  0495  118A  2455  118A   	fcall	_LCD_Cmd
  1801                           
  1802                           ;./lcd.h: 99:     break;
  1803  0498  2CB2               	goto	l98
  1804  0499                     l1267:
  1805                           
  1806                           ;./lcd.h: 101:       LCD_Cmd(0x80 + col - 1);
  1807  0499  0854               	movf	LCD_Goto@col,w
  1808  049A  3E7F               	addlw	127
  1809  049B  118A  2455  118A   	fcall	_LCD_Cmd
  1810                           
  1811                           ;./lcd.h: 102:   }
  1812  049E  2CB2               	goto	l98
  1813  049F                     l1269:
  1814  049F  0851               	movf	LCD_Goto@row,w
  1815  04A0  00D2               	movwf	??_LCD_Goto
  1816  04A1  01D3               	clrf	??_LCD_Goto+1
  1817                           
  1818                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1819                           ; Switch size 1, requested type "simple"
  1820                           ; Number of cases is 1, Range of values is 0 to 0
  1821                           ; switch strategies available:
  1822                           ; Name         Instructions Cycles
  1823                           ; simple_byte            4     3 (average)
  1824                           ; direct_byte            9     7 (fixed)
  1825                           ; jumptable            260     6 (fixed)
  1826                           ;	Chosen strategy is simple_byte
  1827  04A2  0853               	movf	??_LCD_Goto+1,w
  1828  04A3  3A00               	xorlw	0	; case 0
  1829  04A4  1903               	skipnz
  1830  04A5  2CA7               	goto	l1609
  1831  04A6  2C99               	goto	l1267
  1832  04A7                     l1609:
  1833                           
  1834                           ; Switch size 1, requested type "simple"
  1835                           ; Number of cases is 3, Range of values is 2 to 4
  1836                           ; switch strategies available:
  1837                           ; Name         Instructions Cycles
  1838                           ; simple_byte           10     6 (average)
  1839                           ; direct_byte           16    10 (fixed)
  1840                           ; jumptable            263     9 (fixed)
  1841                           ;	Chosen strategy is simple_byte
  1842  04A7  0852               	movf	??_LCD_Goto,w
  1843  04A8  3A02               	xorlw	2	; case 2
  1844  04A9  1903               	skipnz
  1845  04AA  2C87               	goto	l1261
  1846  04AB  3A01               	xorlw	1	; case 3
  1847  04AC  1903               	skipnz
  1848  04AD  2C8D               	goto	l1263
  1849  04AE  3A07               	xorlw	7	; case 4
  1850  04AF  1903               	skipnz
  1851  04B0  2C93               	goto	l1265
  1852  04B1  2C99               	goto	l1267
  1853  04B2                     l98:
  1854  04B2  0008               	return
  1855  04B3                     __end_of_LCD_Goto:
  1856                           
  1857                           	psect	text7
  1858  03B7                     __ptext7:	
  1859 ;; *************** function _iniciar_puertos *****************
  1860 ;; Defined at:
  1861 ;;		line 176 in file "main.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;		None
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;		None
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  1    wreg      void 
  1868 ;; Registers used:
  1869 ;;		wreg, status,2
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMMON   BANK0   BANK1
  1875 ;;      Params:         0       0       0
  1876 ;;      Locals:         0       0       0
  1877 ;;      Temps:          0       0       0
  1878 ;;      Totals:         0       0       0
  1879 ;;Total ram usage:        0 bytes
  1880 ;; Hardware stack levels used: 1
  1881 ;; This function calls:
  1882 ;;		Nothing
  1883 ;; This function is called by:
  1884 ;;		_main
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888                           
  1889                           ;psect for function _iniciar_puertos
  1890  03B7                     _iniciar_puertos:
  1891  03B7                     l1471:	
  1892                           ;incstack = 0
  1893                           ; Regs used in _iniciar_puertos: [wreg+status,2]
  1894                           
  1895                           
  1896                           ;main.c: 180:     PORTC=0X00;
  1897  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  1898  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  1899  03B9  0187               	clrf	7	;volatile
  1900                           
  1901                           ;main.c: 181:     PORTA = 0;
  1902  03BA  0185               	clrf	5	;volatile
  1903                           
  1904                           ;main.c: 182:     PORTB = 0;
  1905  03BB  0186               	clrf	6	;volatile
  1906                           
  1907                           ;main.c: 183:     PORTC = 0;
  1908  03BC  0187               	clrf	7	;volatile
  1909  03BD                     l1473:
  1910                           
  1911                           ;main.c: 185:     TRISCbits.TRISC0 = 0;
  1912  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  1913  03BE  1303               	bcf	3,6	;RP1=0, select bank1
  1914  03BF  1007               	bcf	7,0	;volatile
  1915  03C0                     l1475:
  1916                           
  1917                           ;main.c: 186:     TRISCbits.TRISC1 = 0;
  1918  03C0  1087               	bcf	7,1	;volatile
  1919  03C1                     l1477:
  1920                           
  1921                           ;main.c: 187:     TRISCbits.TRISC2 = 0;
  1922  03C1  1107               	bcf	7,2	;volatile
  1923  03C2                     l1479:
  1924                           
  1925                           ;main.c: 188:     TRISCbits.TRISC3 = 0;
  1926  03C2  1187               	bcf	7,3	;volatile
  1927  03C3                     l1481:
  1928                           
  1929                           ;main.c: 189:     TRISCbits.TRISC4 = 1;
  1930  03C3  1607               	bsf	7,4	;volatile
  1931  03C4                     l1483:
  1932                           
  1933                           ;main.c: 190:     TRISCbits.TRISC6 = 0;
  1934  03C4  1307               	bcf	7,6	;volatile
  1935  03C5                     l1485:
  1936                           
  1937                           ;main.c: 191:     TRISCbits.TRISC7 = 1;
  1938  03C5  1787               	bsf	7,7	;volatile
  1939  03C6                     l1487:
  1940                           
  1941                           ;main.c: 193:     TRISAbits.TRISA0 = 0;
  1942  03C6  1005               	bcf	5,0	;volatile
  1943  03C7                     l1489:
  1944                           
  1945                           ;main.c: 194:     TRISAbits.TRISA1 = 0;
  1946  03C7  1085               	bcf	5,1	;volatile
  1947  03C8                     l1491:
  1948                           
  1949                           ;main.c: 195:     TRISAbits.TRISA2 = 0;
  1950  03C8  1105               	bcf	5,2	;volatile
  1951  03C9                     l1493:
  1952                           
  1953                           ;main.c: 200:     ADCON1 = 0b00000110;
  1954  03C9  3006               	movlw	6
  1955  03CA  009F               	movwf	31	;volatile
  1956  03CB                     l204:
  1957  03CB  0008               	return
  1958  03CC                     __end_of_iniciar_puertos:
  1959                           
  1960                           	psect	text8
  1961  03CC                     __ptext8:	
  1962 ;; *************** function _LCD_PutC *****************
  1963 ;; Defined at:
  1964 ;;		line 106 in file "./lcd.h"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  LCD_Char        1    wreg     unsigned char 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  LCD_Char        1    4[BANK0 ] unsigned char 
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg, status,2, status,0, pclath, cstack
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMMON   BANK0   BANK1
  1978 ;;      Params:         0       0       0
  1979 ;;      Locals:         0       1       0
  1980 ;;      Temps:          0       1       0
  1981 ;;      Totals:         0       2       0
  1982 ;;Total ram usage:        2 bytes
  1983 ;; Hardware stack levels used: 1
  1984 ;; Hardware stack levels required when called: 1
  1985 ;; This function calls:
  1986 ;;		_LCD_Write_Nibble
  1987 ;; This function is called by:
  1988 ;;		_main
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           
  1993                           ;psect for function _LCD_PutC
  1994  03CC                     _LCD_PutC:
  1995                           
  1996                           ;incstack = 0
  1997                           ; Regs used in _LCD_PutC: [wreg+status,2+status,0+pclath+cstack]
  1998                           ;LCD_PutC@LCD_Char stored from wreg
  1999  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  2000  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  2001  03CE  00CF               	movwf	LCD_PutC@LCD_Char
  2002  03CF                     l1405:
  2003                           
  2004                           ;./lcd.h: 106: void LCD_PutC(char LCD_Char);./lcd.h: 107: {;./lcd.h: 108:   RS = 1;
  2005  03CF  1468               	bsf	_RS/(0+8),_RS& (0+7)
  2006  03D0                     l1407:
  2007                           
  2008                           ;./lcd.h: 109:   LCD_Write_Nibble(LCD_Char >> 4);
  2009  03D0  084F               	movf	LCD_PutC@LCD_Char,w
  2010  03D1  00CE               	movwf	??_LCD_PutC
  2011  03D2  3004               	movlw	4
  2012  03D3                     u945:
  2013  03D3  1003               	clrc
  2014  03D4  0CCE               	rrf	??_LCD_PutC,f
  2015  03D5  3EFF               	addlw	-1
  2016  03D6  1D03               	skipz
  2017  03D7  2BD3               	goto	u945
  2018  03D8  084E               	movf	??_LCD_PutC,w
  2019  03D9  118A  24FE  118A   	fcall	_LCD_Write_Nibble
  2020                           
  2021                           ;./lcd.h: 110:   LCD_Write_Nibble(LCD_Char );
  2022  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  2023  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  2024  03DE  084F               	movf	LCD_PutC@LCD_Char,w
  2025  03DF  118A  24FE  118A   	fcall	_LCD_Write_Nibble
  2026  03E2                     l101:
  2027  03E2  0008               	return
  2028  03E3                     __end_of_LCD_PutC:
  2029                           
  2030                           	psect	text9
  2031  0653                     __ptext9:	
  2032 ;; *************** function _LCD_Begin *****************
  2033 ;; Defined at:
  2034 ;;		line 124 in file "./lcd.h"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;		None
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;		None
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  1    wreg      void 
  2041 ;; Registers used:
  2042 ;;		wreg, status,2, status,0, pclath, cstack
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMMON   BANK0   BANK1
  2048 ;;      Params:         0       0       0
  2049 ;;      Locals:         0       0       0
  2050 ;;      Temps:          0       3       0
  2051 ;;      Totals:         0       3       0
  2052 ;;Total ram usage:        3 bytes
  2053 ;; Hardware stack levels used: 1
  2054 ;; Hardware stack levels required when called: 2
  2055 ;; This function calls:
  2056 ;;		_LCD_Cmd
  2057 ;; This function is called by:
  2058 ;;		_main
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           
  2063                           ;psect for function _LCD_Begin
  2064  0653                     _LCD_Begin:
  2065  0653                     l1409:	
  2066                           ;incstack = 0
  2067                           ; Regs used in _LCD_Begin: [wreg+status,2+status,0+pclath+cstack]
  2068                           
  2069                           
  2070                           ;./lcd.h: 126:   RS = 0;
  2071  0653  1283               	bcf	3,5	;RP0=0, select bank0
  2072  0654  1303               	bcf	3,6	;RP1=0, select bank0
  2073  0655  1068               	bcf	_RS/(0+8),_RS& (0+7)
  2074                           
  2075                           ;./lcd.h: 127:   PORTAbits.RA0 = 0;
  2076  0656  1005               	bcf	5,0	;volatile
  2077                           
  2078                           ;./lcd.h: 128:   PORTAbits.RA1 = 0;
  2079  0657  1085               	bcf	5,1	;volatile
  2080                           
  2081                           ;./lcd.h: 129:   PORTAbits.RA2 = 0;
  2082  0658  1105               	bcf	5,2	;volatile
  2083                           
  2084                           ;./lcd.h: 134:   PORTBbits.RB4 = 0;
  2085  0659  1206               	bcf	6,4	;volatile
  2086                           
  2087                           ;./lcd.h: 135:   PORTBbits.RB5 = 0;
  2088  065A  1286               	bcf	6,5	;volatile
  2089                           
  2090                           ;./lcd.h: 136:   PORTBbits.RB6 = 0;
  2091  065B  1306               	bcf	6,6	;volatile
  2092                           
  2093                           ;./lcd.h: 137:   PORTBbits.RB7 = 0;
  2094  065C  1386               	bcf	6,7	;volatile
  2095                           
  2096                           ;./lcd.h: 138:   TRISAbits.TRISA0 = 0;
  2097  065D  1683               	bsf	3,5	;RP0=1, select bank1
  2098  065E  1303               	bcf	3,6	;RP1=0, select bank1
  2099  065F  1005               	bcf	5,0	;volatile
  2100                           
  2101                           ;./lcd.h: 139:   TRISAbits.TRISA1 = 0;
  2102  0660  1085               	bcf	5,1	;volatile
  2103                           
  2104                           ;./lcd.h: 140:   TRISAbits.TRISA2 = 0;
  2105  0661  1105               	bcf	5,2	;volatile
  2106                           
  2107                           ;./lcd.h: 145:   TRISBbits.TRISB4 = 0;
  2108  0662  1206               	bcf	6,4	;volatile
  2109                           
  2110                           ;./lcd.h: 146:   TRISBbits.TRISB5 = 0;
  2111  0663  1286               	bcf	6,5	;volatile
  2112                           
  2113                           ;./lcd.h: 147:   TRISBbits.TRISB6 = 0;
  2114  0664  1306               	bcf	6,6	;volatile
  2115                           
  2116                           ;./lcd.h: 148:   TRISBbits.TRISB7 = 0;
  2117  0665  1386               	bcf	6,7	;volatile
  2118  0666                     l1411:
  2119                           
  2120                           ;./lcd.h: 149:   _delay((unsigned long)((40)*(32000000/4000.0)));
  2121  0666  3002               	movlw	2
  2122  0667  1283               	bcf	3,5	;RP0=0, select bank0
  2123  0668  1303               	bcf	3,6	;RP1=0, select bank0
  2124  0669  00D3               	movwf	??_LCD_Begin+2
  2125  066A  30A0               	movlw	160
  2126  066B  00D2               	movwf	??_LCD_Begin+1
  2127  066C  3092               	movlw	146
  2128  066D  00D1               	movwf	??_LCD_Begin
  2129  066E                     u1117:
  2130  066E  0BD1               	decfsz	??_LCD_Begin,f
  2131  066F  2E6E               	goto	u1117
  2132  0670  0BD2               	decfsz	??_LCD_Begin+1,f
  2133  0671  2E6E               	goto	u1117
  2134  0672  0BD3               	decfsz	??_LCD_Begin+2,f
  2135  0673  2E6E               	goto	u1117
  2136  0674                     l1413:
  2137                           
  2138                           ;./lcd.h: 150:   LCD_Cmd(3);
  2139  0674  3003               	movlw	3
  2140  0675  118A  2455  118A   	fcall	_LCD_Cmd
  2141  0678                     l1415:
  2142                           
  2143                           ;./lcd.h: 151:   _delay((unsigned long)((5)*(32000000/4000.0)));
  2144  0678  3034               	movlw	52
  2145  0679  1283               	bcf	3,5	;RP0=0, select bank0
  2146  067A  1303               	bcf	3,6	;RP1=0, select bank0
  2147  067B  00D2               	movwf	??_LCD_Begin+1
  2148  067C  30F1               	movlw	241
  2149  067D  00D1               	movwf	??_LCD_Begin
  2150  067E                     u1127:
  2151  067E  0BD1               	decfsz	??_LCD_Begin,f
  2152  067F  2E7E               	goto	u1127
  2153  0680  0BD2               	decfsz	??_LCD_Begin+1,f
  2154  0681  2E7E               	goto	u1127
  2155  0682  0000               	nop
  2156                           
  2157                           ;./lcd.h: 152:   LCD_Cmd(3);
  2158  0683  3003               	movlw	3
  2159  0684  118A  2455  118A   	fcall	_LCD_Cmd
  2160  0687                     l1417:
  2161                           
  2162                           ;./lcd.h: 153:   _delay((unsigned long)((5)*(32000000/4000.0)));
  2163  0687  3034               	movlw	52
  2164  0688  1283               	bcf	3,5	;RP0=0, select bank0
  2165  0689  1303               	bcf	3,6	;RP1=0, select bank0
  2166  068A  00D2               	movwf	??_LCD_Begin+1
  2167  068B  30F1               	movlw	241
  2168  068C  00D1               	movwf	??_LCD_Begin
  2169  068D                     u1137:
  2170  068D  0BD1               	decfsz	??_LCD_Begin,f
  2171  068E  2E8D               	goto	u1137
  2172  068F  0BD2               	decfsz	??_LCD_Begin+1,f
  2173  0690  2E8D               	goto	u1137
  2174  0691  0000               	nop
  2175  0692                     l1419:
  2176                           
  2177                           ;./lcd.h: 154:   LCD_Cmd(3);
  2178  0692  3003               	movlw	3
  2179  0693  118A  2455  118A   	fcall	_LCD_Cmd
  2180                           
  2181                           ;./lcd.h: 155:   _delay((unsigned long)((5)*(32000000/4000.0)));
  2182  0696  3034               	movlw	52
  2183  0697  1283               	bcf	3,5	;RP0=0, select bank0
  2184  0698  1303               	bcf	3,6	;RP1=0, select bank0
  2185  0699  00D2               	movwf	??_LCD_Begin+1
  2186  069A  30F1               	movlw	241
  2187  069B  00D1               	movwf	??_LCD_Begin
  2188  069C                     u1147:
  2189  069C  0BD1               	decfsz	??_LCD_Begin,f
  2190  069D  2E9C               	goto	u1147
  2191  069E  0BD2               	decfsz	??_LCD_Begin+1,f
  2192  069F  2E9C               	goto	u1147
  2193  06A0  0000               	nop
  2194  06A1                     l1421:
  2195                           
  2196                           ;./lcd.h: 156:   LCD_Cmd(0x02);
  2197  06A1  3002               	movlw	2
  2198  06A2  118A  2455  118A   	fcall	_LCD_Cmd
  2199  06A5                     l1423:
  2200                           
  2201                           ;./lcd.h: 157:   _delay((unsigned long)((5)*(32000000/4000.0)));
  2202  06A5  3034               	movlw	52
  2203  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  2204  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  2205  06A8  00D2               	movwf	??_LCD_Begin+1
  2206  06A9  30F1               	movlw	241
  2207  06AA  00D1               	movwf	??_LCD_Begin
  2208  06AB                     u1157:
  2209  06AB  0BD1               	decfsz	??_LCD_Begin,f
  2210  06AC  2EAB               	goto	u1157
  2211  06AD  0BD2               	decfsz	??_LCD_Begin+1,f
  2212  06AE  2EAB               	goto	u1157
  2213  06AF  0000               	nop
  2214                           
  2215                           ;./lcd.h: 158:   LCD_Cmd(0x20 | (2 << 2));
  2216  06B0  3028               	movlw	40
  2217  06B1  118A  2455  118A   	fcall	_LCD_Cmd
  2218  06B4                     l1425:
  2219                           
  2220                           ;./lcd.h: 159:   _delay((unsigned long)((50)*(32000000/4000.0)));
  2221  06B4  3003               	movlw	3
  2222  06B5  1283               	bcf	3,5	;RP0=0, select bank0
  2223  06B6  1303               	bcf	3,6	;RP1=0, select bank0
  2224  06B7  00D3               	movwf	??_LCD_Begin+2
  2225  06B8  3008               	movlw	8
  2226  06B9  00D2               	movwf	??_LCD_Begin+1
  2227  06BA  3076               	movlw	118
  2228  06BB  00D1               	movwf	??_LCD_Begin
  2229  06BC                     u1167:
  2230  06BC  0BD1               	decfsz	??_LCD_Begin,f
  2231  06BD  2EBC               	goto	u1167
  2232  06BE  0BD2               	decfsz	??_LCD_Begin+1,f
  2233  06BF  2EBC               	goto	u1167
  2234  06C0  0BD3               	decfsz	??_LCD_Begin+2,f
  2235  06C1  2EBC               	goto	u1167
  2236  06C2  2EC3               	nop2
  2237  06C3                     l1427:
  2238                           
  2239                           ;./lcd.h: 160:   LCD_Cmd(0x0C);
  2240  06C3  300C               	movlw	12
  2241  06C4  118A  2455  118A   	fcall	_LCD_Cmd
  2242                           
  2243                           ;./lcd.h: 161:   _delay((unsigned long)((50)*(32000000/4000.0)));
  2244  06C7  3003               	movlw	3
  2245  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  2246  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  2247  06CA  00D3               	movwf	??_LCD_Begin+2
  2248  06CB  3008               	movlw	8
  2249  06CC  00D2               	movwf	??_LCD_Begin+1
  2250  06CD  3076               	movlw	118
  2251  06CE  00D1               	movwf	??_LCD_Begin
  2252  06CF                     u1177:
  2253  06CF  0BD1               	decfsz	??_LCD_Begin,f
  2254  06D0  2ECF               	goto	u1177
  2255  06D1  0BD2               	decfsz	??_LCD_Begin+1,f
  2256  06D2  2ECF               	goto	u1177
  2257  06D3  0BD3               	decfsz	??_LCD_Begin+2,f
  2258  06D4  2ECF               	goto	u1177
  2259  06D5  2ED6               	nop2
  2260  06D6                     l1429:
  2261                           
  2262                           ;./lcd.h: 162:   LCD_Cmd(0x01);
  2263  06D6  3001               	movlw	1
  2264  06D7  118A  2455  118A   	fcall	_LCD_Cmd
  2265  06DA                     l1431:
  2266                           
  2267                           ;./lcd.h: 163:   _delay((unsigned long)((50)*(32000000/4000.0)));
  2268  06DA  3003               	movlw	3
  2269  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  2270  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  2271  06DD  00D3               	movwf	??_LCD_Begin+2
  2272  06DE  3008               	movlw	8
  2273  06DF  00D2               	movwf	??_LCD_Begin+1
  2274  06E0  3076               	movlw	118
  2275  06E1  00D1               	movwf	??_LCD_Begin
  2276  06E2                     u1187:
  2277  06E2  0BD1               	decfsz	??_LCD_Begin,f
  2278  06E3  2EE2               	goto	u1187
  2279  06E4  0BD2               	decfsz	??_LCD_Begin+1,f
  2280  06E5  2EE2               	goto	u1187
  2281  06E6  0BD3               	decfsz	??_LCD_Begin+2,f
  2282  06E7  2EE2               	goto	u1187
  2283  06E8  2EE9               	nop2
  2284                           
  2285                           ;./lcd.h: 164:   LCD_Cmd(0x04 | 0x02);
  2286  06E9  3006               	movlw	6
  2287  06EA  118A  2455  118A   	fcall	_LCD_Cmd
  2288  06ED                     l1433:
  2289                           
  2290                           ;./lcd.h: 165:   _delay((unsigned long)((50)*(32000000/4000.0)));
  2291  06ED  3003               	movlw	3
  2292  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  2293  06EF  1303               	bcf	3,6	;RP1=0, select bank0
  2294  06F0  00D3               	movwf	??_LCD_Begin+2
  2295  06F1  3008               	movlw	8
  2296  06F2  00D2               	movwf	??_LCD_Begin+1
  2297  06F3  3076               	movlw	118
  2298  06F4  00D1               	movwf	??_LCD_Begin
  2299  06F5                     u1197:
  2300  06F5  0BD1               	decfsz	??_LCD_Begin,f
  2301  06F6  2EF5               	goto	u1197
  2302  06F7  0BD2               	decfsz	??_LCD_Begin+1,f
  2303  06F8  2EF5               	goto	u1197
  2304  06F9  0BD3               	decfsz	??_LCD_Begin+2,f
  2305  06FA  2EF5               	goto	u1197
  2306  06FB  2EFC               	nop2
  2307  06FC                     l1435:
  2308                           
  2309                           ;./lcd.h: 166:   LCD_Cmd(0x0F);
  2310  06FC  300F               	movlw	15
  2311  06FD  118A  2455  118A   	fcall	_LCD_Cmd
  2312                           
  2313                           ;./lcd.h: 167:   _delay((unsigned long)((50)*(32000000/4000.0)));
  2314  0700  3003               	movlw	3
  2315  0701  1283               	bcf	3,5	;RP0=0, select bank0
  2316  0702  1303               	bcf	3,6	;RP1=0, select bank0
  2317  0703  00D3               	movwf	??_LCD_Begin+2
  2318  0704  3008               	movlw	8
  2319  0705  00D2               	movwf	??_LCD_Begin+1
  2320  0706  3076               	movlw	118
  2321  0707  00D1               	movwf	??_LCD_Begin
  2322  0708                     u1207:
  2323  0708  0BD1               	decfsz	??_LCD_Begin,f
  2324  0709  2F08               	goto	u1207
  2325  070A  0BD2               	decfsz	??_LCD_Begin+1,f
  2326  070B  2F08               	goto	u1207
  2327  070C  0BD3               	decfsz	??_LCD_Begin+2,f
  2328  070D  2F08               	goto	u1207
  2329  070E  2F0F               	nop2
  2330  070F                     l110:
  2331  070F  0008               	return
  2332  0710                     __end_of_LCD_Begin:
  2333                           
  2334                           	psect	text10
  2335  0455                     __ptext10:	
  2336 ;; *************** function _LCD_Cmd *****************
  2337 ;; Defined at:
  2338 ;;		line 78 in file "./lcd.h"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;  Command         1    wreg     unsigned char 
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;  Command         1    5[BANK0 ] unsigned char 
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  1    wreg      void 
  2345 ;; Registers used:
  2346 ;;		wreg, status,2, status,0, pclath, cstack
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMMON   BANK0   BANK1
  2352 ;;      Params:         0       0       0
  2353 ;;      Locals:         0       1       0
  2354 ;;      Temps:          0       2       0
  2355 ;;      Totals:         0       3       0
  2356 ;;Total ram usage:        3 bytes
  2357 ;; Hardware stack levels used: 1
  2358 ;; Hardware stack levels required when called: 1
  2359 ;; This function calls:
  2360 ;;		_LCD_Write_Nibble
  2361 ;; This function is called by:
  2362 ;;		_LCD_Goto
  2363 ;;		_LCD_Begin
  2364 ;;		_main
  2365 ;;		_inicio_presentacion
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369                           
  2370                           ;psect for function _LCD_Cmd
  2371  0455                     _LCD_Cmd:
  2372                           
  2373                           ;incstack = 0
  2374                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2375                           ;LCD_Cmd@Command stored from wreg
  2376  0455  1283               	bcf	3,5	;RP0=0, select bank0
  2377  0456  1303               	bcf	3,6	;RP1=0, select bank0
  2378  0457  00D0               	movwf	LCD_Cmd@Command
  2379  0458                     l1249:
  2380                           
  2381                           ;./lcd.h: 78: void LCD_Cmd(uint8_t Command);./lcd.h: 79: {;./lcd.h: 80:   RS = 0;
  2382  0458  1068               	bcf	_RS/(0+8),_RS& (0+7)
  2383  0459                     l1251:
  2384                           
  2385                           ;./lcd.h: 81:   LCD_Write_Nibble(Command >> 4);
  2386  0459  0850               	movf	LCD_Cmd@Command,w
  2387  045A  00CE               	movwf	??_LCD_Cmd
  2388  045B  3004               	movlw	4
  2389  045C                     u575:
  2390  045C  1003               	clrc
  2391  045D  0CCE               	rrf	??_LCD_Cmd,f
  2392  045E  3EFF               	addlw	-1
  2393  045F  1D03               	skipz
  2394  0460  2C5C               	goto	u575
  2395  0461  084E               	movf	??_LCD_Cmd,w
  2396  0462  118A  24FE  118A   	fcall	_LCD_Write_Nibble
  2397                           
  2398                           ;./lcd.h: 82:   LCD_Write_Nibble(Command);
  2399  0465  1283               	bcf	3,5	;RP0=0, select bank0
  2400  0466  1303               	bcf	3,6	;RP1=0, select bank0
  2401  0467  0850               	movf	LCD_Cmd@Command,w
  2402  0468  118A  24FE  118A   	fcall	_LCD_Write_Nibble
  2403  046B                     l1253:
  2404                           
  2405                           ;./lcd.h: 83:   if((Command == 0x01) || (Command == 0x02))
  2406  046B  1283               	bcf	3,5	;RP0=0, select bank0
  2407  046C  1303               	bcf	3,6	;RP1=0, select bank0
  2408  046D  0350               	decf	LCD_Cmd@Command,w
  2409  046E  1903               	btfsc	3,2
  2410  046F  2C71               	goto	u581
  2411  0470  2C72               	goto	u580
  2412  0471                     u581:
  2413  0471  2C78               	goto	l1257
  2414  0472                     u580:
  2415  0472                     l1255:
  2416  0472  3002               	movlw	2
  2417  0473  0650               	xorwf	LCD_Cmd@Command,w
  2418  0474  1D03               	btfss	3,2
  2419  0475  2C77               	goto	u591
  2420  0476  2C78               	goto	u590
  2421  0477                     u591:
  2422  0477  2C82               	goto	l89
  2423  0478                     u590:
  2424  0478                     l1257:
  2425                           
  2426                           ;./lcd.h: 84:     _delay((unsigned long)((2)*(32000000/4000.0)));
  2427  0478  3015               	movlw	21
  2428  0479  1283               	bcf	3,5	;RP0=0, select bank0
  2429  047A  1303               	bcf	3,6	;RP1=0, select bank0
  2430  047B  00CF               	movwf	??_LCD_Cmd+1
  2431  047C  30C6               	movlw	198
  2432  047D  00CE               	movwf	??_LCD_Cmd
  2433  047E                     u1217:
  2434  047E  0BCE               	decfsz	??_LCD_Cmd,f
  2435  047F  2C7E               	goto	u1217
  2436  0480  0BCF               	decfsz	??_LCD_Cmd+1,f
  2437  0481  2C7E               	goto	u1217
  2438  0482                     l89:
  2439  0482  0008               	return
  2440  0483                     __end_of_LCD_Cmd:
  2441                           
  2442                           	psect	text11
  2443  04FE                     __ptext11:	
  2444 ;; *************** function _LCD_Write_Nibble *****************
  2445 ;; Defined at:
  2446 ;;		line 61 in file "./lcd.h"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;  n               1    wreg     unsigned char 
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;  n               1    2[BANK0 ] unsigned char 
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  1    wreg      void 
  2453 ;; Registers used:
  2454 ;;		wreg, status,2, status,0
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMMON   BANK0   BANK1
  2460 ;;      Params:         0       0       0
  2461 ;;      Locals:         0       1       0
  2462 ;;      Temps:          0       2       0
  2463 ;;      Totals:         0       3       0
  2464 ;;Total ram usage:        3 bytes
  2465 ;; Hardware stack levels used: 1
  2466 ;; This function calls:
  2467 ;;		Nothing
  2468 ;; This function is called by:
  2469 ;;		_LCD_Cmd
  2470 ;;		_LCD_PutC
  2471 ;;		_LCD_Print
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           
  2476                           ;psect for function _LCD_Write_Nibble
  2477  04FE                     _LCD_Write_Nibble:
  2478                           
  2479                           ;incstack = 0
  2480                           ; Regs used in _LCD_Write_Nibble: [wreg+status,2+status,0]
  2481                           ;LCD_Write_Nibble@n stored from wreg
  2482  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  2483  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  2484  0500  00CD               	movwf	LCD_Write_Nibble@n
  2485  0501                     l1233:
  2486                           
  2487                           ;./lcd.h: 61: void LCD_Write_Nibble(uint8_t n);./lcd.h: 62: {;./lcd.h: 63:   PORTAbits.R
      +                          A0 = RS;
  2488  0501  1868               	btfsc	_RS/(0+8),_RS& (0+7)
  2489  0502  2D04               	goto	u531
  2490  0503  2D08               	goto	u530
  2491  0504                     u531:
  2492  0504  1283               	bcf	3,5	;RP0=0, select bank0
  2493  0505  1303               	bcf	3,6	;RP1=0, select bank0
  2494  0506  1405               	bsf	5,0	;volatile
  2495  0507  2D0B               	goto	u544
  2496  0508                     u530:
  2497  0508  1283               	bcf	3,5	;RP0=0, select bank0
  2498  0509  1303               	bcf	3,6	;RP1=0, select bank0
  2499  050A  1005               	bcf	5,0	;volatile
  2500  050B                     u544:
  2501  050B                     l1235:
  2502                           
  2503                           ;./lcd.h: 64:   PORTBbits.RB4 = n & 0x01;
  2504  050B  084D               	movf	LCD_Write_Nibble@n,w
  2505  050C  3901               	andlw	1
  2506  050D  00CB               	movwf	??_LCD_Write_Nibble
  2507  050E  0ECB               	swapf	??_LCD_Write_Nibble,f
  2508  050F  0806               	movf	6,w	;volatile
  2509  0510  064B               	xorwf	??_LCD_Write_Nibble,w
  2510  0511  39EF               	andlw	-17
  2511  0512  064B               	xorwf	??_LCD_Write_Nibble,w
  2512  0513  0086               	movwf	6	;volatile
  2513                           
  2514                           ;./lcd.h: 65:   PORTBbits.RB5 = (n >> 1) & 0x01;
  2515  0514  084D               	movf	LCD_Write_Nibble@n,w
  2516  0515  00CB               	movwf	??_LCD_Write_Nibble
  2517  0516  1003               	clrc
  2518  0517  0C4B               	rrf	??_LCD_Write_Nibble,w
  2519  0518  3901               	andlw	1
  2520  0519  00CC               	movwf	??_LCD_Write_Nibble+1
  2521  051A  0ECC               	swapf	??_LCD_Write_Nibble+1,f
  2522  051B  0DCC               	rlf	??_LCD_Write_Nibble+1,f
  2523  051C  0806               	movf	6,w	;volatile
  2524  051D  064C               	xorwf	??_LCD_Write_Nibble+1,w
  2525  051E  39DF               	andlw	-33
  2526  051F  064C               	xorwf	??_LCD_Write_Nibble+1,w
  2527  0520  0086               	movwf	6	;volatile
  2528                           
  2529                           ;./lcd.h: 66:   PORTBbits.RB6 = (n >> 2) & 0x01;
  2530  0521  084D               	movf	LCD_Write_Nibble@n,w
  2531  0522  00CB               	movwf	??_LCD_Write_Nibble
  2532  0523  3002               	movlw	2
  2533  0524                     u555:
  2534  0524  1003               	clrc
  2535  0525  0CCB               	rrf	??_LCD_Write_Nibble,f
  2536  0526  3EFF               	addlw	-1
  2537  0527  1D03               	skipz
  2538  0528  2D24               	goto	u555
  2539  0529  084B               	movf	??_LCD_Write_Nibble,w
  2540  052A  3901               	andlw	1
  2541  052B  00CC               	movwf	??_LCD_Write_Nibble+1
  2542  052C  0ECC               	swapf	??_LCD_Write_Nibble+1,f
  2543  052D  0DCC               	rlf	??_LCD_Write_Nibble+1,f
  2544  052E  0DCC               	rlf	??_LCD_Write_Nibble+1,f
  2545  052F  0806               	movf	6,w	;volatile
  2546  0530  064C               	xorwf	??_LCD_Write_Nibble+1,w
  2547  0531  39BF               	andlw	-65
  2548  0532  064C               	xorwf	??_LCD_Write_Nibble+1,w
  2549  0533  0086               	movwf	6	;volatile
  2550                           
  2551                           ;./lcd.h: 67:   PORTBbits.RB7 = (n >> 3) & 0x01;
  2552  0534  084D               	movf	LCD_Write_Nibble@n,w
  2553  0535  00CB               	movwf	??_LCD_Write_Nibble
  2554  0536  3003               	movlw	3
  2555  0537                     u565:
  2556  0537  1003               	clrc
  2557  0538  0CCB               	rrf	??_LCD_Write_Nibble,f
  2558  0539  3EFF               	addlw	-1
  2559  053A  1D03               	skipz
  2560  053B  2D37               	goto	u565
  2561  053C  084B               	movf	??_LCD_Write_Nibble,w
  2562  053D  3901               	andlw	1
  2563  053E  00CC               	movwf	??_LCD_Write_Nibble+1
  2564  053F  0CCC               	rrf	??_LCD_Write_Nibble+1,f
  2565  0540  0CCC               	rrf	??_LCD_Write_Nibble+1,f
  2566  0541  0806               	movf	6,w	;volatile
  2567  0542  064C               	xorwf	??_LCD_Write_Nibble+1,w
  2568  0543  397F               	andlw	-129
  2569  0544  064C               	xorwf	??_LCD_Write_Nibble+1,w
  2570  0545  0086               	movwf	6	;volatile
  2571  0546                     l1237:
  2572                           
  2573                           ;./lcd.h: 70:   PORTAbits.RA2 = 0;
  2574  0546  1105               	bcf	5,2	;volatile
  2575  0547                     l1239:
  2576                           
  2577                           ;./lcd.h: 71:   _delay((unsigned long)((1)*(32000000/4000000.0)));
  2578  0547  2D48               	nop2	;2 cycle nop
  2579  0548  2D49               	nop2	;2 cycle nop
  2580  0549  2D4A               	nop2	;2 cycle nop
  2581  054A  2D4B               	nop2	;2 cycle nop
  2582  054B                     l1241:
  2583                           
  2584                           ;./lcd.h: 72:   PORTAbits.RA2 = 1;
  2585  054B  1283               	bcf	3,5	;RP0=0, select bank0
  2586  054C  1303               	bcf	3,6	;RP1=0, select bank0
  2587  054D  1505               	bsf	5,2	;volatile
  2588  054E                     l1243:
  2589                           
  2590                           ;./lcd.h: 73:   _delay((unsigned long)((1)*(32000000/4000000.0)));
  2591  054E  2D4F               	nop2	;2 cycle nop
  2592  054F  2D50               	nop2	;2 cycle nop
  2593  0550  2D51               	nop2	;2 cycle nop
  2594  0551  2D52               	nop2	;2 cycle nop
  2595  0552                     l1245:
  2596                           
  2597                           ;./lcd.h: 74:   PORTAbits.RA2 = 0;
  2598  0552  1283               	bcf	3,5	;RP0=0, select bank0
  2599  0553  1303               	bcf	3,6	;RP1=0, select bank0
  2600  0554  1105               	bcf	5,2	;volatile
  2601  0555                     l1247:
  2602                           
  2603                           ;./lcd.h: 75:   _delay((unsigned long)((100)*(32000000/4000000.0)));
  2604  0555  309F               	movlw	159
  2605  0556  1283               	bcf	3,5	;RP0=0, select bank0
  2606  0557  1303               	bcf	3,6	;RP1=0, select bank0
  2607  0558  00CB               	movwf	??_LCD_Write_Nibble
  2608  0559                     u1227:
  2609  0559  2D5A               	nop2
  2610  055A  0BCB               	decfsz	??_LCD_Write_Nibble,f
  2611  055B  2D59               	goto	u1227
  2612  055C  2D5D               	nop2
  2613  055D  0000               	nop
  2614  055E                     l83:
  2615  055E  0008               	return
  2616  055F                     __end_of_LCD_Write_Nibble:
  2617  007E                     btemp	set	126	;btemp
  2618  007E                     wtemp0	set	126
  2619                           
  2620                           	psect	config
  2621                           
  2622                           ;Config register CONFIG @ 0x2007
  2623                           ;	Oscillator Selection bits
  2624                           ;	FOSC = XT, XT oscillator
  2625                           ;	Watchdog Timer Enable bit
  2626                           ;	WDTE = OFF, WDT disabled
  2627                           ;	Power-up Timer Enable bit
  2628                           ;	PWRTE = OFF, PWRT disabled
  2629                           ;	FLASH Program Memory Code Protection bits
  2630                           ;	CP = OFF, Code protection off
  2631                           ;	Brown-out Reset Enable bit
  2632                           ;	BOREN = OFF, BOR disabled
  2633                           ;	Low Voltage In-Circuit Serial Programming Enable bit
  2634                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2635                           ;	Data EE Memory Code Protection
  2636                           ;	CPD = OFF, Code Protection off
  2637                           ;	FLASH Program Memory Write Enable
  2638                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
  2639                           ;	In-Circuit Debugger Mode bit
  2640                           ;	DEBUG = 0x1, unprogrammed default
  2641  2007                     	org	8199
  2642  2007  3D39               	dw	15673

Data Sizes:
    Strings     12
    Constant    0
    Data        43
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94     21      73
    BANK1            94      0       0

Pointer List with Targets:

    LCD_Print@LCD_Str	PTR unsigned char  size(2) Largest target is 512
		 -> M(BANK0[41]), STR_3(CODE[4]), STR_2(CODE[3]), RAM(DATA[512]), 
		 -> STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_inicio_presentacion
    _keypad_getkey->_keypad_readkey
    _inicio_presentacion->_LCD_Goto
    _LCD_Print->_LCD_Write_Nibble
    _LCD_Goto->_LCD_Cmd
    _LCD_PutC->_LCD_Write_Nibble
    _LCD_Begin->_LCD_Cmd
    _LCD_Cmd->_LCD_Write_Nibble

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    3143
                                             15 BANK0      6     6      0
                          _LCD_Begin
                            _LCD_Cmd
                           _LCD_Goto
                          _LCD_Print
                           _LCD_PutC
                    _iniciar_puertos
                _inicio_presentacion
                      _keypad_getkey
                _set_configuraciones
 ---------------------------------------------------------------------------------
 (1) _set_configuraciones                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keypad_getkey                                        2     2      0      46
                                              1 BANK0      2     2      0
                     _keypad_readkey
 ---------------------------------------------------------------------------------
 (2) _keypad_readkey                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicio_presentacion                                  5     5      0    1338
                                             10 BANK0      5     5      0
                            _LCD_Cmd
                           _LCD_Goto
                          _LCD_Print
 ---------------------------------------------------------------------------------
 (2) _LCD_Print                                            6     4      2     602
                                              3 BANK0      6     4      2
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Goto                                             4     3      1     514
                                              6 BANK0      4     3      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _iniciar_puertos                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_PutC                                             2     2      0     132
                                              3 BANK0      2     2      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            3     3      0     176
                                              6 BANK0      3     3      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0     176
                                              3 BANK0      3     3      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Nibble                                     3     3      0      88
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Begin
     _LCD_Cmd
       _LCD_Write_Nibble
   _LCD_Cmd
   _LCD_Goto
     _LCD_Cmd
   _LCD_Print
     _LCD_Write_Nibble
   _LCD_PutC
     _LCD_Write_Nibble
   _iniciar_puertos
   _inicio_presentacion
     _LCD_Cmd
     _LCD_Goto
     _LCD_Print
   _keypad_getkey
     _keypad_readkey
   _set_configuraciones

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               5E      0       0       6        0.0%
BITBANK1            5E      0       0       5        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               5E     15      49       4       77.7%
BITBANK0            5E      0       1       3        1.1%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      49       8        0.0%
ABS                  0      0      49       7        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon May 17 19:13:01 2021

                           _M 0022                             _X 0020                             pc 0002  
                          l83 055E                            l89 0482                            _GO 00FA  
                          l98 04B2                            _RS 0340                            fsr 0004  
         _set_configuraciones 0404                           l101 03E2                           l110 070F  
                         l130 07E7                           l107 04FD                           l131 073B  
                         l204 03CB                           l140 079F                           l132 0741  
                         l141 07A5                           l142 07AB                           l134 077C  
                         l135 076A                           l136 0770                           l128 0747  
                         l209 05C5                           l145 07D4                           l137 0776  
                         l129 0735                           l146 07DA                           l170 0429  
                         l147 07E0                           l139 07B1                           l157 0403  
                         _ECO 0066                           _RA3 002B                           _RC0 0038  
                         _RA4 002C                           _RC1 0039                           _RA5 002D  
                         _RC2 003A                           _RC3 003B                           _RC4 003C  
                         u530 0508                           u610 04FD                           u531 0504  
                         u611 04FC                           u700 0758                           u620 0723  
                         u605 04C8                           u701 0757                           u621 0722  
                         u710 075C                           u630 0727                           u711 075B  
                         u631 0726                           u544 050B                           u800 0795  
                         u720 0760                           u640 072B                           u801 0794  
                         u721 075F                           u641 072A                           u810 0799  
                         u730 0764                           u650 072F                           u555 0524  
                         u811 0798                           u731 0763                           u651 072E  
                         u580 0472                           u900 07D2                           u820 079D  
                         u740 0768                           u660 0733                           u565 0537  
                         u581 0471                           u901 07D1                           u821 079C  
                         u741 0767                           u661 0732                           u590 0478  
                         u910 07D8                           u830 07A3                           u750 076E  
                         u670 0739                           u591 0477                           u575 045C  
                         u911 07D7                           u831 07A2                           u751 076D  
                         u671 0738                           u920 07DE                           u840 07A9  
                         u760 0774                           u680 073F                           u921 07DD  
                         u841 07A8                           u761 0773                           u681 073E  
                         u930 07E4                           u850 07AF                           u770 077A  
                         u690 0745                           u931 07E3                           u851 07AE  
                         u771 0779                           u691 0744                           u860 07C2  
                         u780 078D                           u861 07C1                           u781 078C  
                         u870 07C6                           u790 0791                           u950 03F8  
                         u871 07C5                           u791 0790                           u951 03F7  
                         u880 07CA                           u960 0400                           u945 03D3  
                         u881 07C9                           u961 03FF                           u970 05AA  
                         u890 07CE                           u971 05A9                           u891 07CD  
                         u980 0609                           u981 0608                           u990 0617  
                         u975 05A6                           u991 0616                           u985 0605  
            ?_iniciar_puertos 004B                           fsr0 0004                           indf 0000  
             __end_of_LCD_Cmd 0483                          l1301 0733                          l1241 054B  
                        l1233 0501                          l1401 07E6                          l1321 0758  
                        l1313 0745                          l1305 0739                          l1243 054E  
                        l1235 050B                          l1251 0459                          l1411 0666  
                        l1323 075C                          l1245 0552                          l1237 0546  
                        l1253 046B                          l1421 06A1                          l1413 0674  
                        l1405 03CF                          l1261 0487                          l1501 057F  
                        l1341 077A                          l1333 076E                          l1325 0760  
                        l1317 074B                          l1309 073F                          l1247 0555  
                        l1239 0547                          l1255 0472                          l1431 06DA  
                        l1423 06A5                          l1415 0678                          l1407 03D0  
                        l1263 048D                          l1511 0595                          l1351 0791  
                        l1327 0764                          l1319 0752                          l1257 0478  
                        l1249 0458                          l1433 06ED                          l1425 06B4  
                        l1417 0687                          l1409 0653                          l1265 0493  
                        l1281 04B8                          l1513 059D                          l1361 07A3  
                        l1353 0795                          l1345 0780                          l1337 0774  
                        l1329 0768                          l1441 03F2                          l1435 06FC  
                        l1427 06C3                          l1419 0692                          l1267 0499  
                        l1259 0486                          l1283 04E4                          l1515 05AA  
                        l1507 0583                          l1355 0799                          l1347 0787  
                        l1291 071D                          l1443 03F8                          l1451 040C  
                        l1429 06D6                          l1269 049F                          l1285 04EA  
                        l1277 04B3                          l1517 05B9                          l1509 0587  
                        l1381 07CA                          l1373 07B5                          l1365 07A9  
                        l1357 079D                          l1349 078D                          l1293 0723  
                        l1445 0400                          l1437 03E3                          l1461 041D  
                        l1453 0413                          l1541 05D0                          l1471 03B7  
                        l1279 04B6                          l1519 05BD                          l1383 07CE  
                        l1375 07BC                          l1295 0727                          l1287 0710  
                        l1439 03EA                          l1463 0420                          l1455 0416  
                        l1551 05FA                          l1543 05D3                          l1535 05C6  
                        l1481 03C3                          l1473 03BD                          l1609 04A7  
                        l1393 07DE                          l1385 07D2                          l1377 07C2  
                        l1369 07AF                          l1297 072B                          l1289 0716  
                        l1465 0421                          l1457 0419                          l1449 0404  
                        l1561 0621                          l1553 0609                          l1545 05D6  
                        l1537 05CA                          l1491 03C8                          l1483 03C4  
                        l1475 03C0                          l1379 07C6                          l1299 072F  
                        l1467 0422                          l1459 041C                          l1563 062B  
                        l1555 0611                          l1571 063F                          l1547 05E4  
                        l1539 05CD                          l1493 03C9                          l1485 03C5  
                        l1477 03C1                          l1397 07E4                          l1389 07D8  
                        l1469 0425                          l1573 0643                          l1557 0617  
                        l1565 0632                          l1549 05EC                          l1487 03C6  
                        l1479 03C2                          l1495 055F                          l1575 0647  
                        l1567 0638                          l1559 061D                          l1489 03C7  
                        l1497 0567                          l1569 063A                          l1499 0570  
           ?_LCD_Write_Nibble 004B                          _ADIF 0066                          _ADON 00F8  
                        _CHS0 00FB                          _CHS1 00FC                          _CHS2 00FD  
                        STR_1 0012                          STR_2 001B                          STR_3 0017  
                        u1000 061D                          u1001 061C                          u1010 0638  
                        u1011 0637                          u1107 05B2                          u1027 05DE  
                        u1117 066E                          u1037 05F4                          u1207 0708  
                        u1127 067E                          u1047 071A                          u1217 047E  
                        u1137 068D                          u1057 074F                          u1227 0559  
                        u1147 069C                          u1067 0784                          u1157 06AB  
                        u1077 07B9                          u1167 06BC                          u1087 0578  
                        u1177 06CF                          u1097 058F                          u1187 06E2  
                        u1197 06F5                          _TMR0 0001          ?_set_configuraciones 004B  
          ??_LCD_Write_Nibble 004B                          _main 05C6            __size_of_LCD_Begin 00BD  
                        btemp 007E            __size_of_LCD_Print 004B                          start 0000  
                 LCD_Goto@col 0054                   LCD_Goto@row 0051              __end_of_LCD_Goto 04B3  
            __end_of_LCD_PutC 03E3                         ?_main 004B                         _ADRES 0064  
                       _RCREG 001A                         _RCSTA 0018                         _SPBRG 0099  
                       _PORTA 0005                         _PORTB 0006                         _PORTC 0007  
                       _TXREG 0019                         _TXSTA 0098              ??_keypad_readkey 004B  
                       main@c 005F                         main@i 005D                         pclath 000A  
       ??_set_configuraciones 0000                         status 0003                         wtemp0 007E  
             __initialization 07E8                  __end_of_main 0653                        ??_main 005A  
           __end_of_LCD_Begin 0710                     ??_LCD_Cmd 004E             __end_of_LCD_Print 04FE  
                      _ADCON0 001F                        _ADCON1 009F                        _ADRESH 001E  
                      _ADRESL 009E                        _number 0060       __end_of__initialization 07FD  
                   ?_LCD_Goto 0051                     ?_LCD_PutC 004B        __size_of_keypad_getkey 0021  
__size_of_inicio_presentacion 0067                __pcstackCOMMON 0000                  __pidataBANK0 042A  
              LCD_Cmd@Command 0050                    __pbssBANK0 0060                    ??_LCD_Goto 0052  
                  ??_LCD_PutC 004E                    __pmaintext 05C6     __size_of_LCD_Write_Nibble 0061  
               _keypad_getkey 03E3                       _LCD_Cmd 0455                    __stringtab 0002  
    __size_of_iniciar_puertos 0015              LCD_PutC@LCD_Char 004F                       __ptext1 0404  
                     __ptext2 03E3                       __ptext3 0710                       __ptext4 055F  
                     __ptext5 04B3                       __ptext6 0483                       __ptext7 03B7  
                     __ptext8 03CC                       __ptext9 0653                ?_keypad_getkey 004B  
 __end_of_set_configuraciones 042A                     _LCD_Begin 0653                     _LCD_Print 04B3  
        end_of_initialization 07FD                     _RCSTAbits 0018             LCD_Write_Nibble@n 004D  
                   _PORTAbits 0005                     _PORTBbits 0006                     _TRISAbits 0085  
                   _TRISBbits 0086                     _TRISCbits 0087                    ?_LCD_Begin 004B  
         _inicio_presentacion 055F                    ?_LCD_Print 004E                     _TXSTAbits 0098  
     __size_of_keypad_readkey 00D8             __size_of_LCD_Goto 0030             __size_of_LCD_PutC 0017  
           ??_iniciar_puertos 0000          ?_inicio_presentacion 004B              _LCD_Write_Nibble 04FE  
                  LCD_Print@i 0053               ??_keypad_getkey 004C                 __pbitbssBANK0 0340  
         start_initialization 07E8          inicio_presentacion@i 0058         ??_inicio_presentacion 0055  
                  init_fetch0 03A6                   __pdataBANK0 0020                      ?_LCD_Cmd 004B  
                   ___latbits 0001                 __pcstackBANK0 004B                   ??_LCD_Begin 0051  
                 ??_LCD_Print 0050              LCD_Print@LCD_Str 004E                     __pstrings 0002  
                    _LCD_Goto 0483                      _LCD_PutC 03CC                _keypad_readkey 0710  
                    _PIR1bits 000C                   __stringbase 0011              __size_of_LCD_Cmd 002E  
    __end_of_LCD_Write_Nibble 055F               _iniciar_puertos 03B7        __end_of_keypad_readkey 07E8  
__size_of_set_configuraciones 0026            __end_of__stringtab 0012                      __ptext10 0455  
                    __ptext11 04FE               ?_keypad_readkey 004B                 __size_of_main 008D  
       __end_of_keypad_getkey 0404       __end_of_iniciar_puertos 03CC              keypad_getkey@key 004D  
                    init_ram0 03AA   __end_of_inicio_presentacion 05C6                     stringcode 000C  
                  _OPTION_REG 0081                      stringdir 000C                      stringtab 0002  
