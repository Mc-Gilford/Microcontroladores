

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon May 17 20:50:08 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F873
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F873 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010F                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  000A                     	;# 
   115  000B                     	;# 
   116  000C                     	;# 
   117  000D                     	;# 
   118  000E                     	;# 
   119  000E                     	;# 
   120  000F                     	;# 
   121  0010                     	;# 
   122  0011                     	;# 
   123  0012                     	;# 
   124  0013                     	;# 
   125  0014                     	;# 
   126  0015                     	;# 
   127  0015                     	;# 
   128  0016                     	;# 
   129  0017                     	;# 
   130  0018                     	;# 
   131  0019                     	;# 
   132  001A                     	;# 
   133  001B                     	;# 
   134  001B                     	;# 
   135  001C                     	;# 
   136  001D                     	;# 
   137  001E                     	;# 
   138  001F                     	;# 
   139  0081                     	;# 
   140  0085                     	;# 
   141  0086                     	;# 
   142  0087                     	;# 
   143  008C                     	;# 
   144  008D                     	;# 
   145  008E                     	;# 
   146  0091                     	;# 
   147  0092                     	;# 
   148  0093                     	;# 
   149  0094                     	;# 
   150  0098                     	;# 
   151  0099                     	;# 
   152  009E                     	;# 
   153  009F                     	;# 
   154  010C                     	;# 
   155  010D                     	;# 
   156  010E                     	;# 
   157  010F                     	;# 
   158  018C                     	;# 
   159  018D                     	;# 
   160  0007                     _PORTC	set	7
   161  0005                     _PORTA	set	5
   162  0006                     _PORTB	set	6
   163  0018                     _RCSTAbits	set	24
   164  0018                     _RCSTA	set	24
   165  001F                     _ADCON0	set	31
   166  001E                     _ADRESH	set	30
   167  001A                     _RCREG	set	26
   168  0019                     _TXREG	set	25
   169  000C                     _PIR1bits	set	12
   170  0001                     _TMR0	set	1
   171  0066                     _ADIF	set	102
   172  00FA                     _GO	set	250
   173  00F8                     _ADON	set	248
   174  00FB                     _CHS0	set	251
   175  00FC                     _CHS1	set	252
   176  00FD                     _CHS2	set	253
   177  0086                     _TRISB	set	134
   178  0099                     _SPBRG	set	153
   179  0098                     _TXSTA	set	152
   180  0081                     _OPTION_REG	set	129
   181  009F                     _ADCON1	set	159
   182  009E                     _ADRESL	set	158
   183  0098                     _TXSTAbits	set	152
   184  043F                     _TRISC7	set	1087
   185  043E                     _TRISC6	set	1086
   186  042A                     _TRISA2	set	1066
   187  0429                     _TRISA1	set	1065
   188  0428                     _TRISA0	set	1064
   189                           
   190                           	psect	cinit
   191  07F7                     start_initialization:	
   192                           ; #config settings
   193                           
   194  07F7                     __initialization:
   195                           
   196                           ; Clear objects allocated to BANK0
   197  07F7  1283               	bcf	3,5	;RP0=0, select bank0
   198  07F8  1303               	bcf	3,6	;RP1=0, select bank0
   199  07F9  01A0               	clrf	__pbssBANK0& (0+127)
   200  07FA  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   201  07FB  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   202  07FC  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   203  07FD                     end_of_initialization:	
   204                           ;End of C runtime variable initialization code
   205                           
   206  07FD                     __end_of__initialization:
   207  07FD  0183               	clrf	3
   208  07FE  118A  2F38         	ljmp	_main	;jump to C main() function
   209                           
   210                           	psect	bssBANK0
   211  0020                     __pbssBANK0:
   212  0020                     _ADRES:
   213  0020                     	ds	2
   214  0022                     _ECO:
   215  0022                     	ds	2
   216                           
   217                           	psect	cstackCOMMON
   218  0000                     __pcstackCOMMON:
   219  0000                     ??_iniciar_puertos:
   220  0000                     ??_Tx_Dato:	
   221                           ; 1 bytes @ 0x0
   222                           
   223  0000                     ??_Rx_Dato:	
   224                           ; 1 bytes @ 0x0
   225                           
   226  0000                     ??_set_configuraciones:	
   227                           ; 1 bytes @ 0x0
   228                           
   229  0000                     ??_main:	
   230                           ; 1 bytes @ 0x0
   231                           
   232                           
   233                           	psect	cstackBANK0
   234  0024                     __pcstackBANK0:	
   235                           ; 1 bytes @ 0x0
   236                           
   237  0024                     ?_iniciar_puertos:
   238  0024                     ?_Canal0:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  0024                     ?_Tx_Dato:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0024                     ?_Rx_Dato:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0024                     ?_enviar_datos:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0024                     ?_set_configuraciones:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0024                     ?_main:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0024                     Tx_Dato@X:	
   257                           ; 2 bytes @ 0x0
   258                           
   259  0024                     Canal0@z:	
   260                           ; 1 bytes @ 0x0
   261                           
   262                           
   263                           ; 2 bytes @ 0x0
   264  0024                     	ds	1
   265  0025                     ??_enviar_datos:
   266                           
   267                           ; 1 bytes @ 0x1
   268  0025                     	ds	1
   269  0026                     ??_Canal0:
   270                           
   271                           ; 1 bytes @ 0x2
   272  0026                     	ds	2
   273                           
   274                           	psect	maintext
   275  0738                     __pmaintext:	
   276 ;;
   277 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   278 ;;
   279 ;; *************** function _main *****************
   280 ;; Defined at:
   281 ;;		line 136 in file "main.c"
   282 ;; Parameters:    Size  Location     Type
   283 ;;		None
   284 ;; Auto vars:     Size  Location     Type
   285 ;;		None
   286 ;; Return value:  Size  Location     Type
   287 ;;                  2  101[None  ] int 
   288 ;; Registers used:
   289 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   290 ;; Tracked objects:
   291 ;;		On entry : B00/0
   292 ;;		On exit  : 0/0
   293 ;;		Unchanged: 0/0
   294 ;; Data sizes:     COMMON   BANK0   BANK1
   295 ;;      Params:         0       0       0
   296 ;;      Locals:         0       0       0
   297 ;;      Temps:          0       0       0
   298 ;;      Totals:         0       0       0
   299 ;;Total ram usage:        0 bytes
   300 ;; Hardware stack levels required when called: 2
   301 ;; This function calls:
   302 ;;		_Canal0
   303 ;;		_enviar_datos
   304 ;;		_iniciar_puertos
   305 ;;		_set_configuraciones
   306 ;; This function is called by:
   307 ;;		Startup code after reset
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311                           
   312                           ;psect for function _main
   313  0738                     _main:
   314  0738                     l907:	
   315                           ;incstack = 0
   316                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   317                           
   318                           
   319                           ;main.c: 138:     set_configuraciones();
   320  0738  118A  270F  118A   	fcall	_set_configuraciones
   321  073B                     l909:
   322                           
   323                           ;main.c: 139:     iniciar_puertos();
   324  073B  118A  26C5  118A   	fcall	_iniciar_puertos
   325  073E                     l911:
   326                           
   327                           ;main.c: 141:             Canal0(2);
   328  073E  3002               	movlw	2
   329  073F  1283               	bcf	3,5	;RP0=0, select bank0
   330  0740  1303               	bcf	3,6	;RP1=0, select bank0
   331  0741  00A4               	movwf	Canal0@z
   332  0742  3000               	movlw	0
   333  0743  00A5               	movwf	Canal0@z+1
   334  0744  118A  26D3  118A   	fcall	_Canal0
   335  0747                     l913:
   336                           
   337                           ;main.c: 142:             enviar_datos();
   338  0747  118A  26EE  118A   	fcall	_enviar_datos
   339  074A                     l915:
   340                           
   341                           ;main.c: 145:             if(ADRES < 127)
   342  074A  1283               	bcf	3,5	;RP0=0, select bank0
   343  074B  1303               	bcf	3,6	;RP1=0, select bank0
   344  074C  0821               	movf	_ADRES+1,w
   345  074D  3A80               	xorlw	128
   346  074E  00FF               	movwf	btemp+1
   347  074F  3080               	movlw	128
   348  0750  027F               	subwf	btemp+1,w
   349  0751  1D03               	skipz
   350  0752  2F55               	goto	u185
   351  0753  307F               	movlw	127
   352  0754  0220               	subwf	_ADRES,w
   353  0755                     u185:
   354  0755  1803               	skipnc
   355  0756  2F58               	goto	u181
   356  0757  2F59               	goto	u180
   357  0758                     u181:
   358  0758  2F5C               	goto	l919
   359  0759                     u180:
   360  0759                     l917:
   361                           
   362                           ;main.c: 146:                 PORTB = 0x00;
   363  0759  1283               	bcf	3,5	;RP0=0, select bank0
   364  075A  1303               	bcf	3,6	;RP1=0, select bank0
   365  075B  0186               	clrf	6	;volatile
   366  075C                     l919:
   367                           
   368                           ;main.c: 147:             if(ADRES > 127)
   369  075C  1283               	bcf	3,5	;RP0=0, select bank0
   370  075D  1303               	bcf	3,6	;RP1=0, select bank0
   371  075E  0821               	movf	_ADRES+1,w
   372  075F  3A80               	xorlw	128
   373  0760  00FF               	movwf	btemp+1
   374  0761  3080               	movlw	128
   375  0762  027F               	subwf	btemp+1,w
   376  0763  1D03               	skipz
   377  0764  2F67               	goto	u195
   378  0765  3080               	movlw	128
   379  0766  0220               	subwf	_ADRES,w
   380  0767                     u195:
   381  0767  1C03               	skipc
   382  0768  2F6A               	goto	u191
   383  0769  2F6B               	goto	u190
   384  076A                     u191:
   385  076A  2F6F               	goto	l923
   386  076B                     u190:
   387  076B                     l921:
   388                           
   389                           ;main.c: 148:                 PORTB = 0x01;
   390  076B  3001               	movlw	1
   391  076C  1283               	bcf	3,5	;RP0=0, select bank0
   392  076D  1303               	bcf	3,6	;RP1=0, select bank0
   393  076E  0086               	movwf	6	;volatile
   394  076F                     l923:
   395                           
   396                           ;main.c: 149:             if(ADRES > 255)
   397  076F  1283               	bcf	3,5	;RP0=0, select bank0
   398  0770  1303               	bcf	3,6	;RP1=0, select bank0
   399  0771  0821               	movf	_ADRES+1,w
   400  0772  3A80               	xorlw	128
   401  0773  00FF               	movwf	btemp+1
   402  0774  3081               	movlw	129
   403  0775  027F               	subwf	btemp+1,w
   404  0776  1D03               	skipz
   405  0777  2F7A               	goto	u205
   406  0778  3000               	movlw	0
   407  0779  0220               	subwf	_ADRES,w
   408  077A                     u205:
   409  077A  1C03               	skipc
   410  077B  2F7D               	goto	u201
   411  077C  2F7E               	goto	u200
   412  077D                     u201:
   413  077D  2F82               	goto	l927
   414  077E                     u200:
   415  077E                     l925:
   416                           
   417                           ;main.c: 150:                 PORTB = 0x03;
   418  077E  3003               	movlw	3
   419  077F  1283               	bcf	3,5	;RP0=0, select bank0
   420  0780  1303               	bcf	3,6	;RP1=0, select bank0
   421  0781  0086               	movwf	6	;volatile
   422  0782                     l927:
   423                           
   424                           ;main.c: 151:             if(ADRES > 382)
   425  0782  1283               	bcf	3,5	;RP0=0, select bank0
   426  0783  1303               	bcf	3,6	;RP1=0, select bank0
   427  0784  0821               	movf	_ADRES+1,w
   428  0785  3A80               	xorlw	128
   429  0786  00FF               	movwf	btemp+1
   430  0787  3081               	movlw	129
   431  0788  027F               	subwf	btemp+1,w
   432  0789  1D03               	skipz
   433  078A  2F8D               	goto	u215
   434  078B  307F               	movlw	127
   435  078C  0220               	subwf	_ADRES,w
   436  078D                     u215:
   437  078D  1C03               	skipc
   438  078E  2F90               	goto	u211
   439  078F  2F91               	goto	u210
   440  0790                     u211:
   441  0790  2F95               	goto	l931
   442  0791                     u210:
   443  0791                     l929:
   444                           
   445                           ;main.c: 152:                 PORTB = 0x07;
   446  0791  3007               	movlw	7
   447  0792  1283               	bcf	3,5	;RP0=0, select bank0
   448  0793  1303               	bcf	3,6	;RP1=0, select bank0
   449  0794  0086               	movwf	6	;volatile
   450  0795                     l931:
   451                           
   452                           ;main.c: 153:             if(ADRES > 511)
   453  0795  1283               	bcf	3,5	;RP0=0, select bank0
   454  0796  1303               	bcf	3,6	;RP1=0, select bank0
   455  0797  0821               	movf	_ADRES+1,w
   456  0798  3A80               	xorlw	128
   457  0799  00FF               	movwf	btemp+1
   458  079A  3082               	movlw	130
   459  079B  027F               	subwf	btemp+1,w
   460  079C  1D03               	skipz
   461  079D  2FA0               	goto	u225
   462  079E  3000               	movlw	0
   463  079F  0220               	subwf	_ADRES,w
   464  07A0                     u225:
   465  07A0  1C03               	skipc
   466  07A1  2FA3               	goto	u221
   467  07A2  2FA4               	goto	u220
   468  07A3                     u221:
   469  07A3  2FA8               	goto	l935
   470  07A4                     u220:
   471  07A4                     l933:
   472                           
   473                           ;main.c: 154:                 PORTB = 0x0F;
   474  07A4  300F               	movlw	15
   475  07A5  1283               	bcf	3,5	;RP0=0, select bank0
   476  07A6  1303               	bcf	3,6	;RP1=0, select bank0
   477  07A7  0086               	movwf	6	;volatile
   478  07A8                     l935:
   479                           
   480                           ;main.c: 155:             if(ADRES > 639)
   481  07A8  1283               	bcf	3,5	;RP0=0, select bank0
   482  07A9  1303               	bcf	3,6	;RP1=0, select bank0
   483  07AA  0821               	movf	_ADRES+1,w
   484  07AB  3A80               	xorlw	128
   485  07AC  00FF               	movwf	btemp+1
   486  07AD  3082               	movlw	130
   487  07AE  027F               	subwf	btemp+1,w
   488  07AF  1D03               	skipz
   489  07B0  2FB3               	goto	u235
   490  07B1  3080               	movlw	128
   491  07B2  0220               	subwf	_ADRES,w
   492  07B3                     u235:
   493  07B3  1C03               	skipc
   494  07B4  2FB6               	goto	u231
   495  07B5  2FB7               	goto	u230
   496  07B6                     u231:
   497  07B6  2FBB               	goto	l939
   498  07B7                     u230:
   499  07B7                     l937:
   500                           
   501                           ;main.c: 156:                 PORTB = 0x1F;
   502  07B7  301F               	movlw	31
   503  07B8  1283               	bcf	3,5	;RP0=0, select bank0
   504  07B9  1303               	bcf	3,6	;RP1=0, select bank0
   505  07BA  0086               	movwf	6	;volatile
   506  07BB                     l939:
   507                           
   508                           ;main.c: 157:             if(ADRES > 767)
   509  07BB  1283               	bcf	3,5	;RP0=0, select bank0
   510  07BC  1303               	bcf	3,6	;RP1=0, select bank0
   511  07BD  0821               	movf	_ADRES+1,w
   512  07BE  3A80               	xorlw	128
   513  07BF  00FF               	movwf	btemp+1
   514  07C0  3083               	movlw	131
   515  07C1  027F               	subwf	btemp+1,w
   516  07C2  1D03               	skipz
   517  07C3  2FC6               	goto	u245
   518  07C4  3000               	movlw	0
   519  07C5  0220               	subwf	_ADRES,w
   520  07C6                     u245:
   521  07C6  1C03               	skipc
   522  07C7  2FC9               	goto	u241
   523  07C8  2FCA               	goto	u240
   524  07C9                     u241:
   525  07C9  2FCE               	goto	l943
   526  07CA                     u240:
   527  07CA                     l941:
   528                           
   529                           ;main.c: 158:                 PORTB = 0x3F;
   530  07CA  303F               	movlw	63
   531  07CB  1283               	bcf	3,5	;RP0=0, select bank0
   532  07CC  1303               	bcf	3,6	;RP1=0, select bank0
   533  07CD  0086               	movwf	6	;volatile
   534  07CE                     l943:
   535                           
   536                           ;main.c: 159:             if(ADRES > 894)
   537  07CE  1283               	bcf	3,5	;RP0=0, select bank0
   538  07CF  1303               	bcf	3,6	;RP1=0, select bank0
   539  07D0  0821               	movf	_ADRES+1,w
   540  07D1  3A80               	xorlw	128
   541  07D2  00FF               	movwf	btemp+1
   542  07D3  3083               	movlw	131
   543  07D4  027F               	subwf	btemp+1,w
   544  07D5  1D03               	skipz
   545  07D6  2FD9               	goto	u255
   546  07D7  307F               	movlw	127
   547  07D8  0220               	subwf	_ADRES,w
   548  07D9                     u255:
   549  07D9  1C03               	skipc
   550  07DA  2FDC               	goto	u251
   551  07DB  2FDD               	goto	u250
   552  07DC                     u251:
   553  07DC  2FE1               	goto	l947
   554  07DD                     u250:
   555  07DD                     l945:
   556                           
   557                           ;main.c: 160:                 PORTB = 0x7F;
   558  07DD  307F               	movlw	127
   559  07DE  1283               	bcf	3,5	;RP0=0, select bank0
   560  07DF  1303               	bcf	3,6	;RP1=0, select bank0
   561  07E0  0086               	movwf	6	;volatile
   562  07E1                     l947:
   563                           
   564                           ;main.c: 161:             if(ADRES > 1022)
   565  07E1  1283               	bcf	3,5	;RP0=0, select bank0
   566  07E2  1303               	bcf	3,6	;RP1=0, select bank0
   567  07E3  0821               	movf	_ADRES+1,w
   568  07E4  3A80               	xorlw	128
   569  07E5  00FF               	movwf	btemp+1
   570  07E6  3083               	movlw	131
   571  07E7  027F               	subwf	btemp+1,w
   572  07E8  1D03               	skipz
   573  07E9  2FEC               	goto	u265
   574  07EA  30FF               	movlw	255
   575  07EB  0220               	subwf	_ADRES,w
   576  07EC                     u265:
   577  07EC  1C03               	skipc
   578  07ED  2FEF               	goto	u261
   579  07EE  2FF0               	goto	u260
   580  07EF                     u261:
   581  07EF  2F3E               	goto	l911
   582  07F0                     u260:
   583  07F0                     l949:
   584                           
   585                           ;main.c: 162:                 PORTB = 0xFF;
   586  07F0  30FF               	movlw	255
   587  07F1  1283               	bcf	3,5	;RP0=0, select bank0
   588  07F2  1303               	bcf	3,6	;RP1=0, select bank0
   589  07F3  0086               	movwf	6	;volatile
   590  07F4  2F3E               	goto	l911
   591  07F5  118A  2800         	ljmp	start
   592  07F7                     __end_of_main:
   593                           
   594                           	psect	text1
   595  070F                     __ptext1:	
   596 ;; *************** function _set_configuraciones *****************
   597 ;; Defined at:
   598 ;;		line 106 in file "main.c"
   599 ;; Parameters:    Size  Location     Type
   600 ;;		None
   601 ;; Auto vars:     Size  Location     Type
   602 ;;		None
   603 ;; Return value:  Size  Location     Type
   604 ;;                  1    wreg      void 
   605 ;; Registers used:
   606 ;;		wreg, status,2
   607 ;; Tracked objects:
   608 ;;		On entry : 0/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMMON   BANK0   BANK1
   612 ;;      Params:         0       0       0
   613 ;;      Locals:         0       0       0
   614 ;;      Temps:          0       0       0
   615 ;;      Totals:         0       0       0
   616 ;;Total ram usage:        0 bytes
   617 ;; Hardware stack levels used: 1
   618 ;; This function calls:
   619 ;;		Nothing
   620 ;; This function is called by:
   621 ;;		_main
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           
   625                           
   626                           ;psect for function _set_configuraciones
   627  070F                     _set_configuraciones:
   628  070F                     l865:	
   629                           ;incstack = 0
   630                           ; Regs used in _set_configuraciones: [wreg+status,2]
   631                           
   632                           
   633                           ;main.c: 109:     ADCON0 = 0x80;
   634  070F  3080               	movlw	128
   635  0710  1283               	bcf	3,5	;RP0=0, select bank0
   636  0711  1303               	bcf	3,6	;RP1=0, select bank0
   637  0712  009F               	movwf	31	;volatile
   638                           
   639                           ;main.c: 110:     ADCON1 = 0x8E;
   640  0713  308E               	movlw	142
   641  0714  1683               	bsf	3,5	;RP0=1, select bank1
   642  0715  1303               	bcf	3,6	;RP1=0, select bank1
   643  0716  009F               	movwf	31	;volatile
   644  0717                     l867:
   645                           
   646                           ;main.c: 114:     ADIF = 0;
   647  0717  1283               	bcf	3,5	;RP0=0, select bank0
   648  0718  1303               	bcf	3,6	;RP1=0, select bank0
   649  0719  130C               	bcf	12,6	;volatile
   650                           
   651                           ;main.c: 117:     OPTION_REG = 0x51;
   652  071A  3051               	movlw	81
   653  071B  1683               	bsf	3,5	;RP0=1, select bank1
   654  071C  1303               	bcf	3,6	;RP1=0, select bank1
   655  071D  0081               	movwf	1	;volatile
   656  071E                     l869:
   657                           
   658                           ;main.c: 118:     TMR0 = 0;
   659  071E  1283               	bcf	3,5	;RP0=0, select bank0
   660  071F  1303               	bcf	3,6	;RP1=0, select bank0
   661  0720  0181               	clrf	1	;volatile
   662  0721                     l871:
   663                           
   664                           ;main.c: 121:     TXSTA = 0x00;
   665  0721  1683               	bsf	3,5	;RP0=1, select bank1
   666  0722  1303               	bcf	3,6	;RP1=0, select bank1
   667  0723  0198               	clrf	24	;volatile
   668  0724                     l873:
   669                           
   670                           ;main.c: 122:     RCSTA = 0x00;
   671  0724  1283               	bcf	3,5	;RP0=0, select bank0
   672  0725  1303               	bcf	3,6	;RP1=0, select bank0
   673  0726  0198               	clrf	24	;volatile
   674  0727                     l875:
   675                           
   676                           ;main.c: 123:     RCSTAbits.SPEN = 1;
   677  0727  1798               	bsf	24,7	;volatile
   678  0728                     l877:
   679                           
   680                           ;main.c: 124:     TXSTAbits.SYNC = 0;
   681  0728  1683               	bsf	3,5	;RP0=1, select bank1
   682  0729  1303               	bcf	3,6	;RP1=0, select bank1
   683  072A  1218               	bcf	24,4	;volatile
   684  072B                     l879:
   685                           
   686                           ;main.c: 125:     TXSTAbits.BRGH = 1;
   687  072B  1518               	bsf	24,2	;volatile
   688  072C                     l881:
   689                           
   690                           ;main.c: 126:     TXSTAbits.TXEN = 1;
   691  072C  1698               	bsf	24,5	;volatile
   692  072D                     l883:
   693                           
   694                           ;main.c: 127:     RCSTAbits.CREN = 1;
   695  072D  1283               	bcf	3,5	;RP0=0, select bank0
   696  072E  1303               	bcf	3,6	;RP1=0, select bank0
   697  072F  1618               	bsf	24,4	;volatile
   698  0730                     l885:
   699                           
   700                           ;main.c: 129:     SPBRG = 25;
   701  0730  3019               	movlw	25
   702  0731  1683               	bsf	3,5	;RP0=1, select bank1
   703  0732  1303               	bcf	3,6	;RP1=0, select bank1
   704  0733  0099               	movwf	25	;volatile
   705                           
   706                           ;main.c: 133:     PORTB = 0x00;
   707  0734  1283               	bcf	3,5	;RP0=0, select bank0
   708  0735  1303               	bcf	3,6	;RP1=0, select bank0
   709  0736  0186               	clrf	6	;volatile
   710  0737                     l97:
   711  0737  0008               	return
   712  0738                     __end_of_set_configuraciones:
   713                           
   714                           	psect	text2
   715  06C5                     __ptext2:	
   716 ;; *************** function _iniciar_puertos *****************
   717 ;; Defined at:
   718 ;;		line 168 in file "main.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;		None
   721 ;; Auto vars:     Size  Location     Type
   722 ;;		None
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      void 
   725 ;; Registers used:
   726 ;;		status,2
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMMON   BANK0   BANK1
   732 ;;      Params:         0       0       0
   733 ;;      Locals:         0       0       0
   734 ;;      Temps:          0       0       0
   735 ;;      Totals:         0       0       0
   736 ;;Total ram usage:        0 bytes
   737 ;; Hardware stack levels used: 1
   738 ;; This function calls:
   739 ;;		Nothing
   740 ;; This function is called by:
   741 ;;		_main
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           
   746                           ;psect for function _iniciar_puertos
   747  06C5                     _iniciar_puertos:
   748  06C5                     l887:	
   749                           ;incstack = 0
   750                           ; Regs used in _iniciar_puertos: [status,2]
   751                           
   752                           
   753                           ;main.c: 178:     PORTA = 0;
   754  06C5  1283               	bcf	3,5	;RP0=0, select bank0
   755  06C6  1303               	bcf	3,6	;RP1=0, select bank0
   756  06C7  0185               	clrf	5	;volatile
   757                           
   758                           ;main.c: 179:     PORTB = 0;
   759  06C8  0186               	clrf	6	;volatile
   760                           
   761                           ;main.c: 180:     PORTC = 0;
   762  06C9  0187               	clrf	7	;volatile
   763  06CA                     l889:
   764                           
   765                           ;main.c: 182:     TRISA0 = 1;
   766  06CA  1683               	bsf	3,5	;RP0=1, select bank1
   767  06CB  1303               	bcf	3,6	;RP1=0, select bank1
   768  06CC  1405               	bsf	5,0	;volatile
   769  06CD                     l891:
   770                           
   771                           ;main.c: 183:     TRISA1 = 0;
   772  06CD  1085               	bcf	5,1	;volatile
   773  06CE                     l893:
   774                           
   775                           ;main.c: 184:     TRISA2 = 0;
   776  06CE  1105               	bcf	5,2	;volatile
   777  06CF                     l895:
   778                           
   779                           ;main.c: 185:     TRISC6 = 0;
   780  06CF  1307               	bcf	7,6	;volatile
   781  06D0                     l897:
   782                           
   783                           ;main.c: 186:     TRISC7 = 1;
   784  06D0  1787               	bsf	7,7	;volatile
   785                           
   786                           ;main.c: 187:     TRISB = 0x00;
   787  06D1  0186               	clrf	6	;volatile
   788  06D2                     l115:
   789  06D2  0008               	return
   790  06D3                     __end_of_iniciar_puertos:
   791                           
   792                           	psect	text3
   793  06EE                     __ptext3:	
   794 ;; *************** function _enviar_datos *****************
   795 ;; Defined at:
   796 ;;		line 98 in file "main.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;		None
   799 ;; Auto vars:     Size  Location     Type
   800 ;;		None
   801 ;; Return value:  Size  Location     Type
   802 ;;                  1    wreg      void 
   803 ;; Registers used:
   804 ;;		wreg, status,2, status,0, pclath, cstack
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMMON   BANK0   BANK1
   810 ;;      Params:         0       0       0
   811 ;;      Locals:         0       0       0
   812 ;;      Temps:          0       2       0
   813 ;;      Totals:         0       2       0
   814 ;;Total ram usage:        2 bytes
   815 ;; Hardware stack levels used: 1
   816 ;; Hardware stack levels required when called: 1
   817 ;; This function calls:
   818 ;;		_Rx_Dato
   819 ;;		_Tx_Dato
   820 ;; This function is called by:
   821 ;;		_main
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825                           
   826                           ;psect for function _enviar_datos
   827  06EE                     _enviar_datos:
   828  06EE                     l859:	
   829                           ;incstack = 0
   830                           ; Regs used in _enviar_datos: [wreg+status,2+status,0+pclath+cstack]
   831                           
   832                           
   833                           ;main.c: 100:             Tx_Dato(ADRESL);
   834  06EE  1683               	bsf	3,5	;RP0=1, select bank1
   835  06EF  1303               	bcf	3,6	;RP1=0, select bank1
   836  06F0  081E               	movf	30,w	;volatile
   837  06F1  118A  26B7  118A   	fcall	_Tx_Dato
   838  06F4                     l861:
   839                           
   840                           ;main.c: 101:             ECO = Rx_Dato();
   841  06F4  118A  26AD  118A   	fcall	_Rx_Dato
   842  06F7  1283               	bcf	3,5	;RP0=0, select bank0
   843  06F8  1303               	bcf	3,6	;RP1=0, select bank0
   844  06F9  00A5               	movwf	??_enviar_datos
   845  06FA  01A6               	clrf	??_enviar_datos+1
   846  06FB  0825               	movf	??_enviar_datos,w
   847  06FC  00A2               	movwf	_ECO
   848  06FD  0826               	movf	??_enviar_datos+1,w
   849  06FE  00A3               	movwf	_ECO+1
   850  06FF                     l863:
   851                           
   852                           ;main.c: 102:             Tx_Dato(ADRESH);
   853  06FF  081E               	movf	30,w	;volatile
   854  0700  118A  26B7  118A   	fcall	_Tx_Dato
   855                           
   856                           ;main.c: 103:             ECO = Rx_Dato();
   857  0703  118A  26AD  118A   	fcall	_Rx_Dato
   858  0706  1283               	bcf	3,5	;RP0=0, select bank0
   859  0707  1303               	bcf	3,6	;RP1=0, select bank0
   860  0708  00A5               	movwf	??_enviar_datos
   861  0709  01A6               	clrf	??_enviar_datos+1
   862  070A  0825               	movf	??_enviar_datos,w
   863  070B  00A2               	movwf	_ECO
   864  070C  0826               	movf	??_enviar_datos+1,w
   865  070D  00A3               	movwf	_ECO+1
   866  070E                     l94:
   867  070E  0008               	return
   868  070F                     __end_of_enviar_datos:
   869                           
   870                           	psect	text4
   871  06B7                     __ptext4:	
   872 ;; *************** function _Tx_Dato *****************
   873 ;; Defined at:
   874 ;;		line 65 in file "main.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;  X               1    wreg     unsigned char 
   877 ;; Auto vars:     Size  Location     Type
   878 ;;  X               1    0[BANK0 ] unsigned char 
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      void 
   881 ;; Registers used:
   882 ;;		wreg
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMMON   BANK0   BANK1
   888 ;;      Params:         0       0       0
   889 ;;      Locals:         0       1       0
   890 ;;      Temps:          0       0       0
   891 ;;      Totals:         0       1       0
   892 ;;Total ram usage:        1 bytes
   893 ;; Hardware stack levels used: 1
   894 ;; This function calls:
   895 ;;		Nothing
   896 ;; This function is called by:
   897 ;;		_enviar_datos
   898 ;;		_imprimir_valor_lcd
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           
   903                           ;psect for function _Tx_Dato
   904  06B7                     _Tx_Dato:
   905                           
   906                           ;incstack = 0
   907                           ; Regs used in _Tx_Dato: [wreg]
   908                           ;Tx_Dato@X stored from wreg
   909  06B7  1283               	bcf	3,5	;RP0=0, select bank0
   910  06B8  1303               	bcf	3,6	;RP1=0, select bank0
   911  06B9  00A4               	movwf	Tx_Dato@X
   912  06BA                     l835:
   913                           
   914                           ;main.c: 65: void Tx_Dato(unsigned char X);main.c: 66: {;main.c: 67:     PIR1bits.TXIF =
      +                           0;
   915  06BA  120C               	bcf	12,4	;volatile
   916  06BB                     l837:
   917                           
   918                           ;main.c: 68:     TXREG = X;
   919  06BB  0824               	movf	Tx_Dato@X,w
   920  06BC  0099               	movwf	25	;volatile
   921  06BD                     l839:
   922                           
   923                           ;main.c: 72:                 if(TXSTAbits.TRMT == 0)
   924  06BD  1683               	bsf	3,5	;RP0=1, select bank1
   925  06BE  1303               	bcf	3,6	;RP1=0, select bank1
   926  06BF  1898               	btfsc	24,1	;volatile
   927  06C0  2EC2               	goto	u151
   928  06C1  2EC3               	goto	u150
   929  06C2                     u151:
   930  06C2  2EC4               	goto	l83
   931  06C3                     u150:
   932  06C3  2EBD               	goto	l839
   933  06C4                     l83:
   934  06C4  0008               	return
   935  06C5                     __end_of_Tx_Dato:
   936                           
   937                           	psect	text5
   938  06AD                     __ptext5:	
   939 ;; *************** function _Rx_Dato *****************
   940 ;; Defined at:
   941 ;;		line 78 in file "main.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;		None
   944 ;; Auto vars:     Size  Location     Type
   945 ;;		None
   946 ;; Return value:  Size  Location     Type
   947 ;;                  1    wreg      unsigned char 
   948 ;; Registers used:
   949 ;;		wreg
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMMON   BANK0   BANK1
   955 ;;      Params:         0       0       0
   956 ;;      Locals:         0       0       0
   957 ;;      Temps:          0       0       0
   958 ;;      Totals:         0       0       0
   959 ;;Total ram usage:        0 bytes
   960 ;; Hardware stack levels used: 1
   961 ;; This function calls:
   962 ;;		Nothing
   963 ;; This function is called by:
   964 ;;		_enviar_datos
   965 ;;		_imprimir_valor_lcd
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           
   970                           ;psect for function _Rx_Dato
   971  06AD                     _Rx_Dato:
   972  06AD                     l86:	
   973                           ;incstack = 0
   974                           ; Regs used in _Rx_Dato: [wreg]
   975                           ;main.c: 80:     wait:
   976                           
   977                           
   978                           ;main.c: 81:         if(PIR1bits.RCIF == 0)
   979  06AD  1283               	bcf	3,5	;RP0=0, select bank0
   980  06AE  1303               	bcf	3,6	;RP1=0, select bank0
   981  06AF  1A8C               	btfsc	12,5	;volatile
   982  06B0  2EB2               	goto	u161
   983  06B1  2EB3               	goto	u160
   984  06B2                     u161:
   985  06B2  2EB4               	goto	l87
   986  06B3                     u160:
   987  06B3  2EAD               	goto	l86
   988  06B4                     l87:
   989                           
   990                           ;main.c: 83:     PIR1bits.RCIF = 0;
   991  06B4  128C               	bcf	12,5	;volatile
   992  06B5                     l845:
   993                           
   994                           ;main.c: 84:     return RCREG;
   995  06B5  081A               	movf	26,w	;volatile
   996  06B6                     l88:
   997  06B6  0008               	return
   998  06B7                     __end_of_Rx_Dato:
   999                           
  1000                           	psect	text6
  1001  06D3                     __ptext6:	
  1002 ;; *************** function _Canal0 *****************
  1003 ;; Defined at:
  1004 ;;		line 40 in file "main.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;  z               2    0[BANK0 ] int 
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;		None
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		wreg
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMMON   BANK0   BANK1
  1018 ;;      Params:         0       2       0
  1019 ;;      Locals:         0       0       0
  1020 ;;      Temps:          0       2       0
  1021 ;;      Totals:         0       4       0
  1022 ;;Total ram usage:        4 bytes
  1023 ;; Hardware stack levels used: 1
  1024 ;; This function calls:
  1025 ;;		Nothing
  1026 ;; This function is called by:
  1027 ;;		_main
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           
  1032                           ;psect for function _Canal0
  1033  06D3                     _Canal0:
  1034  06D3                     l849:	
  1035                           ;incstack = 0
  1036                           ; Regs used in _Canal0: [wreg]
  1037                           
  1038                           
  1039                           ;main.c: 40: void Canal0(int z);main.c: 41: {;main.c: 43:     CHS2 = 0;
  1040  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  1041  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  1042  06D5  129F               	bcf	31,5	;volatile
  1043                           
  1044                           ;main.c: 44:     CHS1 = 0;
  1045  06D6  121F               	bcf	31,4	;volatile
  1046                           
  1047                           ;main.c: 45:     CHS0 = 0;
  1048  06D7  119F               	bcf	31,3	;volatile
  1049                           
  1050                           ;main.c: 47:     ADON = 1;
  1051  06D8  141F               	bsf	31,0	;volatile
  1052  06D9                     l851:
  1053                           
  1054                           ;main.c: 49:     _delay((unsigned long)((1)*(32000000/4000.0)));
  1055  06D9  300B               	movlw	11
  1056  06DA  1283               	bcf	3,5	;RP0=0, select bank0
  1057  06DB  1303               	bcf	3,6	;RP1=0, select bank0
  1058  06DC  00A7               	movwf	??_Canal0+1
  1059  06DD  3062               	movlw	98
  1060  06DE  00A6               	movwf	??_Canal0
  1061  06DF                     u277:
  1062  06DF  0BA6               	decfsz	??_Canal0,f
  1063  06E0  2EDF               	goto	u277
  1064  06E1  0BA7               	decfsz	??_Canal0+1,f
  1065  06E2  2EDF               	goto	u277
  1066  06E3                     l853:
  1067                           
  1068                           ;main.c: 51:      GO = 1;
  1069  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  1070  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  1071  06E5  151F               	bsf	31,2	;volatile
  1072  06E6                     l855:
  1073  06E6  1B0C               	btfsc	12,6	;volatile
  1074  06E7  2EE9               	goto	u171
  1075  06E8  2EEA               	goto	u170
  1076  06E9                     u171:
  1077  06E9  2EEB               	goto	l77
  1078  06EA                     u170:
  1079  06EA  2EE6               	goto	l855
  1080  06EB                     l77:
  1081                           
  1082                           ;main.c: 57:     ADON = 0;
  1083  06EB  101F               	bcf	31,0	;volatile
  1084                           
  1085                           ;main.c: 61:     ADIF = 0;
  1086  06EC  130C               	bcf	12,6	;volatile
  1087  06ED                     l78:
  1088  06ED  0008               	return
  1089  06EE                     __end_of_Canal0:
  1090  007E                     btemp	set	126	;btemp
  1091  007E                     wtemp0	set	126
  1092                           
  1093                           	psect	config
  1094                           
  1095                           ;Config register CONFIG @ 0x2007
  1096                           ;	Oscillator Selection bits
  1097                           ;	FOSC = XT, XT oscillator
  1098                           ;	Watchdog Timer Enable bit
  1099                           ;	WDTE = ON, WDT enabled
  1100                           ;	Power-up Timer Enable bit
  1101                           ;	PWRTE = ON, PWRT enabled
  1102                           ;	FLASH Program Memory Code Protection bits
  1103                           ;	CP = OFF, Code protection off
  1104                           ;	Brown-out Reset Enable bit
  1105                           ;	BOREN = OFF, BOR disabled
  1106                           ;	Low Voltage In-Circuit Serial Programming Enable bit
  1107                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1108                           ;	Data EE Memory Code Protection
  1109                           ;	CPD = OFF, Code Protection off
  1110                           ;	FLASH Program Memory Write Enable
  1111                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
  1112                           ;	In-Circuit Debugger Mode bit
  1113                           ;	DEBUG = 0x1, unprogrammed default
  1114  2007                     	org	8199
  1115  2007  3D35               	dw	15669

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94      4       8
    BANK1            94      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Canal0
    _enviar_datos->_Tx_Dato

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      98
                             _Canal0
                       _enviar_datos
                    _iniciar_puertos
                _set_configuraciones
 ---------------------------------------------------------------------------------
 (1) _set_configuraciones                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _iniciar_puertos                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enviar_datos                                         2     2      0      22
                                              1 BANK0      2     2      0
                            _Rx_Dato
                            _Tx_Dato
 ---------------------------------------------------------------------------------
 (2) _Tx_Dato                                              1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Rx_Dato                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Canal0                                               4     2      2      76
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Canal0
   _enviar_datos
     _Rx_Dato
     _Tx_Dato
   _iniciar_puertos
   _set_configuraciones

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            5E      0       0       3        0.0%
BANK0               5E      4       8       4        8.5%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            5E      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               5E      0       0       6        0.0%
ABS                  0      0       8       7        0.0%
DATA                 0      0       8       8        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon May 17 20:50:08 2021

                          l83 06C4                            l77 06EB                            l78 06ED  
                          l86 06AD                            l94 070E                            l87 06B4  
                          l88 06B6                            l97 0737                            _GO 00FA  
         _set_configuraciones 070F                           l115 06D2                           l911 073E  
                         l921 076B                           l913 0747                           l851 06D9  
                         l835 06BA                           l931 0795                           l923 076F  
                         l915 074A                           l907 0738                           l853 06E3  
                         l845 06B5                           l837 06BB                           l861 06F4  
                         l941 07CA                           l933 07A4                           l925 077E  
                         l917 0759                           l909 073B                           l855 06E6  
                         l839 06BD                           l863 06FF                           l871 0721  
                         l943 07CE                           l935 07A8                           l927 0782  
                         l919 075C                           l849 06D3                           l881 072C  
                         l873 0724                           l865 070F                           l945 07DD  
                         l937 07B7                           l929 0791                           _ECO 0022  
                         l859 06EE                           l891 06CD                           l883 072D  
                         l875 0727                           l867 0717                           l947 07E1  
                         l939 07BB                           l893 06CE                           l885 0730  
                         l877 0728                           l869 071E                           l949 07F0  
                         l895 06CF                           l887 06C5                           l879 072B  
                         l897 06D0                           l889 06CA                           u200 077E  
                         u201 077D                           u210 0791                           u211 0790  
                         u220 07A4                           u221 07A3                           u205 077A  
                         u150 06C3                           u230 07B7                           u151 06C2  
                         u231 07B6                           u215 078D                           u160 06B3  
                         u240 07CA                           u161 06B2                           u241 07C9  
                         u225 07A0                           u170 06EA                           u250 07DD  
                         u171 06E9                           u251 07DC                           u235 07B3  
                         u260 07F0                           u180 0759                           u261 07EF  
                         u245 07C6                           u181 0758                           u190 076B  
                         u255 07D9                           u191 076A                           u265 07EC  
                         u185 0755                           u195 0767                           u277 06DF  
            ?_iniciar_puertos 0024                          _ADIF 0066                          _ADON 00F8  
                        _CHS0 00FB                          _CHS1 00FC                          _CHS2 00FD  
                        _TMR0 0001          ?_set_configuraciones 0024                          _main 0738  
                        btemp 007E                          start 0000               __end_of_Rx_Dato 06B7  
             __end_of_Tx_Dato 06C5                         ?_main 0024                         _ADRES 0020  
                       _RCREG 001A                         _RCSTA 0018                         _SPBRG 0099  
                       _PORTA 0005                         _PORTB 0006                         _PORTC 0007  
                       _TRISB 0086                         _TXREG 0019                         _TXSTA 0098  
       ??_set_configuraciones 0000                 ?_enviar_datos 0024                         status 0003  
                       wtemp0 007E               __initialization 07F7                  __end_of_main 07F7  
                      ??_main 0000                        _ADCON0 001F                        _ADCON1 009F  
                      _ADRESH 001E                        _ADRESL 009E                ??_enviar_datos 0025  
                      _TRISA0 0428                        _TRISA1 0429                        _TRISA2 042A  
                      _TRISC6 043E                        _TRISC7 043F                        _Canal0 06D3  
                   ??_Rx_Dato 0000                     ??_Tx_Dato 0000       __end_of__initialization 07FD  
              __pcstackCOMMON 0000                    __pbssBANK0 0020                       ?_Canal0 0024  
                  __pmaintext 0738                       Canal0@z 0024          __end_of_enviar_datos 070F  
    __size_of_iniciar_puertos 000E               __size_of_Canal0 001B                       _Rx_Dato 06AD  
                     _Tx_Dato 06B7                       __ptext1 070F                       __ptext2 06C5  
                     __ptext3 06EE                       __ptext4 06B7                       __ptext5 06AD  
                     __ptext6 06D3   __end_of_set_configuraciones 0738          end_of_initialization 07FD  
                   _RCSTAbits 0018                     _TXSTAbits 0098                __end_of_Canal0 06EE  
           ??_iniciar_puertos 0000         __size_of_enviar_datos 0021           start_initialization 07F7  
                _enviar_datos 06EE                      ??_Canal0 0026                     ___latbits 0001  
               __pcstackBANK0 0024                      ?_Rx_Dato 0024                      ?_Tx_Dato 0024  
                    _PIR1bits 000C               _iniciar_puertos 06C5  __size_of_set_configuraciones 0029  
                    Tx_Dato@X 0024              __size_of_Rx_Dato 000A              __size_of_Tx_Dato 000E  
               __size_of_main 00BF       __end_of_iniciar_puertos 06D3                    _OPTION_REG 0081  
