

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon May 17 22:52:07 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F873
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F873 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  000A                     	;# 
   116  000B                     	;# 
   117  000C                     	;# 
   118  000D                     	;# 
   119  000E                     	;# 
   120  000E                     	;# 
   121  000F                     	;# 
   122  0010                     	;# 
   123  0011                     	;# 
   124  0012                     	;# 
   125  0013                     	;# 
   126  0014                     	;# 
   127  0015                     	;# 
   128  0015                     	;# 
   129  0016                     	;# 
   130  0017                     	;# 
   131  0018                     	;# 
   132  0019                     	;# 
   133  001A                     	;# 
   134  001B                     	;# 
   135  001B                     	;# 
   136  001C                     	;# 
   137  001D                     	;# 
   138  001E                     	;# 
   139  001F                     	;# 
   140  0081                     	;# 
   141  0085                     	;# 
   142  0086                     	;# 
   143  0087                     	;# 
   144  008C                     	;# 
   145  008D                     	;# 
   146  008E                     	;# 
   147  0091                     	;# 
   148  0092                     	;# 
   149  0093                     	;# 
   150  0094                     	;# 
   151  0098                     	;# 
   152  0099                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  010C                     	;# 
   156  010D                     	;# 
   157  010E                     	;# 
   158  010F                     	;# 
   159  018C                     	;# 
   160  018D                     	;# 
   161  0007                     _PORTC	set	7
   162  0005                     _PORTA	set	5
   163  0006                     _PORTB	set	6
   164  0018                     _RCSTAbits	set	24
   165  0018                     _RCSTA	set	24
   166  001F                     _ADCON0	set	31
   167  001E                     _ADRESH	set	30
   168  001A                     _RCREG	set	26
   169  0019                     _TXREG	set	25
   170  000C                     _PIR1bits	set	12
   171  0001                     _TMR0	set	1
   172  0066                     _ADIF	set	102
   173  00FA                     _GO	set	250
   174  00F8                     _ADON	set	248
   175  00FB                     _CHS0	set	251
   176  00FC                     _CHS1	set	252
   177  00FD                     _CHS2	set	253
   178  0086                     _TRISB	set	134
   179  0099                     _SPBRG	set	153
   180  0098                     _TXSTA	set	152
   181  0081                     _OPTION_REG	set	129
   182  009F                     _ADCON1	set	159
   183  009E                     _ADRESL	set	158
   184  0098                     _TXSTAbits	set	152
   185  043F                     _TRISC7	set	1087
   186  043E                     _TRISC6	set	1086
   187  042A                     _TRISA2	set	1066
   188  0429                     _TRISA1	set	1065
   189  0428                     _TRISA0	set	1064
   190                           
   191                           	psect	cinit
   192  07F7                     start_initialization:	
   193                           ; #config settings
   194                           
   195  07F7                     __initialization:
   196                           
   197                           ; Clear objects allocated to BANK0
   198  07F7  1283               	bcf	3,5	;RP0=0, select bank0
   199  07F8  1303               	bcf	3,6	;RP1=0, select bank0
   200  07F9  01A0               	clrf	__pbssBANK0& (0+127)
   201  07FA  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   202  07FB  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   203  07FC  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   204  07FD                     end_of_initialization:	
   205                           ;End of C runtime variable initialization code
   206                           
   207  07FD                     __end_of__initialization:
   208  07FD  0183               	clrf	3
   209  07FE  118A  2F35         	ljmp	_main	;jump to C main() function
   210                           
   211                           	psect	bssBANK0
   212  0020                     __pbssBANK0:
   213  0020                     _ADRES:
   214  0020                     	ds	2
   215  0022                     _ECO:
   216  0022                     	ds	2
   217                           
   218                           	psect	cstackCOMMON
   219  0000                     __pcstackCOMMON:
   220  0000                     ??_iniciar_puertos:
   221  0000                     ??_Tx_Dato:	
   222                           ; 1 bytes @ 0x0
   223                           
   224  0000                     ??_Rx_Dato:	
   225                           ; 1 bytes @ 0x0
   226                           
   227  0000                     ??_imprimir_valor_lcd:	
   228                           ; 1 bytes @ 0x0
   229                           
   230  0000                     ??_set_configuraciones:	
   231                           ; 1 bytes @ 0x0
   232                           
   233  0000                     ??_main:	
   234                           ; 1 bytes @ 0x0
   235                           
   236                           
   237                           	psect	cstackBANK0
   238  0024                     __pcstackBANK0:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  0024                     ?_iniciar_puertos:
   242  0024                     ?_Canal0:	
   243                           ; 1 bytes @ 0x0
   244                           
   245  0024                     ?_Tx_Dato:	
   246                           ; 1 bytes @ 0x0
   247                           
   248  0024                     ?_Rx_Dato:	
   249                           ; 1 bytes @ 0x0
   250                           
   251  0024                     ?_imprimir_valor_lcd:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0024                     ?_enviar_datos:	
   255                           ; 1 bytes @ 0x0
   256                           
   257  0024                     ?_set_configuraciones:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0024                     ?_main:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0024                     Tx_Dato@X:	
   264                           ; 2 bytes @ 0x0
   265                           
   266  0024                     Canal0@z:	
   267                           ; 1 bytes @ 0x0
   268                           
   269                           
   270                           ; 2 bytes @ 0x0
   271  0024                     	ds	1
   272  0025                     ??_enviar_datos:
   273                           
   274                           ; 1 bytes @ 0x1
   275  0025                     	ds	1
   276  0026                     ??_Canal0:
   277                           
   278                           ; 1 bytes @ 0x2
   279  0026                     	ds	2
   280                           
   281                           	psect	maintext
   282  0735                     __pmaintext:	
   283 ;;
   284 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   285 ;;
   286 ;; *************** function _main *****************
   287 ;; Defined at:
   288 ;;		line 136 in file "main.c"
   289 ;; Parameters:    Size  Location     Type
   290 ;;		None
   291 ;; Auto vars:     Size  Location     Type
   292 ;;		None
   293 ;; Return value:  Size  Location     Type
   294 ;;                  2  101[None  ] int 
   295 ;; Registers used:
   296 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   297 ;; Tracked objects:
   298 ;;		On entry : B00/0
   299 ;;		On exit  : 0/0
   300 ;;		Unchanged: 0/0
   301 ;; Data sizes:     COMMON   BANK0   BANK1
   302 ;;      Params:         0       0       0
   303 ;;      Locals:         0       0       0
   304 ;;      Temps:          0       0       0
   305 ;;      Totals:         0       0       0
   306 ;;Total ram usage:        0 bytes
   307 ;; Hardware stack levels required when called: 2
   308 ;; This function calls:
   309 ;;		_Canal0
   310 ;;		_enviar_datos
   311 ;;		_imprimir_valor_lcd
   312 ;;		_iniciar_puertos
   313 ;;		_set_configuraciones
   314 ;; This function is called by:
   315 ;;		Startup code after reset
   316 ;; This function uses a non-reentrant model
   317 ;;
   318                           
   319                           
   320                           ;psect for function _main
   321  0735                     _main:
   322  0735                     l909:	
   323                           ;incstack = 0
   324                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   325                           
   326                           
   327                           ;main.c: 138:     set_configuraciones();
   328  0735  118A  270C  118A   	fcall	_set_configuraciones
   329  0738                     l911:
   330                           
   331                           ;main.c: 139:     iniciar_puertos();
   332  0738  118A  26A3  118A   	fcall	_iniciar_puertos
   333  073B                     l913:
   334                           
   335                           ;main.c: 141:             Canal0(2);
   336  073B  3002               	movlw	2
   337  073C  1283               	bcf	3,5	;RP0=0, select bank0
   338  073D  1303               	bcf	3,6	;RP1=0, select bank0
   339  073E  00A4               	movwf	Canal0@z
   340  073F  3000               	movlw	0
   341  0740  00A5               	movwf	Canal0@z+1
   342  0741  118A  26B1  118A   	fcall	_Canal0
   343  0744                     l915:
   344                           
   345                           ;main.c: 142:             enviar_datos();
   346  0744  118A  26EB  118A   	fcall	_enviar_datos
   347  0747                     l917:
   348                           
   349                           ;main.c: 143:             imprimir_valor_lcd();
   350  0747  118A  26CC  118A   	fcall	_imprimir_valor_lcd
   351  074A                     l919:
   352                           
   353                           ;main.c: 145:             if(ADRES < 127)
   354  074A  1283               	bcf	3,5	;RP0=0, select bank0
   355  074B  1303               	bcf	3,6	;RP1=0, select bank0
   356  074C  0821               	movf	_ADRES+1,w
   357  074D  3A80               	xorlw	128
   358  074E  00FF               	movwf	btemp+1
   359  074F  3080               	movlw	128
   360  0750  027F               	subwf	btemp+1,w
   361  0751  1D03               	skipz
   362  0752  2F55               	goto	u185
   363  0753  307F               	movlw	127
   364  0754  0220               	subwf	_ADRES,w
   365  0755                     u185:
   366  0755  1803               	skipnc
   367  0756  2F58               	goto	u181
   368  0757  2F59               	goto	u180
   369  0758                     u181:
   370  0758  2F5C               	goto	l923
   371  0759                     u180:
   372  0759                     l921:
   373                           
   374                           ;main.c: 146:                 PORTB = 0x00;
   375  0759  1283               	bcf	3,5	;RP0=0, select bank0
   376  075A  1303               	bcf	3,6	;RP1=0, select bank0
   377  075B  0186               	clrf	6	;volatile
   378  075C                     l923:
   379                           
   380                           ;main.c: 147:             if(ADRES > 127)
   381  075C  1283               	bcf	3,5	;RP0=0, select bank0
   382  075D  1303               	bcf	3,6	;RP1=0, select bank0
   383  075E  0821               	movf	_ADRES+1,w
   384  075F  3A80               	xorlw	128
   385  0760  00FF               	movwf	btemp+1
   386  0761  3080               	movlw	128
   387  0762  027F               	subwf	btemp+1,w
   388  0763  1D03               	skipz
   389  0764  2F67               	goto	u195
   390  0765  3080               	movlw	128
   391  0766  0220               	subwf	_ADRES,w
   392  0767                     u195:
   393  0767  1C03               	skipc
   394  0768  2F6A               	goto	u191
   395  0769  2F6B               	goto	u190
   396  076A                     u191:
   397  076A  2F6F               	goto	l927
   398  076B                     u190:
   399  076B                     l925:
   400                           
   401                           ;main.c: 148:                 PORTB = 0x01;
   402  076B  3001               	movlw	1
   403  076C  1283               	bcf	3,5	;RP0=0, select bank0
   404  076D  1303               	bcf	3,6	;RP1=0, select bank0
   405  076E  0086               	movwf	6	;volatile
   406  076F                     l927:
   407                           
   408                           ;main.c: 149:             if(ADRES > 255)
   409  076F  1283               	bcf	3,5	;RP0=0, select bank0
   410  0770  1303               	bcf	3,6	;RP1=0, select bank0
   411  0771  0821               	movf	_ADRES+1,w
   412  0772  3A80               	xorlw	128
   413  0773  00FF               	movwf	btemp+1
   414  0774  3081               	movlw	129
   415  0775  027F               	subwf	btemp+1,w
   416  0776  1D03               	skipz
   417  0777  2F7A               	goto	u205
   418  0778  3000               	movlw	0
   419  0779  0220               	subwf	_ADRES,w
   420  077A                     u205:
   421  077A  1C03               	skipc
   422  077B  2F7D               	goto	u201
   423  077C  2F7E               	goto	u200
   424  077D                     u201:
   425  077D  2F82               	goto	l931
   426  077E                     u200:
   427  077E                     l929:
   428                           
   429                           ;main.c: 150:                 PORTB = 0x03;
   430  077E  3003               	movlw	3
   431  077F  1283               	bcf	3,5	;RP0=0, select bank0
   432  0780  1303               	bcf	3,6	;RP1=0, select bank0
   433  0781  0086               	movwf	6	;volatile
   434  0782                     l931:
   435                           
   436                           ;main.c: 151:             if(ADRES > 382)
   437  0782  1283               	bcf	3,5	;RP0=0, select bank0
   438  0783  1303               	bcf	3,6	;RP1=0, select bank0
   439  0784  0821               	movf	_ADRES+1,w
   440  0785  3A80               	xorlw	128
   441  0786  00FF               	movwf	btemp+1
   442  0787  3081               	movlw	129
   443  0788  027F               	subwf	btemp+1,w
   444  0789  1D03               	skipz
   445  078A  2F8D               	goto	u215
   446  078B  307F               	movlw	127
   447  078C  0220               	subwf	_ADRES,w
   448  078D                     u215:
   449  078D  1C03               	skipc
   450  078E  2F90               	goto	u211
   451  078F  2F91               	goto	u210
   452  0790                     u211:
   453  0790  2F95               	goto	l935
   454  0791                     u210:
   455  0791                     l933:
   456                           
   457                           ;main.c: 152:                 PORTB = 0x07;
   458  0791  3007               	movlw	7
   459  0792  1283               	bcf	3,5	;RP0=0, select bank0
   460  0793  1303               	bcf	3,6	;RP1=0, select bank0
   461  0794  0086               	movwf	6	;volatile
   462  0795                     l935:
   463                           
   464                           ;main.c: 153:             if(ADRES > 511)
   465  0795  1283               	bcf	3,5	;RP0=0, select bank0
   466  0796  1303               	bcf	3,6	;RP1=0, select bank0
   467  0797  0821               	movf	_ADRES+1,w
   468  0798  3A80               	xorlw	128
   469  0799  00FF               	movwf	btemp+1
   470  079A  3082               	movlw	130
   471  079B  027F               	subwf	btemp+1,w
   472  079C  1D03               	skipz
   473  079D  2FA0               	goto	u225
   474  079E  3000               	movlw	0
   475  079F  0220               	subwf	_ADRES,w
   476  07A0                     u225:
   477  07A0  1C03               	skipc
   478  07A1  2FA3               	goto	u221
   479  07A2  2FA4               	goto	u220
   480  07A3                     u221:
   481  07A3  2FA8               	goto	l939
   482  07A4                     u220:
   483  07A4                     l937:
   484                           
   485                           ;main.c: 154:                 PORTB = 0x0F;
   486  07A4  300F               	movlw	15
   487  07A5  1283               	bcf	3,5	;RP0=0, select bank0
   488  07A6  1303               	bcf	3,6	;RP1=0, select bank0
   489  07A7  0086               	movwf	6	;volatile
   490  07A8                     l939:
   491                           
   492                           ;main.c: 155:             if(ADRES > 639)
   493  07A8  1283               	bcf	3,5	;RP0=0, select bank0
   494  07A9  1303               	bcf	3,6	;RP1=0, select bank0
   495  07AA  0821               	movf	_ADRES+1,w
   496  07AB  3A80               	xorlw	128
   497  07AC  00FF               	movwf	btemp+1
   498  07AD  3082               	movlw	130
   499  07AE  027F               	subwf	btemp+1,w
   500  07AF  1D03               	skipz
   501  07B0  2FB3               	goto	u235
   502  07B1  3080               	movlw	128
   503  07B2  0220               	subwf	_ADRES,w
   504  07B3                     u235:
   505  07B3  1C03               	skipc
   506  07B4  2FB6               	goto	u231
   507  07B5  2FB7               	goto	u230
   508  07B6                     u231:
   509  07B6  2FBB               	goto	l943
   510  07B7                     u230:
   511  07B7                     l941:
   512                           
   513                           ;main.c: 156:                 PORTB = 0x1F;
   514  07B7  301F               	movlw	31
   515  07B8  1283               	bcf	3,5	;RP0=0, select bank0
   516  07B9  1303               	bcf	3,6	;RP1=0, select bank0
   517  07BA  0086               	movwf	6	;volatile
   518  07BB                     l943:
   519                           
   520                           ;main.c: 157:             if(ADRES > 767)
   521  07BB  1283               	bcf	3,5	;RP0=0, select bank0
   522  07BC  1303               	bcf	3,6	;RP1=0, select bank0
   523  07BD  0821               	movf	_ADRES+1,w
   524  07BE  3A80               	xorlw	128
   525  07BF  00FF               	movwf	btemp+1
   526  07C0  3083               	movlw	131
   527  07C1  027F               	subwf	btemp+1,w
   528  07C2  1D03               	skipz
   529  07C3  2FC6               	goto	u245
   530  07C4  3000               	movlw	0
   531  07C5  0220               	subwf	_ADRES,w
   532  07C6                     u245:
   533  07C6  1C03               	skipc
   534  07C7  2FC9               	goto	u241
   535  07C8  2FCA               	goto	u240
   536  07C9                     u241:
   537  07C9  2FCE               	goto	l947
   538  07CA                     u240:
   539  07CA                     l945:
   540                           
   541                           ;main.c: 158:                 PORTB = 0x3F;
   542  07CA  303F               	movlw	63
   543  07CB  1283               	bcf	3,5	;RP0=0, select bank0
   544  07CC  1303               	bcf	3,6	;RP1=0, select bank0
   545  07CD  0086               	movwf	6	;volatile
   546  07CE                     l947:
   547                           
   548                           ;main.c: 159:             if(ADRES > 894)
   549  07CE  1283               	bcf	3,5	;RP0=0, select bank0
   550  07CF  1303               	bcf	3,6	;RP1=0, select bank0
   551  07D0  0821               	movf	_ADRES+1,w
   552  07D1  3A80               	xorlw	128
   553  07D2  00FF               	movwf	btemp+1
   554  07D3  3083               	movlw	131
   555  07D4  027F               	subwf	btemp+1,w
   556  07D5  1D03               	skipz
   557  07D6  2FD9               	goto	u255
   558  07D7  307F               	movlw	127
   559  07D8  0220               	subwf	_ADRES,w
   560  07D9                     u255:
   561  07D9  1C03               	skipc
   562  07DA  2FDC               	goto	u251
   563  07DB  2FDD               	goto	u250
   564  07DC                     u251:
   565  07DC  2FE1               	goto	l951
   566  07DD                     u250:
   567  07DD                     l949:
   568                           
   569                           ;main.c: 160:                 PORTB = 0x7F;
   570  07DD  307F               	movlw	127
   571  07DE  1283               	bcf	3,5	;RP0=0, select bank0
   572  07DF  1303               	bcf	3,6	;RP1=0, select bank0
   573  07E0  0086               	movwf	6	;volatile
   574  07E1                     l951:
   575                           
   576                           ;main.c: 161:             if(ADRES > 1022)
   577  07E1  1283               	bcf	3,5	;RP0=0, select bank0
   578  07E2  1303               	bcf	3,6	;RP1=0, select bank0
   579  07E3  0821               	movf	_ADRES+1,w
   580  07E4  3A80               	xorlw	128
   581  07E5  00FF               	movwf	btemp+1
   582  07E6  3083               	movlw	131
   583  07E7  027F               	subwf	btemp+1,w
   584  07E8  1D03               	skipz
   585  07E9  2FEC               	goto	u265
   586  07EA  30FF               	movlw	255
   587  07EB  0220               	subwf	_ADRES,w
   588  07EC                     u265:
   589  07EC  1C03               	skipc
   590  07ED  2FEF               	goto	u261
   591  07EE  2FF0               	goto	u260
   592  07EF                     u261:
   593  07EF  2F3B               	goto	l913
   594  07F0                     u260:
   595  07F0                     l953:
   596                           
   597                           ;main.c: 162:                 PORTB = 0xFF;
   598  07F0  30FF               	movlw	255
   599  07F1  1283               	bcf	3,5	;RP0=0, select bank0
   600  07F2  1303               	bcf	3,6	;RP1=0, select bank0
   601  07F3  0086               	movwf	6	;volatile
   602  07F4  2F3B               	goto	l913
   603  07F5  118A  2800         	ljmp	start
   604  07F7                     __end_of_main:
   605                           
   606                           	psect	text1
   607  070C                     __ptext1:	
   608 ;; *************** function _set_configuraciones *****************
   609 ;; Defined at:
   610 ;;		line 106 in file "main.c"
   611 ;; Parameters:    Size  Location     Type
   612 ;;		None
   613 ;; Auto vars:     Size  Location     Type
   614 ;;		None
   615 ;; Return value:  Size  Location     Type
   616 ;;                  1    wreg      void 
   617 ;; Registers used:
   618 ;;		wreg, status,2
   619 ;; Tracked objects:
   620 ;;		On entry : 0/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMMON   BANK0   BANK1
   624 ;;      Params:         0       0       0
   625 ;;      Locals:         0       0       0
   626 ;;      Temps:          0       0       0
   627 ;;      Totals:         0       0       0
   628 ;;Total ram usage:        0 bytes
   629 ;; Hardware stack levels used: 1
   630 ;; This function calls:
   631 ;;		Nothing
   632 ;; This function is called by:
   633 ;;		_main
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           
   638                           ;psect for function _set_configuraciones
   639  070C                     _set_configuraciones:
   640  070C                     l875:	
   641                           ;incstack = 0
   642                           ; Regs used in _set_configuraciones: [wreg+status,2]
   643                           
   644                           
   645                           ;main.c: 109:     ADCON0 = 0x80;
   646  070C  3080               	movlw	128
   647  070D  1283               	bcf	3,5	;RP0=0, select bank0
   648  070E  1303               	bcf	3,6	;RP1=0, select bank0
   649  070F  009F               	movwf	31	;volatile
   650                           
   651                           ;main.c: 110:     ADCON1 = 0x8E;
   652  0710  308E               	movlw	142
   653  0711  1683               	bsf	3,5	;RP0=1, select bank1
   654  0712  1303               	bcf	3,6	;RP1=0, select bank1
   655  0713  009F               	movwf	31	;volatile
   656  0714                     l877:
   657                           
   658                           ;main.c: 114:     ADIF = 0;
   659  0714  1283               	bcf	3,5	;RP0=0, select bank0
   660  0715  1303               	bcf	3,6	;RP1=0, select bank0
   661  0716  130C               	bcf	12,6	;volatile
   662                           
   663                           ;main.c: 117:     OPTION_REG = 0x51;
   664  0717  3051               	movlw	81
   665  0718  1683               	bsf	3,5	;RP0=1, select bank1
   666  0719  1303               	bcf	3,6	;RP1=0, select bank1
   667  071A  0081               	movwf	1	;volatile
   668  071B                     l879:
   669                           
   670                           ;main.c: 118:     TMR0 = 0;
   671  071B  1283               	bcf	3,5	;RP0=0, select bank0
   672  071C  1303               	bcf	3,6	;RP1=0, select bank0
   673  071D  0181               	clrf	1	;volatile
   674  071E                     l881:
   675                           
   676                           ;main.c: 121:     TXSTA = 0x00;
   677  071E  1683               	bsf	3,5	;RP0=1, select bank1
   678  071F  1303               	bcf	3,6	;RP1=0, select bank1
   679  0720  0198               	clrf	24	;volatile
   680  0721                     l883:
   681                           
   682                           ;main.c: 122:     RCSTA = 0x00;
   683  0721  1283               	bcf	3,5	;RP0=0, select bank0
   684  0722  1303               	bcf	3,6	;RP1=0, select bank0
   685  0723  0198               	clrf	24	;volatile
   686  0724                     l885:
   687                           
   688                           ;main.c: 123:     RCSTAbits.SPEN = 1;
   689  0724  1798               	bsf	24,7	;volatile
   690  0725                     l887:
   691                           
   692                           ;main.c: 124:     TXSTAbits.SYNC = 0;
   693  0725  1683               	bsf	3,5	;RP0=1, select bank1
   694  0726  1303               	bcf	3,6	;RP1=0, select bank1
   695  0727  1218               	bcf	24,4	;volatile
   696  0728                     l889:
   697                           
   698                           ;main.c: 125:     TXSTAbits.BRGH = 1;
   699  0728  1518               	bsf	24,2	;volatile
   700  0729                     l891:
   701                           
   702                           ;main.c: 126:     TXSTAbits.TXEN = 1;
   703  0729  1698               	bsf	24,5	;volatile
   704  072A                     l893:
   705                           
   706                           ;main.c: 127:     RCSTAbits.CREN = 1;
   707  072A  1283               	bcf	3,5	;RP0=0, select bank0
   708  072B  1303               	bcf	3,6	;RP1=0, select bank0
   709  072C  1618               	bsf	24,4	;volatile
   710  072D                     l895:
   711                           
   712                           ;main.c: 129:     SPBRG = 25;
   713  072D  3019               	movlw	25
   714  072E  1683               	bsf	3,5	;RP0=1, select bank1
   715  072F  1303               	bcf	3,6	;RP1=0, select bank1
   716  0730  0099               	movwf	25	;volatile
   717                           
   718                           ;main.c: 133:     PORTB = 0x00;
   719  0731  1283               	bcf	3,5	;RP0=0, select bank0
   720  0732  1303               	bcf	3,6	;RP1=0, select bank0
   721  0733  0186               	clrf	6	;volatile
   722  0734                     l97:
   723  0734  0008               	return
   724  0735                     __end_of_set_configuraciones:
   725                           
   726                           	psect	text2
   727  06A3                     __ptext2:	
   728 ;; *************** function _iniciar_puertos *****************
   729 ;; Defined at:
   730 ;;		line 168 in file "main.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;		None
   733 ;; Auto vars:     Size  Location     Type
   734 ;;		None
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      void 
   737 ;; Registers used:
   738 ;;		status,2
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMMON   BANK0   BANK1
   744 ;;      Params:         0       0       0
   745 ;;      Locals:         0       0       0
   746 ;;      Temps:          0       0       0
   747 ;;      Totals:         0       0       0
   748 ;;Total ram usage:        0 bytes
   749 ;; Hardware stack levels used: 1
   750 ;; This function calls:
   751 ;;		Nothing
   752 ;; This function is called by:
   753 ;;		_main
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           
   758                           ;psect for function _iniciar_puertos
   759  06A3                     _iniciar_puertos:
   760  06A3                     l897:	
   761                           ;incstack = 0
   762                           ; Regs used in _iniciar_puertos: [status,2]
   763                           
   764                           
   765                           ;main.c: 178:     PORTA = 0;
   766  06A3  1283               	bcf	3,5	;RP0=0, select bank0
   767  06A4  1303               	bcf	3,6	;RP1=0, select bank0
   768  06A5  0185               	clrf	5	;volatile
   769                           
   770                           ;main.c: 179:     PORTB = 0;
   771  06A6  0186               	clrf	6	;volatile
   772                           
   773                           ;main.c: 180:     PORTC = 0;
   774  06A7  0187               	clrf	7	;volatile
   775  06A8                     l899:
   776                           
   777                           ;main.c: 182:     TRISA0 = 1;
   778  06A8  1683               	bsf	3,5	;RP0=1, select bank1
   779  06A9  1303               	bcf	3,6	;RP1=0, select bank1
   780  06AA  1405               	bsf	5,0	;volatile
   781  06AB                     l901:
   782                           
   783                           ;main.c: 183:     TRISA1 = 0;
   784  06AB  1085               	bcf	5,1	;volatile
   785  06AC                     l903:
   786                           
   787                           ;main.c: 184:     TRISA2 = 0;
   788  06AC  1105               	bcf	5,2	;volatile
   789  06AD                     l905:
   790                           
   791                           ;main.c: 185:     TRISC6 = 0;
   792  06AD  1307               	bcf	7,6	;volatile
   793  06AE                     l907:
   794                           
   795                           ;main.c: 186:     TRISC7 = 1;
   796  06AE  1787               	bsf	7,7	;volatile
   797                           
   798                           ;main.c: 187:     TRISB = 0x00;
   799  06AF  0186               	clrf	6	;volatile
   800  06B0                     l115:
   801  06B0  0008               	return
   802  06B1                     __end_of_iniciar_puertos:
   803                           
   804                           	psect	text3
   805  06CC                     __ptext3:	
   806 ;; *************** function _imprimir_valor_lcd *****************
   807 ;; Defined at:
   808 ;;		line 87 in file "main.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;		None
   811 ;; Auto vars:     Size  Location     Type
   812 ;;		None
   813 ;; Return value:  Size  Location     Type
   814 ;;                  1    wreg      void 
   815 ;; Registers used:
   816 ;;		wreg, status,2, status,0, pclath, cstack
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMMON   BANK0   BANK1
   822 ;;      Params:         0       0       0
   823 ;;      Locals:         0       0       0
   824 ;;      Temps:          0       0       0
   825 ;;      Totals:         0       0       0
   826 ;;Total ram usage:        0 bytes
   827 ;; Hardware stack levels used: 1
   828 ;; Hardware stack levels required when called: 1
   829 ;; This function calls:
   830 ;;		_Rx_Dato
   831 ;;		_Tx_Dato
   832 ;; This function is called by:
   833 ;;		_main
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           
   838                           ;psect for function _imprimir_valor_lcd
   839  06CC                     _imprimir_valor_lcd:
   840  06CC                     l861:	
   841                           ;incstack = 0
   842                           ; Regs used in _imprimir_valor_lcd: [wreg+status,2+status,0+pclath+cstack]
   843                           
   844                           
   845                           ;main.c: 90:     ADRESL = Rx_Dato();
   846  06CC  118A  268B  118A   	fcall	_Rx_Dato
   847  06CF  1683               	bsf	3,5	;RP0=1, select bank1
   848  06D0  1303               	bcf	3,6	;RP1=0, select bank1
   849  06D1  009E               	movwf	30	;volatile
   850  06D2                     l863:
   851                           
   852                           ;main.c: 91:     Tx_Dato(ADRESL);
   853  06D2  081E               	movf	30,w	;volatile
   854  06D3  118A  2695  118A   	fcall	_Tx_Dato
   855  06D6                     l865:
   856                           
   857                           ;main.c: 92:     ADRESH = Rx_Dato();
   858  06D6  118A  268B  118A   	fcall	_Rx_Dato
   859  06D9  1283               	bcf	3,5	;RP0=0, select bank0
   860  06DA  1303               	bcf	3,6	;RP1=0, select bank0
   861  06DB  009E               	movwf	30	;volatile
   862                           
   863                           ;main.c: 93:     Tx_Dato(ADRESH);
   864  06DC  081E               	movf	30,w	;volatile
   865  06DD  118A  2695  118A   	fcall	_Tx_Dato
   866  06E0                     l867:
   867                           
   868                           ;main.c: 95:     ADRES = (ADRESH << 8) | ADRESL;
   869  06E0  1283               	bcf	3,5	;RP0=0, select bank0
   870  06E1  1303               	bcf	3,6	;RP1=0, select bank0
   871  06E2  081E               	movf	30,w	;volatile
   872  06E3  00A1               	movwf	_ADRES+1
   873  06E4  1683               	bsf	3,5	;RP0=1, select bank1
   874  06E5  1303               	bcf	3,6	;RP1=0, select bank1
   875  06E6  081E               	movf	30,w	;volatile
   876  06E7  1283               	bcf	3,5	;RP0=0, select bank0
   877  06E8  1303               	bcf	3,6	;RP1=0, select bank0
   878  06E9  00A0               	movwf	_ADRES
   879  06EA                     l91:
   880  06EA  0008               	return
   881  06EB                     __end_of_imprimir_valor_lcd:
   882                           
   883                           	psect	text4
   884  06EB                     __ptext4:	
   885 ;; *************** function _enviar_datos *****************
   886 ;; Defined at:
   887 ;;		line 98 in file "main.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;		None
   890 ;; Auto vars:     Size  Location     Type
   891 ;;		None
   892 ;; Return value:  Size  Location     Type
   893 ;;                  1    wreg      void 
   894 ;; Registers used:
   895 ;;		wreg, status,2, status,0, pclath, cstack
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMMON   BANK0   BANK1
   901 ;;      Params:         0       0       0
   902 ;;      Locals:         0       0       0
   903 ;;      Temps:          0       2       0
   904 ;;      Totals:         0       2       0
   905 ;;Total ram usage:        2 bytes
   906 ;; Hardware stack levels used: 1
   907 ;; Hardware stack levels required when called: 1
   908 ;; This function calls:
   909 ;;		_Rx_Dato
   910 ;;		_Tx_Dato
   911 ;; This function is called by:
   912 ;;		_main
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           
   917                           ;psect for function _enviar_datos
   918  06EB                     _enviar_datos:
   919  06EB                     l869:	
   920                           ;incstack = 0
   921                           ; Regs used in _enviar_datos: [wreg+status,2+status,0+pclath+cstack]
   922                           
   923                           
   924                           ;main.c: 100:             Tx_Dato(ADRESL);
   925  06EB  1683               	bsf	3,5	;RP0=1, select bank1
   926  06EC  1303               	bcf	3,6	;RP1=0, select bank1
   927  06ED  081E               	movf	30,w	;volatile
   928  06EE  118A  2695  118A   	fcall	_Tx_Dato
   929  06F1                     l871:
   930                           
   931                           ;main.c: 101:             ECO = Rx_Dato();
   932  06F1  118A  268B  118A   	fcall	_Rx_Dato
   933  06F4  1283               	bcf	3,5	;RP0=0, select bank0
   934  06F5  1303               	bcf	3,6	;RP1=0, select bank0
   935  06F6  00A5               	movwf	??_enviar_datos
   936  06F7  01A6               	clrf	??_enviar_datos+1
   937  06F8  0825               	movf	??_enviar_datos,w
   938  06F9  00A2               	movwf	_ECO
   939  06FA  0826               	movf	??_enviar_datos+1,w
   940  06FB  00A3               	movwf	_ECO+1
   941  06FC                     l873:
   942                           
   943                           ;main.c: 102:             Tx_Dato(ADRESH);
   944  06FC  081E               	movf	30,w	;volatile
   945  06FD  118A  2695  118A   	fcall	_Tx_Dato
   946                           
   947                           ;main.c: 103:             ECO = Rx_Dato();
   948  0700  118A  268B  118A   	fcall	_Rx_Dato
   949  0703  1283               	bcf	3,5	;RP0=0, select bank0
   950  0704  1303               	bcf	3,6	;RP1=0, select bank0
   951  0705  00A5               	movwf	??_enviar_datos
   952  0706  01A6               	clrf	??_enviar_datos+1
   953  0707  0825               	movf	??_enviar_datos,w
   954  0708  00A2               	movwf	_ECO
   955  0709  0826               	movf	??_enviar_datos+1,w
   956  070A  00A3               	movwf	_ECO+1
   957  070B                     l94:
   958  070B  0008               	return
   959  070C                     __end_of_enviar_datos:
   960                           
   961                           	psect	text5
   962  0695                     __ptext5:	
   963 ;; *************** function _Tx_Dato *****************
   964 ;; Defined at:
   965 ;;		line 65 in file "main.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;  X               1    wreg     unsigned char 
   968 ;; Auto vars:     Size  Location     Type
   969 ;;  X               1    0[BANK0 ] unsigned char 
   970 ;; Return value:  Size  Location     Type
   971 ;;                  1    wreg      void 
   972 ;; Registers used:
   973 ;;		wreg
   974 ;; Tracked objects:
   975 ;;		On entry : 0/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMMON   BANK0   BANK1
   979 ;;      Params:         0       0       0
   980 ;;      Locals:         0       1       0
   981 ;;      Temps:          0       0       0
   982 ;;      Totals:         0       1       0
   983 ;;Total ram usage:        1 bytes
   984 ;; Hardware stack levels used: 1
   985 ;; This function calls:
   986 ;;		Nothing
   987 ;; This function is called by:
   988 ;;		_imprimir_valor_lcd
   989 ;;		_enviar_datos
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993                           
   994                           ;psect for function _Tx_Dato
   995  0695                     _Tx_Dato:
   996                           
   997                           ;incstack = 0
   998                           ; Regs used in _Tx_Dato: [wreg]
   999                           ;Tx_Dato@X stored from wreg
  1000  0695  1283               	bcf	3,5	;RP0=0, select bank0
  1001  0696  1303               	bcf	3,6	;RP1=0, select bank0
  1002  0697  00A4               	movwf	Tx_Dato@X
  1003  0698                     l837:
  1004                           
  1005                           ;main.c: 65: void Tx_Dato(unsigned char X);main.c: 66: {;main.c: 67:     PIR1bits.TXIF =
      +                           0;
  1006  0698  120C               	bcf	12,4	;volatile
  1007  0699                     l839:
  1008                           
  1009                           ;main.c: 68:     TXREG = X;
  1010  0699  0824               	movf	Tx_Dato@X,w
  1011  069A  0099               	movwf	25	;volatile
  1012  069B                     l841:
  1013                           
  1014                           ;main.c: 72:                 if(TXSTAbits.TRMT == 0)
  1015  069B  1683               	bsf	3,5	;RP0=1, select bank1
  1016  069C  1303               	bcf	3,6	;RP1=0, select bank1
  1017  069D  1898               	btfsc	24,1	;volatile
  1018  069E  2EA0               	goto	u151
  1019  069F  2EA1               	goto	u150
  1020  06A0                     u151:
  1021  06A0  2EA2               	goto	l83
  1022  06A1                     u150:
  1023  06A1  2E9B               	goto	l841
  1024  06A2                     l83:
  1025  06A2  0008               	return
  1026  06A3                     __end_of_Tx_Dato:
  1027                           
  1028                           	psect	text6
  1029  068B                     __ptext6:	
  1030 ;; *************** function _Rx_Dato *****************
  1031 ;; Defined at:
  1032 ;;		line 78 in file "main.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;		None
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;		None
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  1    wreg      unsigned char 
  1039 ;; Registers used:
  1040 ;;		wreg
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMMON   BANK0   BANK1
  1046 ;;      Params:         0       0       0
  1047 ;;      Locals:         0       0       0
  1048 ;;      Temps:          0       0       0
  1049 ;;      Totals:         0       0       0
  1050 ;;Total ram usage:        0 bytes
  1051 ;; Hardware stack levels used: 1
  1052 ;; This function calls:
  1053 ;;		Nothing
  1054 ;; This function is called by:
  1055 ;;		_imprimir_valor_lcd
  1056 ;;		_enviar_datos
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           
  1061                           ;psect for function _Rx_Dato
  1062  068B                     _Rx_Dato:
  1063  068B                     l86:	
  1064                           ;incstack = 0
  1065                           ; Regs used in _Rx_Dato: [wreg]
  1066                           ;main.c: 80:     wait:
  1067                           
  1068                           
  1069                           ;main.c: 81:         if(PIR1bits.RCIF == 0)
  1070  068B  1283               	bcf	3,5	;RP0=0, select bank0
  1071  068C  1303               	bcf	3,6	;RP1=0, select bank0
  1072  068D  1A8C               	btfsc	12,5	;volatile
  1073  068E  2E90               	goto	u161
  1074  068F  2E91               	goto	u160
  1075  0690                     u161:
  1076  0690  2E92               	goto	l87
  1077  0691                     u160:
  1078  0691  2E8B               	goto	l86
  1079  0692                     l87:
  1080                           
  1081                           ;main.c: 83:     PIR1bits.RCIF = 0;
  1082  0692  128C               	bcf	12,5	;volatile
  1083  0693                     l847:
  1084                           
  1085                           ;main.c: 84:     return RCREG;
  1086  0693  081A               	movf	26,w	;volatile
  1087  0694                     l88:
  1088  0694  0008               	return
  1089  0695                     __end_of_Rx_Dato:
  1090                           
  1091                           	psect	text7
  1092  06B1                     __ptext7:	
  1093 ;; *************** function _Canal0 *****************
  1094 ;; Defined at:
  1095 ;;		line 40 in file "main.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;  z               2    0[BANK0 ] int 
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;		None
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  1    wreg      void 
  1102 ;; Registers used:
  1103 ;;		wreg
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMMON   BANK0   BANK1
  1109 ;;      Params:         0       2       0
  1110 ;;      Locals:         0       0       0
  1111 ;;      Temps:          0       2       0
  1112 ;;      Totals:         0       4       0
  1113 ;;Total ram usage:        4 bytes
  1114 ;; Hardware stack levels used: 1
  1115 ;; This function calls:
  1116 ;;		Nothing
  1117 ;; This function is called by:
  1118 ;;		_main
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           
  1122                           
  1123                           ;psect for function _Canal0
  1124  06B1                     _Canal0:
  1125  06B1                     l851:	
  1126                           ;incstack = 0
  1127                           ; Regs used in _Canal0: [wreg]
  1128                           
  1129                           
  1130                           ;main.c: 40: void Canal0(int z);main.c: 41: {;main.c: 43:     CHS2 = 0;
  1131  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  1132  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  1133  06B3  129F               	bcf	31,5	;volatile
  1134                           
  1135                           ;main.c: 44:     CHS1 = 0;
  1136  06B4  121F               	bcf	31,4	;volatile
  1137                           
  1138                           ;main.c: 45:     CHS0 = 0;
  1139  06B5  119F               	bcf	31,3	;volatile
  1140                           
  1141                           ;main.c: 47:     ADON = 1;
  1142  06B6  141F               	bsf	31,0	;volatile
  1143  06B7                     l853:
  1144                           
  1145                           ;main.c: 49:     _delay((unsigned long)((1)*(32000000/4000.0)));
  1146  06B7  300B               	movlw	11
  1147  06B8  1283               	bcf	3,5	;RP0=0, select bank0
  1148  06B9  1303               	bcf	3,6	;RP1=0, select bank0
  1149  06BA  00A7               	movwf	??_Canal0+1
  1150  06BB  3062               	movlw	98
  1151  06BC  00A6               	movwf	??_Canal0
  1152  06BD                     u277:
  1153  06BD  0BA6               	decfsz	??_Canal0,f
  1154  06BE  2EBD               	goto	u277
  1155  06BF  0BA7               	decfsz	??_Canal0+1,f
  1156  06C0  2EBD               	goto	u277
  1157  06C1                     l855:
  1158                           
  1159                           ;main.c: 51:      GO = 1;
  1160  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  1161  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  1162  06C3  151F               	bsf	31,2	;volatile
  1163  06C4                     l857:
  1164  06C4  1B0C               	btfsc	12,6	;volatile
  1165  06C5  2EC7               	goto	u171
  1166  06C6  2EC8               	goto	u170
  1167  06C7                     u171:
  1168  06C7  2EC9               	goto	l77
  1169  06C8                     u170:
  1170  06C8  2EC4               	goto	l857
  1171  06C9                     l77:
  1172                           
  1173                           ;main.c: 57:     ADON = 0;
  1174  06C9  101F               	bcf	31,0	;volatile
  1175                           
  1176                           ;main.c: 61:     ADIF = 0;
  1177  06CA  130C               	bcf	12,6	;volatile
  1178  06CB                     l78:
  1179  06CB  0008               	return
  1180  06CC                     __end_of_Canal0:
  1181  007E                     btemp	set	126	;btemp
  1182  007E                     wtemp0	set	126
  1183                           
  1184                           	psect	config
  1185                           
  1186                           ;Config register CONFIG @ 0x2007
  1187                           ;	Oscillator Selection bits
  1188                           ;	FOSC = XT, XT oscillator
  1189                           ;	Watchdog Timer Enable bit
  1190                           ;	WDTE = ON, WDT enabled
  1191                           ;	Power-up Timer Enable bit
  1192                           ;	PWRTE = ON, PWRT enabled
  1193                           ;	FLASH Program Memory Code Protection bits
  1194                           ;	CP = OFF, Code protection off
  1195                           ;	Brown-out Reset Enable bit
  1196                           ;	BOREN = OFF, BOR disabled
  1197                           ;	Low Voltage In-Circuit Serial Programming Enable bit
  1198                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1199                           ;	Data EE Memory Code Protection
  1200                           ;	CPD = OFF, Code Protection off
  1201                           ;	FLASH Program Memory Write Enable
  1202                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
  1203                           ;	In-Circuit Debugger Mode bit
  1204                           ;	DEBUG = 0x1, unprogrammed default
  1205  2007                     	org	8199
  1206  2007  3D35               	dw	15669

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94      4       8
    BANK1            94      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Canal0
    _imprimir_valor_lcd->_Tx_Dato
    _enviar_datos->_Tx_Dato

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     120
                             _Canal0
                       _enviar_datos
                 _imprimir_valor_lcd
                    _iniciar_puertos
                _set_configuraciones
 ---------------------------------------------------------------------------------
 (1) _set_configuraciones                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _iniciar_puertos                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _imprimir_valor_lcd                                   0     0      0      22
                            _Rx_Dato
                            _Tx_Dato
 ---------------------------------------------------------------------------------
 (1) _enviar_datos                                         2     2      0      22
                                              1 BANK0      2     2      0
                            _Rx_Dato
                            _Tx_Dato
 ---------------------------------------------------------------------------------
 (2) _Tx_Dato                                              1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Rx_Dato                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Canal0                                               4     2      2      76
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Canal0
   _enviar_datos
     _Rx_Dato
     _Tx_Dato
   _imprimir_valor_lcd
     _Rx_Dato
     _Tx_Dato
   _iniciar_puertos
   _set_configuraciones

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            5E      0       0       3        0.0%
BANK0               5E      4       8       4        8.5%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            5E      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               5E      0       0       6        0.0%
ABS                  0      0       8       7        0.0%
DATA                 0      0       8       8        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon May 17 22:52:07 2021

                          l83 06A2                            l91 06EA                            l77 06C9  
                          l78 06CB                            l86 068B                            l94 070B  
                          l87 0692                            l88 0694                            l97 0734  
                          _GO 00FA           _set_configuraciones 070C                           l115 06B0  
 __size_of_imprimir_valor_lcd 001F                           l901 06AB                           l903 06AC  
                         l911 0738                           l841 069B                           l905 06AD  
                         l921 0759                           l913 073B                           l851 06B1  
                         l907 06AE                           l931 0782                           l923 075C  
                         l915 0744                           l853 06B7                           l837 0698  
                         l861 06CC                           l941 07B7                           l933 0791  
                         l925 076B                           l917 0747                           l909 0735  
                         l855 06C1                           l847 0693                           l839 0699  
                         l871 06F1                           l863 06D2                           l951 07E1  
                         l943 07BB                           l935 0795                           l927 076F  
                         l919 074A                           l857 06C4                           l873 06FC  
                         l865 06D6                           l881 071E                           l953 07F0  
                         l945 07CA                           l937 07A4                           l929 077E  
                         _ECO 0022                           l867 06E0                           l891 0729  
                         l883 0721                           l875 070C                           l947 07CE  
                         l939 07A8                           l869 06EB                           l893 072A  
                         l885 0724                           l877 0714                           l949 07DD  
                         l895 072D                           l887 0725                           l879 071B  
                         l897 06A3                           l889 0728                           l899 06A8  
                         u200 077E                           u201 077D                           u210 0791  
                         u211 0790                           u220 07A4                           u221 07A3  
                         u205 077A                           u150 06A1                           u230 07B7  
                         u151 06A0                           u231 07B6                           u215 078D  
                         u160 0691                           u240 07CA                           u161 0690  
                         u241 07C9                           u225 07A0                           u170 06C8  
                         u250 07DD                           u171 06C7                           u251 07DC  
                         u235 07B3                           u260 07F0                           u180 0759  
                         u261 07EF                           u245 07C6                           u181 0758  
                         u190 076B                           u255 07D9                           u191 076A  
                         u265 07EC                           u185 0755                           u195 0767  
                         u277 06BD              ?_iniciar_puertos 0024                          _ADIF 0066  
                        _ADON 00F8                          _CHS0 00FB                          _CHS1 00FC  
                        _CHS2 00FD                          _TMR0 0001          ?_set_configuraciones 0024  
                        _main 0735                          btemp 007E                          start 0000  
             __end_of_Rx_Dato 0695               __end_of_Tx_Dato 06A3                         ?_main 0024  
                       _ADRES 0020                         _RCREG 001A                         _RCSTA 0018  
                       _SPBRG 0099                         _PORTA 0005                         _PORTB 0006  
                       _PORTC 0007                         _TRISB 0086                         _TXREG 0019  
                       _TXSTA 0098         ??_set_configuraciones 0000                 ?_enviar_datos 0024  
                       status 0003                         wtemp0 007E               __initialization 07F7  
                __end_of_main 07F7                        ??_main 0000                        _ADCON0 001F  
                      _ADCON1 009F                        _ADRESH 001E                        _ADRESL 009E  
              ??_enviar_datos 0025                        _TRISA0 0428                        _TRISA1 0429  
                      _TRISA2 042A                        _TRISC6 043E                        _TRISC7 043F  
                      _Canal0 06B1                     ??_Rx_Dato 0000                     ??_Tx_Dato 0000  
     __end_of__initialization 07FD                __pcstackCOMMON 0000                    __pbssBANK0 0020  
                     ?_Canal0 0024                    __pmaintext 0735    __end_of_imprimir_valor_lcd 06EB  
                     Canal0@z 0024          __end_of_enviar_datos 070C      __size_of_iniciar_puertos 000E  
             __size_of_Canal0 001B                       _Rx_Dato 068B                       _Tx_Dato 0695  
                     __ptext1 070C                       __ptext2 06A3                       __ptext3 06CC  
                     __ptext4 06EB                       __ptext5 0695                       __ptext6 068B  
                     __ptext7 06B1   __end_of_set_configuraciones 0735          end_of_initialization 07FD  
                   _RCSTAbits 0018                     _TXSTAbits 0098                __end_of_Canal0 06CC  
           ??_iniciar_puertos 0000         __size_of_enviar_datos 0021           start_initialization 07F7  
                _enviar_datos 06EB                      ??_Canal0 0026                     ___latbits 0001  
               __pcstackBANK0 0024            _imprimir_valor_lcd 06CC           ?_imprimir_valor_lcd 0024  
                    ?_Rx_Dato 0024                      ?_Tx_Dato 0024          ??_imprimir_valor_lcd 0000  
                    _PIR1bits 000C               _iniciar_puertos 06A3  __size_of_set_configuraciones 0029  
                    Tx_Dato@X 0024              __size_of_Rx_Dato 000A              __size_of_Tx_Dato 000E  
               __size_of_main 00C2       __end_of_iniciar_puertos 06B1                    _OPTION_REG 0081  
