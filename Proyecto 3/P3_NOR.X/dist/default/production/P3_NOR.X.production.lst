

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jun 18 00:01:11 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F873
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.20
    35                           ; Generated 12/02/2020 GMT
    36                           ; 
    37                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F873 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  018C                     	;# 
   121  018D                     	;# 
   122  0000                     	;# 
   123  0001                     	;# 
   124  0002                     	;# 
   125  0003                     	;# 
   126  0004                     	;# 
   127  0005                     	;# 
   128  0006                     	;# 
   129  0007                     	;# 
   130  000A                     	;# 
   131  000B                     	;# 
   132  000C                     	;# 
   133  000D                     	;# 
   134  000E                     	;# 
   135  000E                     	;# 
   136  000F                     	;# 
   137  0010                     	;# 
   138  0011                     	;# 
   139  0012                     	;# 
   140  0013                     	;# 
   141  0014                     	;# 
   142  0015                     	;# 
   143  0015                     	;# 
   144  0016                     	;# 
   145  0017                     	;# 
   146  0018                     	;# 
   147  0019                     	;# 
   148  001A                     	;# 
   149  001B                     	;# 
   150  001B                     	;# 
   151  001C                     	;# 
   152  001D                     	;# 
   153  001E                     	;# 
   154  001F                     	;# 
   155  0081                     	;# 
   156  0085                     	;# 
   157  0086                     	;# 
   158  0087                     	;# 
   159  008C                     	;# 
   160  008D                     	;# 
   161  008E                     	;# 
   162  0091                     	;# 
   163  0092                     	;# 
   164  0093                     	;# 
   165  0094                     	;# 
   166  0098                     	;# 
   167  0099                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  010C                     	;# 
   171  010D                     	;# 
   172  010E                     	;# 
   173  010F                     	;# 
   174  018C                     	;# 
   175  018D                     	;# 
   176                           
   177                           	psect	idataBANK0
   178  0357                     __pidataBANK0:
   179                           
   180                           ;initializer for _X
   181  0357  342F               	retlw	47
   182  0358  3400               	retlw	0
   183                           
   184                           ;initializer for _M
   185  0359  3445               	retlw	69
   186  035A  346C               	retlw	108
   187  035B  3420               	retlw	32
   188  035C  3441               	retlw	65
   189  035D  3444               	retlw	68
   190  035E  3443               	retlw	67
   191  035F  3420               	retlw	32
   192  0360  3479               	retlw	121
   193  0361  3420               	retlw	32
   194  0362  3465               	retlw	101
   195  0363  346C               	retlw	108
   196  0364  3420               	retlw	32
   197  0365  3455               	retlw	85
   198  0366  3441               	retlw	65
   199  0367  3452               	retlw	82
   200  0368  3454               	retlw	84
   201  0369  3420               	retlw	32
   202  036A  344A               	retlw	74
   203  036B  346F               	retlw	111
   204  036C  3473               	retlw	115
   205  036D  3465               	retlw	101
   206  036E  3420               	retlw	32
   207  036F  3452               	retlw	82
   208  0370  3464               	retlw	100
   209  0371  3467               	retlw	103
   210  0372  347A               	retlw	122
   211  0373  3420               	retlw	32
   212  0374  3479               	retlw	121
   213  0375  3420               	retlw	32
   214  0376  344B               	retlw	75
   215  0377  3461               	retlw	97
   216  0378  3472               	retlw	114
   217  0379  346C               	retlw	108
   218  037A  3461               	retlw	97
   219  037B  3420               	retlw	32
   220  037C  3452               	retlw	82
   221  037D  3465               	retlw	101
   222  037E  3479               	retlw	121
   223  037F  3465               	retlw	101
   224  0380  3473               	retlw	115
   225  0381  3400               	retlw	0
   226  0014                     _SSPCON	set	20
   227  0007                     _PORTC	set	7
   228  0006                     _PORTB	set	6
   229  0005                     _PORTA	set	5
   230  001E                     _ADRESH	set	30
   231  001A                     _RCREG	set	26
   232  0019                     _TXREG	set	25
   233  000C                     _PIR1bits	set	12
   234  0001                     _TMR0	set	1
   235  001F                     _ADCON0	set	31
   236  0006                     _PORTBbits	set	6
   237  0007                     _PORTCbits	set	7
   238  00FA                     _GO	set	250
   239  00F8                     _ADON	set	248
   240  00FB                     _CHS0	set	251
   241  00FC                     _CHS1	set	252
   242  00FD                     _CHS2	set	253
   243  0066                     _ADIF	set	102
   244  003B                     _RC3	set	59
   245  002A                     _RA2	set	42
   246  0029                     _RA1	set	41
   247  0028                     _RA0	set	40
   248  0039                     _RC1	set	57
   249  0038                     _RC0	set	56
   250  002D                     _RA5	set	45
   251  002C                     _RA4	set	44
   252  0094                     _SSPSTAT	set	148
   253  0093                     _SSPADD	set	147
   254  0091                     _SSPCON2	set	145
   255  0085                     _TRISAbits	set	133
   256  009E                     _ADRESL	set	158
   257  0098                     _TXSTAbits	set	152
   258  0099                     _SPBRG	set	153
   259  0081                     _OPTION_REG	set	129
   260  009F                     _ADCON1	set	159
   261  0086                     _TRISBbits	set	134
   262  0087                     _TRISCbits	set	135
   263  0465                     _RCIE	set	1125
   264  0464                     _TXIE	set	1124
   265                           
   266                           	psect	strings
   267  0002                     __pstrings:
   268  0002                     stringtab:
   269  0002                     __stringtab:
   270                           
   271                           ;	String table - string pointers are 1 byte each
   272  0002  1BFF               	btfsc	btemp+1,7
   273  0003  280C               	ljmp	stringcode
   274  0004  1383               	bcf	3,7
   275  0005  187F               	btfsc	btemp+1,0
   276  0006  1783               	bsf	3,7
   277  0007  0800               	movf	0,w
   278  0008  0A84               	incf	4,f
   279  0009  1903               	skipnz
   280  000A  0AFF               	incf	btemp+1,f
   281  000B  0008               	return
   282  000C                     stringcode:
   283  000C                     stringdir:
   284  000C  3000               	movlw	high stringdir
   285  000D  008A               	movwf	10
   286  000E  0804               	movf	4,w
   287  000F  0A84               	incf	4,f
   288  0010  0782               	addwf	2,f
   289  0011                     __stringbase:
   290  0011  3400               	retlw	0
   291  0012                     __end_of__stringtab:
   292  0012                     STR_6:
   293  0012  3433               	retlw	51	;'3'
   294  0013  342E               	retlw	46	;'.'
   295  0014  3431               	retlw	49	;'1'
   296  0015  3432               	retlw	50	;'2'
   297  0016  3456               	retlw	86	;'V'
   298  0017  3400               	retlw	0
   299  0018                     STR_3:
   300  0018  3431               	retlw	49	;'1'
   301  0019  342E               	retlw	46	;'.'
   302  001A  3432               	retlw	50	;'2'
   303  001B  3435               	retlw	53	;'5'
   304  001C  3456               	retlw	86	;'V'
   305  001D  3400               	retlw	0
   306  001E                     STR_7:
   307  001E  3433               	retlw	51	;'3'
   308  001F  342E               	retlw	46	;'.'
   309  0020  3437               	retlw	55	;'7'
   310  0021  3435               	retlw	53	;'5'
   311  0022  3456               	retlw	86	;'V'
   312  0023  3400               	retlw	0
   313  0024                     STR_8:
   314  0024  3434               	retlw	52	;'4'
   315  0025  342E               	retlw	46	;'.'
   316  0026  3433               	retlw	51	;'3'
   317  0027  3437               	retlw	55	;'7'
   318  0028  3456               	retlw	86	;'V'
   319  0029  3400               	retlw	0
   320  002A                     STR_4:
   321  002A  3431               	retlw	49	;'1'
   322  002B  342E               	retlw	46	;'.'
   323  002C  3439               	retlw	57	;'9'
   324  002D  3437               	retlw	55	;'7'
   325  002E  3456               	retlw	86	;'V'
   326  002F  3400               	retlw	0
   327  0030                     STR_2:
   328  0030  3436               	retlw	54	;'6'
   329  0031  3432               	retlw	50	;'2'
   330  0032  3435               	retlw	53	;'5'
   331  0033  346D               	retlw	109	;'m'
   332  0034  3476               	retlw	118	;'v'
   333  0035  3400               	retlw	0
   334  0036                     STR_10:
   335  0036  3452               	retlw	82	;'R'
   336  0037  3465               	retlw	101	;'e'
   337  0038  3463               	retlw	99	;'c'
   338  0039  3420               	retlw	32	;' '
   339  003A  3400               	retlw	0
   340  003B                     STR_5:
   341  003B  3432               	retlw	50	;'2'
   342  003C  342E               	retlw	46	;'.'
   343  003D  3435               	retlw	53	;'5'
   344  003E  3456               	retlw	86	;'V'
   345  003F  3400               	retlw	0
   346  0040                     STR_11:
   347  0040  3445               	retlw	69	;'E'
   348  0041  346E               	retlw	110	;'n'
   349  0042  3476               	retlw	118	;'v'
   350  0043  3400               	retlw	0
   351  0044                     STR_1:
   352  0044  3430               	retlw	48	;'0'
   353  0045  3456               	retlw	86	;'V'
   354  0046  3400               	retlw	0
   355  003D                     
   356                           	psect	cinit
   357  07E8                     start_initialization:	
   358                           ; #config settings
   359                           
   360  07E8                     __initialization:
   361                           
   362                           ; Initialize objects allocated to BANK0
   363  07E8  1383               	bcf	3,7	;select IRP bank0
   364  07E9  304B               	movlw	low (__pdataBANK0+43)
   365  07EA  00FD               	movwf	btemp+-1
   366  07EB  3003               	movlw	high __pidataBANK0
   367  07EC  00FE               	movwf	btemp
   368  07ED  3057               	movlw	low __pidataBANK0
   369  07EE  00FF               	movwf	btemp+1
   370  07EF  3020               	movlw	low __pdataBANK0
   371  07F0  0084               	movwf	4
   372  07F1  118A  2265  118A   	fcall	init_ram0
   373                           
   374                           ; Clear objects allocated to BANK0
   375  07F4  01E0               	clrf	__pbssBANK0& (0+127)
   376  07F5  01E1               	clrf	(__pbssBANK0+1)& (0+127)
   377  07F6  01E2               	clrf	(__pbssBANK0+2)& (0+127)
   378  07F7  01E3               	clrf	(__pbssBANK0+3)& (0+127)
   379  07F8  01E4               	clrf	(__pbssBANK0+4)& (0+127)
   380  07F9  01E5               	clrf	(__pbssBANK0+5)& (0+127)
   381  07FA  01E6               	clrf	(__pbssBANK0+6)& (0+127)
   382  07FB  01E7               	clrf	(__pbssBANK0+7)& (0+127)
   383                           
   384                           ; Clear objects allocated to BITBANK0
   385  07FC  01E8               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   386  07FD                     end_of_initialization:	
   387                           ;End of C runtime variable initialization code
   388                           
   389  07FD                     __end_of__initialization:
   390  07FD  0183               	clrf	3
   391  07FE  118A  2CE7         	ljmp	_main	;jump to C main() function
   392                           
   393                           	psect	bitbssBANK0
   394  0340                     __pbitbssBANK0:
   395  0340                     _RS:
   396  0340                     	ds	1
   397                           
   398                           	psect	bssBANK0
   399  0060                     __pbssBANK0:
   400  0060                     _number:
   401  0060                     	ds	4
   402  0064                     _ADRES:
   403  0064                     	ds	2
   404  0066                     _ECO:
   405  0066                     	ds	2
   406                           
   407                           	psect	dataBANK0
   408  0020                     __pdataBANK0:
   409  0020                     _X:
   410  0020                     	ds	2
   411  0022                     _M:
   412  0022                     	ds	41
   413                           
   414                           	psect	inittext
   415  0261                     init_fetch0:	
   416                           ;	Called with low address in FSR and high address in W
   417                           
   418  0261  087E               	movf	btemp,w
   419  0262  008A               	movwf	10
   420  0263  087F               	movf	btemp+1,w
   421  0264  0082               	movwf	2
   422  0265                     init_ram0:	
   423                           ;Called with:
   424                           ;	high address of idata address in btemp 
   425                           ;	low address of idata address in btemp+1 
   426                           ;	low address of data in FSR
   427                           ;	high address + 1 of data in btemp-1
   428                           
   429  0265  118A  2261  118A   	fcall	init_fetch0
   430  0268  0080               	movwf	0
   431  0269  0A84               	incf	4,f
   432  026A  0804               	movf	4,w
   433  026B  067D               	xorwf	btemp+-1,w
   434  026C  1903               	btfsc	3,2
   435  026D  3400               	retlw	0
   436  026E  0AFF               	incf	btemp+1,f
   437  026F  1903               	btfsc	3,2
   438  0270  0AFE               	incf	btemp,f
   439  0271  2A65               	goto	init_ram0
   440                           
   441                           	psect	cstackCOMMON
   442  0000                     __pcstackCOMMON:
   443  0000                     ??_iniciar_puertos:
   444  0000                     ??_set_configuraciones:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0000                     ??_Tx_Dato:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0000                     ??_Rx_Dato:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0000                     ??_evaluar_dato:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0000                     ??_imprimir_valor_leds:	
   457                           ; 1 bytes @ 0x0
   458                           
   459                           
   460                           	psect	cstackBANK0
   461  004B                     __pcstackBANK0:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  004B                     ?_iniciar_puertos:
   465  004B                     ?_inicio_presentacion:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  004B                     ?_LCD_Write_Nibble:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  004B                     ??_LCD_Write_Nibble:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  004B                     ?_LCD_Cmd:	
   475                           ; 1 bytes @ 0x0
   476                           
   477  004B                     ?_LCD_PutC:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  004B                     ?_LCD_Begin:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  004B                     ?_keypad_readkey:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  004B                     ??_keypad_readkey:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  004B                     ?_keypad_getkey:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  004B                     ?_set_configuraciones:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  004B                     ?_Tx_Dato:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  004B                     ?_Rx_Dato:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  004B                     ?_evaluar_dato:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  004B                     ?_imprimir_valor_leds:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  004B                     ?_Canal0:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  004B                     ?_enviar_datos:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  004B                     ?_main:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  004B                     Tx_Dato@X:	
   517                           ; 2 bytes @ 0x0
   518                           
   519  004B                     Canal0@z:	
   520                           ; 1 bytes @ 0x0
   521                           
   522                           
   523                           ; 2 bytes @ 0x0
   524  004B                     	ds	1
   525  004C                     ??_keypad_getkey:
   526                           
   527                           ; 1 bytes @ 0x1
   528  004C                     	ds	1
   529  004D                     ??_Canal0:
   530  004D                     LCD_Write_Nibble@n:	
   531                           ; 1 bytes @ 0x2
   532                           
   533  004D                     keypad_getkey@key:	
   534                           ; 1 bytes @ 0x2
   535                           
   536                           
   537                           ; 1 bytes @ 0x2
   538  004D                     	ds	1
   539  004E                     ??_LCD_Cmd:
   540  004E                     ??_LCD_PutC:	
   541                           ; 1 bytes @ 0x3
   542                           
   543  004E                     ?_LCD_Print:	
   544                           ; 1 bytes @ 0x3
   545                           
   546  004E                     LCD_Print@LCD_Str:	
   547                           ; 1 bytes @ 0x3
   548                           
   549                           
   550                           ; 2 bytes @ 0x3
   551  004E                     	ds	1
   552  004F                     ??_enviar_datos:
   553  004F                     LCD_PutC@LCD_Char:	
   554                           ; 1 bytes @ 0x4
   555                           
   556                           
   557                           ; 1 bytes @ 0x4
   558  004F                     	ds	1
   559  0050                     ??_LCD_Print:
   560  0050                     LCD_Cmd@Command:	
   561                           ; 1 bytes @ 0x5
   562                           
   563                           
   564                           ; 1 bytes @ 0x5
   565  0050                     	ds	1
   566  0051                     ?_LCD_Goto:
   567  0051                     ??_LCD_Begin:	
   568                           ; 1 bytes @ 0x6
   569                           
   570  0051                     LCD_Goto@row:	
   571                           ; 1 bytes @ 0x6
   572                           
   573  0051                     LCD_Print@i:	
   574                           ; 1 bytes @ 0x6
   575                           
   576                           
   577                           ; 1 bytes @ 0x6
   578  0051                     	ds	1
   579  0052                     ??_LCD_Goto:
   580                           
   581                           ; 1 bytes @ 0x7
   582  0052                     	ds	2
   583  0054                     LCD_Goto@col:
   584                           
   585                           ; 1 bytes @ 0x9
   586  0054                     	ds	1
   587  0055                     ??_inicio_presentacion:
   588                           
   589                           ; 1 bytes @ 0xA
   590  0055                     	ds	3
   591  0058                     inicio_presentacion@i:
   592                           
   593                           ; 2 bytes @ 0xD
   594  0058                     	ds	2
   595  005A                     ??_main:
   596                           
   597                           ; 1 bytes @ 0xF
   598  005A                     	ds	3
   599  005D                     main@i:
   600                           
   601                           ; 2 bytes @ 0x12
   602  005D                     	ds	2
   603  005F                     main@c:
   604                           
   605                           ; 1 bytes @ 0x14
   606  005F                     	ds	1
   607                           
   608                           	psect	maintext
   609  04E7                     __pmaintext:	
   610 ;;
   611 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   612 ;;
   613 ;; *************** function _main *****************
   614 ;; Defined at:
   615 ;;		line 156 in file "main.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;		None
   618 ;; Auto vars:     Size  Location     Type
   619 ;;  c               1   20[BANK0 ] unsigned char 
   620 ;;  i               2   18[BANK0 ] int 
   621 ;; Return value:  Size  Location     Type
   622 ;;                  2  213[None  ] int 
   623 ;; Registers used:
   624 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : B00/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMMON   BANK0   BANK1
   630 ;;      Params:         0       0       0
   631 ;;      Locals:         0       3       0
   632 ;;      Temps:          0       3       0
   633 ;;      Totals:         0       6       0
   634 ;;Total ram usage:        6 bytes
   635 ;; Hardware stack levels required when called: 4
   636 ;; This function calls:
   637 ;;		_LCD_Begin
   638 ;;		_LCD_Cmd
   639 ;;		_LCD_Goto
   640 ;;		_LCD_Print
   641 ;;		_LCD_PutC
   642 ;;		_enviar_datos
   643 ;;		_imprimir_valor_leds
   644 ;;		_iniciar_puertos
   645 ;;		_inicio_presentacion
   646 ;;		_keypad_getkey
   647 ;;		_set_configuraciones
   648 ;; This function is called by:
   649 ;;		Startup code after reset
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653                           
   654                           ;psect for function _main
   655  04E7                     _main:
   656  04E7                     l1668:	
   657                           ;incstack = 0
   658                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   659                           
   660                           
   661                           ;main.c: 158:     int i=0;
   662  04E7  1283               	bcf	3,5	;RP0=0, select bank0
   663  04E8  1303               	bcf	3,6	;RP1=0, select bank0
   664  04E9  01DD               	clrf	main@i
   665  04EA  01DE               	clrf	main@i+1
   666  04EB                     l1670:
   667                           
   668                           ;main.c: 159:     set_configuraciones();
   669  04EB  118A  2289  118A   	fcall	_set_configuraciones
   670  04EE                     l1672:
   671                           
   672                           ;main.c: 161:     iniciar_puertos();
   673  04EE  118A  22DC  118A   	fcall	_iniciar_puertos
   674  04F1                     l1674:
   675                           
   676                           ;main.c: 164:     LCD_Begin();
   677  04F1  118A  257A  118A   	fcall	_LCD_Begin
   678  04F4                     l1676:
   679                           
   680                           ;main.c: 165:     inicio_presentacion();
   681  04F4  118A  2480  118A   	fcall	_inicio_presentacion
   682  04F7                     l1678:
   683                           
   684                           ;main.c: 166:     _delay((unsigned long)((500)*(32000000/4000.0)));
   685  04F7  3015               	movlw	21
   686  04F8  1283               	bcf	3,5	;RP0=0, select bank0
   687  04F9  1303               	bcf	3,6	;RP1=0, select bank0
   688  04FA  00DC               	movwf	??_main+2
   689  04FB  304B               	movlw	75
   690  04FC  00DB               	movwf	??_main+1
   691  04FD  30BE               	movlw	190
   692  04FE  00DA               	movwf	??_main
   693  04FF                     u1237:
   694  04FF  0BDA               	decfsz	??_main,f
   695  0500  2CFF               	goto	u1237
   696  0501  0BDB               	decfsz	??_main+1,f
   697  0502  2CFF               	goto	u1237
   698  0503  0BDC               	decfsz	??_main+2,f
   699  0504  2CFF               	goto	u1237
   700  0505                     l1680:
   701                           
   702                           ;main.c: 167:     LCD_Goto(1, 1);
   703  0505  1283               	bcf	3,5	;RP0=0, select bank0
   704  0506  1303               	bcf	3,6	;RP1=0, select bank0
   705  0507  01D1               	clrf	LCD_Goto@row
   706  0508  0AD1               	incf	LCD_Goto@row,f
   707  0509  3001               	movlw	1
   708  050A  118A  23B0  118A   	fcall	_LCD_Goto
   709  050D                     l1682:
   710                           
   711                           ;main.c: 168:     _delay((unsigned long)((500)*(32000000/4000.0)));
   712  050D  3015               	movlw	21
   713  050E  1283               	bcf	3,5	;RP0=0, select bank0
   714  050F  1303               	bcf	3,6	;RP1=0, select bank0
   715  0510  00DC               	movwf	??_main+2
   716  0511  304B               	movlw	75
   717  0512  00DB               	movwf	??_main+1
   718  0513  30BE               	movlw	190
   719  0514  00DA               	movwf	??_main
   720  0515                     u1247:
   721  0515  0BDA               	decfsz	??_main,f
   722  0516  2D15               	goto	u1247
   723  0517  0BDB               	decfsz	??_main+1,f
   724  0518  2D15               	goto	u1247
   725  0519  0BDC               	decfsz	??_main+2,f
   726  051A  2D15               	goto	u1247
   727  051B                     l1684:
   728                           
   729                           ;main.c: 172:     if(i<4)
   730  051B  1283               	bcf	3,5	;RP0=0, select bank0
   731  051C  1303               	bcf	3,6	;RP1=0, select bank0
   732  051D  085E               	movf	main@i+1,w
   733  051E  3A80               	xorlw	128
   734  051F  00FF               	movwf	btemp+1
   735  0520  3080               	movlw	128
   736  0521  027F               	subwf	btemp+1,w
   737  0522  1D03               	skipz
   738  0523  2D26               	goto	u1195
   739  0524  3004               	movlw	4
   740  0525  025D               	subwf	main@i,w
   741  0526                     u1195:
   742  0526  1803               	skipnc
   743  0527  2D29               	goto	u1191
   744  0528  2D2A               	goto	u1190
   745  0529                     u1191:
   746  0529  2D60               	goto	l1704
   747  052A                     u1190:
   748  052A                     l1686:
   749                           
   750                           ;main.c: 173:     {;main.c: 174:     char c = keypad_getkey();
   751  052A  118A  22BB  118A   	fcall	_keypad_getkey
   752  052D  1283               	bcf	3,5	;RP0=0, select bank0
   753  052E  1303               	bcf	3,6	;RP1=0, select bank0
   754  052F  00DA               	movwf	??_main
   755  0530  085A               	movf	??_main,w
   756  0531  00DF               	movwf	main@c
   757  0532                     l1688:
   758                           
   759                           ;main.c: 175:         if(c!='=' && c!='A')
   760  0532  303D               	movlw	61
   761  0533  065F               	xorwf	main@c,w
   762  0534  1903               	btfsc	3,2
   763  0535  2D37               	goto	u1201
   764  0536  2D38               	goto	u1200
   765  0537                     u1201:
   766  0537  2D53               	goto	l1698
   767  0538                     u1200:
   768  0538                     l1690:
   769  0538  3041               	movlw	65
   770  0539  065F               	xorwf	main@c,w
   771  053A  1903               	btfsc	3,2
   772  053B  2D3D               	goto	u1211
   773  053C  2D3E               	goto	u1210
   774  053D                     u1211:
   775  053D  2D53               	goto	l1698
   776  053E                     u1210:
   777  053E                     l1692:
   778                           
   779                           ;main.c: 176:         {;main.c: 177:         LCD_PutC(c);
   780  053E  085F               	movf	main@c,w
   781  053F  118A  2272  118A   	fcall	_LCD_PutC
   782  0542                     l1694:
   783                           
   784                           ;main.c: 178:         number[i]=c;
   785  0542  1283               	bcf	3,5	;RP0=0, select bank0
   786  0543  1303               	bcf	3,6	;RP1=0, select bank0
   787  0544  085F               	movf	main@c,w
   788  0545  00DA               	movwf	??_main
   789  0546  085D               	movf	main@i,w
   790  0547  3E60               	addlw	(low (_number| 0))& (0+255)
   791  0548  0084               	movwf	4
   792  0549  085A               	movf	??_main,w
   793  054A  1383               	bcf	3,7	;select IRP bank0
   794  054B  0080               	movwf	0
   795  054C                     l1696:
   796                           
   797                           ;main.c: 179:         i++;
   798  054C  3001               	movlw	1
   799  054D  07DD               	addwf	main@i,f
   800  054E  1803               	skipnc
   801  054F  0ADE               	incf	main@i+1,f
   802  0550  3000               	movlw	0
   803  0551  07DE               	addwf	main@i+1,f
   804                           
   805                           ;main.c: 180:         }
   806  0552  2D0D               	goto	l1682
   807  0553                     l1698:
   808  0553  3041               	movlw	65
   809  0554  065F               	xorwf	main@c,w
   810  0555  1D03               	btfss	3,2
   811  0556  2D58               	goto	u1221
   812  0557  2D59               	goto	u1220
   813  0558                     u1221:
   814  0558  2D0D               	goto	l1682
   815  0559                     u1220:
   816  0559                     l1700:
   817                           
   818                           ;main.c: 182:         {;main.c: 183:             i=0;
   819  0559  01DD               	clrf	main@i
   820  055A  01DE               	clrf	main@i+1
   821  055B                     l1702:
   822                           
   823                           ;main.c: 184:             LCD_Cmd(0x01);
   824  055B  3001               	movlw	1
   825  055C  118A  2382  118A   	fcall	_LCD_Cmd
   826  055F  2D0D               	goto	l1682
   827  0560                     l1704:
   828                           
   829                           ;main.c: 193:     {;main.c: 194:          i=0;
   830  0560  1283               	bcf	3,5	;RP0=0, select bank0
   831  0561  1303               	bcf	3,6	;RP1=0, select bank0
   832  0562  01DD               	clrf	main@i
   833  0563  01DE               	clrf	main@i+1
   834  0564                     l1706:
   835                           
   836                           ;main.c: 195:          LCD_PutC(' ');
   837  0564  3020               	movlw	32
   838  0565  118A  2272  118A   	fcall	_LCD_PutC
   839  0568                     l1708:
   840                           
   841                           ;main.c: 196:          LCD_Print("Env");
   842  0568  302F               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
   843  0569  1283               	bcf	3,5	;RP0=0, select bank0
   844  056A  1303               	bcf	3,6	;RP1=0, select bank0
   845  056B  00CE               	movwf	LCD_Print@LCD_Str
   846  056C  3080               	movlw	128
   847  056D  00CF               	movwf	LCD_Print@LCD_Str+1
   848  056E  118A  23E0  118A   	fcall	_LCD_Print
   849  0571                     l1710:
   850                           
   851                           ;main.c: 197:          imprimir_valor_leds();
   852  0571  118A  2304  118A   	fcall	_imprimir_valor_leds
   853  0574                     l1712:
   854                           
   855                           ;main.c: 198:          enviar_datos();
   856  0574  118A  232D  118A   	fcall	_enviar_datos
   857  0577  2D0D               	goto	l1682
   858  0578  118A  2800         	ljmp	start
   859  057A                     __end_of_main:
   860                           
   861                           	psect	text1
   862  0289                     __ptext1:	
   863 ;; *************** function _set_configuraciones *****************
   864 ;; Defined at:
   865 ;;		line 32 in file "main.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;		None
   868 ;; Auto vars:     Size  Location     Type
   869 ;;		None
   870 ;; Return value:  Size  Location     Type
   871 ;;                  1    wreg      void 
   872 ;; Registers used:
   873 ;;		wreg, status,2
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMMON   BANK0   BANK1
   879 ;;      Params:         0       0       0
   880 ;;      Locals:         0       0       0
   881 ;;      Temps:          0       0       0
   882 ;;      Totals:         0       0       0
   883 ;;Total ram usage:        0 bytes
   884 ;; Hardware stack levels used: 1
   885 ;; This function calls:
   886 ;;		Nothing
   887 ;; This function is called by:
   888 ;;		_main
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           
   893                           ;psect for function _set_configuraciones
   894  0289                     _set_configuraciones:
   895  0289                     l1576:	
   896                           ;incstack = 0
   897                           ; Regs used in _set_configuraciones: [wreg+status,2]
   898                           
   899                           
   900                           ;main.c: 36:     ADCON0 = 0x80;
   901  0289  3080               	movlw	128
   902  028A  1283               	bcf	3,5	;RP0=0, select bank0
   903  028B  1303               	bcf	3,6	;RP1=0, select bank0
   904  028C  009F               	movwf	31	;volatile
   905                           
   906                           ;main.c: 37:     ADCON1 = 0x8E;
   907  028D  308E               	movlw	142
   908  028E  1683               	bsf	3,5	;RP0=1, select bank1
   909  028F  1303               	bcf	3,6	;RP1=0, select bank1
   910  0290  009F               	movwf	31	;volatile
   911  0291                     l1578:
   912                           
   913                           ;main.c: 41:     ADIF = 0;
   914  0291  1283               	bcf	3,5	;RP0=0, select bank0
   915  0292  1303               	bcf	3,6	;RP1=0, select bank0
   916  0293  130C               	bcf	12,6	;volatile
   917                           
   918                           ;main.c: 44:     OPTION_REG = 0x51;
   919  0294  3051               	movlw	81
   920  0295  1683               	bsf	3,5	;RP0=1, select bank1
   921  0296  1303               	bcf	3,6	;RP1=0, select bank1
   922  0297  0081               	movwf	1	;volatile
   923  0298                     l1580:
   924                           
   925                           ;main.c: 45:     TMR0 = 0;
   926  0298  1283               	bcf	3,5	;RP0=0, select bank0
   927  0299  1303               	bcf	3,6	;RP1=0, select bank0
   928  029A  0181               	clrf	1	;volatile
   929  029B                     l1582:
   930                           
   931                           ;main.c: 57:     SPBRG = 25;
   932  029B  3019               	movlw	25
   933  029C  1683               	bsf	3,5	;RP0=1, select bank1
   934  029D  1303               	bcf	3,6	;RP1=0, select bank1
   935  029E  0099               	movwf	25	;volatile
   936  029F                     l176:
   937  029F  0008               	return
   938  02A0                     __end_of_set_configuraciones:
   939                           
   940                           	psect	text2
   941  02BB                     __ptext2:	
   942 ;; *************** function _keypad_getkey *****************
   943 ;; Defined at:
   944 ;;		line 90 in file "./kbd.h"
   945 ;; Parameters:    Size  Location     Type
   946 ;;		None
   947 ;; Auto vars:     Size  Location     Type
   948 ;;  key             1    2[BANK0 ] unsigned char 
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      unsigned char 
   951 ;; Registers used:
   952 ;;		wreg, status,2, status,0, pclath, cstack
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMMON   BANK0   BANK1
   958 ;;      Params:         0       0       0
   959 ;;      Locals:         0       1       0
   960 ;;      Temps:          0       1       0
   961 ;;      Totals:         0       2       0
   962 ;;Total ram usage:        2 bytes
   963 ;; Hardware stack levels used: 1
   964 ;; Hardware stack levels required when called: 1
   965 ;; This function calls:
   966 ;;		_keypad_readkey
   967 ;; This function is called by:
   968 ;;		_main
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           
   973                           ;psect for function _keypad_getkey
   974  02BB                     _keypad_getkey:
   975  02BB                     l1564:	
   976                           ;incstack = 0
   977                           ; Regs used in _keypad_getkey: [wreg+status,2+status,0+pclath+cstack]
   978                           
   979                           
   980                           ;./kbd.h: 92:  unsigned char key = 'x';
   981  02BB  3078               	movlw	120
   982  02BC  1283               	bcf	3,5	;RP0=0, select bank0
   983  02BD  1303               	bcf	3,6	;RP1=0, select bank0
   984  02BE  00CC               	movwf	??_keypad_getkey
   985  02BF  084C               	movf	??_keypad_getkey,w
   986  02C0  00CD               	movwf	keypad_getkey@key
   987                           
   988                           ;./kbd.h: 95:  while(key == 'x')
   989  02C1  2ACA               	goto	l1568
   990  02C2                     l1566:
   991                           
   992                           ;./kbd.h: 96:   key = keypad_readkey();
   993  02C2  118A  2637  118A   	fcall	_keypad_readkey
   994  02C5  1283               	bcf	3,5	;RP0=0, select bank0
   995  02C6  1303               	bcf	3,6	;RP1=0, select bank0
   996  02C7  00CC               	movwf	??_keypad_getkey
   997  02C8  084C               	movf	??_keypad_getkey,w
   998  02C9  00CD               	movwf	keypad_getkey@key
   999  02CA                     l1568:
  1000                           
  1001                           ;./kbd.h: 95:  while(key == 'x')
  1002  02CA  3078               	movlw	120
  1003  02CB  064D               	xorwf	keypad_getkey@key,w
  1004  02CC  1903               	btfsc	3,2
  1005  02CD  2ACF               	goto	u1161
  1006  02CE  2AD0               	goto	u1160
  1007  02CF                     u1161:
  1008  02CF  2AC2               	goto	l1566
  1009  02D0                     u1160:
  1010  02D0                     l1570:
  1011  02D0  118A  2637  118A   	fcall	_keypad_readkey
  1012  02D3  3A78               	xorlw	120
  1013  02D4  1D03               	skipz
  1014  02D5  2AD7               	goto	u1171
  1015  02D6  2AD8               	goto	u1170
  1016  02D7                     u1171:
  1017  02D7  2AD0               	goto	l1570
  1018  02D8                     u1170:
  1019  02D8                     l1572:
  1020                           
  1021                           ;./kbd.h: 101:  return key;
  1022  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  1023  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  1024  02DA  084D               	movf	keypad_getkey@key,w
  1025  02DB                     l163:
  1026  02DB  0008               	return
  1027  02DC                     __end_of_keypad_getkey:
  1028                           
  1029                           	psect	text3
  1030  0637                     __ptext3:	
  1031 ;; *************** function _keypad_readkey *****************
  1032 ;; Defined at:
  1033 ;;		line 35 in file "./kbd.h"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;		None
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;		None
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  1    wreg      unsigned char 
  1040 ;; Registers used:
  1041 ;;		wreg
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMMON   BANK0   BANK1
  1047 ;;      Params:         0       0       0
  1048 ;;      Locals:         0       0       0
  1049 ;;      Temps:          0       1       0
  1050 ;;      Totals:         0       1       0
  1051 ;;Total ram usage:        1 bytes
  1052 ;; Hardware stack levels used: 1
  1053 ;; This function calls:
  1054 ;;		Nothing
  1055 ;; This function is called by:
  1056 ;;		_keypad_getkey
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           
  1061                           ;psect for function _keypad_readkey
  1062  0637                     _keypad_readkey:
  1063  0637                     l1354:	
  1064                           ;incstack = 0
  1065                           ; Regs used in _keypad_readkey: [wreg]
  1066                           
  1067                           
  1068                           ;./kbd.h: 37:     RA4 = 1;
  1069  0637  1283               	bcf	3,5	;RP0=0, select bank0
  1070  0638  1303               	bcf	3,6	;RP1=0, select bank0
  1071  0639  1605               	bsf	5,4	;volatile
  1072                           
  1073                           ;./kbd.h: 38:     RA5 = 0;
  1074  063A  1285               	bcf	5,5	;volatile
  1075                           
  1076                           ;./kbd.h: 39:     RC0 = 0;
  1077  063B  1007               	bcf	7,0	;volatile
  1078                           
  1079                           ;./kbd.h: 40:     RC1 = 0;
  1080  063C  1087               	bcf	7,1	;volatile
  1081  063D                     l1356:
  1082                           
  1083                           ;./kbd.h: 41:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  1084  063D  304F               	movlw	79
  1085  063E  1283               	bcf	3,5	;RP0=0, select bank0
  1086  063F  1303               	bcf	3,6	;RP1=0, select bank0
  1087  0640  00CB               	movwf	??_keypad_readkey
  1088  0641                     u1257:
  1089  0641  0BCB               	decfsz	??_keypad_readkey,f
  1090  0642  2E41               	goto	u1257
  1091  0643  0000               	nop
  1092  0644                     l1358:
  1093                           
  1094                           ;./kbd.h: 43:     if(RA4==1 && RA5==0 && RC0==0 && RC1==0) {
  1095  0644  1283               	bcf	3,5	;RP0=0, select bank0
  1096  0645  1303               	bcf	3,6	;RP1=0, select bank0
  1097  0646  1E05               	btfss	5,4	;volatile
  1098  0647  2E49               	goto	u711
  1099  0648  2E4A               	goto	u710
  1100  0649                     u711:
  1101  0649  2E6E               	goto	l134
  1102  064A                     u710:
  1103  064A                     l1360:
  1104  064A  1A85               	btfsc	5,5	;volatile
  1105  064B  2E4D               	goto	u721
  1106  064C  2E4E               	goto	u720
  1107  064D                     u721:
  1108  064D  2E6E               	goto	l134
  1109  064E                     u720:
  1110  064E                     l1362:
  1111  064E  1807               	btfsc	7,0	;volatile
  1112  064F  2E51               	goto	u731
  1113  0650  2E52               	goto	u730
  1114  0651                     u731:
  1115  0651  2E6E               	goto	l134
  1116  0652                     u730:
  1117  0652                     l1364:
  1118  0652  1887               	btfsc	7,1	;volatile
  1119  0653  2E55               	goto	u741
  1120  0654  2E56               	goto	u740
  1121  0655                     u741:
  1122  0655  2E6E               	goto	l134
  1123  0656                     u740:
  1124  0656                     l1366:
  1125                           
  1126                           ;./kbd.h: 44:         if (RA0 == 1) return 'A';
  1127  0656  1C05               	btfss	5,0	;volatile
  1128  0657  2E59               	goto	u751
  1129  0658  2E5A               	goto	u750
  1130  0659                     u751:
  1131  0659  2E5C               	goto	l135
  1132  065A                     u750:
  1133  065A                     l1368:
  1134  065A  3041               	movlw	65
  1135  065B  2F0E               	goto	l136
  1136  065C                     l135:
  1137                           
  1138                           ;./kbd.h: 45:         if (RA1 == 1) return '0';
  1139  065C  1C85               	btfss	5,1	;volatile
  1140  065D  2E5F               	goto	u761
  1141  065E  2E60               	goto	u760
  1142  065F                     u761:
  1143  065F  2E62               	goto	l137
  1144  0660                     u760:
  1145  0660                     l1372:
  1146  0660  3030               	movlw	48
  1147  0661  2F0E               	goto	l136
  1148  0662                     l137:
  1149                           
  1150                           ;./kbd.h: 46:         if (RA2 == 1) return '=';
  1151  0662  1D05               	btfss	5,2	;volatile
  1152  0663  2E65               	goto	u771
  1153  0664  2E66               	goto	u770
  1154  0665                     u771:
  1155  0665  2E68               	goto	l138
  1156  0666                     u770:
  1157  0666                     l1376:
  1158  0666  303D               	movlw	61
  1159  0667  2F0E               	goto	l136
  1160  0668                     l138:
  1161                           
  1162                           ;./kbd.h: 47:         if (RC3 == 1) return '+';
  1163  0668  1D87               	btfss	7,3	;volatile
  1164  0669  2E6B               	goto	u781
  1165  066A  2E6C               	goto	u780
  1166  066B                     u781:
  1167  066B  2E6E               	goto	l134
  1168  066C                     u780:
  1169  066C                     l1380:
  1170  066C  302B               	movlw	43
  1171  066D  2F0E               	goto	l136
  1172  066E                     l134:	
  1173                           ;./kbd.h: 48:     }
  1174                           
  1175                           
  1176                           ;./kbd.h: 49:     RA4 = 0;
  1177  066E  1205               	bcf	5,4	;volatile
  1178                           
  1179                           ;./kbd.h: 50:     RA5 = 1;
  1180  066F  1685               	bsf	5,5	;volatile
  1181                           
  1182                           ;./kbd.h: 51:     RC0 = 0;
  1183  0670  1007               	bcf	7,0	;volatile
  1184                           
  1185                           ;./kbd.h: 52:     RC1 = 0;
  1186  0671  1087               	bcf	7,1	;volatile
  1187  0672                     l1384:
  1188                           
  1189                           ;./kbd.h: 53:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  1190  0672  304F               	movlw	79
  1191  0673  1283               	bcf	3,5	;RP0=0, select bank0
  1192  0674  1303               	bcf	3,6	;RP1=0, select bank0
  1193  0675  00CB               	movwf	??_keypad_readkey
  1194  0676                     u1267:
  1195  0676  0BCB               	decfsz	??_keypad_readkey,f
  1196  0677  2E76               	goto	u1267
  1197  0678  0000               	nop
  1198  0679                     l1386:
  1199                           
  1200                           ;./kbd.h: 55:     if(RA4==0 && RA5==1 && RC0==0 && RC1==0) {
  1201  0679  1283               	bcf	3,5	;RP0=0, select bank0
  1202  067A  1303               	bcf	3,6	;RP1=0, select bank0
  1203  067B  1A05               	btfsc	5,4	;volatile
  1204  067C  2E7E               	goto	u791
  1205  067D  2E7F               	goto	u790
  1206  067E                     u791:
  1207  067E  2EA3               	goto	l140
  1208  067F                     u790:
  1209  067F                     l1388:
  1210  067F  1E85               	btfss	5,5	;volatile
  1211  0680  2E82               	goto	u801
  1212  0681  2E83               	goto	u800
  1213  0682                     u801:
  1214  0682  2EA3               	goto	l140
  1215  0683                     u800:
  1216  0683                     l1390:
  1217  0683  1807               	btfsc	7,0	;volatile
  1218  0684  2E86               	goto	u811
  1219  0685  2E87               	goto	u810
  1220  0686                     u811:
  1221  0686  2EA3               	goto	l140
  1222  0687                     u810:
  1223  0687                     l1392:
  1224  0687  1887               	btfsc	7,1	;volatile
  1225  0688  2E8A               	goto	u821
  1226  0689  2E8B               	goto	u820
  1227  068A                     u821:
  1228  068A  2EA3               	goto	l140
  1229  068B                     u820:
  1230  068B                     l1394:
  1231                           
  1232                           ;./kbd.h: 56:         if (RA0 == 1) return '1';
  1233  068B  1C05               	btfss	5,0	;volatile
  1234  068C  2E8E               	goto	u831
  1235  068D  2E8F               	goto	u830
  1236  068E                     u831:
  1237  068E  2E91               	goto	l141
  1238  068F                     u830:
  1239  068F                     l1396:
  1240  068F  3031               	movlw	49
  1241  0690  2F0E               	goto	l136
  1242  0691                     l141:
  1243                           
  1244                           ;./kbd.h: 57:         if (RA1 == 1) return '2';
  1245  0691  1C85               	btfss	5,1	;volatile
  1246  0692  2E94               	goto	u841
  1247  0693  2E95               	goto	u840
  1248  0694                     u841:
  1249  0694  2E97               	goto	l142
  1250  0695                     u840:
  1251  0695                     l1400:
  1252  0695  3032               	movlw	50
  1253  0696  2F0E               	goto	l136
  1254  0697                     l142:
  1255                           
  1256                           ;./kbd.h: 58:         if (RA2 == 1) return '3';
  1257  0697  1D05               	btfss	5,2	;volatile
  1258  0698  2E9A               	goto	u851
  1259  0699  2E9B               	goto	u850
  1260  069A                     u851:
  1261  069A  2E9D               	goto	l143
  1262  069B                     u850:
  1263  069B                     l1404:
  1264  069B  3033               	movlw	51
  1265  069C  2F0E               	goto	l136
  1266  069D                     l143:
  1267                           
  1268                           ;./kbd.h: 59:         if (RC3 == 1) return '.';
  1269  069D  1D87               	btfss	7,3	;volatile
  1270  069E  2EA0               	goto	u861
  1271  069F  2EA1               	goto	u860
  1272  06A0                     u861:
  1273  06A0  2EA3               	goto	l140
  1274  06A1                     u860:
  1275  06A1                     l1408:
  1276  06A1  302E               	movlw	46
  1277  06A2  2F0E               	goto	l136
  1278  06A3                     l140:	
  1279                           ;./kbd.h: 60:     }
  1280                           
  1281                           
  1282                           ;./kbd.h: 62:     RA4 = 0;
  1283  06A3  1205               	bcf	5,4	;volatile
  1284                           
  1285                           ;./kbd.h: 63:     RA5 = 0;
  1286  06A4  1285               	bcf	5,5	;volatile
  1287                           
  1288                           ;./kbd.h: 64:     RC0 = 1;
  1289  06A5  1407               	bsf	7,0	;volatile
  1290                           
  1291                           ;./kbd.h: 65:     RC1 = 0;
  1292  06A6  1087               	bcf	7,1	;volatile
  1293  06A7                     l1412:
  1294                           
  1295                           ;./kbd.h: 66:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  1296  06A7  304F               	movlw	79
  1297  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  1298  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  1299  06AA  00CB               	movwf	??_keypad_readkey
  1300  06AB                     u1277:
  1301  06AB  0BCB               	decfsz	??_keypad_readkey,f
  1302  06AC  2EAB               	goto	u1277
  1303  06AD  0000               	nop
  1304  06AE                     l1414:
  1305                           
  1306                           ;./kbd.h: 68:     if(RA4==0 && RA5==0 && RC0==1 && RC1==0) {
  1307  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  1308  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  1309  06B0  1A05               	btfsc	5,4	;volatile
  1310  06B1  2EB3               	goto	u871
  1311  06B2  2EB4               	goto	u870
  1312  06B3                     u871:
  1313  06B3  2ED8               	goto	l145
  1314  06B4                     u870:
  1315  06B4                     l1416:
  1316  06B4  1A85               	btfsc	5,5	;volatile
  1317  06B5  2EB7               	goto	u881
  1318  06B6  2EB8               	goto	u880
  1319  06B7                     u881:
  1320  06B7  2ED8               	goto	l145
  1321  06B8                     u880:
  1322  06B8                     l1418:
  1323  06B8  1C07               	btfss	7,0	;volatile
  1324  06B9  2EBB               	goto	u891
  1325  06BA  2EBC               	goto	u890
  1326  06BB                     u891:
  1327  06BB  2ED8               	goto	l145
  1328  06BC                     u890:
  1329  06BC                     l1420:
  1330  06BC  1887               	btfsc	7,1	;volatile
  1331  06BD  2EBF               	goto	u901
  1332  06BE  2EC0               	goto	u900
  1333  06BF                     u901:
  1334  06BF  2ED8               	goto	l145
  1335  06C0                     u900:
  1336  06C0                     l1422:
  1337                           
  1338                           ;./kbd.h: 69:         if (RA0 == 1) return '4';
  1339  06C0  1C05               	btfss	5,0	;volatile
  1340  06C1  2EC3               	goto	u911
  1341  06C2  2EC4               	goto	u910
  1342  06C3                     u911:
  1343  06C3  2EC6               	goto	l146
  1344  06C4                     u910:
  1345  06C4                     l1424:
  1346  06C4  3034               	movlw	52
  1347  06C5  2F0E               	goto	l136
  1348  06C6                     l146:
  1349                           
  1350                           ;./kbd.h: 70:         if (RA1 == 1) return '5';
  1351  06C6  1C85               	btfss	5,1	;volatile
  1352  06C7  2EC9               	goto	u921
  1353  06C8  2ECA               	goto	u920
  1354  06C9                     u921:
  1355  06C9  2ECC               	goto	l147
  1356  06CA                     u920:
  1357  06CA                     l1428:
  1358  06CA  3035               	movlw	53
  1359  06CB  2F0E               	goto	l136
  1360  06CC                     l147:
  1361                           
  1362                           ;./kbd.h: 71:         if (RA2 == 1) return '6';
  1363  06CC  1D05               	btfss	5,2	;volatile
  1364  06CD  2ECF               	goto	u931
  1365  06CE  2ED0               	goto	u930
  1366  06CF                     u931:
  1367  06CF  2ED2               	goto	l148
  1368  06D0                     u930:
  1369  06D0                     l1432:
  1370  06D0  3036               	movlw	54
  1371  06D1  2F0E               	goto	l136
  1372  06D2                     l148:
  1373                           
  1374                           ;./kbd.h: 72:         if (RC3 == 1) return '*';
  1375  06D2  1D87               	btfss	7,3	;volatile
  1376  06D3  2ED5               	goto	u941
  1377  06D4  2ED6               	goto	u940
  1378  06D5                     u941:
  1379  06D5  2ED8               	goto	l145
  1380  06D6                     u940:
  1381  06D6                     l1436:
  1382  06D6  302A               	movlw	42
  1383  06D7  2F0E               	goto	l136
  1384  06D8                     l145:	
  1385                           ;./kbd.h: 73:     }
  1386                           
  1387                           
  1388                           ;./kbd.h: 75:     RA4 = 0;
  1389  06D8  1205               	bcf	5,4	;volatile
  1390                           
  1391                           ;./kbd.h: 76:     RA5 = 0;
  1392  06D9  1285               	bcf	5,5	;volatile
  1393                           
  1394                           ;./kbd.h: 77:     RC0 = 0;
  1395  06DA  1007               	bcf	7,0	;volatile
  1396                           
  1397                           ;./kbd.h: 78:     RC1 = 1;
  1398  06DB  1487               	bsf	7,1	;volatile
  1399  06DC                     l1440:
  1400                           
  1401                           ;./kbd.h: 79:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  1402  06DC  304F               	movlw	79
  1403  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  1404  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  1405  06DF  00CB               	movwf	??_keypad_readkey
  1406  06E0                     u1287:
  1407  06E0  0BCB               	decfsz	??_keypad_readkey,f
  1408  06E1  2EE0               	goto	u1287
  1409  06E2  0000               	nop
  1410  06E3                     l1442:
  1411                           
  1412                           ;./kbd.h: 81:     if(RA4==0 && RA5==0 && RC0==0 && RC1==1) {
  1413  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  1414  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  1415  06E5  1A05               	btfsc	5,4	;volatile
  1416  06E6  2EE8               	goto	u951
  1417  06E7  2EE9               	goto	u950
  1418  06E8                     u951:
  1419  06E8  2F0D               	goto	l1468
  1420  06E9                     u950:
  1421  06E9                     l1444:
  1422  06E9  1A85               	btfsc	5,5	;volatile
  1423  06EA  2EEC               	goto	u961
  1424  06EB  2EED               	goto	u960
  1425  06EC                     u961:
  1426  06EC  2F0D               	goto	l1468
  1427  06ED                     u960:
  1428  06ED                     l1446:
  1429  06ED  1807               	btfsc	7,0	;volatile
  1430  06EE  2EF0               	goto	u971
  1431  06EF  2EF1               	goto	u970
  1432  06F0                     u971:
  1433  06F0  2F0D               	goto	l1468
  1434  06F1                     u970:
  1435  06F1                     l1448:
  1436  06F1  1C87               	btfss	7,1	;volatile
  1437  06F2  2EF4               	goto	u981
  1438  06F3  2EF5               	goto	u980
  1439  06F4                     u981:
  1440  06F4  2F0D               	goto	l1468
  1441  06F5                     u980:
  1442  06F5                     l1450:
  1443                           
  1444                           ;./kbd.h: 82:         if (RA0 == 1) return '7';
  1445  06F5  1C05               	btfss	5,0	;volatile
  1446  06F6  2EF8               	goto	u991
  1447  06F7  2EF9               	goto	u990
  1448  06F8                     u991:
  1449  06F8  2EFB               	goto	l151
  1450  06F9                     u990:
  1451  06F9                     l1452:
  1452  06F9  3037               	movlw	55
  1453  06FA  2F0E               	goto	l136
  1454  06FB                     l151:
  1455                           
  1456                           ;./kbd.h: 83:         if (RA1 == 1) return '8';
  1457  06FB  1C85               	btfss	5,1	;volatile
  1458  06FC  2EFE               	goto	u1001
  1459  06FD  2EFF               	goto	u1000
  1460  06FE                     u1001:
  1461  06FE  2F01               	goto	l152
  1462  06FF                     u1000:
  1463  06FF                     l1456:
  1464  06FF  3038               	movlw	56
  1465  0700  2F0E               	goto	l136
  1466  0701                     l152:
  1467                           
  1468                           ;./kbd.h: 84:         if (RA2 == 1) return '9';
  1469  0701  1D05               	btfss	5,2	;volatile
  1470  0702  2F04               	goto	u1011
  1471  0703  2F05               	goto	u1010
  1472  0704                     u1011:
  1473  0704  2F07               	goto	l153
  1474  0705                     u1010:
  1475  0705                     l1460:
  1476  0705  3039               	movlw	57
  1477  0706  2F0E               	goto	l136
  1478  0707                     l153:
  1479                           
  1480                           ;./kbd.h: 85:         if (RC3 == 1) return '/';
  1481  0707  1D87               	btfss	7,3	;volatile
  1482  0708  2F0A               	goto	u1021
  1483  0709  2F0B               	goto	u1020
  1484  070A                     u1021:
  1485  070A  2F0D               	goto	l1468
  1486  070B                     u1020:
  1487  070B                     l1464:
  1488  070B  302F               	movlw	47
  1489  070C  2F0E               	goto	l136
  1490  070D                     l1468:
  1491                           
  1492                           ;./kbd.h: 87:  return 'x';
  1493  070D  3078               	movlw	120
  1494  070E                     l136:
  1495  070E  0008               	return
  1496  070F                     __end_of_keypad_readkey:
  1497                           
  1498                           	psect	text4
  1499  0480                     __ptext4:	
  1500 ;; *************** function _inicio_presentacion *****************
  1501 ;; Defined at:
  1502 ;;		line 251 in file "main.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;		None
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;  i               2   13[BANK0 ] int 
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  1    wreg      void 
  1509 ;; Registers used:
  1510 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMMON   BANK0   BANK1
  1516 ;;      Params:         0       0       0
  1517 ;;      Locals:         0       2       0
  1518 ;;      Temps:          0       3       0
  1519 ;;      Totals:         0       5       0
  1520 ;;Total ram usage:        5 bytes
  1521 ;; Hardware stack levels used: 1
  1522 ;; Hardware stack levels required when called: 3
  1523 ;; This function calls:
  1524 ;;		_LCD_Cmd
  1525 ;;		_LCD_Goto
  1526 ;;		_LCD_Print
  1527 ;; This function is called by:
  1528 ;;		_main
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532                           
  1533                           ;psect for function _inicio_presentacion
  1534  0480                     _inicio_presentacion:
  1535  0480                     l1642:	
  1536                           ;incstack = 0
  1537                           ; Regs used in _inicio_presentacion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  1538                           
  1539                           
  1540                           ;main.c: 253:     LCD_Goto(1,1);
  1541  0480  1283               	bcf	3,5	;RP0=0, select bank0
  1542  0481  1303               	bcf	3,6	;RP1=0, select bank0
  1543  0482  01D1               	clrf	LCD_Goto@row
  1544  0483  0AD1               	incf	LCD_Goto@row,f
  1545  0484  3001               	movlw	1
  1546  0485  118A  23B0  118A   	fcall	_LCD_Goto
  1547  0488                     l1644:
  1548                           
  1549                           ;main.c: 254:     LCD_Print(M);
  1550  0488  3022               	movlw	(low (_M| 0))& (0+255)
  1551  0489  1283               	bcf	3,5	;RP0=0, select bank0
  1552  048A  1303               	bcf	3,6	;RP1=0, select bank0
  1553  048B  00CE               	movwf	LCD_Print@LCD_Str
  1554  048C  3000               	movlw	0
  1555  048D  00CF               	movwf	LCD_Print@LCD_Str+1
  1556  048E  118A  23E0  118A   	fcall	_LCD_Print
  1557  0491                     l1646:
  1558                           
  1559                           ;main.c: 255:     _delay((unsigned long)((50)*(32000000/4000.0)));
  1560  0491  3003               	movlw	3
  1561  0492  1283               	bcf	3,5	;RP0=0, select bank0
  1562  0493  1303               	bcf	3,6	;RP1=0, select bank0
  1563  0494  00D7               	movwf	??_inicio_presentacion+2
  1564  0495  3008               	movlw	8
  1565  0496  00D6               	movwf	??_inicio_presentacion+1
  1566  0497  3076               	movlw	118
  1567  0498  00D5               	movwf	??_inicio_presentacion
  1568  0499                     u1297:
  1569  0499  0BD5               	decfsz	??_inicio_presentacion,f
  1570  049A  2C99               	goto	u1297
  1571  049B  0BD6               	decfsz	??_inicio_presentacion+1,f
  1572  049C  2C99               	goto	u1297
  1573  049D  0BD7               	decfsz	??_inicio_presentacion+2,f
  1574  049E  2C99               	goto	u1297
  1575  049F  2CA0               	nop2
  1576  04A0                     l1648:
  1577                           
  1578                           ;main.c: 256:     for(int i=0;i<40;i++){
  1579  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  1580  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  1581  04A2  01D8               	clrf	inicio_presentacion@i
  1582  04A3  01D9               	clrf	inicio_presentacion@i+1
  1583  04A4                     l1654:
  1584                           
  1585                           ;main.c: 257:         LCD_Cmd(0x18);
  1586  04A4  3018               	movlw	24
  1587  04A5  118A  2382  118A   	fcall	_LCD_Cmd
  1588  04A8                     l1656:
  1589                           
  1590                           ;main.c: 258:         _delay((unsigned long)((40)*(32000000/4000.0)));
  1591  04A8  3002               	movlw	2
  1592  04A9  1283               	bcf	3,5	;RP0=0, select bank0
  1593  04AA  1303               	bcf	3,6	;RP1=0, select bank0
  1594  04AB  00D7               	movwf	??_inicio_presentacion+2
  1595  04AC  30A0               	movlw	160
  1596  04AD  00D6               	movwf	??_inicio_presentacion+1
  1597  04AE  3092               	movlw	146
  1598  04AF  00D5               	movwf	??_inicio_presentacion
  1599  04B0                     u1307:
  1600  04B0  0BD5               	decfsz	??_inicio_presentacion,f
  1601  04B1  2CB0               	goto	u1307
  1602  04B2  0BD6               	decfsz	??_inicio_presentacion+1,f
  1603  04B3  2CB0               	goto	u1307
  1604  04B4  0BD7               	decfsz	??_inicio_presentacion+2,f
  1605  04B5  2CB0               	goto	u1307
  1606  04B6                     l1658:
  1607                           
  1608                           ;main.c: 259:     }
  1609  04B6  3001               	movlw	1
  1610  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  1611  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  1612  04B9  07D8               	addwf	inicio_presentacion@i,f
  1613  04BA  1803               	skipnc
  1614  04BB  0AD9               	incf	inicio_presentacion@i+1,f
  1615  04BC  3000               	movlw	0
  1616  04BD  07D9               	addwf	inicio_presentacion@i+1,f
  1617  04BE                     l1660:
  1618  04BE  0859               	movf	inicio_presentacion@i+1,w
  1619  04BF  3A80               	xorlw	128
  1620  04C0  00FF               	movwf	btemp+1
  1621  04C1  3080               	movlw	128
  1622  04C2  027F               	subwf	btemp+1,w
  1623  04C3  1D03               	skipz
  1624  04C4  2CC7               	goto	u1185
  1625  04C5  3028               	movlw	40
  1626  04C6  0258               	subwf	inicio_presentacion@i,w
  1627  04C7                     u1185:
  1628  04C7  1C03               	skipc
  1629  04C8  2CCA               	goto	u1181
  1630  04C9  2CCB               	goto	u1180
  1631  04CA                     u1181:
  1632  04CA  2CA4               	goto	l1654
  1633  04CB                     u1180:
  1634  04CB                     l1662:
  1635                           
  1636                           ;main.c: 260:     _delay((unsigned long)((50)*(32000000/4000.0)));
  1637  04CB  3003               	movlw	3
  1638  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  1639  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  1640  04CE  00D7               	movwf	??_inicio_presentacion+2
  1641  04CF  3008               	movlw	8
  1642  04D0  00D6               	movwf	??_inicio_presentacion+1
  1643  04D1  3076               	movlw	118
  1644  04D2  00D5               	movwf	??_inicio_presentacion
  1645  04D3                     u1317:
  1646  04D3  0BD5               	decfsz	??_inicio_presentacion,f
  1647  04D4  2CD3               	goto	u1317
  1648  04D5  0BD6               	decfsz	??_inicio_presentacion+1,f
  1649  04D6  2CD3               	goto	u1317
  1650  04D7  0BD7               	decfsz	??_inicio_presentacion+2,f
  1651  04D8  2CD3               	goto	u1317
  1652  04D9  2CDA               	nop2
  1653  04DA                     l1664:
  1654                           
  1655                           ;main.c: 261:     LCD_Cmd(0x01);
  1656  04DA  3001               	movlw	1
  1657  04DB  118A  2382  118A   	fcall	_LCD_Cmd
  1658  04DE                     l1666:
  1659                           
  1660                           ;main.c: 262:     LCD_Goto(1, 1);
  1661  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  1662  04DF  1303               	bcf	3,6	;RP1=0, select bank0
  1663  04E0  01D1               	clrf	LCD_Goto@row
  1664  04E1  0AD1               	incf	LCD_Goto@row,f
  1665  04E2  3001               	movlw	1
  1666  04E3  118A  23B0  118A   	fcall	_LCD_Goto
  1667  04E6                     l230:
  1668  04E6  0008               	return
  1669  04E7                     __end_of_inicio_presentacion:
  1670                           
  1671                           	psect	text5
  1672  03B0                     __ptext5:	
  1673 ;; *************** function _LCD_Goto *****************
  1674 ;; Defined at:
  1675 ;;		line 87 in file "./lcd.h"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;  col             1    wreg     unsigned char 
  1678 ;;  row             1    6[BANK0 ] unsigned char 
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;  col             1    9[BANK0 ] unsigned char 
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  1    wreg      void 
  1683 ;; Registers used:
  1684 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMMON   BANK0   BANK1
  1690 ;;      Params:         0       1       0
  1691 ;;      Locals:         0       1       0
  1692 ;;      Temps:          0       2       0
  1693 ;;      Totals:         0       4       0
  1694 ;;Total ram usage:        4 bytes
  1695 ;; Hardware stack levels used: 1
  1696 ;; Hardware stack levels required when called: 2
  1697 ;; This function calls:
  1698 ;;		_LCD_Cmd
  1699 ;; This function is called by:
  1700 ;;		_main
  1701 ;;		_inicio_presentacion
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           
  1706                           ;psect for function _LCD_Goto
  1707  03B0                     _LCD_Goto:
  1708                           
  1709                           ;incstack = 0
  1710                           ; Regs used in _LCD_Goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1711                           ;LCD_Goto@col stored from wreg
  1712  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  1713  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  1714  03B2  00D4               	movwf	LCD_Goto@col
  1715  03B3                     l1336:
  1716                           
  1717                           ;./lcd.h: 87: void LCD_Goto(uint8_t col, uint8_t row);./lcd.h: 88: {;./lcd.h: 89:   swit
      +                          ch(row)
  1718  03B3  2BCC               	goto	l1346
  1719  03B4                     l1338:
  1720                           
  1721                           ;./lcd.h: 92:       LCD_Cmd(0xC0 + col - 1);
  1722  03B4  0854               	movf	LCD_Goto@col,w
  1723  03B5  3EBF               	addlw	191
  1724  03B6  118A  2382  118A   	fcall	_LCD_Cmd
  1725                           
  1726                           ;./lcd.h: 93:       break;
  1727  03B9  2BDF               	goto	l104
  1728  03BA                     l1340:
  1729                           
  1730                           ;./lcd.h: 95:       LCD_Cmd(0x94 + col - 1);
  1731  03BA  0854               	movf	LCD_Goto@col,w
  1732  03BB  3E93               	addlw	147
  1733  03BC  118A  2382  118A   	fcall	_LCD_Cmd
  1734                           
  1735                           ;./lcd.h: 96:       break;
  1736  03BF  2BDF               	goto	l104
  1737  03C0                     l1342:
  1738                           
  1739                           ;./lcd.h: 98:       LCD_Cmd(0xD4 + col - 1);
  1740  03C0  0854               	movf	LCD_Goto@col,w
  1741  03C1  3ED3               	addlw	211
  1742  03C2  118A  2382  118A   	fcall	_LCD_Cmd
  1743                           
  1744                           ;./lcd.h: 99:     break;
  1745  03C5  2BDF               	goto	l104
  1746  03C6                     l1344:
  1747                           
  1748                           ;./lcd.h: 101:       LCD_Cmd(0x80 + col - 1);
  1749  03C6  0854               	movf	LCD_Goto@col,w
  1750  03C7  3E7F               	addlw	127
  1751  03C8  118A  2382  118A   	fcall	_LCD_Cmd
  1752                           
  1753                           ;./lcd.h: 102:   }
  1754  03CB  2BDF               	goto	l104
  1755  03CC                     l1346:
  1756  03CC  0851               	movf	LCD_Goto@row,w
  1757  03CD  00D2               	movwf	??_LCD_Goto
  1758  03CE  01D3               	clrf	??_LCD_Goto+1
  1759                           
  1760                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1761                           ; Switch size 1, requested type "simple"
  1762                           ; Number of cases is 1, Range of values is 0 to 0
  1763                           ; switch strategies available:
  1764                           ; Name         Instructions Cycles
  1765                           ; simple_byte            4     3 (average)
  1766                           ; direct_byte            9     7 (fixed)
  1767                           ; jumptable            260     6 (fixed)
  1768                           ;	Chosen strategy is simple_byte
  1769  03CF  0853               	movf	??_LCD_Goto+1,w
  1770  03D0  3A00               	xorlw	0	; case 0
  1771  03D1  1903               	skipnz
  1772  03D2  2BD4               	goto	l1746
  1773  03D3  2BC6               	goto	l1344
  1774  03D4                     l1746:
  1775                           
  1776                           ; Switch size 1, requested type "simple"
  1777                           ; Number of cases is 3, Range of values is 2 to 4
  1778                           ; switch strategies available:
  1779                           ; Name         Instructions Cycles
  1780                           ; simple_byte           10     6 (average)
  1781                           ; direct_byte           16    10 (fixed)
  1782                           ; jumptable            263     9 (fixed)
  1783                           ;	Chosen strategy is simple_byte
  1784  03D4  0852               	movf	??_LCD_Goto,w
  1785  03D5  3A02               	xorlw	2	; case 2
  1786  03D6  1903               	skipnz
  1787  03D7  2BB4               	goto	l1338
  1788  03D8  3A01               	xorlw	1	; case 3
  1789  03D9  1903               	skipnz
  1790  03DA  2BBA               	goto	l1340
  1791  03DB  3A07               	xorlw	7	; case 4
  1792  03DC  1903               	skipnz
  1793  03DD  2BC0               	goto	l1342
  1794  03DE  2BC6               	goto	l1344
  1795  03DF                     l104:
  1796  03DF  0008               	return
  1797  03E0                     __end_of_LCD_Goto:
  1798                           
  1799                           	psect	text6
  1800  02DC                     __ptext6:	
  1801 ;; *************** function _iniciar_puertos *****************
  1802 ;; Defined at:
  1803 ;;		line 204 in file "main.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;		None
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;		None
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  1    wreg      void 
  1810 ;; Registers used:
  1811 ;;		wreg, status,2
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMMON   BANK0   BANK1
  1817 ;;      Params:         0       0       0
  1818 ;;      Locals:         0       0       0
  1819 ;;      Temps:          0       0       0
  1820 ;;      Totals:         0       0       0
  1821 ;;Total ram usage:        0 bytes
  1822 ;; Hardware stack levels used: 1
  1823 ;; This function calls:
  1824 ;;		Nothing
  1825 ;; This function is called by:
  1826 ;;		_main
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           
  1831                           ;psect for function _iniciar_puertos
  1832  02DC                     _iniciar_puertos:
  1833  02DC                     l1602:	
  1834                           ;incstack = 0
  1835                           ; Regs used in _iniciar_puertos: [wreg+status,2]
  1836                           
  1837                           
  1838                           ;main.c: 208:     PORTA = 0;
  1839  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  1840  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  1841  02DE  0185               	clrf	5	;volatile
  1842                           
  1843                           ;main.c: 209:     PORTB = 0;
  1844  02DF  0186               	clrf	6	;volatile
  1845                           
  1846                           ;main.c: 210:     PORTC = 0;
  1847  02E0  0187               	clrf	7	;volatile
  1848  02E1                     l1604:
  1849                           
  1850                           ;main.c: 215:     TRISCbits.TRISC0 = 1;
  1851  02E1  1683               	bsf	3,5	;RP0=1, select bank1
  1852  02E2  1303               	bcf	3,6	;RP1=0, select bank1
  1853  02E3  1407               	bsf	7,0	;volatile
  1854  02E4                     l1606:
  1855                           
  1856                           ;main.c: 216:     TRISCbits.TRISC1 = 1;
  1857  02E4  1487               	bsf	7,1	;volatile
  1858  02E5                     l1608:
  1859                           
  1860                           ;main.c: 218:     TRISCbits.TRISC3 = 0;
  1861  02E5  1187               	bcf	7,3	;volatile
  1862  02E6                     l1610:
  1863                           
  1864                           ;main.c: 219:     TRISCbits.TRISC4 = 0;
  1865  02E6  1207               	bcf	7,4	;volatile
  1866  02E7                     l1612:
  1867                           
  1868                           ;main.c: 221:     TRISCbits.TRISC4 = 0;
  1869  02E7  1207               	bcf	7,4	;volatile
  1870  02E8                     l1614:
  1871                           
  1872                           ;main.c: 222:     TRISCbits.TRISC6 = 0;
  1873  02E8  1307               	bcf	7,6	;volatile
  1874  02E9                     l1616:
  1875                           
  1876                           ;main.c: 225:      TXIE = 0;
  1877  02E9  120C               	bcf	12,4	;volatile
  1878  02EA                     l1618:
  1879                           
  1880                           ;main.c: 226:      RCIE = 0;
  1881  02EA  128C               	bcf	12,5	;volatile
  1882  02EB                     l1620:
  1883                           
  1884                           ;main.c: 228:     TRISAbits.TRISA0 = 0;
  1885  02EB  1005               	bcf	5,0	;volatile
  1886  02EC                     l1622:
  1887                           
  1888                           ;main.c: 229:     TRISAbits.TRISA1 = 0;
  1889  02EC  1085               	bcf	5,1	;volatile
  1890  02ED                     l1624:
  1891                           
  1892                           ;main.c: 230:     TRISAbits.TRISA2 = 0;
  1893  02ED  1105               	bcf	5,2	;volatile
  1894  02EE                     l1626:
  1895                           
  1896                           ;main.c: 231:     TRISAbits.TRISA3 = 0;
  1897  02EE  1185               	bcf	5,3	;volatile
  1898  02EF                     l1628:
  1899                           
  1900                           ;main.c: 233:     TRISAbits.TRISA4 = 1;
  1901  02EF  1605               	bsf	5,4	;volatile
  1902  02F0                     l1630:
  1903                           
  1904                           ;main.c: 234:     TRISAbits.TRISA5 = 1;
  1905  02F0  1685               	bsf	5,5	;volatile
  1906  02F1                     l1632:
  1907                           
  1908                           ;main.c: 238:     ADCON0 = 0X80;
  1909  02F1  3080               	movlw	128
  1910  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  1911  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  1912  02F4  009F               	movwf	31	;volatile
  1913  02F5                     l1634:
  1914                           
  1915                           ;main.c: 239:     ADCON1 = 0X8E;
  1916  02F5  308E               	movlw	142
  1917  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  1918  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  1919  02F8  009F               	movwf	31	;volatile
  1920  02F9                     l1636:
  1921                           
  1922                           ;main.c: 244:      SSPCON = 0b00101000;
  1923  02F9  3028               	movlw	40
  1924  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  1925  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  1926  02FC  0094               	movwf	20	;volatile
  1927  02FD                     l1638:
  1928                           
  1929                           ;main.c: 245:   SSPCON2 = 0b00000000;
  1930  02FD  1683               	bsf	3,5	;RP0=1, select bank1
  1931  02FE  1303               	bcf	3,6	;RP1=0, select bank1
  1932  02FF  0191               	clrf	17	;volatile
  1933                           
  1934                           ;main.c: 247:   SSPADD = (32000000/(4*1000000*100))-1;
  1935  0300  30FF               	movlw	255
  1936  0301  0093               	movwf	19	;volatile
  1937  0302                     l1640:
  1938                           
  1939                           ;main.c: 248:   SSPSTAT = 0b00000000;
  1940  0302  0194               	clrf	20	;volatile
  1941  0303                     l225:
  1942  0303  0008               	return
  1943  0304                     __end_of_iniciar_puertos:
  1944                           
  1945                           	psect	text7
  1946  0304                     __ptext7:	
  1947 ;; *************** function _imprimir_valor_leds *****************
  1948 ;; Defined at:
  1949 ;;		line 109 in file "main.c"
  1950 ;; Parameters:    Size  Location     Type
  1951 ;;		None
  1952 ;; Auto vars:     Size  Location     Type
  1953 ;;		None
  1954 ;; Return value:  Size  Location     Type
  1955 ;;                  1    wreg      void 
  1956 ;; Registers used:
  1957 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1958 ;; Tracked objects:
  1959 ;;		On entry : 0/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMMON   BANK0   BANK1
  1963 ;;      Params:         0       0       0
  1964 ;;      Locals:         0       0       0
  1965 ;;      Temps:          0       0       0
  1966 ;;      Totals:         0       0       0
  1967 ;;Total ram usage:        0 bytes
  1968 ;; Hardware stack levels used: 1
  1969 ;; Hardware stack levels required when called: 3
  1970 ;; This function calls:
  1971 ;;		_LCD_Print
  1972 ;;		_Rx_Dato
  1973 ;;		_Tx_Dato
  1974 ;;		_evaluar_dato
  1975 ;; This function is called by:
  1976 ;;		_main
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979                           
  1980                           
  1981                           ;psect for function _imprimir_valor_leds
  1982  0304                     _imprimir_valor_leds:
  1983  0304                     l1584:	
  1984                           ;incstack = 0
  1985                           ; Regs used in _imprimir_valor_leds: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  1986                           
  1987                           
  1988                           ;main.c: 112:     ADRESL = Rx_Dato();
  1989  0304  118A  2249  118A   	fcall	_Rx_Dato
  1990  0307  1683               	bsf	3,5	;RP0=1, select bank1
  1991  0308  1303               	bcf	3,6	;RP1=0, select bank1
  1992  0309  009E               	movwf	30	;volatile
  1993  030A                     l1586:
  1994                           
  1995                           ;main.c: 113:     Tx_Dato(ADRESL);
  1996  030A  081E               	movf	30,w	;volatile
  1997  030B  118A  2253  118A   	fcall	_Tx_Dato
  1998  030E                     l1588:
  1999                           
  2000                           ;main.c: 114:     ADRESH = Rx_Dato();
  2001  030E  118A  2249  118A   	fcall	_Rx_Dato
  2002  0311  1283               	bcf	3,5	;RP0=0, select bank0
  2003  0312  1303               	bcf	3,6	;RP1=0, select bank0
  2004  0313  009E               	movwf	30	;volatile
  2005                           
  2006                           ;main.c: 115:     Tx_Dato(ADRESH);
  2007  0314  081E               	movf	30,w	;volatile
  2008  0315  118A  2253  118A   	fcall	_Tx_Dato
  2009  0318                     l1590:
  2010                           
  2011                           ;main.c: 117:     ADRES = (ADRESH << 8) | ADRESL;
  2012  0318  1283               	bcf	3,5	;RP0=0, select bank0
  2013  0319  1303               	bcf	3,6	;RP1=0, select bank0
  2014  031A  081E               	movf	30,w	;volatile
  2015  031B  00E5               	movwf	_ADRES+1
  2016  031C  1683               	bsf	3,5	;RP0=1, select bank1
  2017  031D  1303               	bcf	3,6	;RP1=0, select bank1
  2018  031E  081E               	movf	30,w	;volatile
  2019  031F  1283               	bcf	3,5	;RP0=0, select bank0
  2020  0320  1303               	bcf	3,6	;RP1=0, select bank0
  2021  0321  00E4               	movwf	_ADRES
  2022  0322                     l1592:
  2023                           
  2024                           ;main.c: 118:     LCD_Print("Rec ");
  2025  0322  3025               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2026  0323  00CE               	movwf	LCD_Print@LCD_Str
  2027  0324  3080               	movlw	128
  2028  0325  00CF               	movwf	LCD_Print@LCD_Str+1
  2029  0326  118A  23E0  118A   	fcall	_LCD_Print
  2030  0329                     l1594:
  2031                           
  2032                           ;main.c: 119:     evaluar_dato();
  2033  0329  118A  270F  118A   	fcall	_evaluar_dato
  2034  032C                     l201:
  2035  032C  0008               	return
  2036  032D                     __end_of_imprimir_valor_leds:
  2037                           
  2038                           	psect	text8
  2039  070F                     __ptext8:	
  2040 ;; *************** function _evaluar_dato *****************
  2041 ;; Defined at:
  2042 ;;		line 86 in file "main.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;		None
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;		None
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  1    wreg      void 
  2049 ;; Registers used:
  2050 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMMON   BANK0   BANK1
  2056 ;;      Params:         0       0       0
  2057 ;;      Locals:         0       0       0
  2058 ;;      Temps:          0       0       0
  2059 ;;      Totals:         0       0       0
  2060 ;;Total ram usage:        0 bytes
  2061 ;; Hardware stack levels used: 1
  2062 ;; Hardware stack levels required when called: 2
  2063 ;; This function calls:
  2064 ;;		_LCD_Print
  2065 ;; This function is called by:
  2066 ;;		_imprimir_valor_leds
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           
  2071                           ;psect for function _evaluar_dato
  2072  070F                     _evaluar_dato:
  2073  070F                     l1486:	
  2074                           ;incstack = 0
  2075                           ; Regs used in _evaluar_dato: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2076                           
  2077                           
  2078                           ;main.c: 88:             if(ADRES < 127)
  2079  070F  1283               	bcf	3,5	;RP0=0, select bank0
  2080  0710  1303               	bcf	3,6	;RP1=0, select bank0
  2081  0711  0865               	movf	_ADRES+1,w
  2082  0712  3A80               	xorlw	128
  2083  0713  00FF               	movwf	btemp+1
  2084  0714  3080               	movlw	128
  2085  0715  027F               	subwf	btemp+1,w
  2086  0716  1D03               	skipz
  2087  0717  2F1A               	goto	u1055
  2088  0718  307F               	movlw	127
  2089  0719  0264               	subwf	_ADRES,w
  2090  071A                     u1055:
  2091  071A  1803               	skipnc
  2092  071B  2F1D               	goto	u1051
  2093  071C  2F1E               	goto	u1050
  2094  071D                     u1051:
  2095  071D  2F27               	goto	l1490
  2096  071E                     u1050:
  2097  071E                     l1488:
  2098                           
  2099                           ;main.c: 89:                 LCD_Print("0V");
  2100  071E  3033               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2101  071F  1283               	bcf	3,5	;RP0=0, select bank0
  2102  0720  1303               	bcf	3,6	;RP1=0, select bank0
  2103  0721  00CE               	movwf	LCD_Print@LCD_Str
  2104  0722  3080               	movlw	128
  2105  0723  00CF               	movwf	LCD_Print@LCD_Str+1
  2106  0724  118A  23E0  118A   	fcall	_LCD_Print
  2107  0727                     l1490:
  2108                           
  2109                           ;main.c: 90:             if(ADRES > 127)
  2110  0727  1283               	bcf	3,5	;RP0=0, select bank0
  2111  0728  1303               	bcf	3,6	;RP1=0, select bank0
  2112  0729  0865               	movf	_ADRES+1,w
  2113  072A  3A80               	xorlw	128
  2114  072B  00FF               	movwf	btemp+1
  2115  072C  3080               	movlw	128
  2116  072D  027F               	subwf	btemp+1,w
  2117  072E  1D03               	skipz
  2118  072F  2F32               	goto	u1065
  2119  0730  3080               	movlw	128
  2120  0731  0264               	subwf	_ADRES,w
  2121  0732                     u1065:
  2122  0732  1C03               	skipc
  2123  0733  2F35               	goto	u1061
  2124  0734  2F36               	goto	u1060
  2125  0735                     u1061:
  2126  0735  2F3F               	goto	l1494
  2127  0736                     u1060:
  2128  0736                     l1492:
  2129                           
  2130                           ;main.c: 91:                 LCD_Print("625mv");
  2131  0736  301F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2132  0737  1283               	bcf	3,5	;RP0=0, select bank0
  2133  0738  1303               	bcf	3,6	;RP1=0, select bank0
  2134  0739  00CE               	movwf	LCD_Print@LCD_Str
  2135  073A  3080               	movlw	128
  2136  073B  00CF               	movwf	LCD_Print@LCD_Str+1
  2137  073C  118A  23E0  118A   	fcall	_LCD_Print
  2138  073F                     l1494:
  2139                           
  2140                           ;main.c: 92:             if(ADRES > 255)
  2141  073F  1283               	bcf	3,5	;RP0=0, select bank0
  2142  0740  1303               	bcf	3,6	;RP1=0, select bank0
  2143  0741  0865               	movf	_ADRES+1,w
  2144  0742  3A80               	xorlw	128
  2145  0743  00FF               	movwf	btemp+1
  2146  0744  3081               	movlw	129
  2147  0745  027F               	subwf	btemp+1,w
  2148  0746  1D03               	skipz
  2149  0747  2F4A               	goto	u1075
  2150  0748  3000               	movlw	0
  2151  0749  0264               	subwf	_ADRES,w
  2152  074A                     u1075:
  2153  074A  1C03               	skipc
  2154  074B  2F4D               	goto	u1071
  2155  074C  2F4E               	goto	u1070
  2156  074D                     u1071:
  2157  074D  2F57               	goto	l1498
  2158  074E                     u1070:
  2159  074E                     l1496:
  2160                           
  2161                           ;main.c: 93:                 LCD_Print("1.25V");
  2162  074E  3007               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2163  074F  1283               	bcf	3,5	;RP0=0, select bank0
  2164  0750  1303               	bcf	3,6	;RP1=0, select bank0
  2165  0751  00CE               	movwf	LCD_Print@LCD_Str
  2166  0752  3080               	movlw	128
  2167  0753  00CF               	movwf	LCD_Print@LCD_Str+1
  2168  0754  118A  23E0  118A   	fcall	_LCD_Print
  2169  0757                     l1498:
  2170                           
  2171                           ;main.c: 94:             if(ADRES > 352)
  2172  0757  1283               	bcf	3,5	;RP0=0, select bank0
  2173  0758  1303               	bcf	3,6	;RP1=0, select bank0
  2174  0759  0865               	movf	_ADRES+1,w
  2175  075A  3A80               	xorlw	128
  2176  075B  00FF               	movwf	btemp+1
  2177  075C  3081               	movlw	129
  2178  075D  027F               	subwf	btemp+1,w
  2179  075E  1D03               	skipz
  2180  075F  2F62               	goto	u1085
  2181  0760  3061               	movlw	97
  2182  0761  0264               	subwf	_ADRES,w
  2183  0762                     u1085:
  2184  0762  1C03               	skipc
  2185  0763  2F65               	goto	u1081
  2186  0764  2F66               	goto	u1080
  2187  0765                     u1081:
  2188  0765  2F6F               	goto	l1502
  2189  0766                     u1080:
  2190  0766                     l1500:
  2191                           
  2192                           ;main.c: 95:                 LCD_Print("1.97V");
  2193  0766  3019               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2194  0767  1283               	bcf	3,5	;RP0=0, select bank0
  2195  0768  1303               	bcf	3,6	;RP1=0, select bank0
  2196  0769  00CE               	movwf	LCD_Print@LCD_Str
  2197  076A  3080               	movlw	128
  2198  076B  00CF               	movwf	LCD_Print@LCD_Str+1
  2199  076C  118A  23E0  118A   	fcall	_LCD_Print
  2200  076F                     l1502:
  2201                           
  2202                           ;main.c: 96:             if(ADRES > 511)
  2203  076F  1283               	bcf	3,5	;RP0=0, select bank0
  2204  0770  1303               	bcf	3,6	;RP1=0, select bank0
  2205  0771  0865               	movf	_ADRES+1,w
  2206  0772  3A80               	xorlw	128
  2207  0773  00FF               	movwf	btemp+1
  2208  0774  3082               	movlw	130
  2209  0775  027F               	subwf	btemp+1,w
  2210  0776  1D03               	skipz
  2211  0777  2F7A               	goto	u1095
  2212  0778  3000               	movlw	0
  2213  0779  0264               	subwf	_ADRES,w
  2214  077A                     u1095:
  2215  077A  1C03               	skipc
  2216  077B  2F7D               	goto	u1091
  2217  077C  2F7E               	goto	u1090
  2218  077D                     u1091:
  2219  077D  2F87               	goto	l1506
  2220  077E                     u1090:
  2221  077E                     l1504:
  2222                           
  2223                           ;main.c: 97:                 LCD_Print("2.5V");
  2224  077E  302A               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2225  077F  1283               	bcf	3,5	;RP0=0, select bank0
  2226  0780  1303               	bcf	3,6	;RP1=0, select bank0
  2227  0781  00CE               	movwf	LCD_Print@LCD_Str
  2228  0782  3080               	movlw	128
  2229  0783  00CF               	movwf	LCD_Print@LCD_Str+1
  2230  0784  118A  23E0  118A   	fcall	_LCD_Print
  2231  0787                     l1506:
  2232                           
  2233                           ;main.c: 98:             if(ADRES > 639)
  2234  0787  1283               	bcf	3,5	;RP0=0, select bank0
  2235  0788  1303               	bcf	3,6	;RP1=0, select bank0
  2236  0789  0865               	movf	_ADRES+1,w
  2237  078A  3A80               	xorlw	128
  2238  078B  00FF               	movwf	btemp+1
  2239  078C  3082               	movlw	130
  2240  078D  027F               	subwf	btemp+1,w
  2241  078E  1D03               	skipz
  2242  078F  2F92               	goto	u1105
  2243  0790  3080               	movlw	128
  2244  0791  0264               	subwf	_ADRES,w
  2245  0792                     u1105:
  2246  0792  1C03               	skipc
  2247  0793  2F95               	goto	u1101
  2248  0794  2F96               	goto	u1100
  2249  0795                     u1101:
  2250  0795  2F9F               	goto	l1510
  2251  0796                     u1100:
  2252  0796                     l1508:
  2253                           
  2254                           ;main.c: 99:                 LCD_Print("3.12V");
  2255  0796  3001               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2256  0797  1283               	bcf	3,5	;RP0=0, select bank0
  2257  0798  1303               	bcf	3,6	;RP1=0, select bank0
  2258  0799  00CE               	movwf	LCD_Print@LCD_Str
  2259  079A  3080               	movlw	128
  2260  079B  00CF               	movwf	LCD_Print@LCD_Str+1
  2261  079C  118A  23E0  118A   	fcall	_LCD_Print
  2262  079F                     l1510:
  2263                           
  2264                           ;main.c: 100:             if(ADRES > 767)
  2265  079F  1283               	bcf	3,5	;RP0=0, select bank0
  2266  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  2267  07A1  0865               	movf	_ADRES+1,w
  2268  07A2  3A80               	xorlw	128
  2269  07A3  00FF               	movwf	btemp+1
  2270  07A4  3083               	movlw	131
  2271  07A5  027F               	subwf	btemp+1,w
  2272  07A6  1D03               	skipz
  2273  07A7  2FAA               	goto	u1115
  2274  07A8  3000               	movlw	0
  2275  07A9  0264               	subwf	_ADRES,w
  2276  07AA                     u1115:
  2277  07AA  1C03               	skipc
  2278  07AB  2FAD               	goto	u1111
  2279  07AC  2FAE               	goto	u1110
  2280  07AD                     u1111:
  2281  07AD  2FB7               	goto	l1514
  2282  07AE                     u1110:
  2283  07AE                     l1512:
  2284                           
  2285                           ;main.c: 101:                 LCD_Print("3.75V");
  2286  07AE  300D               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2287  07AF  1283               	bcf	3,5	;RP0=0, select bank0
  2288  07B0  1303               	bcf	3,6	;RP1=0, select bank0
  2289  07B1  00CE               	movwf	LCD_Print@LCD_Str
  2290  07B2  3080               	movlw	128
  2291  07B3  00CF               	movwf	LCD_Print@LCD_Str+1
  2292  07B4  118A  23E0  118A   	fcall	_LCD_Print
  2293  07B7                     l1514:
  2294                           
  2295                           ;main.c: 102:             if(ADRES > 894)
  2296  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  2297  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  2298  07B9  0865               	movf	_ADRES+1,w
  2299  07BA  3A80               	xorlw	128
  2300  07BB  00FF               	movwf	btemp+1
  2301  07BC  3083               	movlw	131
  2302  07BD  027F               	subwf	btemp+1,w
  2303  07BE  1D03               	skipz
  2304  07BF  2FC2               	goto	u1125
  2305  07C0  307F               	movlw	127
  2306  07C1  0264               	subwf	_ADRES,w
  2307  07C2                     u1125:
  2308  07C2  1C03               	skipc
  2309  07C3  2FC5               	goto	u1121
  2310  07C4  2FC6               	goto	u1120
  2311  07C5                     u1121:
  2312  07C5  2FCF               	goto	l1518
  2313  07C6                     u1120:
  2314  07C6                     l1516:
  2315                           
  2316                           ;main.c: 103:                 LCD_Print("4.37V");
  2317  07C6  3013               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2318  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  2319  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  2320  07C9  00CE               	movwf	LCD_Print@LCD_Str
  2321  07CA  3080               	movlw	128
  2322  07CB  00CF               	movwf	LCD_Print@LCD_Str+1
  2323  07CC  118A  23E0  118A   	fcall	_LCD_Print
  2324  07CF                     l1518:
  2325                           
  2326                           ;main.c: 104:             if(ADRES > 1022)
  2327  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  2328  07D0  1303               	bcf	3,6	;RP1=0, select bank0
  2329  07D1  0865               	movf	_ADRES+1,w
  2330  07D2  3A80               	xorlw	128
  2331  07D3  00FF               	movwf	btemp+1
  2332  07D4  3083               	movlw	131
  2333  07D5  027F               	subwf	btemp+1,w
  2334  07D6  1D03               	skipz
  2335  07D7  2FDA               	goto	u1135
  2336  07D8  30FF               	movlw	255
  2337  07D9  0264               	subwf	_ADRES,w
  2338  07DA                     u1135:
  2339  07DA  1C03               	skipc
  2340  07DB  2FDD               	goto	u1131
  2341  07DC  2FDE               	goto	u1130
  2342  07DD                     u1131:
  2343  07DD  2FE7               	goto	l198
  2344  07DE                     u1130:
  2345  07DE                     l1520:
  2346                           
  2347                           ;main.c: 105:                 LCD_Print("5V");
  2348  07DE  302C               	movlw	(low (((STR_5+2)-__stringbase)| (0+32768)))& (0+255)
  2349  07DF  1283               	bcf	3,5	;RP0=0, select bank0
  2350  07E0  1303               	bcf	3,6	;RP1=0, select bank0
  2351  07E1  00CE               	movwf	LCD_Print@LCD_Str
  2352  07E2  3080               	movlw	128
  2353  07E3  00CF               	movwf	LCD_Print@LCD_Str+1
  2354  07E4  118A  23E0  118A   	fcall	_LCD_Print
  2355  07E7                     l198:
  2356  07E7  0008               	return
  2357  07E8                     __end_of_evaluar_dato:
  2358                           
  2359                           	psect	text9
  2360  03E0                     __ptext9:	
  2361 ;; *************** function _LCD_Print *****************
  2362 ;; Defined at:
  2363 ;;		line 113 in file "./lcd.h"
  2364 ;; Parameters:    Size  Location     Type
  2365 ;;  LCD_Str         2    3[BANK0 ] PTR unsigned char 
  2366 ;;		 -> M(41), STR_11(4), STR_10(5), STR_9(3), 
  2367 ;;		 -> STR_8(6), STR_7(6), STR_6(6), STR_5(5), 
  2368 ;;		 -> STR_4(6), STR_3(6), STR_2(6), STR_1(3), 
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;  i               1    6[BANK0 ] unsigned char 
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  1    wreg      void 
  2373 ;; Registers used:
  2374 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMMON   BANK0   BANK1
  2380 ;;      Params:         0       2       0
  2381 ;;      Locals:         0       1       0
  2382 ;;      Temps:          0       1       0
  2383 ;;      Totals:         0       4       0
  2384 ;;Total ram usage:        4 bytes
  2385 ;; Hardware stack levels used: 1
  2386 ;; Hardware stack levels required when called: 1
  2387 ;; This function calls:
  2388 ;;		_LCD_Write_Nibble
  2389 ;; This function is called by:
  2390 ;;		_evaluar_dato
  2391 ;;		_imprimir_valor_leds
  2392 ;;		_main
  2393 ;;		_inicio_presentacion
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           
  2398                           ;psect for function _LCD_Print
  2399  03E0                     _LCD_Print:
  2400  03E0                     l1326:	
  2401                           ;incstack = 0
  2402                           ; Regs used in _LCD_Print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2403                           
  2404                           
  2405                           ;./lcd.h: 113: void LCD_Print(char* LCD_Str);./lcd.h: 114: {;./lcd.h: 115:   uint8_t i =
      +                           0;
  2406  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  2407  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  2408  03E2  01D1               	clrf	LCD_Print@i
  2409  03E3                     l1328:
  2410                           
  2411                           ;./lcd.h: 116:   RS = 1;
  2412  03E3  1468               	bsf	_RS/(0+8),_RS& (0+7)
  2413                           
  2414                           ;./lcd.h: 117:   while(LCD_Str[i] != '\0')
  2415  03E4  2C0F               	goto	l1334
  2416  03E5                     l1330:
  2417                           
  2418                           ;./lcd.h: 118:   {;./lcd.h: 119:     LCD_Write_Nibble(LCD_Str[i] >> 4);
  2419  03E5  0851               	movf	LCD_Print@i,w
  2420  03E6  074E               	addwf	LCD_Print@LCD_Str,w
  2421  03E7  0084               	movwf	4
  2422  03E8  084F               	movf	LCD_Print@LCD_Str+1,w
  2423  03E9  1803               	skipnc
  2424  03EA  0A4F               	incf	LCD_Print@LCD_Str+1,w
  2425  03EB  00FF               	movwf	btemp+1
  2426  03EC  118A  2002  118A   	fcall	stringtab
  2427  03EF  00D0               	movwf	??_LCD_Print
  2428  03F0  3004               	movlw	4
  2429  03F1                     u695:
  2430  03F1  1003               	clrc
  2431  03F2  0CD0               	rrf	??_LCD_Print,f
  2432  03F3  3EFF               	addlw	-1
  2433  03F4  1D03               	skipz
  2434  03F5  2BF1               	goto	u695
  2435  03F6  0850               	movf	??_LCD_Print,w
  2436  03F7  118A  241F  118A   	fcall	_LCD_Write_Nibble
  2437                           
  2438                           ;./lcd.h: 120:     LCD_Write_Nibble(LCD_Str[i++] );
  2439  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2440  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  2441  03FC  0851               	movf	LCD_Print@i,w
  2442  03FD  074E               	addwf	LCD_Print@LCD_Str,w
  2443  03FE  0084               	movwf	4
  2444  03FF  084F               	movf	LCD_Print@LCD_Str+1,w
  2445  0400  1803               	skipnc
  2446  0401  0A4F               	incf	LCD_Print@LCD_Str+1,w
  2447  0402  00FF               	movwf	btemp+1
  2448  0403  118A  2002  118A   	fcall	stringtab
  2449  0406  118A  241F  118A   	fcall	_LCD_Write_Nibble
  2450  0409                     l1332:
  2451  0409  3001               	movlw	1
  2452  040A  1283               	bcf	3,5	;RP0=0, select bank0
  2453  040B  1303               	bcf	3,6	;RP1=0, select bank0
  2454  040C  00D0               	movwf	??_LCD_Print
  2455  040D  0850               	movf	??_LCD_Print,w
  2456  040E  07D1               	addwf	LCD_Print@i,f
  2457  040F                     l1334:
  2458                           
  2459                           ;./lcd.h: 117:   while(LCD_Str[i] != '\0')
  2460  040F  0851               	movf	LCD_Print@i,w
  2461  0410  074E               	addwf	LCD_Print@LCD_Str,w
  2462  0411  0084               	movwf	4
  2463  0412  084F               	movf	LCD_Print@LCD_Str+1,w
  2464  0413  1803               	skipnc
  2465  0414  0A4F               	incf	LCD_Print@LCD_Str+1,w
  2466  0415  00FF               	movwf	btemp+1
  2467  0416  118A  2002  118A   	fcall	stringtab
  2468  0419  3A00               	xorlw	0
  2469  041A  1D03               	skipz
  2470  041B  2C1D               	goto	u701
  2471  041C  2C1E               	goto	u700
  2472  041D                     u701:
  2473  041D  2BE5               	goto	l1330
  2474  041E                     u700:
  2475  041E                     l113:
  2476  041E  0008               	return
  2477  041F                     __end_of_LCD_Print:
  2478                           
  2479                           	psect	text10
  2480  032D                     __ptext10:	
  2481 ;; *************** function _enviar_datos *****************
  2482 ;; Defined at:
  2483 ;;		line 147 in file "main.c"
  2484 ;; Parameters:    Size  Location     Type
  2485 ;;		None
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;		None
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  1    wreg      void 
  2490 ;; Registers used:
  2491 ;;		wreg, status,2, status,0, pclath, cstack
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMMON   BANK0   BANK1
  2497 ;;      Params:         0       0       0
  2498 ;;      Locals:         0       0       0
  2499 ;;      Temps:          0       2       0
  2500 ;;      Totals:         0       2       0
  2501 ;;Total ram usage:        2 bytes
  2502 ;; Hardware stack levels used: 1
  2503 ;; Hardware stack levels required when called: 1
  2504 ;; This function calls:
  2505 ;;		_Canal0
  2506 ;;		_Rx_Dato
  2507 ;;		_Tx_Dato
  2508 ;; This function is called by:
  2509 ;;		_main
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513                           
  2514                           ;psect for function _enviar_datos
  2515  032D                     _enviar_datos:
  2516  032D                     l1596:	
  2517                           ;incstack = 0
  2518                           ; Regs used in _enviar_datos: [wreg+status,2+status,0+pclath+cstack]
  2519                           
  2520                           
  2521                           ;main.c: 149:          Canal0(2);
  2522  032D  3002               	movlw	2
  2523  032E  1283               	bcf	3,5	;RP0=0, select bank0
  2524  032F  1303               	bcf	3,6	;RP1=0, select bank0
  2525  0330  00CB               	movwf	Canal0@z
  2526  0331  3000               	movlw	0
  2527  0332  00CC               	movwf	Canal0@z+1
  2528  0333  118A  22A0  118A   	fcall	_Canal0
  2529                           
  2530                           ;main.c: 150:          Tx_Dato(ADRESL);
  2531  0336  1683               	bsf	3,5	;RP0=1, select bank1
  2532  0337  1303               	bcf	3,6	;RP1=0, select bank1
  2533  0338  081E               	movf	30,w	;volatile
  2534  0339  118A  2253  118A   	fcall	_Tx_Dato
  2535  033C                     l1598:
  2536                           
  2537                           ;main.c: 151:          ECO = Rx_Dato();
  2538  033C  118A  2249  118A   	fcall	_Rx_Dato
  2539  033F  1283               	bcf	3,5	;RP0=0, select bank0
  2540  0340  1303               	bcf	3,6	;RP1=0, select bank0
  2541  0341  00CF               	movwf	??_enviar_datos
  2542  0342  01D0               	clrf	??_enviar_datos+1
  2543  0343  084F               	movf	??_enviar_datos,w
  2544  0344  00E6               	movwf	_ECO
  2545  0345  0850               	movf	??_enviar_datos+1,w
  2546  0346  00E7               	movwf	_ECO+1
  2547  0347                     l1600:
  2548                           
  2549                           ;main.c: 152:          Tx_Dato(ADRESH);
  2550  0347  081E               	movf	30,w	;volatile
  2551  0348  118A  2253  118A   	fcall	_Tx_Dato
  2552                           
  2553                           ;main.c: 153:          ECO = Rx_Dato();
  2554  034B  118A  2249  118A   	fcall	_Rx_Dato
  2555  034E  1283               	bcf	3,5	;RP0=0, select bank0
  2556  034F  1303               	bcf	3,6	;RP1=0, select bank0
  2557  0350  00CF               	movwf	??_enviar_datos
  2558  0351  01D0               	clrf	??_enviar_datos+1
  2559  0352  084F               	movf	??_enviar_datos,w
  2560  0353  00E6               	movwf	_ECO
  2561  0354  0850               	movf	??_enviar_datos+1,w
  2562  0355  00E7               	movwf	_ECO+1
  2563  0356                     l209:
  2564  0356  0008               	return
  2565  0357                     __end_of_enviar_datos:
  2566                           
  2567                           	psect	text11
  2568  0253                     __ptext11:	
  2569 ;; *************** function _Tx_Dato *****************
  2570 ;; Defined at:
  2571 ;;		line 64 in file "main.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;  X               1    wreg     unsigned char 
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;  X               1    0[BANK0 ] unsigned char 
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  1    wreg      void 
  2578 ;; Registers used:
  2579 ;;		wreg
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMMON   BANK0   BANK1
  2585 ;;      Params:         0       0       0
  2586 ;;      Locals:         0       1       0
  2587 ;;      Temps:          0       0       0
  2588 ;;      Totals:         0       1       0
  2589 ;;Total ram usage:        1 bytes
  2590 ;; Hardware stack levels used: 1
  2591 ;; This function calls:
  2592 ;;		Nothing
  2593 ;; This function is called by:
  2594 ;;		_imprimir_valor_leds
  2595 ;;		_enviar_datos
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           
  2599                           
  2600                           ;psect for function _Tx_Dato
  2601  0253                     _Tx_Dato:
  2602                           
  2603                           ;incstack = 0
  2604                           ; Regs used in _Tx_Dato: [wreg]
  2605                           ;Tx_Dato@X stored from wreg
  2606  0253  1283               	bcf	3,5	;RP0=0, select bank0
  2607  0254  1303               	bcf	3,6	;RP1=0, select bank0
  2608  0255  00CB               	movwf	Tx_Dato@X
  2609  0256                     l1472:
  2610                           
  2611                           ;main.c: 64: void Tx_Dato(unsigned char X);main.c: 65: {;main.c: 66:     PIR1bits.TXIF =
      +                           0;
  2612  0256  120C               	bcf	12,4	;volatile
  2613  0257                     l1474:
  2614                           
  2615                           ;main.c: 67:     TXREG = X;
  2616  0257  084B               	movf	Tx_Dato@X,w
  2617  0258  0099               	movwf	25	;volatile
  2618  0259                     l1476:
  2619                           
  2620                           ;main.c: 71:                 if(TXSTAbits.TRMT == 0)
  2621  0259  1683               	bsf	3,5	;RP0=1, select bank1
  2622  025A  1303               	bcf	3,6	;RP1=0, select bank1
  2623  025B  1898               	btfsc	24,1	;volatile
  2624  025C  2A5E               	goto	u1031
  2625  025D  2A5F               	goto	u1030
  2626  025E                     u1031:
  2627  025E  2A60               	goto	l181
  2628  025F                     u1030:
  2629  025F  2A59               	goto	l1476
  2630  0260                     l181:
  2631  0260  0008               	return
  2632  0261                     __end_of_Tx_Dato:
  2633                           
  2634                           	psect	text12
  2635  0249                     __ptext12:	
  2636 ;; *************** function _Rx_Dato *****************
  2637 ;; Defined at:
  2638 ;;		line 77 in file "main.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;		None
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;		None
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  1    wreg      unsigned char 
  2645 ;; Registers used:
  2646 ;;		wreg
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMMON   BANK0   BANK1
  2652 ;;      Params:         0       0       0
  2653 ;;      Locals:         0       0       0
  2654 ;;      Temps:          0       0       0
  2655 ;;      Totals:         0       0       0
  2656 ;;Total ram usage:        0 bytes
  2657 ;; Hardware stack levels used: 1
  2658 ;; This function calls:
  2659 ;;		Nothing
  2660 ;; This function is called by:
  2661 ;;		_imprimir_valor_leds
  2662 ;;		_enviar_datos
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           
  2667                           ;psect for function _Rx_Dato
  2668  0249                     _Rx_Dato:
  2669  0249                     l184:	
  2670                           ;incstack = 0
  2671                           ; Regs used in _Rx_Dato: [wreg]
  2672                           ;main.c: 79:     wait:
  2673                           
  2674                           
  2675                           ;main.c: 80:         if(PIR1bits.RCIF == 0)
  2676  0249  1283               	bcf	3,5	;RP0=0, select bank0
  2677  024A  1303               	bcf	3,6	;RP1=0, select bank0
  2678  024B  1A8C               	btfsc	12,5	;volatile
  2679  024C  2A4E               	goto	u1041
  2680  024D  2A4F               	goto	u1040
  2681  024E                     u1041:
  2682  024E  2A50               	goto	l185
  2683  024F                     u1040:
  2684  024F  2A49               	goto	l184
  2685  0250                     l185:
  2686                           
  2687                           ;main.c: 82:     PIR1bits.RCIF = 0;
  2688  0250  128C               	bcf	12,5	;volatile
  2689  0251                     l1482:
  2690                           
  2691                           ;main.c: 83:     return RCREG;
  2692  0251  081A               	movf	26,w	;volatile
  2693  0252                     l186:
  2694  0252  0008               	return
  2695  0253                     __end_of_Rx_Dato:
  2696                           
  2697                           	psect	text13
  2698  02A0                     __ptext13:	
  2699 ;; *************** function _Canal0 *****************
  2700 ;; Defined at:
  2701 ;;		line 122 in file "main.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;  z               2    0[BANK0 ] int 
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;		None
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  1    wreg      void 
  2708 ;; Registers used:
  2709 ;;		wreg
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMMON   BANK0   BANK1
  2715 ;;      Params:         0       2       0
  2716 ;;      Locals:         0       0       0
  2717 ;;      Temps:          0       2       0
  2718 ;;      Totals:         0       4       0
  2719 ;;Total ram usage:        4 bytes
  2720 ;; Hardware stack levels used: 1
  2721 ;; This function calls:
  2722 ;;		Nothing
  2723 ;; This function is called by:
  2724 ;;		_enviar_datos
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           
  2729                           ;psect for function _Canal0
  2730  02A0                     _Canal0:
  2731  02A0                     l1522:	
  2732                           ;incstack = 0
  2733                           ; Regs used in _Canal0: [wreg]
  2734                           
  2735                           
  2736                           ;main.c: 122: void Canal0(int z);main.c: 123: {;main.c: 125:     CHS2 = 0;
  2737  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  2738  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  2739  02A2  129F               	bcf	31,5	;volatile
  2740                           
  2741                           ;main.c: 126:     CHS1 = 0;
  2742  02A3  121F               	bcf	31,4	;volatile
  2743                           
  2744                           ;main.c: 127:     CHS0 = 0;
  2745  02A4  119F               	bcf	31,3	;volatile
  2746                           
  2747                           ;main.c: 129:     ADON = 1;
  2748  02A5  141F               	bsf	31,0	;volatile
  2749  02A6                     l1524:
  2750                           
  2751                           ;main.c: 131:     _delay((unsigned long)((1)*(32000000/4000.0)));
  2752  02A6  300B               	movlw	11
  2753  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  2754  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  2755  02A9  00CE               	movwf	??_Canal0+1
  2756  02AA  3062               	movlw	98
  2757  02AB  00CD               	movwf	??_Canal0
  2758  02AC                     u1327:
  2759  02AC  0BCD               	decfsz	??_Canal0,f
  2760  02AD  2AAC               	goto	u1327
  2761  02AE  0BCE               	decfsz	??_Canal0+1,f
  2762  02AF  2AAC               	goto	u1327
  2763  02B0                     l1526:
  2764                           
  2765                           ;main.c: 133:      GO = 1;
  2766  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  2767  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  2768  02B2  151F               	bsf	31,2	;volatile
  2769  02B3                     l1528:
  2770  02B3  1B0C               	btfsc	12,6	;volatile
  2771  02B4  2AB6               	goto	u1141
  2772  02B5  2AB7               	goto	u1140
  2773  02B6                     u1141:
  2774  02B6  2AB8               	goto	l205
  2775  02B7                     u1140:
  2776  02B7  2AB3               	goto	l1528
  2777  02B8                     l205:
  2778                           
  2779                           ;main.c: 139:     ADON = 0;
  2780  02B8  101F               	bcf	31,0	;volatile
  2781                           
  2782                           ;main.c: 143:     ADIF = 0;
  2783  02B9  130C               	bcf	12,6	;volatile
  2784  02BA                     l206:
  2785  02BA  0008               	return
  2786  02BB                     __end_of_Canal0:
  2787                           
  2788                           	psect	text14
  2789  0272                     __ptext14:	
  2790 ;; *************** function _LCD_PutC *****************
  2791 ;; Defined at:
  2792 ;;		line 106 in file "./lcd.h"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;  LCD_Char        1    wreg     unsigned char 
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;  LCD_Char        1    4[BANK0 ] unsigned char 
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  1    wreg      void 
  2799 ;; Registers used:
  2800 ;;		wreg, status,2, status,0, pclath, cstack
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMMON   BANK0   BANK1
  2806 ;;      Params:         0       0       0
  2807 ;;      Locals:         0       1       0
  2808 ;;      Temps:          0       1       0
  2809 ;;      Totals:         0       2       0
  2810 ;;Total ram usage:        2 bytes
  2811 ;; Hardware stack levels used: 1
  2812 ;; Hardware stack levels required when called: 1
  2813 ;; This function calls:
  2814 ;;		_LCD_Write_Nibble
  2815 ;; This function is called by:
  2816 ;;		_main
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           
  2821                           ;psect for function _LCD_PutC
  2822  0272                     _LCD_PutC:
  2823                           
  2824                           ;incstack = 0
  2825                           ; Regs used in _LCD_PutC: [wreg+status,2+status,0+pclath+cstack]
  2826                           ;LCD_PutC@LCD_Char stored from wreg
  2827  0272  1283               	bcf	3,5	;RP0=0, select bank0
  2828  0273  1303               	bcf	3,6	;RP1=0, select bank0
  2829  0274  00CF               	movwf	LCD_PutC@LCD_Char
  2830  0275                     l1532:
  2831                           
  2832                           ;./lcd.h: 106: void LCD_PutC(char LCD_Char);./lcd.h: 107: {;./lcd.h: 108:   RS = 1;
  2833  0275  1468               	bsf	_RS/(0+8),_RS& (0+7)
  2834  0276                     l1534:
  2835                           
  2836                           ;./lcd.h: 109:   LCD_Write_Nibble(LCD_Char >> 4);
  2837  0276  084F               	movf	LCD_PutC@LCD_Char,w
  2838  0277  00CE               	movwf	??_LCD_PutC
  2839  0278  3004               	movlw	4
  2840  0279                     u1155:
  2841  0279  1003               	clrc
  2842  027A  0CCE               	rrf	??_LCD_PutC,f
  2843  027B  3EFF               	addlw	-1
  2844  027C  1D03               	skipz
  2845  027D  2A79               	goto	u1155
  2846  027E  084E               	movf	??_LCD_PutC,w
  2847  027F  118A  241F  118A   	fcall	_LCD_Write_Nibble
  2848                           
  2849                           ;./lcd.h: 110:   LCD_Write_Nibble(LCD_Char );
  2850  0282  1283               	bcf	3,5	;RP0=0, select bank0
  2851  0283  1303               	bcf	3,6	;RP1=0, select bank0
  2852  0284  084F               	movf	LCD_PutC@LCD_Char,w
  2853  0285  118A  241F  118A   	fcall	_LCD_Write_Nibble
  2854  0288                     l107:
  2855  0288  0008               	return
  2856  0289                     __end_of_LCD_PutC:
  2857                           
  2858                           	psect	text15
  2859  057A                     __ptext15:	
  2860 ;; *************** function _LCD_Begin *****************
  2861 ;; Defined at:
  2862 ;;		line 124 in file "./lcd.h"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;		None
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;		None
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      void 
  2869 ;; Registers used:
  2870 ;;		wreg, status,2, status,0, pclath, cstack
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMMON   BANK0   BANK1
  2876 ;;      Params:         0       0       0
  2877 ;;      Locals:         0       0       0
  2878 ;;      Temps:          0       3       0
  2879 ;;      Totals:         0       3       0
  2880 ;;Total ram usage:        3 bytes
  2881 ;; Hardware stack levels used: 1
  2882 ;; Hardware stack levels required when called: 2
  2883 ;; This function calls:
  2884 ;;		_LCD_Cmd
  2885 ;; This function is called by:
  2886 ;;		_main
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890                           
  2891                           ;psect for function _LCD_Begin
  2892  057A                     _LCD_Begin:
  2893  057A                     l1536:	
  2894                           ;incstack = 0
  2895                           ; Regs used in _LCD_Begin: [wreg+status,2+status,0+pclath+cstack]
  2896                           
  2897                           
  2898                           ;./lcd.h: 126:   RS = 0;
  2899  057A  1283               	bcf	3,5	;RP0=0, select bank0
  2900  057B  1303               	bcf	3,6	;RP1=0, select bank0
  2901  057C  1068               	bcf	_RS/(0+8),_RS& (0+7)
  2902                           
  2903                           ;./lcd.h: 127:   PORTCbits.RC5 = 0;
  2904  057D  1287               	bcf	7,5	;volatile
  2905                           
  2906                           ;./lcd.h: 128:   PORTCbits.RC6 = 0;
  2907  057E  1307               	bcf	7,6	;volatile
  2908                           
  2909                           ;./lcd.h: 129:   PORTCbits.RC7 = 0;
  2910  057F  1387               	bcf	7,7	;volatile
  2911                           
  2912                           ;./lcd.h: 134:   PORTBbits.RB4 = 0;
  2913  0580  1206               	bcf	6,4	;volatile
  2914                           
  2915                           ;./lcd.h: 135:   PORTBbits.RB5 = 0;
  2916  0581  1286               	bcf	6,5	;volatile
  2917                           
  2918                           ;./lcd.h: 136:   PORTBbits.RB6 = 0;
  2919  0582  1306               	bcf	6,6	;volatile
  2920                           
  2921                           ;./lcd.h: 137:   PORTBbits.RB7 = 0;
  2922  0583  1386               	bcf	6,7	;volatile
  2923                           
  2924                           ;./lcd.h: 138:   TRISCbits.TRISC5 = 0;
  2925  0584  1683               	bsf	3,5	;RP0=1, select bank1
  2926  0585  1303               	bcf	3,6	;RP1=0, select bank1
  2927  0586  1287               	bcf	7,5	;volatile
  2928                           
  2929                           ;./lcd.h: 139:   TRISCbits.TRISC6 = 0;
  2930  0587  1307               	bcf	7,6	;volatile
  2931                           
  2932                           ;./lcd.h: 140:   TRISCbits.TRISC7 = 0;
  2933  0588  1387               	bcf	7,7	;volatile
  2934                           
  2935                           ;./lcd.h: 145:   TRISBbits.TRISB4 = 0;
  2936  0589  1206               	bcf	6,4	;volatile
  2937                           
  2938                           ;./lcd.h: 146:   TRISBbits.TRISB5 = 0;
  2939  058A  1286               	bcf	6,5	;volatile
  2940                           
  2941                           ;./lcd.h: 147:   TRISBbits.TRISB6 = 0;
  2942  058B  1306               	bcf	6,6	;volatile
  2943                           
  2944                           ;./lcd.h: 148:   TRISBbits.TRISB7 = 0;
  2945  058C  1386               	bcf	6,7	;volatile
  2946  058D                     l1538:
  2947                           
  2948                           ;./lcd.h: 149:   _delay((unsigned long)((40)*(32000000/4000.0)));
  2949  058D  3002               	movlw	2
  2950  058E  1283               	bcf	3,5	;RP0=0, select bank0
  2951  058F  1303               	bcf	3,6	;RP1=0, select bank0
  2952  0590  00D3               	movwf	??_LCD_Begin+2
  2953  0591  30A0               	movlw	160
  2954  0592  00D2               	movwf	??_LCD_Begin+1
  2955  0593  3092               	movlw	146
  2956  0594  00D1               	movwf	??_LCD_Begin
  2957  0595                     u1337:
  2958  0595  0BD1               	decfsz	??_LCD_Begin,f
  2959  0596  2D95               	goto	u1337
  2960  0597  0BD2               	decfsz	??_LCD_Begin+1,f
  2961  0598  2D95               	goto	u1337
  2962  0599  0BD3               	decfsz	??_LCD_Begin+2,f
  2963  059A  2D95               	goto	u1337
  2964  059B                     l1540:
  2965                           
  2966                           ;./lcd.h: 150:   LCD_Cmd(3);
  2967  059B  3003               	movlw	3
  2968  059C  118A  2382  118A   	fcall	_LCD_Cmd
  2969  059F                     l1542:
  2970                           
  2971                           ;./lcd.h: 151:   _delay((unsigned long)((5)*(32000000/4000.0)));
  2972  059F  3034               	movlw	52
  2973  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  2974  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  2975  05A2  00D2               	movwf	??_LCD_Begin+1
  2976  05A3  30F1               	movlw	241
  2977  05A4  00D1               	movwf	??_LCD_Begin
  2978  05A5                     u1347:
  2979  05A5  0BD1               	decfsz	??_LCD_Begin,f
  2980  05A6  2DA5               	goto	u1347
  2981  05A7  0BD2               	decfsz	??_LCD_Begin+1,f
  2982  05A8  2DA5               	goto	u1347
  2983  05A9  0000               	nop
  2984                           
  2985                           ;./lcd.h: 152:   LCD_Cmd(3);
  2986  05AA  3003               	movlw	3
  2987  05AB  118A  2382  118A   	fcall	_LCD_Cmd
  2988  05AE                     l1544:
  2989                           
  2990                           ;./lcd.h: 153:   _delay((unsigned long)((5)*(32000000/4000.0)));
  2991  05AE  3034               	movlw	52
  2992  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  2993  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  2994  05B1  00D2               	movwf	??_LCD_Begin+1
  2995  05B2  30F1               	movlw	241
  2996  05B3  00D1               	movwf	??_LCD_Begin
  2997  05B4                     u1357:
  2998  05B4  0BD1               	decfsz	??_LCD_Begin,f
  2999  05B5  2DB4               	goto	u1357
  3000  05B6  0BD2               	decfsz	??_LCD_Begin+1,f
  3001  05B7  2DB4               	goto	u1357
  3002  05B8  0000               	nop
  3003  05B9                     l1546:
  3004                           
  3005                           ;./lcd.h: 154:   LCD_Cmd(3);
  3006  05B9  3003               	movlw	3
  3007  05BA  118A  2382  118A   	fcall	_LCD_Cmd
  3008                           
  3009                           ;./lcd.h: 155:   _delay((unsigned long)((5)*(32000000/4000.0)));
  3010  05BD  3034               	movlw	52
  3011  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  3012  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  3013  05C0  00D2               	movwf	??_LCD_Begin+1
  3014  05C1  30F1               	movlw	241
  3015  05C2  00D1               	movwf	??_LCD_Begin
  3016  05C3                     u1367:
  3017  05C3  0BD1               	decfsz	??_LCD_Begin,f
  3018  05C4  2DC3               	goto	u1367
  3019  05C5  0BD2               	decfsz	??_LCD_Begin+1,f
  3020  05C6  2DC3               	goto	u1367
  3021  05C7  0000               	nop
  3022  05C8                     l1548:
  3023                           
  3024                           ;./lcd.h: 156:   LCD_Cmd(0x02);
  3025  05C8  3002               	movlw	2
  3026  05C9  118A  2382  118A   	fcall	_LCD_Cmd
  3027  05CC                     l1550:
  3028                           
  3029                           ;./lcd.h: 157:   _delay((unsigned long)((5)*(32000000/4000.0)));
  3030  05CC  3034               	movlw	52
  3031  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  3032  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  3033  05CF  00D2               	movwf	??_LCD_Begin+1
  3034  05D0  30F1               	movlw	241
  3035  05D1  00D1               	movwf	??_LCD_Begin
  3036  05D2                     u1377:
  3037  05D2  0BD1               	decfsz	??_LCD_Begin,f
  3038  05D3  2DD2               	goto	u1377
  3039  05D4  0BD2               	decfsz	??_LCD_Begin+1,f
  3040  05D5  2DD2               	goto	u1377
  3041  05D6  0000               	nop
  3042                           
  3043                           ;./lcd.h: 158:   LCD_Cmd(0x20 | (2 << 2));
  3044  05D7  3028               	movlw	40
  3045  05D8  118A  2382  118A   	fcall	_LCD_Cmd
  3046  05DB                     l1552:
  3047                           
  3048                           ;./lcd.h: 159:   _delay((unsigned long)((50)*(32000000/4000.0)));
  3049  05DB  3003               	movlw	3
  3050  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  3051  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  3052  05DE  00D3               	movwf	??_LCD_Begin+2
  3053  05DF  3008               	movlw	8
  3054  05E0  00D2               	movwf	??_LCD_Begin+1
  3055  05E1  3076               	movlw	118
  3056  05E2  00D1               	movwf	??_LCD_Begin
  3057  05E3                     u1387:
  3058  05E3  0BD1               	decfsz	??_LCD_Begin,f
  3059  05E4  2DE3               	goto	u1387
  3060  05E5  0BD2               	decfsz	??_LCD_Begin+1,f
  3061  05E6  2DE3               	goto	u1387
  3062  05E7  0BD3               	decfsz	??_LCD_Begin+2,f
  3063  05E8  2DE3               	goto	u1387
  3064  05E9  2DEA               	nop2
  3065  05EA                     l1554:
  3066                           
  3067                           ;./lcd.h: 160:   LCD_Cmd(0x0C);
  3068  05EA  300C               	movlw	12
  3069  05EB  118A  2382  118A   	fcall	_LCD_Cmd
  3070                           
  3071                           ;./lcd.h: 161:   _delay((unsigned long)((50)*(32000000/4000.0)));
  3072  05EE  3003               	movlw	3
  3073  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  3074  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  3075  05F1  00D3               	movwf	??_LCD_Begin+2
  3076  05F2  3008               	movlw	8
  3077  05F3  00D2               	movwf	??_LCD_Begin+1
  3078  05F4  3076               	movlw	118
  3079  05F5  00D1               	movwf	??_LCD_Begin
  3080  05F6                     u1397:
  3081  05F6  0BD1               	decfsz	??_LCD_Begin,f
  3082  05F7  2DF6               	goto	u1397
  3083  05F8  0BD2               	decfsz	??_LCD_Begin+1,f
  3084  05F9  2DF6               	goto	u1397
  3085  05FA  0BD3               	decfsz	??_LCD_Begin+2,f
  3086  05FB  2DF6               	goto	u1397
  3087  05FC  2DFD               	nop2
  3088  05FD                     l1556:
  3089                           
  3090                           ;./lcd.h: 162:   LCD_Cmd(0x01);
  3091  05FD  3001               	movlw	1
  3092  05FE  118A  2382  118A   	fcall	_LCD_Cmd
  3093  0601                     l1558:
  3094                           
  3095                           ;./lcd.h: 163:   _delay((unsigned long)((50)*(32000000/4000.0)));
  3096  0601  3003               	movlw	3
  3097  0602  1283               	bcf	3,5	;RP0=0, select bank0
  3098  0603  1303               	bcf	3,6	;RP1=0, select bank0
  3099  0604  00D3               	movwf	??_LCD_Begin+2
  3100  0605  3008               	movlw	8
  3101  0606  00D2               	movwf	??_LCD_Begin+1
  3102  0607  3076               	movlw	118
  3103  0608  00D1               	movwf	??_LCD_Begin
  3104  0609                     u1407:
  3105  0609  0BD1               	decfsz	??_LCD_Begin,f
  3106  060A  2E09               	goto	u1407
  3107  060B  0BD2               	decfsz	??_LCD_Begin+1,f
  3108  060C  2E09               	goto	u1407
  3109  060D  0BD3               	decfsz	??_LCD_Begin+2,f
  3110  060E  2E09               	goto	u1407
  3111  060F  2E10               	nop2
  3112                           
  3113                           ;./lcd.h: 164:   LCD_Cmd(0x04 | 0x02);
  3114  0610  3006               	movlw	6
  3115  0611  118A  2382  118A   	fcall	_LCD_Cmd
  3116  0614                     l1560:
  3117                           
  3118                           ;./lcd.h: 165:   _delay((unsigned long)((50)*(32000000/4000.0)));
  3119  0614  3003               	movlw	3
  3120  0615  1283               	bcf	3,5	;RP0=0, select bank0
  3121  0616  1303               	bcf	3,6	;RP1=0, select bank0
  3122  0617  00D3               	movwf	??_LCD_Begin+2
  3123  0618  3008               	movlw	8
  3124  0619  00D2               	movwf	??_LCD_Begin+1
  3125  061A  3076               	movlw	118
  3126  061B  00D1               	movwf	??_LCD_Begin
  3127  061C                     u1417:
  3128  061C  0BD1               	decfsz	??_LCD_Begin,f
  3129  061D  2E1C               	goto	u1417
  3130  061E  0BD2               	decfsz	??_LCD_Begin+1,f
  3131  061F  2E1C               	goto	u1417
  3132  0620  0BD3               	decfsz	??_LCD_Begin+2,f
  3133  0621  2E1C               	goto	u1417
  3134  0622  2E23               	nop2
  3135  0623                     l1562:
  3136                           
  3137                           ;./lcd.h: 166:   LCD_Cmd(0x0F);
  3138  0623  300F               	movlw	15
  3139  0624  118A  2382  118A   	fcall	_LCD_Cmd
  3140                           
  3141                           ;./lcd.h: 167:   _delay((unsigned long)((50)*(32000000/4000.0)));
  3142  0627  3003               	movlw	3
  3143  0628  1283               	bcf	3,5	;RP0=0, select bank0
  3144  0629  1303               	bcf	3,6	;RP1=0, select bank0
  3145  062A  00D3               	movwf	??_LCD_Begin+2
  3146  062B  3008               	movlw	8
  3147  062C  00D2               	movwf	??_LCD_Begin+1
  3148  062D  3076               	movlw	118
  3149  062E  00D1               	movwf	??_LCD_Begin
  3150  062F                     u1427:
  3151  062F  0BD1               	decfsz	??_LCD_Begin,f
  3152  0630  2E2F               	goto	u1427
  3153  0631  0BD2               	decfsz	??_LCD_Begin+1,f
  3154  0632  2E2F               	goto	u1427
  3155  0633  0BD3               	decfsz	??_LCD_Begin+2,f
  3156  0634  2E2F               	goto	u1427
  3157  0635  2E36               	nop2
  3158  0636                     l116:
  3159  0636  0008               	return
  3160  0637                     __end_of_LCD_Begin:
  3161                           
  3162                           	psect	text16
  3163  0382                     __ptext16:	
  3164 ;; *************** function _LCD_Cmd *****************
  3165 ;; Defined at:
  3166 ;;		line 78 in file "./lcd.h"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;  Command         1    wreg     unsigned char 
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;  Command         1    5[BANK0 ] unsigned char 
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  1    wreg      void 
  3173 ;; Registers used:
  3174 ;;		wreg, status,2, status,0, pclath, cstack
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMMON   BANK0   BANK1
  3180 ;;      Params:         0       0       0
  3181 ;;      Locals:         0       1       0
  3182 ;;      Temps:          0       2       0
  3183 ;;      Totals:         0       3       0
  3184 ;;Total ram usage:        3 bytes
  3185 ;; Hardware stack levels used: 1
  3186 ;; Hardware stack levels required when called: 1
  3187 ;; This function calls:
  3188 ;;		_LCD_Write_Nibble
  3189 ;; This function is called by:
  3190 ;;		_LCD_Goto
  3191 ;;		_LCD_Begin
  3192 ;;		_main
  3193 ;;		_inicio_presentacion
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           
  3198                           ;psect for function _LCD_Cmd
  3199  0382                     _LCD_Cmd:
  3200                           
  3201                           ;incstack = 0
  3202                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3203                           ;LCD_Cmd@Command stored from wreg
  3204  0382  1283               	bcf	3,5	;RP0=0, select bank0
  3205  0383  1303               	bcf	3,6	;RP1=0, select bank0
  3206  0384  00D0               	movwf	LCD_Cmd@Command
  3207  0385                     l1316:
  3208                           
  3209                           ;./lcd.h: 78: void LCD_Cmd(uint8_t Command);./lcd.h: 79: {;./lcd.h: 80:   RS = 0;
  3210  0385  1068               	bcf	_RS/(0+8),_RS& (0+7)
  3211  0386                     l1318:
  3212                           
  3213                           ;./lcd.h: 81:   LCD_Write_Nibble(Command >> 4);
  3214  0386  0850               	movf	LCD_Cmd@Command,w
  3215  0387  00CE               	movwf	??_LCD_Cmd
  3216  0388  3004               	movlw	4
  3217  0389                     u665:
  3218  0389  1003               	clrc
  3219  038A  0CCE               	rrf	??_LCD_Cmd,f
  3220  038B  3EFF               	addlw	-1
  3221  038C  1D03               	skipz
  3222  038D  2B89               	goto	u665
  3223  038E  084E               	movf	??_LCD_Cmd,w
  3224  038F  118A  241F  118A   	fcall	_LCD_Write_Nibble
  3225                           
  3226                           ;./lcd.h: 82:   LCD_Write_Nibble(Command);
  3227  0392  1283               	bcf	3,5	;RP0=0, select bank0
  3228  0393  1303               	bcf	3,6	;RP1=0, select bank0
  3229  0394  0850               	movf	LCD_Cmd@Command,w
  3230  0395  118A  241F  118A   	fcall	_LCD_Write_Nibble
  3231  0398                     l1320:
  3232                           
  3233                           ;./lcd.h: 83:   if((Command == 0x01) || (Command == 0x02))
  3234  0398  1283               	bcf	3,5	;RP0=0, select bank0
  3235  0399  1303               	bcf	3,6	;RP1=0, select bank0
  3236  039A  0350               	decf	LCD_Cmd@Command,w
  3237  039B  1903               	btfsc	3,2
  3238  039C  2B9E               	goto	u671
  3239  039D  2B9F               	goto	u670
  3240  039E                     u671:
  3241  039E  2BA5               	goto	l1324
  3242  039F                     u670:
  3243  039F                     l1322:
  3244  039F  3002               	movlw	2
  3245  03A0  0650               	xorwf	LCD_Cmd@Command,w
  3246  03A1  1D03               	btfss	3,2
  3247  03A2  2BA4               	goto	u681
  3248  03A3  2BA5               	goto	u680
  3249  03A4                     u681:
  3250  03A4  2BAF               	goto	l95
  3251  03A5                     u680:
  3252  03A5                     l1324:
  3253                           
  3254                           ;./lcd.h: 84:     _delay((unsigned long)((2)*(32000000/4000.0)));
  3255  03A5  3015               	movlw	21
  3256  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  3257  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  3258  03A8  00CF               	movwf	??_LCD_Cmd+1
  3259  03A9  30C6               	movlw	198
  3260  03AA  00CE               	movwf	??_LCD_Cmd
  3261  03AB                     u1437:
  3262  03AB  0BCE               	decfsz	??_LCD_Cmd,f
  3263  03AC  2BAB               	goto	u1437
  3264  03AD  0BCF               	decfsz	??_LCD_Cmd+1,f
  3265  03AE  2BAB               	goto	u1437
  3266  03AF                     l95:
  3267  03AF  0008               	return
  3268  03B0                     __end_of_LCD_Cmd:
  3269                           
  3270                           	psect	text17
  3271  041F                     __ptext17:	
  3272 ;; *************** function _LCD_Write_Nibble *****************
  3273 ;; Defined at:
  3274 ;;		line 61 in file "./lcd.h"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;  n               1    wreg     unsigned char 
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;  n               1    2[BANK0 ] unsigned char 
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  1    wreg      void 
  3281 ;; Registers used:
  3282 ;;		wreg, status,2, status,0
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMMON   BANK0   BANK1
  3288 ;;      Params:         0       0       0
  3289 ;;      Locals:         0       1       0
  3290 ;;      Temps:          0       2       0
  3291 ;;      Totals:         0       3       0
  3292 ;;Total ram usage:        3 bytes
  3293 ;; Hardware stack levels used: 1
  3294 ;; This function calls:
  3295 ;;		Nothing
  3296 ;; This function is called by:
  3297 ;;		_LCD_Cmd
  3298 ;;		_LCD_PutC
  3299 ;;		_LCD_Print
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303                           
  3304                           ;psect for function _LCD_Write_Nibble
  3305  041F                     _LCD_Write_Nibble:
  3306                           
  3307                           ;incstack = 0
  3308                           ; Regs used in _LCD_Write_Nibble: [wreg+status,2+status,0]
  3309                           ;LCD_Write_Nibble@n stored from wreg
  3310  041F  1283               	bcf	3,5	;RP0=0, select bank0
  3311  0420  1303               	bcf	3,6	;RP1=0, select bank0
  3312  0421  00CD               	movwf	LCD_Write_Nibble@n
  3313  0422                     l1300:
  3314                           
  3315                           ;./lcd.h: 61: void LCD_Write_Nibble(uint8_t n);./lcd.h: 62: {;./lcd.h: 63:   PORTCbits.R
      +                          C5 = RS;
  3316  0422  1868               	btfsc	_RS/(0+8),_RS& (0+7)
  3317  0423  2C25               	goto	u621
  3318  0424  2C29               	goto	u620
  3319  0425                     u621:
  3320  0425  1283               	bcf	3,5	;RP0=0, select bank0
  3321  0426  1303               	bcf	3,6	;RP1=0, select bank0
  3322  0427  1687               	bsf	7,5	;volatile
  3323  0428  2C2C               	goto	u634
  3324  0429                     u620:
  3325  0429  1283               	bcf	3,5	;RP0=0, select bank0
  3326  042A  1303               	bcf	3,6	;RP1=0, select bank0
  3327  042B  1287               	bcf	7,5	;volatile
  3328  042C                     u634:
  3329  042C                     l1302:
  3330                           
  3331                           ;./lcd.h: 64:   PORTBbits.RB4 = n & 0x01;
  3332  042C  084D               	movf	LCD_Write_Nibble@n,w
  3333  042D  3901               	andlw	1
  3334  042E  00CB               	movwf	??_LCD_Write_Nibble
  3335  042F  0ECB               	swapf	??_LCD_Write_Nibble,f
  3336  0430  0806               	movf	6,w	;volatile
  3337  0431  064B               	xorwf	??_LCD_Write_Nibble,w
  3338  0432  39EF               	andlw	-17
  3339  0433  064B               	xorwf	??_LCD_Write_Nibble,w
  3340  0434  0086               	movwf	6	;volatile
  3341                           
  3342                           ;./lcd.h: 65:   PORTBbits.RB5 = (n >> 1) & 0x01;
  3343  0435  084D               	movf	LCD_Write_Nibble@n,w
  3344  0436  00CB               	movwf	??_LCD_Write_Nibble
  3345  0437  1003               	clrc
  3346  0438  0C4B               	rrf	??_LCD_Write_Nibble,w
  3347  0439  3901               	andlw	1
  3348  043A  00CC               	movwf	??_LCD_Write_Nibble+1
  3349  043B  0ECC               	swapf	??_LCD_Write_Nibble+1,f
  3350  043C  0DCC               	rlf	??_LCD_Write_Nibble+1,f
  3351  043D  0806               	movf	6,w	;volatile
  3352  043E  064C               	xorwf	??_LCD_Write_Nibble+1,w
  3353  043F  39DF               	andlw	-33
  3354  0440  064C               	xorwf	??_LCD_Write_Nibble+1,w
  3355  0441  0086               	movwf	6	;volatile
  3356                           
  3357                           ;./lcd.h: 66:   PORTBbits.RB6 = (n >> 2) & 0x01;
  3358  0442  084D               	movf	LCD_Write_Nibble@n,w
  3359  0443  00CB               	movwf	??_LCD_Write_Nibble
  3360  0444  3002               	movlw	2
  3361  0445                     u645:
  3362  0445  1003               	clrc
  3363  0446  0CCB               	rrf	??_LCD_Write_Nibble,f
  3364  0447  3EFF               	addlw	-1
  3365  0448  1D03               	skipz
  3366  0449  2C45               	goto	u645
  3367  044A  084B               	movf	??_LCD_Write_Nibble,w
  3368  044B  3901               	andlw	1
  3369  044C  00CC               	movwf	??_LCD_Write_Nibble+1
  3370  044D  0ECC               	swapf	??_LCD_Write_Nibble+1,f
  3371  044E  0DCC               	rlf	??_LCD_Write_Nibble+1,f
  3372  044F  0DCC               	rlf	??_LCD_Write_Nibble+1,f
  3373  0450  0806               	movf	6,w	;volatile
  3374  0451  064C               	xorwf	??_LCD_Write_Nibble+1,w
  3375  0452  39BF               	andlw	-65
  3376  0453  064C               	xorwf	??_LCD_Write_Nibble+1,w
  3377  0454  0086               	movwf	6	;volatile
  3378                           
  3379                           ;./lcd.h: 67:   PORTBbits.RB7 = (n >> 3) & 0x01;
  3380  0455  084D               	movf	LCD_Write_Nibble@n,w
  3381  0456  00CB               	movwf	??_LCD_Write_Nibble
  3382  0457  3003               	movlw	3
  3383  0458                     u655:
  3384  0458  1003               	clrc
  3385  0459  0CCB               	rrf	??_LCD_Write_Nibble,f
  3386  045A  3EFF               	addlw	-1
  3387  045B  1D03               	skipz
  3388  045C  2C58               	goto	u655
  3389  045D  084B               	movf	??_LCD_Write_Nibble,w
  3390  045E  3901               	andlw	1
  3391  045F  00CC               	movwf	??_LCD_Write_Nibble+1
  3392  0460  0CCC               	rrf	??_LCD_Write_Nibble+1,f
  3393  0461  0CCC               	rrf	??_LCD_Write_Nibble+1,f
  3394  0462  0806               	movf	6,w	;volatile
  3395  0463  064C               	xorwf	??_LCD_Write_Nibble+1,w
  3396  0464  397F               	andlw	-129
  3397  0465  064C               	xorwf	??_LCD_Write_Nibble+1,w
  3398  0466  0086               	movwf	6	;volatile
  3399  0467                     l1304:
  3400                           
  3401                           ;./lcd.h: 70:   PORTCbits.RC7 = 0;
  3402  0467  1387               	bcf	7,7	;volatile
  3403  0468                     l1306:
  3404                           
  3405                           ;./lcd.h: 71:   _delay((unsigned long)((1)*(32000000/4000000.0)));
  3406  0468  2C69               	nop2	;2 cycle nop
  3407  0469  2C6A               	nop2	;2 cycle nop
  3408  046A  2C6B               	nop2	;2 cycle nop
  3409  046B  2C6C               	nop2	;2 cycle nop
  3410  046C                     l1308:
  3411                           
  3412                           ;./lcd.h: 72:   PORTCbits.RC7 = 1;
  3413  046C  1283               	bcf	3,5	;RP0=0, select bank0
  3414  046D  1303               	bcf	3,6	;RP1=0, select bank0
  3415  046E  1787               	bsf	7,7	;volatile
  3416  046F                     l1310:
  3417                           
  3418                           ;./lcd.h: 73:   _delay((unsigned long)((1)*(32000000/4000000.0)));
  3419  046F  2C70               	nop2	;2 cycle nop
  3420  0470  2C71               	nop2	;2 cycle nop
  3421  0471  2C72               	nop2	;2 cycle nop
  3422  0472  2C73               	nop2	;2 cycle nop
  3423  0473                     l1312:
  3424                           
  3425                           ;./lcd.h: 74:   PORTCbits.RC7 = 0;
  3426  0473  1283               	bcf	3,5	;RP0=0, select bank0
  3427  0474  1303               	bcf	3,6	;RP1=0, select bank0
  3428  0475  1387               	bcf	7,7	;volatile
  3429  0476                     l1314:
  3430                           
  3431                           ;./lcd.h: 75:   _delay((unsigned long)((100)*(32000000/4000000.0)));
  3432  0476  309F               	movlw	159
  3433  0477  1283               	bcf	3,5	;RP0=0, select bank0
  3434  0478  1303               	bcf	3,6	;RP1=0, select bank0
  3435  0479  00CB               	movwf	??_LCD_Write_Nibble
  3436  047A                     u1447:
  3437  047A  2C7B               	nop2
  3438  047B  0BCB               	decfsz	??_LCD_Write_Nibble,f
  3439  047C  2C7A               	goto	u1447
  3440  047D  2C7E               	nop2
  3441  047E  0000               	nop
  3442  047F                     l89:
  3443  047F  0008               	return
  3444  0480                     __end_of_LCD_Write_Nibble:
  3445  007E                     btemp	set	126	;btemp
  3446  007E                     wtemp0	set	126
  3447                           
  3448                           	psect	config
  3449                           
  3450                           ;Config register CONFIG @ 0x2007
  3451                           ;	Oscillator Selection bits
  3452                           ;	FOSC = XT, XT oscillator
  3453                           ;	Watchdog Timer Enable bit
  3454                           ;	WDTE = OFF, WDT disabled
  3455                           ;	Power-up Timer Enable bit
  3456                           ;	PWRTE = OFF, PWRT disabled
  3457                           ;	FLASH Program Memory Code Protection bits
  3458                           ;	CP = OFF, Code protection off
  3459                           ;	Brown-out Reset Enable bit
  3460                           ;	BOREN = OFF, BOR disabled
  3461                           ;	Low Voltage In-Circuit Serial Programming Enable bit
  3462                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3463                           ;	Data EE Memory Code Protection
  3464                           ;	CPD = OFF, Code Protection off
  3465                           ;	FLASH Program Memory Write Enable
  3466                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
  3467                           ;	In-Circuit Debugger Mode bit
  3468                           ;	DEBUG = 0x1, unprogrammed default
  3469  2007                     	org	8199
  3470  2007  3D39               	dw	15673

Data Sizes:
    Strings     53
    Constant    0
    Data        43
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94     21      73
    BANK1            94      0       0

Pointer List with Targets:

    LCD_Print@LCD_Str	PTR unsigned char  size(2) Largest target is 41
		 -> M(BANK0[41]), STR_11(CODE[4]), STR_10(CODE[5]), STR_9(CODE[3]), 
		 -> STR_8(CODE[6]), STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[5]), 
		 -> STR_4(CODE[6]), STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_inicio_presentacion
    _keypad_getkey->_keypad_readkey
    _inicio_presentacion->_LCD_Goto
    _LCD_Goto->_LCD_Cmd
    _imprimir_valor_leds->_LCD_Print
    _evaluar_dato->_LCD_Print
    _LCD_Print->_LCD_Write_Nibble
    _enviar_datos->_Canal0
    _LCD_PutC->_LCD_Write_Nibble
    _LCD_Begin->_LCD_Cmd
    _LCD_Cmd->_LCD_Write_Nibble

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    6595
                                             15 BANK0      6     6      0
                          _LCD_Begin
                            _LCD_Cmd
                           _LCD_Goto
                          _LCD_Print
                           _LCD_PutC
                       _enviar_datos
                _imprimir_valor_leds
                    _iniciar_puertos
                _inicio_presentacion
                      _keypad_getkey
                _set_configuraciones
 ---------------------------------------------------------------------------------
 (1) _set_configuraciones                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keypad_getkey                                        2     2      0      46
                                              1 BANK0      2     2      0
                     _keypad_readkey
 ---------------------------------------------------------------------------------
 (2) _keypad_readkey                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicio_presentacion                                  5     5      0    1870
                                             10 BANK0      5     5      0
                            _LCD_Cmd
                           _LCD_Goto
                          _LCD_Print
 ---------------------------------------------------------------------------------
 (2) _LCD_Goto                                             4     3      1     514
                                              6 BANK0      4     3      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _iniciar_puertos                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _imprimir_valor_leds                                  0     0      0    2290
                          _LCD_Print
                            _Rx_Dato
                            _Tx_Dato
                       _evaluar_dato
 ---------------------------------------------------------------------------------
 (2) _evaluar_dato                                         0     0      0    1134
                          _LCD_Print
 ---------------------------------------------------------------------------------
 (2) _LCD_Print                                            4     2      2    1134
                                              3 BANK0      4     2      2
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (1) _enviar_datos                                         2     2      0      98
                                              4 BANK0      2     2      0
                             _Canal0
                            _Rx_Dato
                            _Tx_Dato
 ---------------------------------------------------------------------------------
 (2) _Tx_Dato                                              1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Rx_Dato                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Canal0                                               4     2      2      76
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_PutC                                             2     2      0     132
                                              3 BANK0      2     2      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            3     3      0     176
                                              6 BANK0      3     3      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0     176
                                              3 BANK0      3     3      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Nibble                                     3     3      0      88
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Begin
     _LCD_Cmd
       _LCD_Write_Nibble
   _LCD_Cmd
   _LCD_Goto
     _LCD_Cmd
   _LCD_Print
     _LCD_Write_Nibble
   _LCD_PutC
     _LCD_Write_Nibble
   _enviar_datos
     _Canal0
     _Rx_Dato
     _Tx_Dato
   _imprimir_valor_leds
     _LCD_Print
     _Rx_Dato
     _Tx_Dato
     _evaluar_dato
       _LCD_Print
   _iniciar_puertos
   _inicio_presentacion
     _LCD_Cmd
     _LCD_Goto
     _LCD_Print
   _keypad_getkey
     _keypad_readkey
   _set_configuraciones

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               5E      0       0       6        0.0%
BITBANK1            5E      0       0       5        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               5E     15      49       4       77.7%
BITBANK0            5E      0       1       3        1.1%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      49       8        0.0%
ABS                  0      0      49       7        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jun 18 00:01:11 2021

                           _M 0022                             _X 0020                             pc 0002  
                          l95 03AF                            l89 047F                            _GO 00FA  
                          _RS 0340                            fsr 0004           _set_configuraciones 0289  
                         l104 03DF                           l113 041E                           l201 032C  
                         l107 0288                           l116 0636                           l140 06A3  
                         l205 02B8                           l141 0691                           l206 02BA  
                         l230 04E6                           l142 0697                           l134 066E  
                         l151 06FB                           l143 069D                           l135 065C  
                         l152 0701                           l136 070E                           l209 0356  
                         l225 0303                           l153 0707                           l145 06D8  
                         l137 0662                           l146 06C6                           l138 0668  
                         l147 06CC                           l163 02DB                           l148 06D2  
                         l181 0260                           l184 0249                           l176 029F  
                         l185 0250                           l186 0252                           l198 07E7  
                         _ECO 0066                           _RA0 0028                           _RA1 0029  
                         _RA2 002A                           _RA4 002C                           _RC0 0038  
                         _RA5 002D                           _RC1 0039                           _RC3 003B  
                         u620 0429                           u700 041E                           u621 0425  
                         u701 041D                           u710 064A                           u711 0649  
                         u800 0683                           u720 064E                           u801 0682  
                         u721 064D                           u634 042C                           u810 0687  
                         u730 0652                           u811 0686                           u731 0651  
                         u900 06C0                           u820 068B                           u740 0656  
                         u645 0445                           u901 06BF                           u821 068A  
                         u741 0655                           u670 039F                           u910 06C4  
                         u830 068F                           u750 065A                           u655 0458  
                         u671 039E                           u911 06C3                           u831 068E  
                         u751 0659                           u680 03A5                           u920 06CA  
                         u840 0695                           u760 0660                           u681 03A4  
                         u665 0389                           u921 06C9                           u841 0694  
                         u761 065F                           u930 06D0                           u850 069B  
                         u770 0666                           u931 06CF                           u851 069A  
                         u771 0665                           u940 06D6                           u860 06A1  
                         u780 066C                           u941 06D5                           u861 06A0  
                         u781 066B                           u950 06E9                           u870 06B4  
                         u790 067F                           u695 03F1                           u951 06E8  
                         u871 06B3                           u791 067E                           u960 06ED  
                         u880 06B8                           u961 06EC                           u881 06B7  
                         u970 06F1                           u890 06BC                           u971 06F0  
                         u891 06BB                           u980 06F5                           u981 06F4  
                         u990 06F9                           u991 06F8              ?_iniciar_puertos 004B  
                         fsr0 0004                           indf 0000               __end_of_LCD_Cmd 03B0  
                        l1300 0422                          l1310 046F                          l1302 042C  
                        l1312 0473                          l1304 0467                          l1320 0398  
                        l1400 0695                          l1314 0476                          l1306 0468  
                        l1322 039F                          l1330 03E5                          l1308 046C  
                        l1324 03A5                          l1316 0385                          l1332 0409  
                        l1500 0766                          l1340 03BA                          l1420 06BC  
                        l1412 06A7                          l1404 069B                          l1318 0386  
                        l1334 040F                          l1326 03E0                          l1510 079F  
                        l1502 076F                          l1342 03C0                          l1422 06C0  
                        l1414 06AE                          l1600 0347                          l1328 03E3  
                        l1520 07DE                          l1512 07AE                          l1504 077E  
                        l1344 03C6                          l1336 03B3                          l1440 06DC  
                        l1432 06D0                          l1424 06C4                          l1416 06B4  
                        l1408 06A1                          l1360 064A                          l1522 02A0  
                        l1514 07B7                          l1506 0787                          l1610 02E6  
                        l1602 02DC                          l1338 03B4                          l1346 03CC  
                        l1450 06F5                          l1442 06E3                          l1418 06B8  
                        l1362 064E                          l1354 0637                          l1540 059B  
                        l1532 0275                          l1524 02A6                          l1516 07C6  
                        l1508 0796                          l1620 02EB                          l1612 02E7  
                        l1604 02E1                          l1460 0705                          l1452 06F9  
                        l1444 06E9                          l1436 06D6                          l1428 06CA  
                        l1380 066C                          l1372 0660                          l1364 0652  
                        l1356 063D                          l1700 0559                          l1550 05CC  
                        l1542 059F                          l1534 0276                          l1526 02B0  
                        l1518 07CF                          l1630 02F0                          l1622 02EC  
                        l1614 02E8                          l1606 02E4                          l1446 06ED  
                        l1390 0683                          l1366 0656                          l1358 0644  
                        l1710 0571                          l1702 055B                          l1560 0614  
                        l1552 05DB                          l1544 05AE                          l1536 057A  
                        l1528 02B3                          l1472 0256                          l1640 0302  
                        l1632 02F1                          l1624 02ED                          l1616 02E9  
                        l1608 02E5                          l1464 070B                          l1456 06FF  
                        l1448 06F1                          l1392 0687                          l1384 0672  
                        l1376 0666                          l1368 065A                          l1712 0574  
                        l1704 0560                          l1562 0623                          l1554 05EA  
                        l1546 05B9                          l1538 058D                          l1482 0251  
                        l1474 0257                          l1490 0727                          l1634 02F5  
                        l1626 02EE                          l1618 02EA                          l1642 0480  
                        l1394 068B                          l1386 0679                          l1570 02D0  
                        l1706 0564                          l1556 05FD                          l1548 05C8  
                        l1476 0259                          l1492 0736                          l1636 02F9  
                        l1628 02EF                          l1660 04BE                          l1644 0488  
                        l1468 070D                          l1396 068F                          l1388 067F  
                        l1572 02D8                          l1564 02BB                          l1580 0298  
                        l1708 0568                          l1558 0601                          l1494 073F  
                        l1486 070F                          l1590 0318                          l1638 02FD  
                        l1662 04CB                          l1654 04A4                          l1646 0491  
                        l1566 02C2                          l1582 029B                          l1670 04EB  
                        l1496 074E                          l1488 071E                          l1592 0322  
                        l1584 0304                          l1664 04DA                          l1656 04A8  
                        l1648 04A0                          l1568 02CA                          l1576 0289  
                        l1680 0505                          l1672 04EE                          l1498 0757  
                        l1594 0329                          l1586 030A                          l1746 03D4  
                        l1666 04DE                          l1658 04B6                          l1578 0291  
                        l1690 0538                          l1682 050D                          l1674 04F1  
                        l1596 032D                          l1588 030E                          l1692 053E  
                        l1684 051B                          l1676 04F4                          l1668 04E7  
                        l1598 033C                          l1694 0542                          l1686 052A  
                        l1678 04F7                          l1696 054C                          l1688 0532  
                        l1698 0553             ?_LCD_Write_Nibble 004B                          _ADIF 0066  
                        _ADON 00F8                          _CHS0 00FB                          _CHS1 00FC  
                        _CHS2 00FD                          STR_1 0044                          STR_2 0030  
                        STR_3 0018                          STR_4 002A                          STR_5 003B  
                        STR_6 0012                          STR_7 001E                          STR_8 0024  
                        STR_9 003D  __size_of_imprimir_valor_leds 0029                          u1000 06FF  
                        u1001 06FE                          u1010 0705                          u1011 0704  
                        u1100 0796                          u1020 070B                          u1101 0795  
                        u1021 070A                          u1030 025F                          u1110 07AE  
                        u1031 025E                          u1111 07AD                          u1040 024F  
                        u1120 07C6                          u1200 0538                          u1041 024E  
                        u1121 07C5                          u1105 0792                          u1201 0537  
                        u1130 07DE                          u1050 071E                          u1210 053E  
                        u1131 07DD                          u1115 07AA                          u1051 071D  
                        u1211 053D                          u1140 02B7                          u1060 0736  
                        u1220 0559                          u1141 02B6                          u1125 07C2  
                        u1061 0735                          u1221 0558                          u1070 074E  
                        u1135 07DA                          u1071 074D                          u1055 071A  
                        u1080 0766                          u1160 02D0                          u1081 0765  
                        u1065 0732                          u1161 02CF                          u1090 077E  
                        u1170 02D8                          u1155 0279                          u1091 077D  
                        u1075 074A                          u1307 04B0                          u1171 02D7  
                        u1180 04CB                          u1085 0762                          u1317 04D3  
                        u1181 04CA                          u1237 04FF                          u1190 052A  
                        u1407 0609                          u1327 02AC                          u1095 077A  
                        u1191 0529                          u1247 0515                          u1417 061C  
                        u1337 0595                          u1185 04C7                          u1257 0641  
                        u1427 062F                          u1347 05A5                          u1267 0676  
                        u1195 0526                          u1437 03AB                          u1357 05B4  
                        u1277 06AB                          u1447 047A                          u1367 05C3  
                        u1287 06E0                          u1377 05D2                          u1297 0499  
                        u1387 05E3                          u1397 05F6                          _RCIE 0465  
                        _TMR0 0001                          _TXIE 0464          ?_set_configuraciones 004B  
          ??_LCD_Write_Nibble 004B                          _main 04E7            __size_of_LCD_Begin 00BD  
                        btemp 007E            __size_of_LCD_Print 003F                          start 0000  
                 LCD_Goto@col 0054                   LCD_Goto@row 0051              __end_of_LCD_Goto 03E0  
             __end_of_Rx_Dato 0253              __end_of_LCD_PutC 0289               __end_of_Tx_Dato 0261  
                       ?_main 004B                         _ADRES 0064                         STR_10 0036  
                       STR_11 0040                         _RCREG 001A                         _SPBRG 0099  
                       _PORTA 0005                         _PORTB 0006                         _PORTC 0007  
                       _TXREG 0019              ??_keypad_readkey 004B                         main@c 005F  
                       main@i 005D                         pclath 000A         ??_set_configuraciones 0000  
               ?_enviar_datos 004B                         status 0003                         wtemp0 007E  
               ?_evaluar_dato 004B               __initialization 07E8                  __end_of_main 057A  
                      ??_main 005A             __end_of_LCD_Begin 0637                     ??_LCD_Cmd 004E  
           __end_of_LCD_Print 041F                        _ADCON0 001F                        _ADCON1 009F  
                      _ADRESH 001E                        _ADRESL 009E                ??_enviar_datos 004F  
              ??_evaluar_dato 0000                        _SSPADD 0093                        _SSPCON 0014  
                      _Canal0 02A0                     ??_Rx_Dato 0000                     ??_Tx_Dato 0000  
                      _number 0060       __end_of__initialization 07FD                     ?_LCD_Goto 0051  
                   ?_LCD_PutC 004B        __size_of_keypad_getkey 0021  __size_of_inicio_presentacion 0067  
              __pcstackCOMMON 0000                  __pidataBANK0 0357           _imprimir_valor_leds 0304  
              LCD_Cmd@Command 0050          ?_imprimir_valor_leds 004B                    __pbssBANK0 0060  
                  ??_LCD_Goto 0052                    ??_LCD_PutC 004E                       ?_Canal0 004B  
                  __pmaintext 04E7     __size_of_LCD_Write_Nibble 0061                       Canal0@z 004B  
        __end_of_enviar_datos 0357          __end_of_evaluar_dato 07E8                 _keypad_getkey 02BB  
                     _LCD_Cmd 0382                       _SSPCON2 0091         ??_imprimir_valor_leds 0000  
                     _SSPSTAT 0094                    __stringtab 0002      __size_of_iniciar_puertos 0028  
             __size_of_Canal0 001B                       _Rx_Dato 0249                       _Tx_Dato 0253  
            LCD_PutC@LCD_Char 004F                       __ptext1 0289                       __ptext2 02BB  
                     __ptext3 0637                       __ptext4 0480                       __ptext5 03B0  
                     __ptext6 02DC                       __ptext7 0304                       __ptext8 070F  
                     __ptext9 03E0                ?_keypad_getkey 004B   __end_of_set_configuraciones 02A0  
                   _LCD_Begin 057A                     _LCD_Print 03E0          end_of_initialization 07FD  
           LCD_Write_Nibble@n 004D                     _PORTBbits 0006                     _PORTCbits 0007  
                   _TRISAbits 0085                     _TRISBbits 0086                     _TRISCbits 0087  
                  ?_LCD_Begin 004B           _inicio_presentacion 0480                    ?_LCD_Print 004E  
                   _TXSTAbits 0098       __size_of_keypad_readkey 00D8             __size_of_LCD_Goto 0030  
              __end_of_Canal0 02BB             __size_of_LCD_PutC 0017             ??_iniciar_puertos 0000  
        ?_inicio_presentacion 004B         __size_of_enviar_datos 002A              _LCD_Write_Nibble 041F  
       __size_of_evaluar_dato 00D9                    LCD_Print@i 0051               ??_keypad_getkey 004C  
               __pbitbssBANK0 0340           start_initialization 07E8          inicio_presentacion@i 0058  
                _enviar_datos 032D                      ??_Canal0 004D                  _evaluar_dato 070F  
       ??_inicio_presentacion 0055                    init_fetch0 0261                   __pdataBANK0 0020  
                    ?_LCD_Cmd 004B                     ___latbits 0001                 __pcstackBANK0 004B  
                 ??_LCD_Begin 0051                   ??_LCD_Print 0050                      ?_Rx_Dato 004B  
                    ?_Tx_Dato 004B              LCD_Print@LCD_Str 004E                     __pstrings 0002  
 __end_of_imprimir_valor_leds 032D                      _LCD_Goto 03B0                      _LCD_PutC 0272  
              _keypad_readkey 0637                      _PIR1bits 000C                   __stringbase 0011  
            __size_of_LCD_Cmd 002E      __end_of_LCD_Write_Nibble 0480               _iniciar_puertos 02DC  
      __end_of_keypad_readkey 070F  __size_of_set_configuraciones 0017                      Tx_Dato@X 004B  
            __size_of_Rx_Dato 000A              __size_of_Tx_Dato 000E            __end_of__stringtab 0012  
                    __ptext10 032D                      __ptext11 0253                      __ptext12 0249  
                    __ptext13 02A0                      __ptext14 0272                      __ptext15 057A  
                    __ptext16 0382                      __ptext17 041F               ?_keypad_readkey 004B  
               __size_of_main 0093         __end_of_keypad_getkey 02DC       __end_of_iniciar_puertos 0304  
            keypad_getkey@key 004D                      init_ram0 0265   __end_of_inicio_presentacion 04E7  
                   stringcode 000C                    _OPTION_REG 0081                      stringdir 000C  
                    stringtab 0002  
