

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jun 17 21:42:02 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F873
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.20
    35                           ; Generated 12/02/2020 GMT
    36                           ; 
    37                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F873 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  018C                     	;# 
   121  018D                     	;# 
   122  0000                     	;# 
   123  0001                     	;# 
   124  0002                     	;# 
   125  0003                     	;# 
   126  0004                     	;# 
   127  0005                     	;# 
   128  0006                     	;# 
   129  0007                     	;# 
   130  000A                     	;# 
   131  000B                     	;# 
   132  000C                     	;# 
   133  000D                     	;# 
   134  000E                     	;# 
   135  000E                     	;# 
   136  000F                     	;# 
   137  0010                     	;# 
   138  0011                     	;# 
   139  0012                     	;# 
   140  0013                     	;# 
   141  0014                     	;# 
   142  0015                     	;# 
   143  0015                     	;# 
   144  0016                     	;# 
   145  0017                     	;# 
   146  0018                     	;# 
   147  0019                     	;# 
   148  001A                     	;# 
   149  001B                     	;# 
   150  001B                     	;# 
   151  001C                     	;# 
   152  001D                     	;# 
   153  001E                     	;# 
   154  001F                     	;# 
   155  0081                     	;# 
   156  0085                     	;# 
   157  0086                     	;# 
   158  0087                     	;# 
   159  008C                     	;# 
   160  008D                     	;# 
   161  008E                     	;# 
   162  0091                     	;# 
   163  0092                     	;# 
   164  0093                     	;# 
   165  0094                     	;# 
   166  0098                     	;# 
   167  0099                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  010C                     	;# 
   171  010D                     	;# 
   172  010E                     	;# 
   173  010F                     	;# 
   174  018C                     	;# 
   175  018D                     	;# 
   176                           
   177                           	psect	idataBANK0
   178  0357                     __pidataBANK0:
   179                           
   180                           ;initializer for _X
   181  0357  342F               	retlw	47
   182  0358  3400               	retlw	0
   183                           
   184                           ;initializer for _M
   185  0359  3445               	retlw	69
   186  035A  346C               	retlw	108
   187  035B  3420               	retlw	32
   188  035C  3441               	retlw	65
   189  035D  3444               	retlw	68
   190  035E  3443               	retlw	67
   191  035F  3420               	retlw	32
   192  0360  3479               	retlw	121
   193  0361  3420               	retlw	32
   194  0362  3465               	retlw	101
   195  0363  346C               	retlw	108
   196  0364  3420               	retlw	32
   197  0365  3455               	retlw	85
   198  0366  3441               	retlw	65
   199  0367  3452               	retlw	82
   200  0368  3454               	retlw	84
   201  0369  3420               	retlw	32
   202  036A  344A               	retlw	74
   203  036B  346F               	retlw	111
   204  036C  3473               	retlw	115
   205  036D  3465               	retlw	101
   206  036E  3420               	retlw	32
   207  036F  3452               	retlw	82
   208  0370  3464               	retlw	100
   209  0371  3467               	retlw	103
   210  0372  347A               	retlw	122
   211  0373  3420               	retlw	32
   212  0374  3479               	retlw	121
   213  0375  3420               	retlw	32
   214  0376  344B               	retlw	75
   215  0377  3461               	retlw	97
   216  0378  3472               	retlw	114
   217  0379  346C               	retlw	108
   218  037A  3461               	retlw	97
   219  037B  3420               	retlw	32
   220  037C  3452               	retlw	82
   221  037D  3465               	retlw	101
   222  037E  3479               	retlw	121
   223  037F  3465               	retlw	101
   224  0380  3473               	retlw	115
   225  0381  3400               	retlw	0
   226  0014                     _SSPCON	set	20
   227  0007                     _PORTC	set	7
   228  0006                     _PORTB	set	6
   229  0005                     _PORTA	set	5
   230  001E                     _ADRESH	set	30
   231  001A                     _RCREG	set	26
   232  0019                     _TXREG	set	25
   233  000C                     _PIR1bits	set	12
   234  0018                     _RCSTAbits	set	24
   235  0018                     _RCSTA	set	24
   236  0001                     _TMR0	set	1
   237  001F                     _ADCON0	set	31
   238  0006                     _PORTBbits	set	6
   239  0007                     _PORTCbits	set	7
   240  00FA                     _GO	set	250
   241  00F8                     _ADON	set	248
   242  00FB                     _CHS0	set	251
   243  00FC                     _CHS1	set	252
   244  00FD                     _CHS2	set	253
   245  0066                     _ADIF	set	102
   246  003B                     _RC3	set	59
   247  002A                     _RA2	set	42
   248  0029                     _RA1	set	41
   249  0028                     _RA0	set	40
   250  0039                     _RC1	set	57
   251  0038                     _RC0	set	56
   252  002D                     _RA5	set	45
   253  002C                     _RA4	set	44
   254  0094                     _SSPSTAT	set	148
   255  0093                     _SSPADD	set	147
   256  0091                     _SSPCON2	set	145
   257  0085                     _TRISAbits	set	133
   258  009E                     _ADRESL	set	158
   259  0099                     _SPBRG	set	153
   260  0098                     _TXSTAbits	set	152
   261  0098                     _TXSTA	set	152
   262  0081                     _OPTION_REG	set	129
   263  009F                     _ADCON1	set	159
   264  0086                     _TRISBbits	set	134
   265  0087                     _TRISCbits	set	135
   266  0465                     _RCIE	set	1125
   267  0464                     _TXIE	set	1124
   268                           
   269                           	psect	strings
   270  0002                     __pstrings:
   271  0002                     stringtab:
   272  0002                     __stringtab:
   273                           
   274                           ;	String table - string pointers are 1 byte each
   275  0002  1BFF               	btfsc	btemp+1,7
   276  0003  280C               	ljmp	stringcode
   277  0004  1383               	bcf	3,7
   278  0005  187F               	btfsc	btemp+1,0
   279  0006  1783               	bsf	3,7
   280  0007  0800               	movf	0,w
   281  0008  0A84               	incf	4,f
   282  0009  1903               	skipnz
   283  000A  0AFF               	incf	btemp+1,f
   284  000B  0008               	return
   285  000C                     stringcode:
   286  000C                     stringdir:
   287  000C  3000               	movlw	high stringdir
   288  000D  008A               	movwf	10
   289  000E  0804               	movf	4,w
   290  000F  0A84               	incf	4,f
   291  0010  0782               	addwf	2,f
   292  0011                     __stringbase:
   293  0011  3400               	retlw	0
   294  0012                     __end_of__stringtab:
   295  0012                     STR_6:
   296  0012  3433               	retlw	51	;'3'
   297  0013  342E               	retlw	46	;'.'
   298  0014  3431               	retlw	49	;'1'
   299  0015  3432               	retlw	50	;'2'
   300  0016  3456               	retlw	86	;'V'
   301  0017  3400               	retlw	0
   302  0018                     STR_3:
   303  0018  3431               	retlw	49	;'1'
   304  0019  342E               	retlw	46	;'.'
   305  001A  3432               	retlw	50	;'2'
   306  001B  3435               	retlw	53	;'5'
   307  001C  3456               	retlw	86	;'V'
   308  001D  3400               	retlw	0
   309  001E                     STR_7:
   310  001E  3433               	retlw	51	;'3'
   311  001F  342E               	retlw	46	;'.'
   312  0020  3437               	retlw	55	;'7'
   313  0021  3435               	retlw	53	;'5'
   314  0022  3456               	retlw	86	;'V'
   315  0023  3400               	retlw	0
   316  0024                     STR_8:
   317  0024  3434               	retlw	52	;'4'
   318  0025  342E               	retlw	46	;'.'
   319  0026  3433               	retlw	51	;'3'
   320  0027  3437               	retlw	55	;'7'
   321  0028  3456               	retlw	86	;'V'
   322  0029  3400               	retlw	0
   323  002A                     STR_4:
   324  002A  3431               	retlw	49	;'1'
   325  002B  342E               	retlw	46	;'.'
   326  002C  3439               	retlw	57	;'9'
   327  002D  3437               	retlw	55	;'7'
   328  002E  3456               	retlw	86	;'V'
   329  002F  3400               	retlw	0
   330  0030                     STR_2:
   331  0030  3436               	retlw	54	;'6'
   332  0031  3432               	retlw	50	;'2'
   333  0032  3435               	retlw	53	;'5'
   334  0033  346D               	retlw	109	;'m'
   335  0034  3476               	retlw	118	;'v'
   336  0035  3400               	retlw	0
   337  0036                     STR_10:
   338  0036  3452               	retlw	82	;'R'
   339  0037  3465               	retlw	101	;'e'
   340  0038  3463               	retlw	99	;'c'
   341  0039  3420               	retlw	32	;' '
   342  003A  3400               	retlw	0
   343  003B                     STR_5:
   344  003B  3432               	retlw	50	;'2'
   345  003C  342E               	retlw	46	;'.'
   346  003D  3435               	retlw	53	;'5'
   347  003E  3456               	retlw	86	;'V'
   348  003F  3400               	retlw	0
   349  0040                     STR_11:
   350  0040  3445               	retlw	69	;'E'
   351  0041  346E               	retlw	110	;'n'
   352  0042  3476               	retlw	118	;'v'
   353  0043  3400               	retlw	0
   354  0044                     STR_1:
   355  0044  3430               	retlw	48	;'0'
   356  0045  3456               	retlw	86	;'V'
   357  0046  3400               	retlw	0
   358  003D                     
   359                           	psect	cinit
   360  07E8                     start_initialization:	
   361                           ; #config settings
   362                           
   363  07E8                     __initialization:
   364                           
   365                           ; Initialize objects allocated to BANK0
   366  07E8  1383               	bcf	3,7	;select IRP bank0
   367  07E9  304B               	movlw	low (__pdataBANK0+43)
   368  07EA  00FD               	movwf	btemp+-1
   369  07EB  3003               	movlw	high __pidataBANK0
   370  07EC  00FE               	movwf	btemp
   371  07ED  3057               	movlw	low __pidataBANK0
   372  07EE  00FF               	movwf	btemp+1
   373  07EF  3020               	movlw	low __pdataBANK0
   374  07F0  0084               	movwf	4
   375  07F1  118A  2256  118A   	fcall	init_ram0
   376                           
   377                           ; Clear objects allocated to BANK0
   378  07F4  01E0               	clrf	__pbssBANK0& (0+127)
   379  07F5  01E1               	clrf	(__pbssBANK0+1)& (0+127)
   380  07F6  01E2               	clrf	(__pbssBANK0+2)& (0+127)
   381  07F7  01E3               	clrf	(__pbssBANK0+3)& (0+127)
   382  07F8  01E4               	clrf	(__pbssBANK0+4)& (0+127)
   383  07F9  01E5               	clrf	(__pbssBANK0+5)& (0+127)
   384  07FA  01E6               	clrf	(__pbssBANK0+6)& (0+127)
   385  07FB  01E7               	clrf	(__pbssBANK0+7)& (0+127)
   386                           
   387                           ; Clear objects allocated to BITBANK0
   388  07FC  01E8               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   389  07FD                     end_of_initialization:	
   390                           ;End of C runtime variable initialization code
   391                           
   392  07FD                     __end_of__initialization:
   393  07FD  0183               	clrf	3
   394  07FE  118A  2CE7         	ljmp	_main	;jump to C main() function
   395                           
   396                           	psect	bitbssBANK0
   397  0340                     __pbitbssBANK0:
   398  0340                     _RS:
   399  0340                     	ds	1
   400                           
   401                           	psect	bssBANK0
   402  0060                     __pbssBANK0:
   403  0060                     _number:
   404  0060                     	ds	4
   405  0064                     _ADRES:
   406  0064                     	ds	2
   407  0066                     _ECO:
   408  0066                     	ds	2
   409                           
   410                           	psect	dataBANK0
   411  0020                     __pdataBANK0:
   412  0020                     _X:
   413  0020                     	ds	2
   414  0022                     _M:
   415  0022                     	ds	41
   416                           
   417                           	psect	inittext
   418  0252                     init_fetch0:	
   419                           ;	Called with low address in FSR and high address in W
   420                           
   421  0252  087E               	movf	btemp,w
   422  0253  008A               	movwf	10
   423  0254  087F               	movf	btemp+1,w
   424  0255  0082               	movwf	2
   425  0256                     init_ram0:	
   426                           ;Called with:
   427                           ;	high address of idata address in btemp 
   428                           ;	low address of idata address in btemp+1 
   429                           ;	low address of data in FSR
   430                           ;	high address + 1 of data in btemp-1
   431                           
   432  0256  118A  2252  118A   	fcall	init_fetch0
   433  0259  0080               	movwf	0
   434  025A  0A84               	incf	4,f
   435  025B  0804               	movf	4,w
   436  025C  067D               	xorwf	btemp+-1,w
   437  025D  1903               	btfsc	3,2
   438  025E  3400               	retlw	0
   439  025F  0AFF               	incf	btemp+1,f
   440  0260  1903               	btfsc	3,2
   441  0261  0AFE               	incf	btemp,f
   442  0262  2A56               	goto	init_ram0
   443                           
   444                           	psect	cstackCOMMON
   445  0000                     __pcstackCOMMON:
   446  0000                     ??_iniciar_puertos:
   447  0000                     ??_set_configuraciones:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0000                     ??_Tx_Dato:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0000                     ??_Rx_Dato:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0000                     ??_evaluar_dato:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0000                     ??_imprimir_valor_leds:	
   460                           ; 1 bytes @ 0x0
   461                           
   462                           
   463                           	psect	cstackBANK0
   464  004B                     __pcstackBANK0:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  004B                     ?_iniciar_puertos:
   468  004B                     ?_inicio_presentacion:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  004B                     ?_LCD_Write_Nibble:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  004B                     ??_LCD_Write_Nibble:	
   475                           ; 1 bytes @ 0x0
   476                           
   477  004B                     ?_LCD_Cmd:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  004B                     ?_LCD_PutC:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  004B                     ?_LCD_Begin:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  004B                     ?_keypad_readkey:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  004B                     ??_keypad_readkey:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  004B                     ?_keypad_getkey:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  004B                     ?_set_configuraciones:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  004B                     ?_Tx_Dato:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  004B                     ?_Rx_Dato:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  004B                     ?_evaluar_dato:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  004B                     ?_imprimir_valor_leds:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  004B                     ?_Canal0:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  004B                     ?_enviar_datos:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  004B                     ?_main:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  004B                     Tx_Dato@X:	
   520                           ; 2 bytes @ 0x0
   521                           
   522  004B                     Canal0@z:	
   523                           ; 1 bytes @ 0x0
   524                           
   525                           
   526                           ; 2 bytes @ 0x0
   527  004B                     	ds	1
   528  004C                     ??_keypad_getkey:
   529                           
   530                           ; 1 bytes @ 0x1
   531  004C                     	ds	1
   532  004D                     ??_Canal0:
   533  004D                     LCD_Write_Nibble@n:	
   534                           ; 1 bytes @ 0x2
   535                           
   536  004D                     keypad_getkey@key:	
   537                           ; 1 bytes @ 0x2
   538                           
   539                           
   540                           ; 1 bytes @ 0x2
   541  004D                     	ds	1
   542  004E                     ??_LCD_Cmd:
   543  004E                     ??_LCD_PutC:	
   544                           ; 1 bytes @ 0x3
   545                           
   546  004E                     ?_LCD_Print:	
   547                           ; 1 bytes @ 0x3
   548                           
   549  004E                     LCD_Print@LCD_Str:	
   550                           ; 1 bytes @ 0x3
   551                           
   552                           
   553                           ; 2 bytes @ 0x3
   554  004E                     	ds	1
   555  004F                     ??_enviar_datos:
   556  004F                     LCD_PutC@LCD_Char:	
   557                           ; 1 bytes @ 0x4
   558                           
   559                           
   560                           ; 1 bytes @ 0x4
   561  004F                     	ds	1
   562  0050                     ??_LCD_Print:
   563  0050                     LCD_Cmd@Command:	
   564                           ; 1 bytes @ 0x5
   565                           
   566                           
   567                           ; 1 bytes @ 0x5
   568  0050                     	ds	1
   569  0051                     ?_LCD_Goto:
   570  0051                     ??_LCD_Begin:	
   571                           ; 1 bytes @ 0x6
   572                           
   573  0051                     LCD_Goto@row:	
   574                           ; 1 bytes @ 0x6
   575                           
   576  0051                     LCD_Print@i:	
   577                           ; 1 bytes @ 0x6
   578                           
   579                           
   580                           ; 1 bytes @ 0x6
   581  0051                     	ds	1
   582  0052                     ??_LCD_Goto:
   583                           
   584                           ; 1 bytes @ 0x7
   585  0052                     	ds	2
   586  0054                     LCD_Goto@col:
   587                           
   588                           ; 1 bytes @ 0x9
   589  0054                     	ds	1
   590  0055                     ??_inicio_presentacion:
   591                           
   592                           ; 1 bytes @ 0xA
   593  0055                     	ds	3
   594  0058                     inicio_presentacion@i:
   595                           
   596                           ; 2 bytes @ 0xD
   597  0058                     	ds	2
   598  005A                     ??_main:
   599                           
   600                           ; 1 bytes @ 0xF
   601  005A                     	ds	3
   602  005D                     main@i:
   603                           
   604                           ; 2 bytes @ 0x12
   605  005D                     	ds	2
   606  005F                     main@c:
   607                           
   608                           ; 1 bytes @ 0x14
   609  005F                     	ds	1
   610                           
   611                           	psect	maintext
   612  04E7                     __pmaintext:	
   613 ;;
   614 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   615 ;;
   616 ;; *************** function _main *****************
   617 ;; Defined at:
   618 ;;		line 155 in file "main.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;  c               1   20[BANK0 ] unsigned char 
   623 ;;  i               2   18[BANK0 ] int 
   624 ;; Return value:  Size  Location     Type
   625 ;;                  2  219[None  ] int 
   626 ;; Registers used:
   627 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   628 ;; Tracked objects:
   629 ;;		On entry : B00/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMMON   BANK0   BANK1
   633 ;;      Params:         0       0       0
   634 ;;      Locals:         0       3       0
   635 ;;      Temps:          0       3       0
   636 ;;      Totals:         0       6       0
   637 ;;Total ram usage:        6 bytes
   638 ;; Hardware stack levels required when called: 4
   639 ;; This function calls:
   640 ;;		_LCD_Begin
   641 ;;		_LCD_Cmd
   642 ;;		_LCD_Goto
   643 ;;		_LCD_Print
   644 ;;		_LCD_PutC
   645 ;;		_enviar_datos
   646 ;;		_imprimir_valor_leds
   647 ;;		_iniciar_puertos
   648 ;;		_inicio_presentacion
   649 ;;		_keypad_getkey
   650 ;;		_set_configuraciones
   651 ;; This function is called by:
   652 ;;		Startup code after reset
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           
   657                           ;psect for function _main
   658  04E7                     _main:
   659  04E7                     l1702:	
   660                           ;incstack = 0
   661                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   662                           
   663                           
   664                           ;main.c: 157:     int i=0;
   665  04E7  1283               	bcf	3,5	;RP0=0, select bank0
   666  04E8  1303               	bcf	3,6	;RP1=0, select bank0
   667  04E9  01DD               	clrf	main@i
   668  04EA  01DE               	clrf	main@i+1
   669  04EB                     l1704:
   670                           
   671                           ;main.c: 158:     set_configuraciones();
   672  04EB  118A  22B6  118A   	fcall	_set_configuraciones
   673  04EE                     l1706:
   674                           
   675                           ;main.c: 160:     iniciar_puertos();
   676  04EE  118A  22DC  118A   	fcall	_iniciar_puertos
   677  04F1                     l1708:
   678                           
   679                           ;main.c: 163:     LCD_Begin();
   680  04F1  118A  257A  118A   	fcall	_LCD_Begin
   681  04F4                     l1710:
   682                           
   683                           ;main.c: 164:     inicio_presentacion();
   684  04F4  118A  2480  118A   	fcall	_inicio_presentacion
   685  04F7                     l1712:
   686                           
   687                           ;main.c: 165:     _delay((unsigned long)((500)*(32000000/4000.0)));
   688  04F7  3015               	movlw	21
   689  04F8  1283               	bcf	3,5	;RP0=0, select bank0
   690  04F9  1303               	bcf	3,6	;RP1=0, select bank0
   691  04FA  00DC               	movwf	??_main+2
   692  04FB  304B               	movlw	75
   693  04FC  00DB               	movwf	??_main+1
   694  04FD  30BE               	movlw	190
   695  04FE  00DA               	movwf	??_main
   696  04FF                     u1237:
   697  04FF  0BDA               	decfsz	??_main,f
   698  0500  2CFF               	goto	u1237
   699  0501  0BDB               	decfsz	??_main+1,f
   700  0502  2CFF               	goto	u1237
   701  0503  0BDC               	decfsz	??_main+2,f
   702  0504  2CFF               	goto	u1237
   703  0505                     l1714:
   704                           
   705                           ;main.c: 166:     LCD_Goto(1, 1);
   706  0505  1283               	bcf	3,5	;RP0=0, select bank0
   707  0506  1303               	bcf	3,6	;RP1=0, select bank0
   708  0507  01D1               	clrf	LCD_Goto@row
   709  0508  0AD1               	incf	LCD_Goto@row,f
   710  0509  3001               	movlw	1
   711  050A  118A  23B0  118A   	fcall	_LCD_Goto
   712  050D                     l1716:
   713                           
   714                           ;main.c: 167:     _delay((unsigned long)((500)*(32000000/4000.0)));
   715  050D  3015               	movlw	21
   716  050E  1283               	bcf	3,5	;RP0=0, select bank0
   717  050F  1303               	bcf	3,6	;RP1=0, select bank0
   718  0510  00DC               	movwf	??_main+2
   719  0511  304B               	movlw	75
   720  0512  00DB               	movwf	??_main+1
   721  0513  30BE               	movlw	190
   722  0514  00DA               	movwf	??_main
   723  0515                     u1247:
   724  0515  0BDA               	decfsz	??_main,f
   725  0516  2D15               	goto	u1247
   726  0517  0BDB               	decfsz	??_main+1,f
   727  0518  2D15               	goto	u1247
   728  0519  0BDC               	decfsz	??_main+2,f
   729  051A  2D15               	goto	u1247
   730  051B                     l1718:
   731                           
   732                           ;main.c: 171:     if(i<4)
   733  051B  1283               	bcf	3,5	;RP0=0, select bank0
   734  051C  1303               	bcf	3,6	;RP1=0, select bank0
   735  051D  085E               	movf	main@i+1,w
   736  051E  3A80               	xorlw	128
   737  051F  00FF               	movwf	btemp+1
   738  0520  3080               	movlw	128
   739  0521  027F               	subwf	btemp+1,w
   740  0522  1D03               	skipz
   741  0523  2D26               	goto	u1195
   742  0524  3004               	movlw	4
   743  0525  025D               	subwf	main@i,w
   744  0526                     u1195:
   745  0526  1803               	skipnc
   746  0527  2D29               	goto	u1191
   747  0528  2D2A               	goto	u1190
   748  0529                     u1191:
   749  0529  2D60               	goto	l1738
   750  052A                     u1190:
   751  052A                     l1720:
   752                           
   753                           ;main.c: 172:     {;main.c: 173:     char c = keypad_getkey();
   754  052A  118A  2295  118A   	fcall	_keypad_getkey
   755  052D  1283               	bcf	3,5	;RP0=0, select bank0
   756  052E  1303               	bcf	3,6	;RP1=0, select bank0
   757  052F  00DA               	movwf	??_main
   758  0530  085A               	movf	??_main,w
   759  0531  00DF               	movwf	main@c
   760  0532                     l1722:
   761                           
   762                           ;main.c: 174:         if(c!='=' && c!='A')
   763  0532  303D               	movlw	61
   764  0533  065F               	xorwf	main@c,w
   765  0534  1903               	btfsc	3,2
   766  0535  2D37               	goto	u1201
   767  0536  2D38               	goto	u1200
   768  0537                     u1201:
   769  0537  2D53               	goto	l1732
   770  0538                     u1200:
   771  0538                     l1724:
   772  0538  3041               	movlw	65
   773  0539  065F               	xorwf	main@c,w
   774  053A  1903               	btfsc	3,2
   775  053B  2D3D               	goto	u1211
   776  053C  2D3E               	goto	u1210
   777  053D                     u1211:
   778  053D  2D53               	goto	l1732
   779  053E                     u1210:
   780  053E                     l1726:
   781                           
   782                           ;main.c: 175:         {;main.c: 176:         LCD_PutC(c);
   783  053E  085F               	movf	main@c,w
   784  053F  118A  2263  118A   	fcall	_LCD_PutC
   785  0542                     l1728:
   786                           
   787                           ;main.c: 177:         number[i]=c;
   788  0542  1283               	bcf	3,5	;RP0=0, select bank0
   789  0543  1303               	bcf	3,6	;RP1=0, select bank0
   790  0544  085F               	movf	main@c,w
   791  0545  00DA               	movwf	??_main
   792  0546  085D               	movf	main@i,w
   793  0547  3E60               	addlw	(low (_number| 0))& (0+255)
   794  0548  0084               	movwf	4
   795  0549  085A               	movf	??_main,w
   796  054A  1383               	bcf	3,7	;select IRP bank0
   797  054B  0080               	movwf	0
   798  054C                     l1730:
   799                           
   800                           ;main.c: 178:         i++;
   801  054C  3001               	movlw	1
   802  054D  07DD               	addwf	main@i,f
   803  054E  1803               	skipnc
   804  054F  0ADE               	incf	main@i+1,f
   805  0550  3000               	movlw	0
   806  0551  07DE               	addwf	main@i+1,f
   807                           
   808                           ;main.c: 179:         }
   809  0552  2D0D               	goto	l1716
   810  0553                     l1732:
   811  0553  3041               	movlw	65
   812  0554  065F               	xorwf	main@c,w
   813  0555  1D03               	btfss	3,2
   814  0556  2D58               	goto	u1221
   815  0557  2D59               	goto	u1220
   816  0558                     u1221:
   817  0558  2D0D               	goto	l1716
   818  0559                     u1220:
   819  0559                     l1734:
   820                           
   821                           ;main.c: 181:         {;main.c: 182:             i=0;
   822  0559  01DD               	clrf	main@i
   823  055A  01DE               	clrf	main@i+1
   824  055B                     l1736:
   825                           
   826                           ;main.c: 183:             LCD_Cmd(0x01);
   827  055B  3001               	movlw	1
   828  055C  118A  2382  118A   	fcall	_LCD_Cmd
   829  055F  2D0D               	goto	l1716
   830  0560                     l1738:
   831                           
   832                           ;main.c: 192:     {;main.c: 193:          i=0;
   833  0560  1283               	bcf	3,5	;RP0=0, select bank0
   834  0561  1303               	bcf	3,6	;RP1=0, select bank0
   835  0562  01DD               	clrf	main@i
   836  0563  01DE               	clrf	main@i+1
   837  0564                     l1740:
   838                           
   839                           ;main.c: 194:          LCD_PutC(' ');
   840  0564  3020               	movlw	32
   841  0565  118A  2263  118A   	fcall	_LCD_PutC
   842  0568                     l1742:
   843                           
   844                           ;main.c: 195:          LCD_Print("Env");
   845  0568  302F               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
   846  0569  1283               	bcf	3,5	;RP0=0, select bank0
   847  056A  1303               	bcf	3,6	;RP1=0, select bank0
   848  056B  00CE               	movwf	LCD_Print@LCD_Str
   849  056C  3080               	movlw	128
   850  056D  00CF               	movwf	LCD_Print@LCD_Str+1
   851  056E  118A  23E0  118A   	fcall	_LCD_Print
   852  0571                     l1744:
   853                           
   854                           ;main.c: 196:          imprimir_valor_leds();
   855  0571  118A  2304  118A   	fcall	_imprimir_valor_leds
   856  0574                     l1746:
   857                           
   858                           ;main.c: 197:          enviar_datos();
   859  0574  118A  232D  118A   	fcall	_enviar_datos
   860  0577  2D0D               	goto	l1716
   861  0578  118A  2800         	ljmp	start
   862  057A                     __end_of_main:
   863                           
   864                           	psect	text1
   865  02B6                     __ptext1:	
   866 ;; *************** function _set_configuraciones *****************
   867 ;; Defined at:
   868 ;;		line 32 in file "main.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;		None
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      void 
   875 ;; Registers used:
   876 ;;		wreg, status,2
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMMON   BANK0   BANK1
   882 ;;      Params:         0       0       0
   883 ;;      Locals:         0       0       0
   884 ;;      Temps:          0       0       0
   885 ;;      Totals:         0       0       0
   886 ;;Total ram usage:        0 bytes
   887 ;; Hardware stack levels used: 1
   888 ;; This function calls:
   889 ;;		Nothing
   890 ;; This function is called by:
   891 ;;		_main
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           
   896                           ;psect for function _set_configuraciones
   897  02B6                     _set_configuraciones:
   898  02B6                     l1596:	
   899                           ;incstack = 0
   900                           ; Regs used in _set_configuraciones: [wreg+status,2]
   901                           
   902                           
   903                           ;main.c: 36:     ADCON0 = 0x80;
   904  02B6  3080               	movlw	128
   905  02B7  1283               	bcf	3,5	;RP0=0, select bank0
   906  02B8  1303               	bcf	3,6	;RP1=0, select bank0
   907  02B9  009F               	movwf	31	;volatile
   908                           
   909                           ;main.c: 37:     ADCON1 = 0x8E;
   910  02BA  308E               	movlw	142
   911  02BB  1683               	bsf	3,5	;RP0=1, select bank1
   912  02BC  1303               	bcf	3,6	;RP1=0, select bank1
   913  02BD  009F               	movwf	31	;volatile
   914  02BE                     l1598:
   915                           
   916                           ;main.c: 41:     ADIF = 0;
   917  02BE  1283               	bcf	3,5	;RP0=0, select bank0
   918  02BF  1303               	bcf	3,6	;RP1=0, select bank0
   919  02C0  130C               	bcf	12,6	;volatile
   920                           
   921                           ;main.c: 44:     OPTION_REG = 0x51;
   922  02C1  3051               	movlw	81
   923  02C2  1683               	bsf	3,5	;RP0=1, select bank1
   924  02C3  1303               	bcf	3,6	;RP1=0, select bank1
   925  02C4  0081               	movwf	1	;volatile
   926  02C5                     l1600:
   927                           
   928                           ;main.c: 45:     TMR0 = 0;
   929  02C5  1283               	bcf	3,5	;RP0=0, select bank0
   930  02C6  1303               	bcf	3,6	;RP1=0, select bank0
   931  02C7  0181               	clrf	1	;volatile
   932  02C8                     l1602:
   933                           
   934                           ;main.c: 48:     TXSTA = 0x00;
   935  02C8  1683               	bsf	3,5	;RP0=1, select bank1
   936  02C9  1303               	bcf	3,6	;RP1=0, select bank1
   937  02CA  0198               	clrf	24	;volatile
   938  02CB                     l1604:
   939                           
   940                           ;main.c: 49:     RCSTA = 0x00;
   941  02CB  1283               	bcf	3,5	;RP0=0, select bank0
   942  02CC  1303               	bcf	3,6	;RP1=0, select bank0
   943  02CD  0198               	clrf	24	;volatile
   944  02CE                     l1606:
   945                           
   946                           ;main.c: 50:     RCSTAbits.SPEN = 1;
   947  02CE  1798               	bsf	24,7	;volatile
   948  02CF                     l1608:
   949                           
   950                           ;main.c: 51:     TXSTAbits.SYNC = 0;
   951  02CF  1683               	bsf	3,5	;RP0=1, select bank1
   952  02D0  1303               	bcf	3,6	;RP1=0, select bank1
   953  02D1  1218               	bcf	24,4	;volatile
   954  02D2                     l1610:
   955                           
   956                           ;main.c: 52:     TXSTAbits.BRGH = 1;
   957  02D2  1518               	bsf	24,2	;volatile
   958  02D3                     l1612:
   959                           
   960                           ;main.c: 53:     TXSTAbits.TXEN = 1;
   961  02D3  1698               	bsf	24,5	;volatile
   962  02D4                     l1614:
   963                           
   964                           ;main.c: 54:     RCSTAbits.CREN = 1;
   965  02D4  1283               	bcf	3,5	;RP0=0, select bank0
   966  02D5  1303               	bcf	3,6	;RP1=0, select bank0
   967  02D6  1618               	bsf	24,4	;volatile
   968  02D7                     l1616:
   969                           
   970                           ;main.c: 56:     SPBRG = 25;
   971  02D7  3019               	movlw	25
   972  02D8  1683               	bsf	3,5	;RP0=1, select bank1
   973  02D9  1303               	bcf	3,6	;RP1=0, select bank1
   974  02DA  0099               	movwf	25	;volatile
   975  02DB                     l182:
   976  02DB  0008               	return
   977  02DC                     __end_of_set_configuraciones:
   978                           
   979                           	psect	text2
   980  0295                     __ptext2:	
   981 ;; *************** function _keypad_getkey *****************
   982 ;; Defined at:
   983 ;;		line 90 in file "./kbd.h"
   984 ;; Parameters:    Size  Location     Type
   985 ;;		None
   986 ;; Auto vars:     Size  Location     Type
   987 ;;  key             1    2[BANK0 ] unsigned char 
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      unsigned char 
   990 ;; Registers used:
   991 ;;		wreg, status,2, status,0, pclath, cstack
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMMON   BANK0   BANK1
   997 ;;      Params:         0       0       0
   998 ;;      Locals:         0       1       0
   999 ;;      Temps:          0       1       0
  1000 ;;      Totals:         0       2       0
  1001 ;;Total ram usage:        2 bytes
  1002 ;; Hardware stack levels used: 1
  1003 ;; Hardware stack levels required when called: 1
  1004 ;; This function calls:
  1005 ;;		_keypad_readkey
  1006 ;; This function is called by:
  1007 ;;		_main
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           
  1012                           ;psect for function _keypad_getkey
  1013  0295                     _keypad_getkey:
  1014  0295                     l1584:	
  1015                           ;incstack = 0
  1016                           ; Regs used in _keypad_getkey: [wreg+status,2+status,0+pclath+cstack]
  1017                           
  1018                           
  1019                           ;./kbd.h: 92:  unsigned char key = 'x';
  1020  0295  3078               	movlw	120
  1021  0296  1283               	bcf	3,5	;RP0=0, select bank0
  1022  0297  1303               	bcf	3,6	;RP1=0, select bank0
  1023  0298  00CC               	movwf	??_keypad_getkey
  1024  0299  084C               	movf	??_keypad_getkey,w
  1025  029A  00CD               	movwf	keypad_getkey@key
  1026                           
  1027                           ;./kbd.h: 95:  while(key == 'x')
  1028  029B  2AA4               	goto	l1588
  1029  029C                     l1586:
  1030                           
  1031                           ;./kbd.h: 96:   key = keypad_readkey();
  1032  029C  118A  2637  118A   	fcall	_keypad_readkey
  1033  029F  1283               	bcf	3,5	;RP0=0, select bank0
  1034  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  1035  02A1  00CC               	movwf	??_keypad_getkey
  1036  02A2  084C               	movf	??_keypad_getkey,w
  1037  02A3  00CD               	movwf	keypad_getkey@key
  1038  02A4                     l1588:
  1039                           
  1040                           ;./kbd.h: 95:  while(key == 'x')
  1041  02A4  3078               	movlw	120
  1042  02A5  064D               	xorwf	keypad_getkey@key,w
  1043  02A6  1903               	btfsc	3,2
  1044  02A7  2AA9               	goto	u1161
  1045  02A8  2AAA               	goto	u1160
  1046  02A9                     u1161:
  1047  02A9  2A9C               	goto	l1586
  1048  02AA                     u1160:
  1049  02AA                     l1590:
  1050  02AA  118A  2637  118A   	fcall	_keypad_readkey
  1051  02AD  3A78               	xorlw	120
  1052  02AE  1D03               	skipz
  1053  02AF  2AB1               	goto	u1171
  1054  02B0  2AB2               	goto	u1170
  1055  02B1                     u1171:
  1056  02B1  2AAA               	goto	l1590
  1057  02B2                     u1170:
  1058  02B2                     l1592:
  1059                           
  1060                           ;./kbd.h: 101:  return key;
  1061  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  1062  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  1063  02B4  084D               	movf	keypad_getkey@key,w
  1064  02B5                     l169:
  1065  02B5  0008               	return
  1066  02B6                     __end_of_keypad_getkey:
  1067                           
  1068                           	psect	text3
  1069  0637                     __ptext3:	
  1070 ;; *************** function _keypad_readkey *****************
  1071 ;; Defined at:
  1072 ;;		line 35 in file "./kbd.h"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;		None
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;		None
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      unsigned char 
  1079 ;; Registers used:
  1080 ;;		wreg
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMMON   BANK0   BANK1
  1086 ;;      Params:         0       0       0
  1087 ;;      Locals:         0       0       0
  1088 ;;      Temps:          0       1       0
  1089 ;;      Totals:         0       1       0
  1090 ;;Total ram usage:        1 bytes
  1091 ;; Hardware stack levels used: 1
  1092 ;; This function calls:
  1093 ;;		Nothing
  1094 ;; This function is called by:
  1095 ;;		_keypad_getkey
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           
  1100                           ;psect for function _keypad_readkey
  1101  0637                     _keypad_readkey:
  1102  0637                     l1374:	
  1103                           ;incstack = 0
  1104                           ; Regs used in _keypad_readkey: [wreg]
  1105                           
  1106                           
  1107                           ;./kbd.h: 37:     RA4 = 1;
  1108  0637  1283               	bcf	3,5	;RP0=0, select bank0
  1109  0638  1303               	bcf	3,6	;RP1=0, select bank0
  1110  0639  1605               	bsf	5,4	;volatile
  1111                           
  1112                           ;./kbd.h: 38:     RA5 = 0;
  1113  063A  1285               	bcf	5,5	;volatile
  1114                           
  1115                           ;./kbd.h: 39:     RC0 = 0;
  1116  063B  1007               	bcf	7,0	;volatile
  1117                           
  1118                           ;./kbd.h: 40:     RC1 = 0;
  1119  063C  1087               	bcf	7,1	;volatile
  1120  063D                     l1376:
  1121                           
  1122                           ;./kbd.h: 41:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  1123  063D  304F               	movlw	79
  1124  063E  1283               	bcf	3,5	;RP0=0, select bank0
  1125  063F  1303               	bcf	3,6	;RP1=0, select bank0
  1126  0640  00CB               	movwf	??_keypad_readkey
  1127  0641                     u1257:
  1128  0641  0BCB               	decfsz	??_keypad_readkey,f
  1129  0642  2E41               	goto	u1257
  1130  0643  0000               	nop
  1131  0644                     l1378:
  1132                           
  1133                           ;./kbd.h: 43:     if(RA4==1 && RA5==0 && RC0==0 && RC1==0) {
  1134  0644  1283               	bcf	3,5	;RP0=0, select bank0
  1135  0645  1303               	bcf	3,6	;RP1=0, select bank0
  1136  0646  1E05               	btfss	5,4	;volatile
  1137  0647  2E49               	goto	u711
  1138  0648  2E4A               	goto	u710
  1139  0649                     u711:
  1140  0649  2E6E               	goto	l140
  1141  064A                     u710:
  1142  064A                     l1380:
  1143  064A  1A85               	btfsc	5,5	;volatile
  1144  064B  2E4D               	goto	u721
  1145  064C  2E4E               	goto	u720
  1146  064D                     u721:
  1147  064D  2E6E               	goto	l140
  1148  064E                     u720:
  1149  064E                     l1382:
  1150  064E  1807               	btfsc	7,0	;volatile
  1151  064F  2E51               	goto	u731
  1152  0650  2E52               	goto	u730
  1153  0651                     u731:
  1154  0651  2E6E               	goto	l140
  1155  0652                     u730:
  1156  0652                     l1384:
  1157  0652  1887               	btfsc	7,1	;volatile
  1158  0653  2E55               	goto	u741
  1159  0654  2E56               	goto	u740
  1160  0655                     u741:
  1161  0655  2E6E               	goto	l140
  1162  0656                     u740:
  1163  0656                     l1386:
  1164                           
  1165                           ;./kbd.h: 44:         if (RA0 == 1) return 'A';
  1166  0656  1C05               	btfss	5,0	;volatile
  1167  0657  2E59               	goto	u751
  1168  0658  2E5A               	goto	u750
  1169  0659                     u751:
  1170  0659  2E5C               	goto	l141
  1171  065A                     u750:
  1172  065A                     l1388:
  1173  065A  3041               	movlw	65
  1174  065B  2F0E               	goto	l142
  1175  065C                     l141:
  1176                           
  1177                           ;./kbd.h: 45:         if (RA1 == 1) return '0';
  1178  065C  1C85               	btfss	5,1	;volatile
  1179  065D  2E5F               	goto	u761
  1180  065E  2E60               	goto	u760
  1181  065F                     u761:
  1182  065F  2E62               	goto	l143
  1183  0660                     u760:
  1184  0660                     l1392:
  1185  0660  3030               	movlw	48
  1186  0661  2F0E               	goto	l142
  1187  0662                     l143:
  1188                           
  1189                           ;./kbd.h: 46:         if (RA2 == 1) return '=';
  1190  0662  1D05               	btfss	5,2	;volatile
  1191  0663  2E65               	goto	u771
  1192  0664  2E66               	goto	u770
  1193  0665                     u771:
  1194  0665  2E68               	goto	l144
  1195  0666                     u770:
  1196  0666                     l1396:
  1197  0666  303D               	movlw	61
  1198  0667  2F0E               	goto	l142
  1199  0668                     l144:
  1200                           
  1201                           ;./kbd.h: 47:         if (RC3 == 1) return '+';
  1202  0668  1D87               	btfss	7,3	;volatile
  1203  0669  2E6B               	goto	u781
  1204  066A  2E6C               	goto	u780
  1205  066B                     u781:
  1206  066B  2E6E               	goto	l140
  1207  066C                     u780:
  1208  066C                     l1400:
  1209  066C  302B               	movlw	43
  1210  066D  2F0E               	goto	l142
  1211  066E                     l140:	
  1212                           ;./kbd.h: 48:     }
  1213                           
  1214                           
  1215                           ;./kbd.h: 49:     RA4 = 0;
  1216  066E  1205               	bcf	5,4	;volatile
  1217                           
  1218                           ;./kbd.h: 50:     RA5 = 1;
  1219  066F  1685               	bsf	5,5	;volatile
  1220                           
  1221                           ;./kbd.h: 51:     RC0 = 0;
  1222  0670  1007               	bcf	7,0	;volatile
  1223                           
  1224                           ;./kbd.h: 52:     RC1 = 0;
  1225  0671  1087               	bcf	7,1	;volatile
  1226  0672                     l1404:
  1227                           
  1228                           ;./kbd.h: 53:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  1229  0672  304F               	movlw	79
  1230  0673  1283               	bcf	3,5	;RP0=0, select bank0
  1231  0674  1303               	bcf	3,6	;RP1=0, select bank0
  1232  0675  00CB               	movwf	??_keypad_readkey
  1233  0676                     u1267:
  1234  0676  0BCB               	decfsz	??_keypad_readkey,f
  1235  0677  2E76               	goto	u1267
  1236  0678  0000               	nop
  1237  0679                     l1406:
  1238                           
  1239                           ;./kbd.h: 55:     if(RA4==0 && RA5==1 && RC0==0 && RC1==0) {
  1240  0679  1283               	bcf	3,5	;RP0=0, select bank0
  1241  067A  1303               	bcf	3,6	;RP1=0, select bank0
  1242  067B  1A05               	btfsc	5,4	;volatile
  1243  067C  2E7E               	goto	u791
  1244  067D  2E7F               	goto	u790
  1245  067E                     u791:
  1246  067E  2EA3               	goto	l146
  1247  067F                     u790:
  1248  067F                     l1408:
  1249  067F  1E85               	btfss	5,5	;volatile
  1250  0680  2E82               	goto	u801
  1251  0681  2E83               	goto	u800
  1252  0682                     u801:
  1253  0682  2EA3               	goto	l146
  1254  0683                     u800:
  1255  0683                     l1410:
  1256  0683  1807               	btfsc	7,0	;volatile
  1257  0684  2E86               	goto	u811
  1258  0685  2E87               	goto	u810
  1259  0686                     u811:
  1260  0686  2EA3               	goto	l146
  1261  0687                     u810:
  1262  0687                     l1412:
  1263  0687  1887               	btfsc	7,1	;volatile
  1264  0688  2E8A               	goto	u821
  1265  0689  2E8B               	goto	u820
  1266  068A                     u821:
  1267  068A  2EA3               	goto	l146
  1268  068B                     u820:
  1269  068B                     l1414:
  1270                           
  1271                           ;./kbd.h: 56:         if (RA0 == 1) return '1';
  1272  068B  1C05               	btfss	5,0	;volatile
  1273  068C  2E8E               	goto	u831
  1274  068D  2E8F               	goto	u830
  1275  068E                     u831:
  1276  068E  2E91               	goto	l147
  1277  068F                     u830:
  1278  068F                     l1416:
  1279  068F  3031               	movlw	49
  1280  0690  2F0E               	goto	l142
  1281  0691                     l147:
  1282                           
  1283                           ;./kbd.h: 57:         if (RA1 == 1) return '2';
  1284  0691  1C85               	btfss	5,1	;volatile
  1285  0692  2E94               	goto	u841
  1286  0693  2E95               	goto	u840
  1287  0694                     u841:
  1288  0694  2E97               	goto	l148
  1289  0695                     u840:
  1290  0695                     l1420:
  1291  0695  3032               	movlw	50
  1292  0696  2F0E               	goto	l142
  1293  0697                     l148:
  1294                           
  1295                           ;./kbd.h: 58:         if (RA2 == 1) return '3';
  1296  0697  1D05               	btfss	5,2	;volatile
  1297  0698  2E9A               	goto	u851
  1298  0699  2E9B               	goto	u850
  1299  069A                     u851:
  1300  069A  2E9D               	goto	l149
  1301  069B                     u850:
  1302  069B                     l1424:
  1303  069B  3033               	movlw	51
  1304  069C  2F0E               	goto	l142
  1305  069D                     l149:
  1306                           
  1307                           ;./kbd.h: 59:         if (RC3 == 1) return '.';
  1308  069D  1D87               	btfss	7,3	;volatile
  1309  069E  2EA0               	goto	u861
  1310  069F  2EA1               	goto	u860
  1311  06A0                     u861:
  1312  06A0  2EA3               	goto	l146
  1313  06A1                     u860:
  1314  06A1                     l1428:
  1315  06A1  302E               	movlw	46
  1316  06A2  2F0E               	goto	l142
  1317  06A3                     l146:	
  1318                           ;./kbd.h: 60:     }
  1319                           
  1320                           
  1321                           ;./kbd.h: 62:     RA4 = 0;
  1322  06A3  1205               	bcf	5,4	;volatile
  1323                           
  1324                           ;./kbd.h: 63:     RA5 = 0;
  1325  06A4  1285               	bcf	5,5	;volatile
  1326                           
  1327                           ;./kbd.h: 64:     RC0 = 1;
  1328  06A5  1407               	bsf	7,0	;volatile
  1329                           
  1330                           ;./kbd.h: 65:     RC1 = 0;
  1331  06A6  1087               	bcf	7,1	;volatile
  1332  06A7                     l1432:
  1333                           
  1334                           ;./kbd.h: 66:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  1335  06A7  304F               	movlw	79
  1336  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  1337  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  1338  06AA  00CB               	movwf	??_keypad_readkey
  1339  06AB                     u1277:
  1340  06AB  0BCB               	decfsz	??_keypad_readkey,f
  1341  06AC  2EAB               	goto	u1277
  1342  06AD  0000               	nop
  1343  06AE                     l1434:
  1344                           
  1345                           ;./kbd.h: 68:     if(RA4==0 && RA5==0 && RC0==1 && RC1==0) {
  1346  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  1347  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  1348  06B0  1A05               	btfsc	5,4	;volatile
  1349  06B1  2EB3               	goto	u871
  1350  06B2  2EB4               	goto	u870
  1351  06B3                     u871:
  1352  06B3  2ED8               	goto	l151
  1353  06B4                     u870:
  1354  06B4                     l1436:
  1355  06B4  1A85               	btfsc	5,5	;volatile
  1356  06B5  2EB7               	goto	u881
  1357  06B6  2EB8               	goto	u880
  1358  06B7                     u881:
  1359  06B7  2ED8               	goto	l151
  1360  06B8                     u880:
  1361  06B8                     l1438:
  1362  06B8  1C07               	btfss	7,0	;volatile
  1363  06B9  2EBB               	goto	u891
  1364  06BA  2EBC               	goto	u890
  1365  06BB                     u891:
  1366  06BB  2ED8               	goto	l151
  1367  06BC                     u890:
  1368  06BC                     l1440:
  1369  06BC  1887               	btfsc	7,1	;volatile
  1370  06BD  2EBF               	goto	u901
  1371  06BE  2EC0               	goto	u900
  1372  06BF                     u901:
  1373  06BF  2ED8               	goto	l151
  1374  06C0                     u900:
  1375  06C0                     l1442:
  1376                           
  1377                           ;./kbd.h: 69:         if (RA0 == 1) return '4';
  1378  06C0  1C05               	btfss	5,0	;volatile
  1379  06C1  2EC3               	goto	u911
  1380  06C2  2EC4               	goto	u910
  1381  06C3                     u911:
  1382  06C3  2EC6               	goto	l152
  1383  06C4                     u910:
  1384  06C4                     l1444:
  1385  06C4  3034               	movlw	52
  1386  06C5  2F0E               	goto	l142
  1387  06C6                     l152:
  1388                           
  1389                           ;./kbd.h: 70:         if (RA1 == 1) return '5';
  1390  06C6  1C85               	btfss	5,1	;volatile
  1391  06C7  2EC9               	goto	u921
  1392  06C8  2ECA               	goto	u920
  1393  06C9                     u921:
  1394  06C9  2ECC               	goto	l153
  1395  06CA                     u920:
  1396  06CA                     l1448:
  1397  06CA  3035               	movlw	53
  1398  06CB  2F0E               	goto	l142
  1399  06CC                     l153:
  1400                           
  1401                           ;./kbd.h: 71:         if (RA2 == 1) return '6';
  1402  06CC  1D05               	btfss	5,2	;volatile
  1403  06CD  2ECF               	goto	u931
  1404  06CE  2ED0               	goto	u930
  1405  06CF                     u931:
  1406  06CF  2ED2               	goto	l154
  1407  06D0                     u930:
  1408  06D0                     l1452:
  1409  06D0  3036               	movlw	54
  1410  06D1  2F0E               	goto	l142
  1411  06D2                     l154:
  1412                           
  1413                           ;./kbd.h: 72:         if (RC3 == 1) return '*';
  1414  06D2  1D87               	btfss	7,3	;volatile
  1415  06D3  2ED5               	goto	u941
  1416  06D4  2ED6               	goto	u940
  1417  06D5                     u941:
  1418  06D5  2ED8               	goto	l151
  1419  06D6                     u940:
  1420  06D6                     l1456:
  1421  06D6  302A               	movlw	42
  1422  06D7  2F0E               	goto	l142
  1423  06D8                     l151:	
  1424                           ;./kbd.h: 73:     }
  1425                           
  1426                           
  1427                           ;./kbd.h: 75:     RA4 = 0;
  1428  06D8  1205               	bcf	5,4	;volatile
  1429                           
  1430                           ;./kbd.h: 76:     RA5 = 0;
  1431  06D9  1285               	bcf	5,5	;volatile
  1432                           
  1433                           ;./kbd.h: 77:     RC0 = 0;
  1434  06DA  1007               	bcf	7,0	;volatile
  1435                           
  1436                           ;./kbd.h: 78:     RC1 = 1;
  1437  06DB  1487               	bsf	7,1	;volatile
  1438  06DC                     l1460:
  1439                           
  1440                           ;./kbd.h: 79:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  1441  06DC  304F               	movlw	79
  1442  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  1443  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  1444  06DF  00CB               	movwf	??_keypad_readkey
  1445  06E0                     u1287:
  1446  06E0  0BCB               	decfsz	??_keypad_readkey,f
  1447  06E1  2EE0               	goto	u1287
  1448  06E2  0000               	nop
  1449  06E3                     l1462:
  1450                           
  1451                           ;./kbd.h: 81:     if(RA4==0 && RA5==0 && RC0==0 && RC1==1) {
  1452  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  1453  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  1454  06E5  1A05               	btfsc	5,4	;volatile
  1455  06E6  2EE8               	goto	u951
  1456  06E7  2EE9               	goto	u950
  1457  06E8                     u951:
  1458  06E8  2F0D               	goto	l1488
  1459  06E9                     u950:
  1460  06E9                     l1464:
  1461  06E9  1A85               	btfsc	5,5	;volatile
  1462  06EA  2EEC               	goto	u961
  1463  06EB  2EED               	goto	u960
  1464  06EC                     u961:
  1465  06EC  2F0D               	goto	l1488
  1466  06ED                     u960:
  1467  06ED                     l1466:
  1468  06ED  1807               	btfsc	7,0	;volatile
  1469  06EE  2EF0               	goto	u971
  1470  06EF  2EF1               	goto	u970
  1471  06F0                     u971:
  1472  06F0  2F0D               	goto	l1488
  1473  06F1                     u970:
  1474  06F1                     l1468:
  1475  06F1  1C87               	btfss	7,1	;volatile
  1476  06F2  2EF4               	goto	u981
  1477  06F3  2EF5               	goto	u980
  1478  06F4                     u981:
  1479  06F4  2F0D               	goto	l1488
  1480  06F5                     u980:
  1481  06F5                     l1470:
  1482                           
  1483                           ;./kbd.h: 82:         if (RA0 == 1) return '7';
  1484  06F5  1C05               	btfss	5,0	;volatile
  1485  06F6  2EF8               	goto	u991
  1486  06F7  2EF9               	goto	u990
  1487  06F8                     u991:
  1488  06F8  2EFB               	goto	l157
  1489  06F9                     u990:
  1490  06F9                     l1472:
  1491  06F9  3037               	movlw	55
  1492  06FA  2F0E               	goto	l142
  1493  06FB                     l157:
  1494                           
  1495                           ;./kbd.h: 83:         if (RA1 == 1) return '8';
  1496  06FB  1C85               	btfss	5,1	;volatile
  1497  06FC  2EFE               	goto	u1001
  1498  06FD  2EFF               	goto	u1000
  1499  06FE                     u1001:
  1500  06FE  2F01               	goto	l158
  1501  06FF                     u1000:
  1502  06FF                     l1476:
  1503  06FF  3038               	movlw	56
  1504  0700  2F0E               	goto	l142
  1505  0701                     l158:
  1506                           
  1507                           ;./kbd.h: 84:         if (RA2 == 1) return '9';
  1508  0701  1D05               	btfss	5,2	;volatile
  1509  0702  2F04               	goto	u1011
  1510  0703  2F05               	goto	u1010
  1511  0704                     u1011:
  1512  0704  2F07               	goto	l159
  1513  0705                     u1010:
  1514  0705                     l1480:
  1515  0705  3039               	movlw	57
  1516  0706  2F0E               	goto	l142
  1517  0707                     l159:
  1518                           
  1519                           ;./kbd.h: 85:         if (RC3 == 1) return '/';
  1520  0707  1D87               	btfss	7,3	;volatile
  1521  0708  2F0A               	goto	u1021
  1522  0709  2F0B               	goto	u1020
  1523  070A                     u1021:
  1524  070A  2F0D               	goto	l1488
  1525  070B                     u1020:
  1526  070B                     l1484:
  1527  070B  302F               	movlw	47
  1528  070C  2F0E               	goto	l142
  1529  070D                     l1488:
  1530                           
  1531                           ;./kbd.h: 87:  return 'x';
  1532  070D  3078               	movlw	120
  1533  070E                     l142:
  1534  070E  0008               	return
  1535  070F                     __end_of_keypad_readkey:
  1536                           
  1537                           	psect	text4
  1538  0480                     __ptext4:	
  1539 ;; *************** function _inicio_presentacion *****************
  1540 ;; Defined at:
  1541 ;;		line 250 in file "main.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;		None
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  i               2   13[BANK0 ] int 
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMMON   BANK0   BANK1
  1555 ;;      Params:         0       0       0
  1556 ;;      Locals:         0       2       0
  1557 ;;      Temps:          0       3       0
  1558 ;;      Totals:         0       5       0
  1559 ;;Total ram usage:        5 bytes
  1560 ;; Hardware stack levels used: 1
  1561 ;; Hardware stack levels required when called: 3
  1562 ;; This function calls:
  1563 ;;		_LCD_Cmd
  1564 ;;		_LCD_Goto
  1565 ;;		_LCD_Print
  1566 ;; This function is called by:
  1567 ;;		_main
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           
  1572                           ;psect for function _inicio_presentacion
  1573  0480                     _inicio_presentacion:
  1574  0480                     l1676:	
  1575                           ;incstack = 0
  1576                           ; Regs used in _inicio_presentacion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  1577                           
  1578                           
  1579                           ;main.c: 252:     LCD_Goto(1,1);
  1580  0480  1283               	bcf	3,5	;RP0=0, select bank0
  1581  0481  1303               	bcf	3,6	;RP1=0, select bank0
  1582  0482  01D1               	clrf	LCD_Goto@row
  1583  0483  0AD1               	incf	LCD_Goto@row,f
  1584  0484  3001               	movlw	1
  1585  0485  118A  23B0  118A   	fcall	_LCD_Goto
  1586  0488                     l1678:
  1587                           
  1588                           ;main.c: 253:     LCD_Print(M);
  1589  0488  3022               	movlw	(low (_M| 0))& (0+255)
  1590  0489  1283               	bcf	3,5	;RP0=0, select bank0
  1591  048A  1303               	bcf	3,6	;RP1=0, select bank0
  1592  048B  00CE               	movwf	LCD_Print@LCD_Str
  1593  048C  3000               	movlw	0
  1594  048D  00CF               	movwf	LCD_Print@LCD_Str+1
  1595  048E  118A  23E0  118A   	fcall	_LCD_Print
  1596  0491                     l1680:
  1597                           
  1598                           ;main.c: 254:     _delay((unsigned long)((50)*(32000000/4000.0)));
  1599  0491  3003               	movlw	3
  1600  0492  1283               	bcf	3,5	;RP0=0, select bank0
  1601  0493  1303               	bcf	3,6	;RP1=0, select bank0
  1602  0494  00D7               	movwf	??_inicio_presentacion+2
  1603  0495  3008               	movlw	8
  1604  0496  00D6               	movwf	??_inicio_presentacion+1
  1605  0497  3076               	movlw	118
  1606  0498  00D5               	movwf	??_inicio_presentacion
  1607  0499                     u1297:
  1608  0499  0BD5               	decfsz	??_inicio_presentacion,f
  1609  049A  2C99               	goto	u1297
  1610  049B  0BD6               	decfsz	??_inicio_presentacion+1,f
  1611  049C  2C99               	goto	u1297
  1612  049D  0BD7               	decfsz	??_inicio_presentacion+2,f
  1613  049E  2C99               	goto	u1297
  1614  049F  2CA0               	nop2
  1615  04A0                     l1682:
  1616                           
  1617                           ;main.c: 255:     for(int i=0;i<40;i++){
  1618  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  1619  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  1620  04A2  01D8               	clrf	inicio_presentacion@i
  1621  04A3  01D9               	clrf	inicio_presentacion@i+1
  1622  04A4                     l1688:
  1623                           
  1624                           ;main.c: 256:         LCD_Cmd(0x18);
  1625  04A4  3018               	movlw	24
  1626  04A5  118A  2382  118A   	fcall	_LCD_Cmd
  1627  04A8                     l1690:
  1628                           
  1629                           ;main.c: 257:         _delay((unsigned long)((40)*(32000000/4000.0)));
  1630  04A8  3002               	movlw	2
  1631  04A9  1283               	bcf	3,5	;RP0=0, select bank0
  1632  04AA  1303               	bcf	3,6	;RP1=0, select bank0
  1633  04AB  00D7               	movwf	??_inicio_presentacion+2
  1634  04AC  30A0               	movlw	160
  1635  04AD  00D6               	movwf	??_inicio_presentacion+1
  1636  04AE  3092               	movlw	146
  1637  04AF  00D5               	movwf	??_inicio_presentacion
  1638  04B0                     u1307:
  1639  04B0  0BD5               	decfsz	??_inicio_presentacion,f
  1640  04B1  2CB0               	goto	u1307
  1641  04B2  0BD6               	decfsz	??_inicio_presentacion+1,f
  1642  04B3  2CB0               	goto	u1307
  1643  04B4  0BD7               	decfsz	??_inicio_presentacion+2,f
  1644  04B5  2CB0               	goto	u1307
  1645  04B6                     l1692:
  1646                           
  1647                           ;main.c: 258:     }
  1648  04B6  3001               	movlw	1
  1649  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  1650  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  1651  04B9  07D8               	addwf	inicio_presentacion@i,f
  1652  04BA  1803               	skipnc
  1653  04BB  0AD9               	incf	inicio_presentacion@i+1,f
  1654  04BC  3000               	movlw	0
  1655  04BD  07D9               	addwf	inicio_presentacion@i+1,f
  1656  04BE                     l1694:
  1657  04BE  0859               	movf	inicio_presentacion@i+1,w
  1658  04BF  3A80               	xorlw	128
  1659  04C0  00FF               	movwf	btemp+1
  1660  04C1  3080               	movlw	128
  1661  04C2  027F               	subwf	btemp+1,w
  1662  04C3  1D03               	skipz
  1663  04C4  2CC7               	goto	u1185
  1664  04C5  3028               	movlw	40
  1665  04C6  0258               	subwf	inicio_presentacion@i,w
  1666  04C7                     u1185:
  1667  04C7  1C03               	skipc
  1668  04C8  2CCA               	goto	u1181
  1669  04C9  2CCB               	goto	u1180
  1670  04CA                     u1181:
  1671  04CA  2CA4               	goto	l1688
  1672  04CB                     u1180:
  1673  04CB                     l1696:
  1674                           
  1675                           ;main.c: 259:     _delay((unsigned long)((50)*(32000000/4000.0)));
  1676  04CB  3003               	movlw	3
  1677  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  1678  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  1679  04CE  00D7               	movwf	??_inicio_presentacion+2
  1680  04CF  3008               	movlw	8
  1681  04D0  00D6               	movwf	??_inicio_presentacion+1
  1682  04D1  3076               	movlw	118
  1683  04D2  00D5               	movwf	??_inicio_presentacion
  1684  04D3                     u1317:
  1685  04D3  0BD5               	decfsz	??_inicio_presentacion,f
  1686  04D4  2CD3               	goto	u1317
  1687  04D5  0BD6               	decfsz	??_inicio_presentacion+1,f
  1688  04D6  2CD3               	goto	u1317
  1689  04D7  0BD7               	decfsz	??_inicio_presentacion+2,f
  1690  04D8  2CD3               	goto	u1317
  1691  04D9  2CDA               	nop2
  1692  04DA                     l1698:
  1693                           
  1694                           ;main.c: 260:     LCD_Cmd(0x01);
  1695  04DA  3001               	movlw	1
  1696  04DB  118A  2382  118A   	fcall	_LCD_Cmd
  1697  04DE                     l1700:
  1698                           
  1699                           ;main.c: 261:     LCD_Goto(1, 1);
  1700  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  1701  04DF  1303               	bcf	3,6	;RP1=0, select bank0
  1702  04E0  01D1               	clrf	LCD_Goto@row
  1703  04E1  0AD1               	incf	LCD_Goto@row,f
  1704  04E2  3001               	movlw	1
  1705  04E3  118A  23B0  118A   	fcall	_LCD_Goto
  1706  04E6                     l236:
  1707  04E6  0008               	return
  1708  04E7                     __end_of_inicio_presentacion:
  1709                           
  1710                           	psect	text5
  1711  03B0                     __ptext5:	
  1712 ;; *************** function _LCD_Goto *****************
  1713 ;; Defined at:
  1714 ;;		line 87 in file "./lcd.h"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;  col             1    wreg     unsigned char 
  1717 ;;  row             1    6[BANK0 ] unsigned char 
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;  col             1    9[BANK0 ] unsigned char 
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      void 
  1722 ;; Registers used:
  1723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMMON   BANK0   BANK1
  1729 ;;      Params:         0       1       0
  1730 ;;      Locals:         0       1       0
  1731 ;;      Temps:          0       2       0
  1732 ;;      Totals:         0       4       0
  1733 ;;Total ram usage:        4 bytes
  1734 ;; Hardware stack levels used: 1
  1735 ;; Hardware stack levels required when called: 2
  1736 ;; This function calls:
  1737 ;;		_LCD_Cmd
  1738 ;; This function is called by:
  1739 ;;		_main
  1740 ;;		_inicio_presentacion
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           
  1745                           ;psect for function _LCD_Goto
  1746  03B0                     _LCD_Goto:
  1747                           
  1748                           ;incstack = 0
  1749                           ; Regs used in _LCD_Goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1750                           ;LCD_Goto@col stored from wreg
  1751  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  1752  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  1753  03B2  00D4               	movwf	LCD_Goto@col
  1754  03B3                     l1356:
  1755                           
  1756                           ;./lcd.h: 87: void LCD_Goto(uint8_t col, uint8_t row);./lcd.h: 88: {;./lcd.h: 89:   swit
      +                          ch(row)
  1757  03B3  2BCC               	goto	l1366
  1758  03B4                     l1358:
  1759                           
  1760                           ;./lcd.h: 92:       LCD_Cmd(0xC0 + col - 1);
  1761  03B4  0854               	movf	LCD_Goto@col,w
  1762  03B5  3EBF               	addlw	191
  1763  03B6  118A  2382  118A   	fcall	_LCD_Cmd
  1764                           
  1765                           ;./lcd.h: 93:       break;
  1766  03B9  2BDF               	goto	l110
  1767  03BA                     l1360:
  1768                           
  1769                           ;./lcd.h: 95:       LCD_Cmd(0x94 + col - 1);
  1770  03BA  0854               	movf	LCD_Goto@col,w
  1771  03BB  3E93               	addlw	147
  1772  03BC  118A  2382  118A   	fcall	_LCD_Cmd
  1773                           
  1774                           ;./lcd.h: 96:       break;
  1775  03BF  2BDF               	goto	l110
  1776  03C0                     l1362:
  1777                           
  1778                           ;./lcd.h: 98:       LCD_Cmd(0xD4 + col - 1);
  1779  03C0  0854               	movf	LCD_Goto@col,w
  1780  03C1  3ED3               	addlw	211
  1781  03C2  118A  2382  118A   	fcall	_LCD_Cmd
  1782                           
  1783                           ;./lcd.h: 99:     break;
  1784  03C5  2BDF               	goto	l110
  1785  03C6                     l1364:
  1786                           
  1787                           ;./lcd.h: 101:       LCD_Cmd(0x80 + col - 1);
  1788  03C6  0854               	movf	LCD_Goto@col,w
  1789  03C7  3E7F               	addlw	127
  1790  03C8  118A  2382  118A   	fcall	_LCD_Cmd
  1791                           
  1792                           ;./lcd.h: 102:   }
  1793  03CB  2BDF               	goto	l110
  1794  03CC                     l1366:
  1795  03CC  0851               	movf	LCD_Goto@row,w
  1796  03CD  00D2               	movwf	??_LCD_Goto
  1797  03CE  01D3               	clrf	??_LCD_Goto+1
  1798                           
  1799                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1800                           ; Switch size 1, requested type "simple"
  1801                           ; Number of cases is 1, Range of values is 0 to 0
  1802                           ; switch strategies available:
  1803                           ; Name         Instructions Cycles
  1804                           ; simple_byte            4     3 (average)
  1805                           ; direct_byte            9     7 (fixed)
  1806                           ; jumptable            260     6 (fixed)
  1807                           ;	Chosen strategy is simple_byte
  1808  03CF  0853               	movf	??_LCD_Goto+1,w
  1809  03D0  3A00               	xorlw	0	; case 0
  1810  03D1  1903               	skipnz
  1811  03D2  2BD4               	goto	l1780
  1812  03D3  2BC6               	goto	l1364
  1813  03D4                     l1780:
  1814                           
  1815                           ; Switch size 1, requested type "simple"
  1816                           ; Number of cases is 3, Range of values is 2 to 4
  1817                           ; switch strategies available:
  1818                           ; Name         Instructions Cycles
  1819                           ; simple_byte           10     6 (average)
  1820                           ; direct_byte           16    10 (fixed)
  1821                           ; jumptable            263     9 (fixed)
  1822                           ;	Chosen strategy is simple_byte
  1823  03D4  0852               	movf	??_LCD_Goto,w
  1824  03D5  3A02               	xorlw	2	; case 2
  1825  03D6  1903               	skipnz
  1826  03D7  2BB4               	goto	l1358
  1827  03D8  3A01               	xorlw	1	; case 3
  1828  03D9  1903               	skipnz
  1829  03DA  2BBA               	goto	l1360
  1830  03DB  3A07               	xorlw	7	; case 4
  1831  03DC  1903               	skipnz
  1832  03DD  2BC0               	goto	l1362
  1833  03DE  2BC6               	goto	l1364
  1834  03DF                     l110:
  1835  03DF  0008               	return
  1836  03E0                     __end_of_LCD_Goto:
  1837                           
  1838                           	psect	text6
  1839  02DC                     __ptext6:	
  1840 ;; *************** function _iniciar_puertos *****************
  1841 ;; Defined at:
  1842 ;;		line 203 in file "main.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;		None
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;		None
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  1    wreg      void 
  1849 ;; Registers used:
  1850 ;;		wreg, status,2
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMMON   BANK0   BANK1
  1856 ;;      Params:         0       0       0
  1857 ;;      Locals:         0       0       0
  1858 ;;      Temps:          0       0       0
  1859 ;;      Totals:         0       0       0
  1860 ;;Total ram usage:        0 bytes
  1861 ;; Hardware stack levels used: 1
  1862 ;; This function calls:
  1863 ;;		Nothing
  1864 ;; This function is called by:
  1865 ;;		_main
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869                           
  1870                           ;psect for function _iniciar_puertos
  1871  02DC                     _iniciar_puertos:
  1872  02DC                     l1636:	
  1873                           ;incstack = 0
  1874                           ; Regs used in _iniciar_puertos: [wreg+status,2]
  1875                           
  1876                           
  1877                           ;main.c: 207:     PORTA = 0;
  1878  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  1879  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  1880  02DE  0185               	clrf	5	;volatile
  1881                           
  1882                           ;main.c: 208:     PORTB = 0;
  1883  02DF  0186               	clrf	6	;volatile
  1884                           
  1885                           ;main.c: 209:     PORTC = 0;
  1886  02E0  0187               	clrf	7	;volatile
  1887  02E1                     l1638:
  1888                           
  1889                           ;main.c: 214:     TRISCbits.TRISC0 = 1;
  1890  02E1  1683               	bsf	3,5	;RP0=1, select bank1
  1891  02E2  1303               	bcf	3,6	;RP1=0, select bank1
  1892  02E3  1407               	bsf	7,0	;volatile
  1893  02E4                     l1640:
  1894                           
  1895                           ;main.c: 215:     TRISCbits.TRISC1 = 1;
  1896  02E4  1487               	bsf	7,1	;volatile
  1897  02E5                     l1642:
  1898                           
  1899                           ;main.c: 217:     TRISCbits.TRISC3 = 0;
  1900  02E5  1187               	bcf	7,3	;volatile
  1901  02E6                     l1644:
  1902                           
  1903                           ;main.c: 218:     TRISCbits.TRISC4 = 0;
  1904  02E6  1207               	bcf	7,4	;volatile
  1905  02E7                     l1646:
  1906                           
  1907                           ;main.c: 220:     TRISCbits.TRISC4 = 0;
  1908  02E7  1207               	bcf	7,4	;volatile
  1909  02E8                     l1648:
  1910                           
  1911                           ;main.c: 221:     TRISCbits.TRISC6 = 0;
  1912  02E8  1307               	bcf	7,6	;volatile
  1913  02E9                     l1650:
  1914                           
  1915                           ;main.c: 224:      TXIE = 0;
  1916  02E9  120C               	bcf	12,4	;volatile
  1917  02EA                     l1652:
  1918                           
  1919                           ;main.c: 225:      RCIE = 0;
  1920  02EA  128C               	bcf	12,5	;volatile
  1921  02EB                     l1654:
  1922                           
  1923                           ;main.c: 227:     TRISAbits.TRISA0 = 0;
  1924  02EB  1005               	bcf	5,0	;volatile
  1925  02EC                     l1656:
  1926                           
  1927                           ;main.c: 228:     TRISAbits.TRISA1 = 0;
  1928  02EC  1085               	bcf	5,1	;volatile
  1929  02ED                     l1658:
  1930                           
  1931                           ;main.c: 229:     TRISAbits.TRISA2 = 0;
  1932  02ED  1105               	bcf	5,2	;volatile
  1933  02EE                     l1660:
  1934                           
  1935                           ;main.c: 230:     TRISAbits.TRISA3 = 0;
  1936  02EE  1185               	bcf	5,3	;volatile
  1937  02EF                     l1662:
  1938                           
  1939                           ;main.c: 232:     TRISAbits.TRISA4 = 1;
  1940  02EF  1605               	bsf	5,4	;volatile
  1941  02F0                     l1664:
  1942                           
  1943                           ;main.c: 233:     TRISAbits.TRISA5 = 1;
  1944  02F0  1685               	bsf	5,5	;volatile
  1945  02F1                     l1666:
  1946                           
  1947                           ;main.c: 237:     ADCON0 = 0X80;
  1948  02F1  3080               	movlw	128
  1949  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  1950  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  1951  02F4  009F               	movwf	31	;volatile
  1952  02F5                     l1668:
  1953                           
  1954                           ;main.c: 238:     ADCON1 = 0X8E;
  1955  02F5  308E               	movlw	142
  1956  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  1957  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  1958  02F8  009F               	movwf	31	;volatile
  1959  02F9                     l1670:
  1960                           
  1961                           ;main.c: 243:      SSPCON = 0b00101000;
  1962  02F9  3028               	movlw	40
  1963  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  1964  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  1965  02FC  0094               	movwf	20	;volatile
  1966  02FD                     l1672:
  1967                           
  1968                           ;main.c: 244:   SSPCON2 = 0b00000000;
  1969  02FD  1683               	bsf	3,5	;RP0=1, select bank1
  1970  02FE  1303               	bcf	3,6	;RP1=0, select bank1
  1971  02FF  0191               	clrf	17	;volatile
  1972                           
  1973                           ;main.c: 246:   SSPADD = (32000000/(4*1000000*100))-1;
  1974  0300  30FF               	movlw	255
  1975  0301  0093               	movwf	19	;volatile
  1976  0302                     l1674:
  1977                           
  1978                           ;main.c: 247:   SSPSTAT = 0b00000000;
  1979  0302  0194               	clrf	20	;volatile
  1980  0303                     l231:
  1981  0303  0008               	return
  1982  0304                     __end_of_iniciar_puertos:
  1983                           
  1984                           	psect	text7
  1985  0304                     __ptext7:	
  1986 ;; *************** function _imprimir_valor_leds *****************
  1987 ;; Defined at:
  1988 ;;		line 108 in file "main.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;		None
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;		None
  1993 ;; Return value:  Size  Location     Type
  1994 ;;                  1    wreg      void 
  1995 ;; Registers used:
  1996 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMMON   BANK0   BANK1
  2002 ;;      Params:         0       0       0
  2003 ;;      Locals:         0       0       0
  2004 ;;      Temps:          0       0       0
  2005 ;;      Totals:         0       0       0
  2006 ;;Total ram usage:        0 bytes
  2007 ;; Hardware stack levels used: 1
  2008 ;; Hardware stack levels required when called: 3
  2009 ;; This function calls:
  2010 ;;		_LCD_Print
  2011 ;;		_Rx_Dato
  2012 ;;		_Tx_Dato
  2013 ;;		_evaluar_dato
  2014 ;; This function is called by:
  2015 ;;		_main
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           
  2020                           ;psect for function _imprimir_valor_leds
  2021  0304                     _imprimir_valor_leds:
  2022  0304                     l1618:	
  2023                           ;incstack = 0
  2024                           ; Regs used in _imprimir_valor_leds: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  2025                           
  2026                           
  2027                           ;main.c: 111:     ADRESL = Rx_Dato();
  2028  0304  118A  223A  118A   	fcall	_Rx_Dato
  2029  0307  1683               	bsf	3,5	;RP0=1, select bank1
  2030  0308  1303               	bcf	3,6	;RP1=0, select bank1
  2031  0309  009E               	movwf	30	;volatile
  2032  030A                     l1620:
  2033                           
  2034                           ;main.c: 112:     Tx_Dato(ADRESL);
  2035  030A  081E               	movf	30,w	;volatile
  2036  030B  118A  2244  118A   	fcall	_Tx_Dato
  2037  030E                     l1622:
  2038                           
  2039                           ;main.c: 113:     ADRESH = Rx_Dato();
  2040  030E  118A  223A  118A   	fcall	_Rx_Dato
  2041  0311  1283               	bcf	3,5	;RP0=0, select bank0
  2042  0312  1303               	bcf	3,6	;RP1=0, select bank0
  2043  0313  009E               	movwf	30	;volatile
  2044                           
  2045                           ;main.c: 114:     Tx_Dato(ADRESH);
  2046  0314  081E               	movf	30,w	;volatile
  2047  0315  118A  2244  118A   	fcall	_Tx_Dato
  2048  0318                     l1624:
  2049                           
  2050                           ;main.c: 116:     ADRES = (ADRESH << 8) | ADRESL;
  2051  0318  1283               	bcf	3,5	;RP0=0, select bank0
  2052  0319  1303               	bcf	3,6	;RP1=0, select bank0
  2053  031A  081E               	movf	30,w	;volatile
  2054  031B  00E5               	movwf	_ADRES+1
  2055  031C  1683               	bsf	3,5	;RP0=1, select bank1
  2056  031D  1303               	bcf	3,6	;RP1=0, select bank1
  2057  031E  081E               	movf	30,w	;volatile
  2058  031F  1283               	bcf	3,5	;RP0=0, select bank0
  2059  0320  1303               	bcf	3,6	;RP1=0, select bank0
  2060  0321  00E4               	movwf	_ADRES
  2061  0322                     l1626:
  2062                           
  2063                           ;main.c: 117:     LCD_Print("Rec ");
  2064  0322  3025               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2065  0323  00CE               	movwf	LCD_Print@LCD_Str
  2066  0324  3080               	movlw	128
  2067  0325  00CF               	movwf	LCD_Print@LCD_Str+1
  2068  0326  118A  23E0  118A   	fcall	_LCD_Print
  2069  0329                     l1628:
  2070                           
  2071                           ;main.c: 118:     evaluar_dato();
  2072  0329  118A  270F  118A   	fcall	_evaluar_dato
  2073  032C                     l207:
  2074  032C  0008               	return
  2075  032D                     __end_of_imprimir_valor_leds:
  2076                           
  2077                           	psect	text8
  2078  070F                     __ptext8:	
  2079 ;; *************** function _evaluar_dato *****************
  2080 ;; Defined at:
  2081 ;;		line 85 in file "main.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;		None
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;		None
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  1    wreg      void 
  2088 ;; Registers used:
  2089 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMMON   BANK0   BANK1
  2095 ;;      Params:         0       0       0
  2096 ;;      Locals:         0       0       0
  2097 ;;      Temps:          0       0       0
  2098 ;;      Totals:         0       0       0
  2099 ;;Total ram usage:        0 bytes
  2100 ;; Hardware stack levels used: 1
  2101 ;; Hardware stack levels required when called: 2
  2102 ;; This function calls:
  2103 ;;		_LCD_Print
  2104 ;; This function is called by:
  2105 ;;		_imprimir_valor_leds
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           
  2110                           ;psect for function _evaluar_dato
  2111  070F                     _evaluar_dato:
  2112  070F                     l1506:	
  2113                           ;incstack = 0
  2114                           ; Regs used in _evaluar_dato: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2115                           
  2116                           
  2117                           ;main.c: 87:             if(ADRES < 127)
  2118  070F  1283               	bcf	3,5	;RP0=0, select bank0
  2119  0710  1303               	bcf	3,6	;RP1=0, select bank0
  2120  0711  0865               	movf	_ADRES+1,w
  2121  0712  3A80               	xorlw	128
  2122  0713  00FF               	movwf	btemp+1
  2123  0714  3080               	movlw	128
  2124  0715  027F               	subwf	btemp+1,w
  2125  0716  1D03               	skipz
  2126  0717  2F1A               	goto	u1055
  2127  0718  307F               	movlw	127
  2128  0719  0264               	subwf	_ADRES,w
  2129  071A                     u1055:
  2130  071A  1803               	skipnc
  2131  071B  2F1D               	goto	u1051
  2132  071C  2F1E               	goto	u1050
  2133  071D                     u1051:
  2134  071D  2F27               	goto	l1510
  2135  071E                     u1050:
  2136  071E                     l1508:
  2137                           
  2138                           ;main.c: 88:                 LCD_Print("0V");
  2139  071E  3033               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2140  071F  1283               	bcf	3,5	;RP0=0, select bank0
  2141  0720  1303               	bcf	3,6	;RP1=0, select bank0
  2142  0721  00CE               	movwf	LCD_Print@LCD_Str
  2143  0722  3080               	movlw	128
  2144  0723  00CF               	movwf	LCD_Print@LCD_Str+1
  2145  0724  118A  23E0  118A   	fcall	_LCD_Print
  2146  0727                     l1510:
  2147                           
  2148                           ;main.c: 89:             if(ADRES > 127)
  2149  0727  1283               	bcf	3,5	;RP0=0, select bank0
  2150  0728  1303               	bcf	3,6	;RP1=0, select bank0
  2151  0729  0865               	movf	_ADRES+1,w
  2152  072A  3A80               	xorlw	128
  2153  072B  00FF               	movwf	btemp+1
  2154  072C  3080               	movlw	128
  2155  072D  027F               	subwf	btemp+1,w
  2156  072E  1D03               	skipz
  2157  072F  2F32               	goto	u1065
  2158  0730  3080               	movlw	128
  2159  0731  0264               	subwf	_ADRES,w
  2160  0732                     u1065:
  2161  0732  1C03               	skipc
  2162  0733  2F35               	goto	u1061
  2163  0734  2F36               	goto	u1060
  2164  0735                     u1061:
  2165  0735  2F3F               	goto	l1514
  2166  0736                     u1060:
  2167  0736                     l1512:
  2168                           
  2169                           ;main.c: 90:                 LCD_Print("625mv");
  2170  0736  301F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2171  0737  1283               	bcf	3,5	;RP0=0, select bank0
  2172  0738  1303               	bcf	3,6	;RP1=0, select bank0
  2173  0739  00CE               	movwf	LCD_Print@LCD_Str
  2174  073A  3080               	movlw	128
  2175  073B  00CF               	movwf	LCD_Print@LCD_Str+1
  2176  073C  118A  23E0  118A   	fcall	_LCD_Print
  2177  073F                     l1514:
  2178                           
  2179                           ;main.c: 91:             if(ADRES > 255)
  2180  073F  1283               	bcf	3,5	;RP0=0, select bank0
  2181  0740  1303               	bcf	3,6	;RP1=0, select bank0
  2182  0741  0865               	movf	_ADRES+1,w
  2183  0742  3A80               	xorlw	128
  2184  0743  00FF               	movwf	btemp+1
  2185  0744  3081               	movlw	129
  2186  0745  027F               	subwf	btemp+1,w
  2187  0746  1D03               	skipz
  2188  0747  2F4A               	goto	u1075
  2189  0748  3000               	movlw	0
  2190  0749  0264               	subwf	_ADRES,w
  2191  074A                     u1075:
  2192  074A  1C03               	skipc
  2193  074B  2F4D               	goto	u1071
  2194  074C  2F4E               	goto	u1070
  2195  074D                     u1071:
  2196  074D  2F57               	goto	l1518
  2197  074E                     u1070:
  2198  074E                     l1516:
  2199                           
  2200                           ;main.c: 92:                 LCD_Print("1.25V");
  2201  074E  3007               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2202  074F  1283               	bcf	3,5	;RP0=0, select bank0
  2203  0750  1303               	bcf	3,6	;RP1=0, select bank0
  2204  0751  00CE               	movwf	LCD_Print@LCD_Str
  2205  0752  3080               	movlw	128
  2206  0753  00CF               	movwf	LCD_Print@LCD_Str+1
  2207  0754  118A  23E0  118A   	fcall	_LCD_Print
  2208  0757                     l1518:
  2209                           
  2210                           ;main.c: 93:             if(ADRES > 352)
  2211  0757  1283               	bcf	3,5	;RP0=0, select bank0
  2212  0758  1303               	bcf	3,6	;RP1=0, select bank0
  2213  0759  0865               	movf	_ADRES+1,w
  2214  075A  3A80               	xorlw	128
  2215  075B  00FF               	movwf	btemp+1
  2216  075C  3081               	movlw	129
  2217  075D  027F               	subwf	btemp+1,w
  2218  075E  1D03               	skipz
  2219  075F  2F62               	goto	u1085
  2220  0760  3061               	movlw	97
  2221  0761  0264               	subwf	_ADRES,w
  2222  0762                     u1085:
  2223  0762  1C03               	skipc
  2224  0763  2F65               	goto	u1081
  2225  0764  2F66               	goto	u1080
  2226  0765                     u1081:
  2227  0765  2F6F               	goto	l1522
  2228  0766                     u1080:
  2229  0766                     l1520:
  2230                           
  2231                           ;main.c: 94:                 LCD_Print("1.97V");
  2232  0766  3019               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2233  0767  1283               	bcf	3,5	;RP0=0, select bank0
  2234  0768  1303               	bcf	3,6	;RP1=0, select bank0
  2235  0769  00CE               	movwf	LCD_Print@LCD_Str
  2236  076A  3080               	movlw	128
  2237  076B  00CF               	movwf	LCD_Print@LCD_Str+1
  2238  076C  118A  23E0  118A   	fcall	_LCD_Print
  2239  076F                     l1522:
  2240                           
  2241                           ;main.c: 95:             if(ADRES > 511)
  2242  076F  1283               	bcf	3,5	;RP0=0, select bank0
  2243  0770  1303               	bcf	3,6	;RP1=0, select bank0
  2244  0771  0865               	movf	_ADRES+1,w
  2245  0772  3A80               	xorlw	128
  2246  0773  00FF               	movwf	btemp+1
  2247  0774  3082               	movlw	130
  2248  0775  027F               	subwf	btemp+1,w
  2249  0776  1D03               	skipz
  2250  0777  2F7A               	goto	u1095
  2251  0778  3000               	movlw	0
  2252  0779  0264               	subwf	_ADRES,w
  2253  077A                     u1095:
  2254  077A  1C03               	skipc
  2255  077B  2F7D               	goto	u1091
  2256  077C  2F7E               	goto	u1090
  2257  077D                     u1091:
  2258  077D  2F87               	goto	l1526
  2259  077E                     u1090:
  2260  077E                     l1524:
  2261                           
  2262                           ;main.c: 96:                 LCD_Print("2.5V");
  2263  077E  302A               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2264  077F  1283               	bcf	3,5	;RP0=0, select bank0
  2265  0780  1303               	bcf	3,6	;RP1=0, select bank0
  2266  0781  00CE               	movwf	LCD_Print@LCD_Str
  2267  0782  3080               	movlw	128
  2268  0783  00CF               	movwf	LCD_Print@LCD_Str+1
  2269  0784  118A  23E0  118A   	fcall	_LCD_Print
  2270  0787                     l1526:
  2271                           
  2272                           ;main.c: 97:             if(ADRES > 639)
  2273  0787  1283               	bcf	3,5	;RP0=0, select bank0
  2274  0788  1303               	bcf	3,6	;RP1=0, select bank0
  2275  0789  0865               	movf	_ADRES+1,w
  2276  078A  3A80               	xorlw	128
  2277  078B  00FF               	movwf	btemp+1
  2278  078C  3082               	movlw	130
  2279  078D  027F               	subwf	btemp+1,w
  2280  078E  1D03               	skipz
  2281  078F  2F92               	goto	u1105
  2282  0790  3080               	movlw	128
  2283  0791  0264               	subwf	_ADRES,w
  2284  0792                     u1105:
  2285  0792  1C03               	skipc
  2286  0793  2F95               	goto	u1101
  2287  0794  2F96               	goto	u1100
  2288  0795                     u1101:
  2289  0795  2F9F               	goto	l1530
  2290  0796                     u1100:
  2291  0796                     l1528:
  2292                           
  2293                           ;main.c: 98:                 LCD_Print("3.12V");
  2294  0796  3001               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2295  0797  1283               	bcf	3,5	;RP0=0, select bank0
  2296  0798  1303               	bcf	3,6	;RP1=0, select bank0
  2297  0799  00CE               	movwf	LCD_Print@LCD_Str
  2298  079A  3080               	movlw	128
  2299  079B  00CF               	movwf	LCD_Print@LCD_Str+1
  2300  079C  118A  23E0  118A   	fcall	_LCD_Print
  2301  079F                     l1530:
  2302                           
  2303                           ;main.c: 99:             if(ADRES > 767)
  2304  079F  1283               	bcf	3,5	;RP0=0, select bank0
  2305  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  2306  07A1  0865               	movf	_ADRES+1,w
  2307  07A2  3A80               	xorlw	128
  2308  07A3  00FF               	movwf	btemp+1
  2309  07A4  3083               	movlw	131
  2310  07A5  027F               	subwf	btemp+1,w
  2311  07A6  1D03               	skipz
  2312  07A7  2FAA               	goto	u1115
  2313  07A8  3000               	movlw	0
  2314  07A9  0264               	subwf	_ADRES,w
  2315  07AA                     u1115:
  2316  07AA  1C03               	skipc
  2317  07AB  2FAD               	goto	u1111
  2318  07AC  2FAE               	goto	u1110
  2319  07AD                     u1111:
  2320  07AD  2FB7               	goto	l1534
  2321  07AE                     u1110:
  2322  07AE                     l1532:
  2323                           
  2324                           ;main.c: 100:                 LCD_Print("3.75V");
  2325  07AE  300D               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2326  07AF  1283               	bcf	3,5	;RP0=0, select bank0
  2327  07B0  1303               	bcf	3,6	;RP1=0, select bank0
  2328  07B1  00CE               	movwf	LCD_Print@LCD_Str
  2329  07B2  3080               	movlw	128
  2330  07B3  00CF               	movwf	LCD_Print@LCD_Str+1
  2331  07B4  118A  23E0  118A   	fcall	_LCD_Print
  2332  07B7                     l1534:
  2333                           
  2334                           ;main.c: 101:             if(ADRES > 894)
  2335  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  2336  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  2337  07B9  0865               	movf	_ADRES+1,w
  2338  07BA  3A80               	xorlw	128
  2339  07BB  00FF               	movwf	btemp+1
  2340  07BC  3083               	movlw	131
  2341  07BD  027F               	subwf	btemp+1,w
  2342  07BE  1D03               	skipz
  2343  07BF  2FC2               	goto	u1125
  2344  07C0  307F               	movlw	127
  2345  07C1  0264               	subwf	_ADRES,w
  2346  07C2                     u1125:
  2347  07C2  1C03               	skipc
  2348  07C3  2FC5               	goto	u1121
  2349  07C4  2FC6               	goto	u1120
  2350  07C5                     u1121:
  2351  07C5  2FCF               	goto	l1538
  2352  07C6                     u1120:
  2353  07C6                     l1536:
  2354                           
  2355                           ;main.c: 102:                 LCD_Print("4.37V");
  2356  07C6  3013               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2357  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  2358  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  2359  07C9  00CE               	movwf	LCD_Print@LCD_Str
  2360  07CA  3080               	movlw	128
  2361  07CB  00CF               	movwf	LCD_Print@LCD_Str+1
  2362  07CC  118A  23E0  118A   	fcall	_LCD_Print
  2363  07CF                     l1538:
  2364                           
  2365                           ;main.c: 103:             if(ADRES > 1022)
  2366  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  2367  07D0  1303               	bcf	3,6	;RP1=0, select bank0
  2368  07D1  0865               	movf	_ADRES+1,w
  2369  07D2  3A80               	xorlw	128
  2370  07D3  00FF               	movwf	btemp+1
  2371  07D4  3083               	movlw	131
  2372  07D5  027F               	subwf	btemp+1,w
  2373  07D6  1D03               	skipz
  2374  07D7  2FDA               	goto	u1135
  2375  07D8  30FF               	movlw	255
  2376  07D9  0264               	subwf	_ADRES,w
  2377  07DA                     u1135:
  2378  07DA  1C03               	skipc
  2379  07DB  2FDD               	goto	u1131
  2380  07DC  2FDE               	goto	u1130
  2381  07DD                     u1131:
  2382  07DD  2FE7               	goto	l204
  2383  07DE                     u1130:
  2384  07DE                     l1540:
  2385                           
  2386                           ;main.c: 104:                 LCD_Print("5V");
  2387  07DE  302C               	movlw	(low (((STR_5+2)-__stringbase)| (0+32768)))& (0+255)
  2388  07DF  1283               	bcf	3,5	;RP0=0, select bank0
  2389  07E0  1303               	bcf	3,6	;RP1=0, select bank0
  2390  07E1  00CE               	movwf	LCD_Print@LCD_Str
  2391  07E2  3080               	movlw	128
  2392  07E3  00CF               	movwf	LCD_Print@LCD_Str+1
  2393  07E4  118A  23E0  118A   	fcall	_LCD_Print
  2394  07E7                     l204:
  2395  07E7  0008               	return
  2396  07E8                     __end_of_evaluar_dato:
  2397                           
  2398                           	psect	text9
  2399  03E0                     __ptext9:	
  2400 ;; *************** function _LCD_Print *****************
  2401 ;; Defined at:
  2402 ;;		line 113 in file "./lcd.h"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;  LCD_Str         2    3[BANK0 ] PTR unsigned char 
  2405 ;;		 -> M(41), STR_11(4), STR_10(5), STR_9(3), 
  2406 ;;		 -> STR_8(6), STR_7(6), STR_6(6), STR_5(5), 
  2407 ;;		 -> STR_4(6), STR_3(6), STR_2(6), STR_1(3), 
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;  i               1    6[BANK0 ] unsigned char 
  2410 ;; Return value:  Size  Location     Type
  2411 ;;                  1    wreg      void 
  2412 ;; Registers used:
  2413 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMMON   BANK0   BANK1
  2419 ;;      Params:         0       2       0
  2420 ;;      Locals:         0       1       0
  2421 ;;      Temps:          0       1       0
  2422 ;;      Totals:         0       4       0
  2423 ;;Total ram usage:        4 bytes
  2424 ;; Hardware stack levels used: 1
  2425 ;; Hardware stack levels required when called: 1
  2426 ;; This function calls:
  2427 ;;		_LCD_Write_Nibble
  2428 ;; This function is called by:
  2429 ;;		_evaluar_dato
  2430 ;;		_imprimir_valor_leds
  2431 ;;		_main
  2432 ;;		_inicio_presentacion
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           
  2437                           ;psect for function _LCD_Print
  2438  03E0                     _LCD_Print:
  2439  03E0                     l1346:	
  2440                           ;incstack = 0
  2441                           ; Regs used in _LCD_Print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2442                           
  2443                           
  2444                           ;./lcd.h: 113: void LCD_Print(char* LCD_Str);./lcd.h: 114: {;./lcd.h: 115:   uint8_t i =
      +                           0;
  2445  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  2446  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  2447  03E2  01D1               	clrf	LCD_Print@i
  2448  03E3                     l1348:
  2449                           
  2450                           ;./lcd.h: 116:   RS = 1;
  2451  03E3  1468               	bsf	_RS/(0+8),_RS& (0+7)
  2452                           
  2453                           ;./lcd.h: 117:   while(LCD_Str[i] != '\0')
  2454  03E4  2C0F               	goto	l1354
  2455  03E5                     l1350:
  2456                           
  2457                           ;./lcd.h: 118:   {;./lcd.h: 119:     LCD_Write_Nibble(LCD_Str[i] >> 4);
  2458  03E5  0851               	movf	LCD_Print@i,w
  2459  03E6  074E               	addwf	LCD_Print@LCD_Str,w
  2460  03E7  0084               	movwf	4
  2461  03E8  084F               	movf	LCD_Print@LCD_Str+1,w
  2462  03E9  1803               	skipnc
  2463  03EA  0A4F               	incf	LCD_Print@LCD_Str+1,w
  2464  03EB  00FF               	movwf	btemp+1
  2465  03EC  118A  2002  118A   	fcall	stringtab
  2466  03EF  00D0               	movwf	??_LCD_Print
  2467  03F0  3004               	movlw	4
  2468  03F1                     u695:
  2469  03F1  1003               	clrc
  2470  03F2  0CD0               	rrf	??_LCD_Print,f
  2471  03F3  3EFF               	addlw	-1
  2472  03F4  1D03               	skipz
  2473  03F5  2BF1               	goto	u695
  2474  03F6  0850               	movf	??_LCD_Print,w
  2475  03F7  118A  241F  118A   	fcall	_LCD_Write_Nibble
  2476                           
  2477                           ;./lcd.h: 120:     LCD_Write_Nibble(LCD_Str[i++] );
  2478  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2479  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  2480  03FC  0851               	movf	LCD_Print@i,w
  2481  03FD  074E               	addwf	LCD_Print@LCD_Str,w
  2482  03FE  0084               	movwf	4
  2483  03FF  084F               	movf	LCD_Print@LCD_Str+1,w
  2484  0400  1803               	skipnc
  2485  0401  0A4F               	incf	LCD_Print@LCD_Str+1,w
  2486  0402  00FF               	movwf	btemp+1
  2487  0403  118A  2002  118A   	fcall	stringtab
  2488  0406  118A  241F  118A   	fcall	_LCD_Write_Nibble
  2489  0409                     l1352:
  2490  0409  3001               	movlw	1
  2491  040A  1283               	bcf	3,5	;RP0=0, select bank0
  2492  040B  1303               	bcf	3,6	;RP1=0, select bank0
  2493  040C  00D0               	movwf	??_LCD_Print
  2494  040D  0850               	movf	??_LCD_Print,w
  2495  040E  07D1               	addwf	LCD_Print@i,f
  2496  040F                     l1354:
  2497                           
  2498                           ;./lcd.h: 117:   while(LCD_Str[i] != '\0')
  2499  040F  0851               	movf	LCD_Print@i,w
  2500  0410  074E               	addwf	LCD_Print@LCD_Str,w
  2501  0411  0084               	movwf	4
  2502  0412  084F               	movf	LCD_Print@LCD_Str+1,w
  2503  0413  1803               	skipnc
  2504  0414  0A4F               	incf	LCD_Print@LCD_Str+1,w
  2505  0415  00FF               	movwf	btemp+1
  2506  0416  118A  2002  118A   	fcall	stringtab
  2507  0419  3A00               	xorlw	0
  2508  041A  1D03               	skipz
  2509  041B  2C1D               	goto	u701
  2510  041C  2C1E               	goto	u700
  2511  041D                     u701:
  2512  041D  2BE5               	goto	l1350
  2513  041E                     u700:
  2514  041E                     l119:
  2515  041E  0008               	return
  2516  041F                     __end_of_LCD_Print:
  2517                           
  2518                           	psect	text10
  2519  032D                     __ptext10:	
  2520 ;; *************** function _enviar_datos *****************
  2521 ;; Defined at:
  2522 ;;		line 146 in file "main.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;		None
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;		None
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  1    wreg      void 
  2529 ;; Registers used:
  2530 ;;		wreg, status,2, status,0, pclath, cstack
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMMON   BANK0   BANK1
  2536 ;;      Params:         0       0       0
  2537 ;;      Locals:         0       0       0
  2538 ;;      Temps:          0       2       0
  2539 ;;      Totals:         0       2       0
  2540 ;;Total ram usage:        2 bytes
  2541 ;; Hardware stack levels used: 1
  2542 ;; Hardware stack levels required when called: 1
  2543 ;; This function calls:
  2544 ;;		_Canal0
  2545 ;;		_Rx_Dato
  2546 ;;		_Tx_Dato
  2547 ;; This function is called by:
  2548 ;;		_main
  2549 ;; This function uses a non-reentrant model
  2550 ;;
  2551                           
  2552                           
  2553                           ;psect for function _enviar_datos
  2554  032D                     _enviar_datos:
  2555  032D                     l1630:	
  2556                           ;incstack = 0
  2557                           ; Regs used in _enviar_datos: [wreg+status,2+status,0+pclath+cstack]
  2558                           
  2559                           
  2560                           ;main.c: 148:          Canal0(2);
  2561  032D  3002               	movlw	2
  2562  032E  1283               	bcf	3,5	;RP0=0, select bank0
  2563  032F  1303               	bcf	3,6	;RP1=0, select bank0
  2564  0330  00CB               	movwf	Canal0@z
  2565  0331  3000               	movlw	0
  2566  0332  00CC               	movwf	Canal0@z+1
  2567  0333  118A  227A  118A   	fcall	_Canal0
  2568                           
  2569                           ;main.c: 149:          Tx_Dato(ADRESL);
  2570  0336  1683               	bsf	3,5	;RP0=1, select bank1
  2571  0337  1303               	bcf	3,6	;RP1=0, select bank1
  2572  0338  081E               	movf	30,w	;volatile
  2573  0339  118A  2244  118A   	fcall	_Tx_Dato
  2574  033C                     l1632:
  2575                           
  2576                           ;main.c: 150:          ECO = Rx_Dato();
  2577  033C  118A  223A  118A   	fcall	_Rx_Dato
  2578  033F  1283               	bcf	3,5	;RP0=0, select bank0
  2579  0340  1303               	bcf	3,6	;RP1=0, select bank0
  2580  0341  00CF               	movwf	??_enviar_datos
  2581  0342  01D0               	clrf	??_enviar_datos+1
  2582  0343  084F               	movf	??_enviar_datos,w
  2583  0344  00E6               	movwf	_ECO
  2584  0345  0850               	movf	??_enviar_datos+1,w
  2585  0346  00E7               	movwf	_ECO+1
  2586  0347                     l1634:
  2587                           
  2588                           ;main.c: 151:          Tx_Dato(ADRESH);
  2589  0347  081E               	movf	30,w	;volatile
  2590  0348  118A  2244  118A   	fcall	_Tx_Dato
  2591                           
  2592                           ;main.c: 152:          ECO = Rx_Dato();
  2593  034B  118A  223A  118A   	fcall	_Rx_Dato
  2594  034E  1283               	bcf	3,5	;RP0=0, select bank0
  2595  034F  1303               	bcf	3,6	;RP1=0, select bank0
  2596  0350  00CF               	movwf	??_enviar_datos
  2597  0351  01D0               	clrf	??_enviar_datos+1
  2598  0352  084F               	movf	??_enviar_datos,w
  2599  0353  00E6               	movwf	_ECO
  2600  0354  0850               	movf	??_enviar_datos+1,w
  2601  0355  00E7               	movwf	_ECO+1
  2602  0356                     l215:
  2603  0356  0008               	return
  2604  0357                     __end_of_enviar_datos:
  2605                           
  2606                           	psect	text11
  2607  0244                     __ptext11:	
  2608 ;; *************** function _Tx_Dato *****************
  2609 ;; Defined at:
  2610 ;;		line 63 in file "main.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;  X               1    wreg     unsigned char 
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;  X               1    0[BANK0 ] unsigned char 
  2615 ;; Return value:  Size  Location     Type
  2616 ;;                  1    wreg      void 
  2617 ;; Registers used:
  2618 ;;		wreg
  2619 ;; Tracked objects:
  2620 ;;		On entry : 0/0
  2621 ;;		On exit  : 0/0
  2622 ;;		Unchanged: 0/0
  2623 ;; Data sizes:     COMMON   BANK0   BANK1
  2624 ;;      Params:         0       0       0
  2625 ;;      Locals:         0       1       0
  2626 ;;      Temps:          0       0       0
  2627 ;;      Totals:         0       1       0
  2628 ;;Total ram usage:        1 bytes
  2629 ;; Hardware stack levels used: 1
  2630 ;; This function calls:
  2631 ;;		Nothing
  2632 ;; This function is called by:
  2633 ;;		_imprimir_valor_leds
  2634 ;;		_enviar_datos
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638                           
  2639                           ;psect for function _Tx_Dato
  2640  0244                     _Tx_Dato:
  2641                           
  2642                           ;incstack = 0
  2643                           ; Regs used in _Tx_Dato: [wreg]
  2644                           ;Tx_Dato@X stored from wreg
  2645  0244  1283               	bcf	3,5	;RP0=0, select bank0
  2646  0245  1303               	bcf	3,6	;RP1=0, select bank0
  2647  0246  00CB               	movwf	Tx_Dato@X
  2648  0247                     l1492:
  2649                           
  2650                           ;main.c: 63: void Tx_Dato(unsigned char X);main.c: 64: {;main.c: 65:     PIR1bits.TXIF =
      +                           0;
  2651  0247  120C               	bcf	12,4	;volatile
  2652  0248                     l1494:
  2653                           
  2654                           ;main.c: 66:     TXREG = X;
  2655  0248  084B               	movf	Tx_Dato@X,w
  2656  0249  0099               	movwf	25	;volatile
  2657  024A                     l1496:
  2658                           
  2659                           ;main.c: 70:                 if(TXSTAbits.TRMT == 0)
  2660  024A  1683               	bsf	3,5	;RP0=1, select bank1
  2661  024B  1303               	bcf	3,6	;RP1=0, select bank1
  2662  024C  1898               	btfsc	24,1	;volatile
  2663  024D  2A4F               	goto	u1031
  2664  024E  2A50               	goto	u1030
  2665  024F                     u1031:
  2666  024F  2A51               	goto	l187
  2667  0250                     u1030:
  2668  0250  2A4A               	goto	l1496
  2669  0251                     l187:
  2670  0251  0008               	return
  2671  0252                     __end_of_Tx_Dato:
  2672                           
  2673                           	psect	text12
  2674  023A                     __ptext12:	
  2675 ;; *************** function _Rx_Dato *****************
  2676 ;; Defined at:
  2677 ;;		line 76 in file "main.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;		None
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;		None
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  1    wreg      unsigned char 
  2684 ;; Registers used:
  2685 ;;		wreg
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMMON   BANK0   BANK1
  2691 ;;      Params:         0       0       0
  2692 ;;      Locals:         0       0       0
  2693 ;;      Temps:          0       0       0
  2694 ;;      Totals:         0       0       0
  2695 ;;Total ram usage:        0 bytes
  2696 ;; Hardware stack levels used: 1
  2697 ;; This function calls:
  2698 ;;		Nothing
  2699 ;; This function is called by:
  2700 ;;		_imprimir_valor_leds
  2701 ;;		_enviar_datos
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           
  2706                           ;psect for function _Rx_Dato
  2707  023A                     _Rx_Dato:
  2708  023A                     l190:	
  2709                           ;incstack = 0
  2710                           ; Regs used in _Rx_Dato: [wreg]
  2711                           ;main.c: 78:     wait:
  2712                           
  2713                           
  2714                           ;main.c: 79:         if(PIR1bits.RCIF == 0)
  2715  023A  1283               	bcf	3,5	;RP0=0, select bank0
  2716  023B  1303               	bcf	3,6	;RP1=0, select bank0
  2717  023C  1A8C               	btfsc	12,5	;volatile
  2718  023D  2A3F               	goto	u1041
  2719  023E  2A40               	goto	u1040
  2720  023F                     u1041:
  2721  023F  2A41               	goto	l191
  2722  0240                     u1040:
  2723  0240  2A3A               	goto	l190
  2724  0241                     l191:
  2725                           
  2726                           ;main.c: 81:     PIR1bits.RCIF = 0;
  2727  0241  128C               	bcf	12,5	;volatile
  2728  0242                     l1502:
  2729                           
  2730                           ;main.c: 82:     return RCREG;
  2731  0242  081A               	movf	26,w	;volatile
  2732  0243                     l192:
  2733  0243  0008               	return
  2734  0244                     __end_of_Rx_Dato:
  2735                           
  2736                           	psect	text13
  2737  027A                     __ptext13:	
  2738 ;; *************** function _Canal0 *****************
  2739 ;; Defined at:
  2740 ;;		line 121 in file "main.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;  z               2    0[BANK0 ] int 
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;		None
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  1    wreg      void 
  2747 ;; Registers used:
  2748 ;;		wreg
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMMON   BANK0   BANK1
  2754 ;;      Params:         0       2       0
  2755 ;;      Locals:         0       0       0
  2756 ;;      Temps:          0       2       0
  2757 ;;      Totals:         0       4       0
  2758 ;;Total ram usage:        4 bytes
  2759 ;; Hardware stack levels used: 1
  2760 ;; This function calls:
  2761 ;;		Nothing
  2762 ;; This function is called by:
  2763 ;;		_enviar_datos
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           
  2768                           ;psect for function _Canal0
  2769  027A                     _Canal0:
  2770  027A                     l1542:	
  2771                           ;incstack = 0
  2772                           ; Regs used in _Canal0: [wreg]
  2773                           
  2774                           
  2775                           ;main.c: 121: void Canal0(int z);main.c: 122: {;main.c: 124:     CHS2 = 0;
  2776  027A  1283               	bcf	3,5	;RP0=0, select bank0
  2777  027B  1303               	bcf	3,6	;RP1=0, select bank0
  2778  027C  129F               	bcf	31,5	;volatile
  2779                           
  2780                           ;main.c: 125:     CHS1 = 0;
  2781  027D  121F               	bcf	31,4	;volatile
  2782                           
  2783                           ;main.c: 126:     CHS0 = 0;
  2784  027E  119F               	bcf	31,3	;volatile
  2785                           
  2786                           ;main.c: 128:     ADON = 1;
  2787  027F  141F               	bsf	31,0	;volatile
  2788  0280                     l1544:
  2789                           
  2790                           ;main.c: 130:     _delay((unsigned long)((1)*(32000000/4000.0)));
  2791  0280  300B               	movlw	11
  2792  0281  1283               	bcf	3,5	;RP0=0, select bank0
  2793  0282  1303               	bcf	3,6	;RP1=0, select bank0
  2794  0283  00CE               	movwf	??_Canal0+1
  2795  0284  3062               	movlw	98
  2796  0285  00CD               	movwf	??_Canal0
  2797  0286                     u1327:
  2798  0286  0BCD               	decfsz	??_Canal0,f
  2799  0287  2A86               	goto	u1327
  2800  0288  0BCE               	decfsz	??_Canal0+1,f
  2801  0289  2A86               	goto	u1327
  2802  028A                     l1546:
  2803                           
  2804                           ;main.c: 132:      GO = 1;
  2805  028A  1283               	bcf	3,5	;RP0=0, select bank0
  2806  028B  1303               	bcf	3,6	;RP1=0, select bank0
  2807  028C  151F               	bsf	31,2	;volatile
  2808  028D                     l1548:
  2809  028D  1B0C               	btfsc	12,6	;volatile
  2810  028E  2A90               	goto	u1141
  2811  028F  2A91               	goto	u1140
  2812  0290                     u1141:
  2813  0290  2A92               	goto	l211
  2814  0291                     u1140:
  2815  0291  2A8D               	goto	l1548
  2816  0292                     l211:
  2817                           
  2818                           ;main.c: 138:     ADON = 0;
  2819  0292  101F               	bcf	31,0	;volatile
  2820                           
  2821                           ;main.c: 142:     ADIF = 0;
  2822  0293  130C               	bcf	12,6	;volatile
  2823  0294                     l212:
  2824  0294  0008               	return
  2825  0295                     __end_of_Canal0:
  2826                           
  2827                           	psect	text14
  2828  0263                     __ptext14:	
  2829 ;; *************** function _LCD_PutC *****************
  2830 ;; Defined at:
  2831 ;;		line 106 in file "./lcd.h"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;  LCD_Char        1    wreg     unsigned char 
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;  LCD_Char        1    4[BANK0 ] unsigned char 
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  1    wreg      void 
  2838 ;; Registers used:
  2839 ;;		wreg, status,2, status,0, pclath, cstack
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMMON   BANK0   BANK1
  2845 ;;      Params:         0       0       0
  2846 ;;      Locals:         0       1       0
  2847 ;;      Temps:          0       1       0
  2848 ;;      Totals:         0       2       0
  2849 ;;Total ram usage:        2 bytes
  2850 ;; Hardware stack levels used: 1
  2851 ;; Hardware stack levels required when called: 1
  2852 ;; This function calls:
  2853 ;;		_LCD_Write_Nibble
  2854 ;; This function is called by:
  2855 ;;		_main
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           
  2860                           ;psect for function _LCD_PutC
  2861  0263                     _LCD_PutC:
  2862                           
  2863                           ;incstack = 0
  2864                           ; Regs used in _LCD_PutC: [wreg+status,2+status,0+pclath+cstack]
  2865                           ;LCD_PutC@LCD_Char stored from wreg
  2866  0263  1283               	bcf	3,5	;RP0=0, select bank0
  2867  0264  1303               	bcf	3,6	;RP1=0, select bank0
  2868  0265  00CF               	movwf	LCD_PutC@LCD_Char
  2869  0266                     l1552:
  2870                           
  2871                           ;./lcd.h: 106: void LCD_PutC(char LCD_Char);./lcd.h: 107: {;./lcd.h: 108:   RS = 1;
  2872  0266  1468               	bsf	_RS/(0+8),_RS& (0+7)
  2873  0267                     l1554:
  2874                           
  2875                           ;./lcd.h: 109:   LCD_Write_Nibble(LCD_Char >> 4);
  2876  0267  084F               	movf	LCD_PutC@LCD_Char,w
  2877  0268  00CE               	movwf	??_LCD_PutC
  2878  0269  3004               	movlw	4
  2879  026A                     u1155:
  2880  026A  1003               	clrc
  2881  026B  0CCE               	rrf	??_LCD_PutC,f
  2882  026C  3EFF               	addlw	-1
  2883  026D  1D03               	skipz
  2884  026E  2A6A               	goto	u1155
  2885  026F  084E               	movf	??_LCD_PutC,w
  2886  0270  118A  241F  118A   	fcall	_LCD_Write_Nibble
  2887                           
  2888                           ;./lcd.h: 110:   LCD_Write_Nibble(LCD_Char );
  2889  0273  1283               	bcf	3,5	;RP0=0, select bank0
  2890  0274  1303               	bcf	3,6	;RP1=0, select bank0
  2891  0275  084F               	movf	LCD_PutC@LCD_Char,w
  2892  0276  118A  241F  118A   	fcall	_LCD_Write_Nibble
  2893  0279                     l113:
  2894  0279  0008               	return
  2895  027A                     __end_of_LCD_PutC:
  2896                           
  2897                           	psect	text15
  2898  057A                     __ptext15:	
  2899 ;; *************** function _LCD_Begin *****************
  2900 ;; Defined at:
  2901 ;;		line 124 in file "./lcd.h"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;		None
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;		None
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  1    wreg      void 
  2908 ;; Registers used:
  2909 ;;		wreg, status,2, status,0, pclath, cstack
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMMON   BANK0   BANK1
  2915 ;;      Params:         0       0       0
  2916 ;;      Locals:         0       0       0
  2917 ;;      Temps:          0       3       0
  2918 ;;      Totals:         0       3       0
  2919 ;;Total ram usage:        3 bytes
  2920 ;; Hardware stack levels used: 1
  2921 ;; Hardware stack levels required when called: 2
  2922 ;; This function calls:
  2923 ;;		_LCD_Cmd
  2924 ;; This function is called by:
  2925 ;;		_main
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           
  2930                           ;psect for function _LCD_Begin
  2931  057A                     _LCD_Begin:
  2932  057A                     l1556:	
  2933                           ;incstack = 0
  2934                           ; Regs used in _LCD_Begin: [wreg+status,2+status,0+pclath+cstack]
  2935                           
  2936                           
  2937                           ;./lcd.h: 126:   RS = 0;
  2938  057A  1283               	bcf	3,5	;RP0=0, select bank0
  2939  057B  1303               	bcf	3,6	;RP1=0, select bank0
  2940  057C  1068               	bcf	_RS/(0+8),_RS& (0+7)
  2941                           
  2942                           ;./lcd.h: 127:   PORTCbits.RC5 = 0;
  2943  057D  1287               	bcf	7,5	;volatile
  2944                           
  2945                           ;./lcd.h: 128:   PORTCbits.RC6 = 0;
  2946  057E  1307               	bcf	7,6	;volatile
  2947                           
  2948                           ;./lcd.h: 129:   PORTCbits.RC7 = 0;
  2949  057F  1387               	bcf	7,7	;volatile
  2950                           
  2951                           ;./lcd.h: 134:   PORTBbits.RB4 = 0;
  2952  0580  1206               	bcf	6,4	;volatile
  2953                           
  2954                           ;./lcd.h: 135:   PORTBbits.RB5 = 0;
  2955  0581  1286               	bcf	6,5	;volatile
  2956                           
  2957                           ;./lcd.h: 136:   PORTBbits.RB6 = 0;
  2958  0582  1306               	bcf	6,6	;volatile
  2959                           
  2960                           ;./lcd.h: 137:   PORTBbits.RB7 = 0;
  2961  0583  1386               	bcf	6,7	;volatile
  2962                           
  2963                           ;./lcd.h: 138:   TRISCbits.TRISC5 = 0;
  2964  0584  1683               	bsf	3,5	;RP0=1, select bank1
  2965  0585  1303               	bcf	3,6	;RP1=0, select bank1
  2966  0586  1287               	bcf	7,5	;volatile
  2967                           
  2968                           ;./lcd.h: 139:   TRISCbits.TRISC6 = 0;
  2969  0587  1307               	bcf	7,6	;volatile
  2970                           
  2971                           ;./lcd.h: 140:   TRISCbits.TRISC7 = 0;
  2972  0588  1387               	bcf	7,7	;volatile
  2973                           
  2974                           ;./lcd.h: 145:   TRISBbits.TRISB4 = 0;
  2975  0589  1206               	bcf	6,4	;volatile
  2976                           
  2977                           ;./lcd.h: 146:   TRISBbits.TRISB5 = 0;
  2978  058A  1286               	bcf	6,5	;volatile
  2979                           
  2980                           ;./lcd.h: 147:   TRISBbits.TRISB6 = 0;
  2981  058B  1306               	bcf	6,6	;volatile
  2982                           
  2983                           ;./lcd.h: 148:   TRISBbits.TRISB7 = 0;
  2984  058C  1386               	bcf	6,7	;volatile
  2985  058D                     l1558:
  2986                           
  2987                           ;./lcd.h: 149:   _delay((unsigned long)((40)*(32000000/4000.0)));
  2988  058D  3002               	movlw	2
  2989  058E  1283               	bcf	3,5	;RP0=0, select bank0
  2990  058F  1303               	bcf	3,6	;RP1=0, select bank0
  2991  0590  00D3               	movwf	??_LCD_Begin+2
  2992  0591  30A0               	movlw	160
  2993  0592  00D2               	movwf	??_LCD_Begin+1
  2994  0593  3092               	movlw	146
  2995  0594  00D1               	movwf	??_LCD_Begin
  2996  0595                     u1337:
  2997  0595  0BD1               	decfsz	??_LCD_Begin,f
  2998  0596  2D95               	goto	u1337
  2999  0597  0BD2               	decfsz	??_LCD_Begin+1,f
  3000  0598  2D95               	goto	u1337
  3001  0599  0BD3               	decfsz	??_LCD_Begin+2,f
  3002  059A  2D95               	goto	u1337
  3003  059B                     l1560:
  3004                           
  3005                           ;./lcd.h: 150:   LCD_Cmd(3);
  3006  059B  3003               	movlw	3
  3007  059C  118A  2382  118A   	fcall	_LCD_Cmd
  3008  059F                     l1562:
  3009                           
  3010                           ;./lcd.h: 151:   _delay((unsigned long)((5)*(32000000/4000.0)));
  3011  059F  3034               	movlw	52
  3012  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  3013  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  3014  05A2  00D2               	movwf	??_LCD_Begin+1
  3015  05A3  30F1               	movlw	241
  3016  05A4  00D1               	movwf	??_LCD_Begin
  3017  05A5                     u1347:
  3018  05A5  0BD1               	decfsz	??_LCD_Begin,f
  3019  05A6  2DA5               	goto	u1347
  3020  05A7  0BD2               	decfsz	??_LCD_Begin+1,f
  3021  05A8  2DA5               	goto	u1347
  3022  05A9  0000               	nop
  3023                           
  3024                           ;./lcd.h: 152:   LCD_Cmd(3);
  3025  05AA  3003               	movlw	3
  3026  05AB  118A  2382  118A   	fcall	_LCD_Cmd
  3027  05AE                     l1564:
  3028                           
  3029                           ;./lcd.h: 153:   _delay((unsigned long)((5)*(32000000/4000.0)));
  3030  05AE  3034               	movlw	52
  3031  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  3032  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  3033  05B1  00D2               	movwf	??_LCD_Begin+1
  3034  05B2  30F1               	movlw	241
  3035  05B3  00D1               	movwf	??_LCD_Begin
  3036  05B4                     u1357:
  3037  05B4  0BD1               	decfsz	??_LCD_Begin,f
  3038  05B5  2DB4               	goto	u1357
  3039  05B6  0BD2               	decfsz	??_LCD_Begin+1,f
  3040  05B7  2DB4               	goto	u1357
  3041  05B8  0000               	nop
  3042  05B9                     l1566:
  3043                           
  3044                           ;./lcd.h: 154:   LCD_Cmd(3);
  3045  05B9  3003               	movlw	3
  3046  05BA  118A  2382  118A   	fcall	_LCD_Cmd
  3047                           
  3048                           ;./lcd.h: 155:   _delay((unsigned long)((5)*(32000000/4000.0)));
  3049  05BD  3034               	movlw	52
  3050  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  3051  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  3052  05C0  00D2               	movwf	??_LCD_Begin+1
  3053  05C1  30F1               	movlw	241
  3054  05C2  00D1               	movwf	??_LCD_Begin
  3055  05C3                     u1367:
  3056  05C3  0BD1               	decfsz	??_LCD_Begin,f
  3057  05C4  2DC3               	goto	u1367
  3058  05C5  0BD2               	decfsz	??_LCD_Begin+1,f
  3059  05C6  2DC3               	goto	u1367
  3060  05C7  0000               	nop
  3061  05C8                     l1568:
  3062                           
  3063                           ;./lcd.h: 156:   LCD_Cmd(0x02);
  3064  05C8  3002               	movlw	2
  3065  05C9  118A  2382  118A   	fcall	_LCD_Cmd
  3066  05CC                     l1570:
  3067                           
  3068                           ;./lcd.h: 157:   _delay((unsigned long)((5)*(32000000/4000.0)));
  3069  05CC  3034               	movlw	52
  3070  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  3071  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  3072  05CF  00D2               	movwf	??_LCD_Begin+1
  3073  05D0  30F1               	movlw	241
  3074  05D1  00D1               	movwf	??_LCD_Begin
  3075  05D2                     u1377:
  3076  05D2  0BD1               	decfsz	??_LCD_Begin,f
  3077  05D3  2DD2               	goto	u1377
  3078  05D4  0BD2               	decfsz	??_LCD_Begin+1,f
  3079  05D5  2DD2               	goto	u1377
  3080  05D6  0000               	nop
  3081                           
  3082                           ;./lcd.h: 158:   LCD_Cmd(0x20 | (2 << 2));
  3083  05D7  3028               	movlw	40
  3084  05D8  118A  2382  118A   	fcall	_LCD_Cmd
  3085  05DB                     l1572:
  3086                           
  3087                           ;./lcd.h: 159:   _delay((unsigned long)((50)*(32000000/4000.0)));
  3088  05DB  3003               	movlw	3
  3089  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  3090  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  3091  05DE  00D3               	movwf	??_LCD_Begin+2
  3092  05DF  3008               	movlw	8
  3093  05E0  00D2               	movwf	??_LCD_Begin+1
  3094  05E1  3076               	movlw	118
  3095  05E2  00D1               	movwf	??_LCD_Begin
  3096  05E3                     u1387:
  3097  05E3  0BD1               	decfsz	??_LCD_Begin,f
  3098  05E4  2DE3               	goto	u1387
  3099  05E5  0BD2               	decfsz	??_LCD_Begin+1,f
  3100  05E6  2DE3               	goto	u1387
  3101  05E7  0BD3               	decfsz	??_LCD_Begin+2,f
  3102  05E8  2DE3               	goto	u1387
  3103  05E9  2DEA               	nop2
  3104  05EA                     l1574:
  3105                           
  3106                           ;./lcd.h: 160:   LCD_Cmd(0x0C);
  3107  05EA  300C               	movlw	12
  3108  05EB  118A  2382  118A   	fcall	_LCD_Cmd
  3109                           
  3110                           ;./lcd.h: 161:   _delay((unsigned long)((50)*(32000000/4000.0)));
  3111  05EE  3003               	movlw	3
  3112  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  3113  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  3114  05F1  00D3               	movwf	??_LCD_Begin+2
  3115  05F2  3008               	movlw	8
  3116  05F3  00D2               	movwf	??_LCD_Begin+1
  3117  05F4  3076               	movlw	118
  3118  05F5  00D1               	movwf	??_LCD_Begin
  3119  05F6                     u1397:
  3120  05F6  0BD1               	decfsz	??_LCD_Begin,f
  3121  05F7  2DF6               	goto	u1397
  3122  05F8  0BD2               	decfsz	??_LCD_Begin+1,f
  3123  05F9  2DF6               	goto	u1397
  3124  05FA  0BD3               	decfsz	??_LCD_Begin+2,f
  3125  05FB  2DF6               	goto	u1397
  3126  05FC  2DFD               	nop2
  3127  05FD                     l1576:
  3128                           
  3129                           ;./lcd.h: 162:   LCD_Cmd(0x01);
  3130  05FD  3001               	movlw	1
  3131  05FE  118A  2382  118A   	fcall	_LCD_Cmd
  3132  0601                     l1578:
  3133                           
  3134                           ;./lcd.h: 163:   _delay((unsigned long)((50)*(32000000/4000.0)));
  3135  0601  3003               	movlw	3
  3136  0602  1283               	bcf	3,5	;RP0=0, select bank0
  3137  0603  1303               	bcf	3,6	;RP1=0, select bank0
  3138  0604  00D3               	movwf	??_LCD_Begin+2
  3139  0605  3008               	movlw	8
  3140  0606  00D2               	movwf	??_LCD_Begin+1
  3141  0607  3076               	movlw	118
  3142  0608  00D1               	movwf	??_LCD_Begin
  3143  0609                     u1407:
  3144  0609  0BD1               	decfsz	??_LCD_Begin,f
  3145  060A  2E09               	goto	u1407
  3146  060B  0BD2               	decfsz	??_LCD_Begin+1,f
  3147  060C  2E09               	goto	u1407
  3148  060D  0BD3               	decfsz	??_LCD_Begin+2,f
  3149  060E  2E09               	goto	u1407
  3150  060F  2E10               	nop2
  3151                           
  3152                           ;./lcd.h: 164:   LCD_Cmd(0x04 | 0x02);
  3153  0610  3006               	movlw	6
  3154  0611  118A  2382  118A   	fcall	_LCD_Cmd
  3155  0614                     l1580:
  3156                           
  3157                           ;./lcd.h: 165:   _delay((unsigned long)((50)*(32000000/4000.0)));
  3158  0614  3003               	movlw	3
  3159  0615  1283               	bcf	3,5	;RP0=0, select bank0
  3160  0616  1303               	bcf	3,6	;RP1=0, select bank0
  3161  0617  00D3               	movwf	??_LCD_Begin+2
  3162  0618  3008               	movlw	8
  3163  0619  00D2               	movwf	??_LCD_Begin+1
  3164  061A  3076               	movlw	118
  3165  061B  00D1               	movwf	??_LCD_Begin
  3166  061C                     u1417:
  3167  061C  0BD1               	decfsz	??_LCD_Begin,f
  3168  061D  2E1C               	goto	u1417
  3169  061E  0BD2               	decfsz	??_LCD_Begin+1,f
  3170  061F  2E1C               	goto	u1417
  3171  0620  0BD3               	decfsz	??_LCD_Begin+2,f
  3172  0621  2E1C               	goto	u1417
  3173  0622  2E23               	nop2
  3174  0623                     l1582:
  3175                           
  3176                           ;./lcd.h: 166:   LCD_Cmd(0x0F);
  3177  0623  300F               	movlw	15
  3178  0624  118A  2382  118A   	fcall	_LCD_Cmd
  3179                           
  3180                           ;./lcd.h: 167:   _delay((unsigned long)((50)*(32000000/4000.0)));
  3181  0627  3003               	movlw	3
  3182  0628  1283               	bcf	3,5	;RP0=0, select bank0
  3183  0629  1303               	bcf	3,6	;RP1=0, select bank0
  3184  062A  00D3               	movwf	??_LCD_Begin+2
  3185  062B  3008               	movlw	8
  3186  062C  00D2               	movwf	??_LCD_Begin+1
  3187  062D  3076               	movlw	118
  3188  062E  00D1               	movwf	??_LCD_Begin
  3189  062F                     u1427:
  3190  062F  0BD1               	decfsz	??_LCD_Begin,f
  3191  0630  2E2F               	goto	u1427
  3192  0631  0BD2               	decfsz	??_LCD_Begin+1,f
  3193  0632  2E2F               	goto	u1427
  3194  0633  0BD3               	decfsz	??_LCD_Begin+2,f
  3195  0634  2E2F               	goto	u1427
  3196  0635  2E36               	nop2
  3197  0636                     l122:
  3198  0636  0008               	return
  3199  0637                     __end_of_LCD_Begin:
  3200                           
  3201                           	psect	text16
  3202  0382                     __ptext16:	
  3203 ;; *************** function _LCD_Cmd *****************
  3204 ;; Defined at:
  3205 ;;		line 78 in file "./lcd.h"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;  Command         1    wreg     unsigned char 
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;  Command         1    5[BANK0 ] unsigned char 
  3210 ;; Return value:  Size  Location     Type
  3211 ;;                  1    wreg      void 
  3212 ;; Registers used:
  3213 ;;		wreg, status,2, status,0, pclath, cstack
  3214 ;; Tracked objects:
  3215 ;;		On entry : 0/0
  3216 ;;		On exit  : 0/0
  3217 ;;		Unchanged: 0/0
  3218 ;; Data sizes:     COMMON   BANK0   BANK1
  3219 ;;      Params:         0       0       0
  3220 ;;      Locals:         0       1       0
  3221 ;;      Temps:          0       2       0
  3222 ;;      Totals:         0       3       0
  3223 ;;Total ram usage:        3 bytes
  3224 ;; Hardware stack levels used: 1
  3225 ;; Hardware stack levels required when called: 1
  3226 ;; This function calls:
  3227 ;;		_LCD_Write_Nibble
  3228 ;; This function is called by:
  3229 ;;		_LCD_Goto
  3230 ;;		_LCD_Begin
  3231 ;;		_main
  3232 ;;		_inicio_presentacion
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           
  3237                           ;psect for function _LCD_Cmd
  3238  0382                     _LCD_Cmd:
  3239                           
  3240                           ;incstack = 0
  3241                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3242                           ;LCD_Cmd@Command stored from wreg
  3243  0382  1283               	bcf	3,5	;RP0=0, select bank0
  3244  0383  1303               	bcf	3,6	;RP1=0, select bank0
  3245  0384  00D0               	movwf	LCD_Cmd@Command
  3246  0385                     l1336:
  3247                           
  3248                           ;./lcd.h: 78: void LCD_Cmd(uint8_t Command);./lcd.h: 79: {;./lcd.h: 80:   RS = 0;
  3249  0385  1068               	bcf	_RS/(0+8),_RS& (0+7)
  3250  0386                     l1338:
  3251                           
  3252                           ;./lcd.h: 81:   LCD_Write_Nibble(Command >> 4);
  3253  0386  0850               	movf	LCD_Cmd@Command,w
  3254  0387  00CE               	movwf	??_LCD_Cmd
  3255  0388  3004               	movlw	4
  3256  0389                     u665:
  3257  0389  1003               	clrc
  3258  038A  0CCE               	rrf	??_LCD_Cmd,f
  3259  038B  3EFF               	addlw	-1
  3260  038C  1D03               	skipz
  3261  038D  2B89               	goto	u665
  3262  038E  084E               	movf	??_LCD_Cmd,w
  3263  038F  118A  241F  118A   	fcall	_LCD_Write_Nibble
  3264                           
  3265                           ;./lcd.h: 82:   LCD_Write_Nibble(Command);
  3266  0392  1283               	bcf	3,5	;RP0=0, select bank0
  3267  0393  1303               	bcf	3,6	;RP1=0, select bank0
  3268  0394  0850               	movf	LCD_Cmd@Command,w
  3269  0395  118A  241F  118A   	fcall	_LCD_Write_Nibble
  3270  0398                     l1340:
  3271                           
  3272                           ;./lcd.h: 83:   if((Command == 0x01) || (Command == 0x02))
  3273  0398  1283               	bcf	3,5	;RP0=0, select bank0
  3274  0399  1303               	bcf	3,6	;RP1=0, select bank0
  3275  039A  0350               	decf	LCD_Cmd@Command,w
  3276  039B  1903               	btfsc	3,2
  3277  039C  2B9E               	goto	u671
  3278  039D  2B9F               	goto	u670
  3279  039E                     u671:
  3280  039E  2BA5               	goto	l1344
  3281  039F                     u670:
  3282  039F                     l1342:
  3283  039F  3002               	movlw	2
  3284  03A0  0650               	xorwf	LCD_Cmd@Command,w
  3285  03A1  1D03               	btfss	3,2
  3286  03A2  2BA4               	goto	u681
  3287  03A3  2BA5               	goto	u680
  3288  03A4                     u681:
  3289  03A4  2BAF               	goto	l101
  3290  03A5                     u680:
  3291  03A5                     l1344:
  3292                           
  3293                           ;./lcd.h: 84:     _delay((unsigned long)((2)*(32000000/4000.0)));
  3294  03A5  3015               	movlw	21
  3295  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  3296  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  3297  03A8  00CF               	movwf	??_LCD_Cmd+1
  3298  03A9  30C6               	movlw	198
  3299  03AA  00CE               	movwf	??_LCD_Cmd
  3300  03AB                     u1437:
  3301  03AB  0BCE               	decfsz	??_LCD_Cmd,f
  3302  03AC  2BAB               	goto	u1437
  3303  03AD  0BCF               	decfsz	??_LCD_Cmd+1,f
  3304  03AE  2BAB               	goto	u1437
  3305  03AF                     l101:
  3306  03AF  0008               	return
  3307  03B0                     __end_of_LCD_Cmd:
  3308                           
  3309                           	psect	text17
  3310  041F                     __ptext17:	
  3311 ;; *************** function _LCD_Write_Nibble *****************
  3312 ;; Defined at:
  3313 ;;		line 61 in file "./lcd.h"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;  n               1    wreg     unsigned char 
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;  n               1    2[BANK0 ] unsigned char 
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  1    wreg      void 
  3320 ;; Registers used:
  3321 ;;		wreg, status,2, status,0
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMMON   BANK0   BANK1
  3327 ;;      Params:         0       0       0
  3328 ;;      Locals:         0       1       0
  3329 ;;      Temps:          0       2       0
  3330 ;;      Totals:         0       3       0
  3331 ;;Total ram usage:        3 bytes
  3332 ;; Hardware stack levels used: 1
  3333 ;; This function calls:
  3334 ;;		Nothing
  3335 ;; This function is called by:
  3336 ;;		_LCD_Cmd
  3337 ;;		_LCD_PutC
  3338 ;;		_LCD_Print
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           
  3343                           ;psect for function _LCD_Write_Nibble
  3344  041F                     _LCD_Write_Nibble:
  3345                           
  3346                           ;incstack = 0
  3347                           ; Regs used in _LCD_Write_Nibble: [wreg+status,2+status,0]
  3348                           ;LCD_Write_Nibble@n stored from wreg
  3349  041F  1283               	bcf	3,5	;RP0=0, select bank0
  3350  0420  1303               	bcf	3,6	;RP1=0, select bank0
  3351  0421  00CD               	movwf	LCD_Write_Nibble@n
  3352  0422                     l1320:
  3353                           
  3354                           ;./lcd.h: 61: void LCD_Write_Nibble(uint8_t n);./lcd.h: 62: {;./lcd.h: 63:   PORTCbits.R
      +                          C5 = RS;
  3355  0422  1868               	btfsc	_RS/(0+8),_RS& (0+7)
  3356  0423  2C25               	goto	u621
  3357  0424  2C29               	goto	u620
  3358  0425                     u621:
  3359  0425  1283               	bcf	3,5	;RP0=0, select bank0
  3360  0426  1303               	bcf	3,6	;RP1=0, select bank0
  3361  0427  1687               	bsf	7,5	;volatile
  3362  0428  2C2C               	goto	u634
  3363  0429                     u620:
  3364  0429  1283               	bcf	3,5	;RP0=0, select bank0
  3365  042A  1303               	bcf	3,6	;RP1=0, select bank0
  3366  042B  1287               	bcf	7,5	;volatile
  3367  042C                     u634:
  3368  042C                     l1322:
  3369                           
  3370                           ;./lcd.h: 64:   PORTBbits.RB4 = n & 0x01;
  3371  042C  084D               	movf	LCD_Write_Nibble@n,w
  3372  042D  3901               	andlw	1
  3373  042E  00CB               	movwf	??_LCD_Write_Nibble
  3374  042F  0ECB               	swapf	??_LCD_Write_Nibble,f
  3375  0430  0806               	movf	6,w	;volatile
  3376  0431  064B               	xorwf	??_LCD_Write_Nibble,w
  3377  0432  39EF               	andlw	-17
  3378  0433  064B               	xorwf	??_LCD_Write_Nibble,w
  3379  0434  0086               	movwf	6	;volatile
  3380                           
  3381                           ;./lcd.h: 65:   PORTBbits.RB5 = (n >> 1) & 0x01;
  3382  0435  084D               	movf	LCD_Write_Nibble@n,w
  3383  0436  00CB               	movwf	??_LCD_Write_Nibble
  3384  0437  1003               	clrc
  3385  0438  0C4B               	rrf	??_LCD_Write_Nibble,w
  3386  0439  3901               	andlw	1
  3387  043A  00CC               	movwf	??_LCD_Write_Nibble+1
  3388  043B  0ECC               	swapf	??_LCD_Write_Nibble+1,f
  3389  043C  0DCC               	rlf	??_LCD_Write_Nibble+1,f
  3390  043D  0806               	movf	6,w	;volatile
  3391  043E  064C               	xorwf	??_LCD_Write_Nibble+1,w
  3392  043F  39DF               	andlw	-33
  3393  0440  064C               	xorwf	??_LCD_Write_Nibble+1,w
  3394  0441  0086               	movwf	6	;volatile
  3395                           
  3396                           ;./lcd.h: 66:   PORTBbits.RB6 = (n >> 2) & 0x01;
  3397  0442  084D               	movf	LCD_Write_Nibble@n,w
  3398  0443  00CB               	movwf	??_LCD_Write_Nibble
  3399  0444  3002               	movlw	2
  3400  0445                     u645:
  3401  0445  1003               	clrc
  3402  0446  0CCB               	rrf	??_LCD_Write_Nibble,f
  3403  0447  3EFF               	addlw	-1
  3404  0448  1D03               	skipz
  3405  0449  2C45               	goto	u645
  3406  044A  084B               	movf	??_LCD_Write_Nibble,w
  3407  044B  3901               	andlw	1
  3408  044C  00CC               	movwf	??_LCD_Write_Nibble+1
  3409  044D  0ECC               	swapf	??_LCD_Write_Nibble+1,f
  3410  044E  0DCC               	rlf	??_LCD_Write_Nibble+1,f
  3411  044F  0DCC               	rlf	??_LCD_Write_Nibble+1,f
  3412  0450  0806               	movf	6,w	;volatile
  3413  0451  064C               	xorwf	??_LCD_Write_Nibble+1,w
  3414  0452  39BF               	andlw	-65
  3415  0453  064C               	xorwf	??_LCD_Write_Nibble+1,w
  3416  0454  0086               	movwf	6	;volatile
  3417                           
  3418                           ;./lcd.h: 67:   PORTBbits.RB7 = (n >> 3) & 0x01;
  3419  0455  084D               	movf	LCD_Write_Nibble@n,w
  3420  0456  00CB               	movwf	??_LCD_Write_Nibble
  3421  0457  3003               	movlw	3
  3422  0458                     u655:
  3423  0458  1003               	clrc
  3424  0459  0CCB               	rrf	??_LCD_Write_Nibble,f
  3425  045A  3EFF               	addlw	-1
  3426  045B  1D03               	skipz
  3427  045C  2C58               	goto	u655
  3428  045D  084B               	movf	??_LCD_Write_Nibble,w
  3429  045E  3901               	andlw	1
  3430  045F  00CC               	movwf	??_LCD_Write_Nibble+1
  3431  0460  0CCC               	rrf	??_LCD_Write_Nibble+1,f
  3432  0461  0CCC               	rrf	??_LCD_Write_Nibble+1,f
  3433  0462  0806               	movf	6,w	;volatile
  3434  0463  064C               	xorwf	??_LCD_Write_Nibble+1,w
  3435  0464  397F               	andlw	-129
  3436  0465  064C               	xorwf	??_LCD_Write_Nibble+1,w
  3437  0466  0086               	movwf	6	;volatile
  3438  0467                     l1324:
  3439                           
  3440                           ;./lcd.h: 70:   PORTCbits.RC7 = 0;
  3441  0467  1387               	bcf	7,7	;volatile
  3442  0468                     l1326:
  3443                           
  3444                           ;./lcd.h: 71:   _delay((unsigned long)((1)*(32000000/4000000.0)));
  3445  0468  2C69               	nop2	;2 cycle nop
  3446  0469  2C6A               	nop2	;2 cycle nop
  3447  046A  2C6B               	nop2	;2 cycle nop
  3448  046B  2C6C               	nop2	;2 cycle nop
  3449  046C                     l1328:
  3450                           
  3451                           ;./lcd.h: 72:   PORTCbits.RC7 = 1;
  3452  046C  1283               	bcf	3,5	;RP0=0, select bank0
  3453  046D  1303               	bcf	3,6	;RP1=0, select bank0
  3454  046E  1787               	bsf	7,7	;volatile
  3455  046F                     l1330:
  3456                           
  3457                           ;./lcd.h: 73:   _delay((unsigned long)((1)*(32000000/4000000.0)));
  3458  046F  2C70               	nop2	;2 cycle nop
  3459  0470  2C71               	nop2	;2 cycle nop
  3460  0471  2C72               	nop2	;2 cycle nop
  3461  0472  2C73               	nop2	;2 cycle nop
  3462  0473                     l1332:
  3463                           
  3464                           ;./lcd.h: 74:   PORTCbits.RC7 = 0;
  3465  0473  1283               	bcf	3,5	;RP0=0, select bank0
  3466  0474  1303               	bcf	3,6	;RP1=0, select bank0
  3467  0475  1387               	bcf	7,7	;volatile
  3468  0476                     l1334:
  3469                           
  3470                           ;./lcd.h: 75:   _delay((unsigned long)((100)*(32000000/4000000.0)));
  3471  0476  309F               	movlw	159
  3472  0477  1283               	bcf	3,5	;RP0=0, select bank0
  3473  0478  1303               	bcf	3,6	;RP1=0, select bank0
  3474  0479  00CB               	movwf	??_LCD_Write_Nibble
  3475  047A                     u1447:
  3476  047A  2C7B               	nop2
  3477  047B  0BCB               	decfsz	??_LCD_Write_Nibble,f
  3478  047C  2C7A               	goto	u1447
  3479  047D  2C7E               	nop2
  3480  047E  0000               	nop
  3481  047F                     l95:
  3482  047F  0008               	return
  3483  0480                     __end_of_LCD_Write_Nibble:
  3484  007E                     btemp	set	126	;btemp
  3485  007E                     wtemp0	set	126
  3486                           
  3487                           	psect	config
  3488                           
  3489                           ;Config register CONFIG @ 0x2007
  3490                           ;	Oscillator Selection bits
  3491                           ;	FOSC = XT, XT oscillator
  3492                           ;	Watchdog Timer Enable bit
  3493                           ;	WDTE = OFF, WDT disabled
  3494                           ;	Power-up Timer Enable bit
  3495                           ;	PWRTE = OFF, PWRT disabled
  3496                           ;	FLASH Program Memory Code Protection bits
  3497                           ;	CP = OFF, Code protection off
  3498                           ;	Brown-out Reset Enable bit
  3499                           ;	BOREN = OFF, BOR disabled
  3500                           ;	Low Voltage In-Circuit Serial Programming Enable bit
  3501                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3502                           ;	Data EE Memory Code Protection
  3503                           ;	CPD = OFF, Code Protection off
  3504                           ;	FLASH Program Memory Write Enable
  3505                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
  3506                           ;	In-Circuit Debugger Mode bit
  3507                           ;	DEBUG = 0x1, unprogrammed default
  3508  2007                     	org	8199
  3509  2007  3D39               	dw	15673

Data Sizes:
    Strings     53
    Constant    0
    Data        43
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94     21      73
    BANK1            94      0       0

Pointer List with Targets:

    LCD_Print@LCD_Str	PTR unsigned char  size(2) Largest target is 41
		 -> M(BANK0[41]), STR_11(CODE[4]), STR_10(CODE[5]), STR_9(CODE[3]), 
		 -> STR_8(CODE[6]), STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[5]), 
		 -> STR_4(CODE[6]), STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_inicio_presentacion
    _keypad_getkey->_keypad_readkey
    _inicio_presentacion->_LCD_Goto
    _LCD_Goto->_LCD_Cmd
    _imprimir_valor_leds->_LCD_Print
    _evaluar_dato->_LCD_Print
    _LCD_Print->_LCD_Write_Nibble
    _enviar_datos->_Canal0
    _LCD_PutC->_LCD_Write_Nibble
    _LCD_Begin->_LCD_Cmd
    _LCD_Cmd->_LCD_Write_Nibble

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    6595
                                             15 BANK0      6     6      0
                          _LCD_Begin
                            _LCD_Cmd
                           _LCD_Goto
                          _LCD_Print
                           _LCD_PutC
                       _enviar_datos
                _imprimir_valor_leds
                    _iniciar_puertos
                _inicio_presentacion
                      _keypad_getkey
                _set_configuraciones
 ---------------------------------------------------------------------------------
 (1) _set_configuraciones                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keypad_getkey                                        2     2      0      46
                                              1 BANK0      2     2      0
                     _keypad_readkey
 ---------------------------------------------------------------------------------
 (2) _keypad_readkey                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicio_presentacion                                  5     5      0    1870
                                             10 BANK0      5     5      0
                            _LCD_Cmd
                           _LCD_Goto
                          _LCD_Print
 ---------------------------------------------------------------------------------
 (2) _LCD_Goto                                             4     3      1     514
                                              6 BANK0      4     3      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _iniciar_puertos                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _imprimir_valor_leds                                  0     0      0    2290
                          _LCD_Print
                            _Rx_Dato
                            _Tx_Dato
                       _evaluar_dato
 ---------------------------------------------------------------------------------
 (2) _evaluar_dato                                         0     0      0    1134
                          _LCD_Print
 ---------------------------------------------------------------------------------
 (2) _LCD_Print                                            4     2      2    1134
                                              3 BANK0      4     2      2
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (1) _enviar_datos                                         2     2      0      98
                                              4 BANK0      2     2      0
                             _Canal0
                            _Rx_Dato
                            _Tx_Dato
 ---------------------------------------------------------------------------------
 (2) _Tx_Dato                                              1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Rx_Dato                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Canal0                                               4     2      2      76
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_PutC                                             2     2      0     132
                                              3 BANK0      2     2      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            3     3      0     176
                                              6 BANK0      3     3      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0     176
                                              3 BANK0      3     3      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Nibble                                     3     3      0      88
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Begin
     _LCD_Cmd
       _LCD_Write_Nibble
   _LCD_Cmd
   _LCD_Goto
     _LCD_Cmd
   _LCD_Print
     _LCD_Write_Nibble
   _LCD_PutC
     _LCD_Write_Nibble
   _enviar_datos
     _Canal0
     _Rx_Dato
     _Tx_Dato
   _imprimir_valor_leds
     _LCD_Print
     _Rx_Dato
     _Tx_Dato
     _evaluar_dato
       _LCD_Print
   _iniciar_puertos
   _inicio_presentacion
     _LCD_Cmd
     _LCD_Goto
     _LCD_Print
   _keypad_getkey
     _keypad_readkey
   _set_configuraciones

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               5E      0       0       6        0.0%
BITBANK1            5E      0       0       5        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               5E     15      49       4       77.7%
BITBANK0            5E      0       1       3        1.1%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      49       8        0.0%
ABS                  0      0      49       7        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jun 17 21:42:02 2021

                           _M 0022                             _X 0020                             pc 0002  
                          l95 047F                            _GO 00FA                            _RS 0340  
                          fsr 0004           _set_configuraciones 02B6                           l101 03AF  
                         l110 03DF                           l113 0279                           l122 0636  
                         l211 0292                           l212 0294                           l204 07E7  
                         l140 066E                           l141 065C                           l142 070E  
                         l215 0356                           l119 041E                           l207 032C  
                         l231 0303                           l151 06D8                           l143 0662  
                         l152 06C6                           l144 0668                           l153 06CC  
                         l154 06D2                           l146 06A3                           l147 0691  
                         l236 04E6                           l148 0697                           l157 06FB  
                         l149 069D                           l190 023A                           l158 0701  
                         l182 02DB                           l191 0241                           l159 0707  
                         l192 0243                           l169 02B5                           l187 0251  
                         _ECO 0066                           _RA0 0028                           _RA1 0029  
                         _RA2 002A                           _RA4 002C                           _RC0 0038  
                         _RA5 002D                           _RC1 0039                           _RC3 003B  
                         u620 0429                           u700 041E                           u621 0425  
                         u701 041D                           u710 064A                           u711 0649  
                         u800 0683                           u720 064E                           u801 0682  
                         u721 064D                           u634 042C                           u810 0687  
                         u730 0652                           u811 0686                           u731 0651  
                         u900 06C0                           u820 068B                           u740 0656  
                         u645 0445                           u901 06BF                           u821 068A  
                         u741 0655                           u670 039F                           u910 06C4  
                         u830 068F                           u750 065A                           u655 0458  
                         u671 039E                           u911 06C3                           u831 068E  
                         u751 0659                           u680 03A5                           u920 06CA  
                         u840 0695                           u760 0660                           u681 03A4  
                         u665 0389                           u921 06C9                           u841 0694  
                         u761 065F                           u930 06D0                           u850 069B  
                         u770 0666                           u931 06CF                           u851 069A  
                         u771 0665                           u940 06D6                           u860 06A1  
                         u780 066C                           u941 06D5                           u861 06A0  
                         u781 066B                           u950 06E9                           u870 06B4  
                         u790 067F                           u695 03F1                           u951 06E8  
                         u871 06B3                           u791 067E                           u960 06ED  
                         u880 06B8                           u961 06EC                           u881 06B7  
                         u970 06F1                           u890 06BC                           u971 06F0  
                         u891 06BB                           u980 06F5                           u981 06F4  
                         u990 06F9                           u991 06F8              ?_iniciar_puertos 004B  
                         fsr0 0004                           indf 0000               __end_of_LCD_Cmd 03B0  
                        l1320 0422                          l1400 066C                          l1330 046F  
                        l1322 042C                          l1410 0683                          l1332 0473  
                        l1324 0467                          l1340 0398                          l1420 0695  
                        l1412 0687                          l1404 0672                          l1334 0476  
                        l1326 0468                          l1342 039F                          l1502 0242  
                        l1350 03E5                          l1510 0727                          l1414 068B  
                        l1406 0679                          l1328 046C                          l1344 03A5  
                        l1336 0385                          l1352 0409                          l1520 0766  
                        l1512 0736                          l1360 03BA                          l1440 06BC  
                        l1432 06A7                          l1424 069B                          l1416 068F  
                        l1408 067F                          l1600 02C5                          l1338 0386  
                        l1354 040F                          l1346 03E0                          l1530 079F  
                        l1522 076F                          l1514 073F                          l1506 070F  
                        l1362 03C0                          l1442 06C0                          l1434 06AE  
                        l1610 02D2                          l1602 02C8                          l1348 03E3  
                        l1540 07DE                          l1532 07AE                          l1524 077E  
                        l1516 074E                          l1508 071E                          l1620 030A  
                        l1364 03C6                          l1356 03B3                          l1700 04DE  
                        l1460 06DC                          l1452 06D0                          l1444 06C4  
                        l1436 06B4                          l1428 06A1                          l1380 064A  
                        l1612 02D3                          l1604 02CB                          l1542 027A  
                        l1630 032D                          l1534 07B7                          l1526 0787  
                        l1518 0757                          l1622 030E                          l1358 03B4  
                        l1366 03CC                          l1470 06F5                          l1462 06E3  
                        l1438 06B8                          l1382 064E                          l1374 0637  
                        l1614 02D4                          l1606 02CE                          l1710 04F4  
                        l1702 04E7                          l1560 059B                          l1552 0266  
                        l1544 0280                          l1632 033C                          l1536 07C6  
                        l1528 0796                          l1624 0318                          l1640 02E4  
                        l1480 0705                          l1472 06F9                          l1464 06E9  
                        l1456 06D6                          l1448 06CA                          l1392 0660  
                        l1384 0652                          l1376 063D                          l1616 02D7  
                        l1608 02CF                          l1720 052A                          l1712 04F7  
                        l1704 04EB                          l1570 05CC                          l1562 059F  
                        l1554 0267                          l1546 028A                          l1634 0347  
                        l1538 07CF                          l1626 0322                          l1618 0304  
                        l1650 02E9                          l1642 02E5                          l1466 06ED  
                        l1386 0656                          l1378 0644                          l1730 054C  
                        l1722 0532                          l1714 0505                          l1706 04EE  
                        l1580 0614                          l1572 05DB                          l1564 05AE  
                        l1556 057A                          l1548 028D                          l1492 0247  
                        l1628 0329                          l1660 02EE                          l1652 02EA  
                        l1644 02E6                          l1636 02DC                          l1484 070B  
                        l1476 06FF                          l1468 06F1                          l1396 0666  
                        l1388 065A                          l1740 0564                          l1724 0538  
                        l1732 0553                          l1716 050D                          l1708 04F1  
                        l1582 0623                          l1574 05EA                          l1566 05B9  
                        l1558 058D                          l1494 0248                          l1670 02F9  
                        l1662 02EF                          l1654 02EB                          l1646 02E7  
                        l1638 02E1                          l1590 02AA                          l1742 0568  
                        l1734 0559                          l1726 053E                          l1718 051B  
                        l1576 05FD                          l1568 05C8                          l1496 024A  
                        l1672 02FD                          l1664 02F0                          l1656 02EC  
                        l1648 02E8                          l1680 0491                          l1488 070D  
                        l1592 02B2                          l1584 0295                          l1744 0571  
                        l1736 055B                          l1728 0542                          l1578 0601  
                        l1674 0302                          l1666 02F1                          l1658 02ED  
                        l1690 04A8                          l1682 04A0                          l1586 029C  
                        l1746 0574                          l1738 0560                          l1668 02F5  
                        l1780 03D4                          l1692 04B6                          l1676 0480  
                        l1588 02A4                          l1596 02B6                          l1694 04BE  
                        l1678 0488                          l1598 02BE                          l1696 04CB  
                        l1688 04A4                          l1698 04DA             ?_LCD_Write_Nibble 004B  
                        _ADIF 0066                          _ADON 00F8                          _CHS0 00FB  
                        _CHS1 00FC                          _CHS2 00FD                          STR_1 0044  
                        STR_2 0030                          STR_3 0018                          STR_4 002A  
                        STR_5 003B                          STR_6 0012                          STR_7 001E  
                        STR_8 0024                          STR_9 003D  __size_of_imprimir_valor_leds 0029  
                        u1000 06FF                          u1001 06FE                          u1010 0705  
                        u1011 0704                          u1100 0796                          u1020 070B  
                        u1101 0795                          u1021 070A                          u1030 0250  
                        u1110 07AE                          u1031 024F                          u1111 07AD  
                        u1040 0240                          u1120 07C6                          u1200 0538  
                        u1041 023F                          u1121 07C5                          u1105 0792  
                        u1201 0537                          u1130 07DE                          u1050 071E  
                        u1210 053E                          u1131 07DD                          u1115 07AA  
                        u1051 071D                          u1211 053D                          u1140 0291  
                        u1060 0736                          u1220 0559                          u1141 0290  
                        u1125 07C2                          u1061 0735                          u1221 0558  
                        u1070 074E                          u1135 07DA                          u1071 074D  
                        u1055 071A                          u1080 0766                          u1160 02AA  
                        u1081 0765                          u1065 0732                          u1161 02A9  
                        u1090 077E                          u1170 02B2                          u1155 026A  
                        u1091 077D                          u1075 074A                          u1307 04B0  
                        u1171 02B1                          u1180 04CB                          u1085 0762  
                        u1317 04D3                          u1181 04CA                          u1237 04FF  
                        u1190 052A                          u1407 0609                          u1327 0286  
                        u1095 077A                          u1191 0529                          u1247 0515  
                        u1417 061C                          u1337 0595                          u1185 04C7  
                        u1257 0641                          u1427 062F                          u1347 05A5  
                        u1267 0676                          u1195 0526                          u1437 03AB  
                        u1357 05B4                          u1277 06AB                          u1447 047A  
                        u1367 05C3                          u1287 06E0                          u1377 05D2  
                        u1297 0499                          u1387 05E3                          u1397 05F6  
                        _RCIE 0465                          _TMR0 0001                          _TXIE 0464  
        ?_set_configuraciones 004B            ??_LCD_Write_Nibble 004B                          _main 04E7  
          __size_of_LCD_Begin 00BD                          btemp 007E            __size_of_LCD_Print 003F  
                        start 0000                   LCD_Goto@col 0054                   LCD_Goto@row 0051  
            __end_of_LCD_Goto 03E0               __end_of_Rx_Dato 0244              __end_of_LCD_PutC 027A  
             __end_of_Tx_Dato 0252                         ?_main 004B                         _ADRES 0064  
                       STR_10 0036                         STR_11 0040                         _RCREG 001A  
                       _RCSTA 0018                         _SPBRG 0099                         _PORTA 0005  
                       _PORTB 0006                         _PORTC 0007                         _TXREG 0019  
                       _TXSTA 0098              ??_keypad_readkey 004B                         main@c 005F  
                       main@i 005D                         pclath 000A         ??_set_configuraciones 0000  
               ?_enviar_datos 004B                         status 0003                         wtemp0 007E  
               ?_evaluar_dato 004B               __initialization 07E8                  __end_of_main 057A  
                      ??_main 005A             __end_of_LCD_Begin 0637                     ??_LCD_Cmd 004E  
           __end_of_LCD_Print 041F                        _ADCON0 001F                        _ADCON1 009F  
                      _ADRESH 001E                        _ADRESL 009E                ??_enviar_datos 004F  
              ??_evaluar_dato 0000                        _SSPADD 0093                        _SSPCON 0014  
                      _Canal0 027A                     ??_Rx_Dato 0000                     ??_Tx_Dato 0000  
                      _number 0060       __end_of__initialization 07FD                     ?_LCD_Goto 0051  
                   ?_LCD_PutC 004B        __size_of_keypad_getkey 0021  __size_of_inicio_presentacion 0067  
              __pcstackCOMMON 0000                  __pidataBANK0 0357           _imprimir_valor_leds 0304  
              LCD_Cmd@Command 0050          ?_imprimir_valor_leds 004B                    __pbssBANK0 0060  
                  ??_LCD_Goto 0052                    ??_LCD_PutC 004E                       ?_Canal0 004B  
                  __pmaintext 04E7     __size_of_LCD_Write_Nibble 0061                       Canal0@z 004B  
        __end_of_enviar_datos 0357          __end_of_evaluar_dato 07E8                 _keypad_getkey 0295  
                     _LCD_Cmd 0382                       _SSPCON2 0091         ??_imprimir_valor_leds 0000  
                     _SSPSTAT 0094                    __stringtab 0002      __size_of_iniciar_puertos 0028  
             __size_of_Canal0 001B                       _Rx_Dato 023A                       _Tx_Dato 0244  
            LCD_PutC@LCD_Char 004F                       __ptext1 02B6                       __ptext2 0295  
                     __ptext3 0637                       __ptext4 0480                       __ptext5 03B0  
                     __ptext6 02DC                       __ptext7 0304                       __ptext8 070F  
                     __ptext9 03E0                ?_keypad_getkey 004B   __end_of_set_configuraciones 02DC  
                   _LCD_Begin 057A                     _LCD_Print 03E0          end_of_initialization 07FD  
                   _RCSTAbits 0018             LCD_Write_Nibble@n 004D                     _PORTBbits 0006  
                   _PORTCbits 0007                     _TRISAbits 0085                     _TRISBbits 0086  
                   _TRISCbits 0087                    ?_LCD_Begin 004B           _inicio_presentacion 0480  
                  ?_LCD_Print 004E                     _TXSTAbits 0098       __size_of_keypad_readkey 00D8  
           __size_of_LCD_Goto 0030                __end_of_Canal0 0295             __size_of_LCD_PutC 0017  
           ??_iniciar_puertos 0000          ?_inicio_presentacion 004B         __size_of_enviar_datos 002A  
            _LCD_Write_Nibble 041F         __size_of_evaluar_dato 00D9                    LCD_Print@i 0051  
             ??_keypad_getkey 004C                 __pbitbssBANK0 0340           start_initialization 07E8  
        inicio_presentacion@i 0058                  _enviar_datos 032D                      ??_Canal0 004D  
                _evaluar_dato 070F         ??_inicio_presentacion 0055                    init_fetch0 0252  
                 __pdataBANK0 0020                      ?_LCD_Cmd 004B                     ___latbits 0001  
               __pcstackBANK0 004B                   ??_LCD_Begin 0051                   ??_LCD_Print 0050  
                    ?_Rx_Dato 004B                      ?_Tx_Dato 004B              LCD_Print@LCD_Str 004E  
                   __pstrings 0002   __end_of_imprimir_valor_leds 032D                      _LCD_Goto 03B0  
                    _LCD_PutC 0263                _keypad_readkey 0637                      _PIR1bits 000C  
                 __stringbase 0011              __size_of_LCD_Cmd 002E      __end_of_LCD_Write_Nibble 0480  
             _iniciar_puertos 02DC        __end_of_keypad_readkey 070F  __size_of_set_configuraciones 0026  
                    Tx_Dato@X 004B              __size_of_Rx_Dato 000A              __size_of_Tx_Dato 000E  
          __end_of__stringtab 0012                      __ptext10 032D                      __ptext11 0244  
                    __ptext12 023A                      __ptext13 027A                      __ptext14 0263  
                    __ptext15 057A                      __ptext16 0382                      __ptext17 041F  
             ?_keypad_readkey 004B                 __size_of_main 0093         __end_of_keypad_getkey 02B6  
     __end_of_iniciar_puertos 0304              keypad_getkey@key 004D                      init_ram0 0256  
 __end_of_inicio_presentacion 04E7                     stringcode 000C                    _OPTION_REG 0081  
                    stringdir 000C                      stringtab 0002  
