

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jun 23 00:51:51 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F873A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F873A Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  0091                     	;# 
   170  0092                     	;# 
   171  0093                     	;# 
   172  0094                     	;# 
   173  0098                     	;# 
   174  0099                     	;# 
   175  009C                     	;# 
   176  009D                     	;# 
   177  009E                     	;# 
   178  009F                     	;# 
   179  010C                     	;# 
   180  010D                     	;# 
   181  010E                     	;# 
   182  010F                     	;# 
   183  018C                     	;# 
   184  018D                     	;# 
   185                           
   186                           	psect	idataBANK0
   187  004F                     __pidataBANK0:
   188                           
   189                           ;initializer for ventilator_screen@F1125
   190  004F  3456               	retlw	86
   191  0050  3465               	retlw	101
   192  0051  346C               	retlw	108
   193  0052  3420               	retlw	32
   194  0053  3400               	retlw	0
   195                           
   196                           ;initializer for _length_saludo
   197  0054  3416               	retlw	22
   198  0055  3400               	retlw	0
   199                           
   200                           ;initializer for _length_presentacion
   201  0056  3426               	retlw	38
   202  0057  3400               	retlw	0
   203                           
   204                           ;initializer for _length_grupo
   205  0058  3405               	retlw	5
   206  0059  3400               	retlw	0
   207                           
   208                           ;initializer for _grupo
   209  005A  3433               	retlw	51
   210  005B  3443               	retlw	67
   211  005C  3456               	retlw	86
   212  005D  3431               	retlw	49
   213  005E  3436               	retlw	54
   214  005F  3400               	retlw	0
   215                           
   216                           	psect	idataBANK1
   217  0218                     __pidataBANK1:
   218                           
   219                           ;initializer for conditional_screen@F1115
   220  0218  3443               	retlw	67
   221  0219  3461               	retlw	97
   222  021A  346D               	retlw	109
   223  021B  3462               	retlw	98
   224  021C  3469               	retlw	105
   225  021D  3461               	retlw	97
   226  021E  3472               	retlw	114
   227  021F  3420               	retlw	32
   228  0220  3463               	retlw	99
   229  0221  346F               	retlw	111
   230  0222  346E               	retlw	110
   231  0223  3464               	retlw	100
   232  0224  342E               	retlw	46
   233  0225  3400               	retlw	0
   234                           
   235                           ;initializer for ventilator_screen@F1123
   236  0226  3456               	retlw	86
   237  0227  346F               	retlw	111
   238  0228  346C               	retlw	108
   239  0229  3474               	retlw	116
   240  022A  3461               	retlw	97
   241  022B  346A               	retlw	106
   242  022C  3465               	retlw	101
   243  022D  343A               	retlw	58
   244  022E  3420               	retlw	32
   245  022F  3400               	retlw	0
   246                           
   247                           ;initializer for conditional_screen@F1117
   248  0230  3431               	retlw	49
   249  0231  342E               	retlw	46
   250  0232  3453               	retlw	83
   251  0233  3469               	retlw	105
   252  0234  3420               	retlw	32
   253  0235  3432               	retlw	50
   254  0236  342E               	retlw	46
   255  0237  344E               	retlw	78
   256  0238  346F               	retlw	111
   257  0239  3400               	retlw	0
   258                           
   259                           ;initializer for _presentacion
   260  023A  344A               	retlw	74
   261  023B  346F               	retlw	111
   262  023C  3473               	retlw	115
   263  023D  3465               	retlw	101
   264  023E  3420               	retlw	32
   265  023F  3452               	retlw	82
   266  0240  346F               	retlw	111
   267  0241  3464               	retlw	100
   268  0242  3472               	retlw	114
   269  0243  3469               	retlw	105
   270  0244  3467               	retlw	103
   271  0245  3475               	retlw	117
   272  0246  3465               	retlw	101
   273  0247  347A               	retlw	122
   274  0248  3420               	retlw	32
   275  0249  3479               	retlw	121
   276  024A  3420               	retlw	32
   277  024B  344B               	retlw	75
   278  024C  3461               	retlw	97
   279  024D  3472               	retlw	114
   280  024E  346C               	retlw	108
   281  024F  3461               	retlw	97
   282  0250  3420               	retlw	32
   283  0251  3452               	retlw	82
   284  0252  3465               	retlw	101
   285  0253  3479               	retlw	121
   286  0254  3465               	retlw	101
   287  0255  3473               	retlw	115
   288  0256  3400               	retlw	0
   289                           
   290                           ;initializer for _saludo
   291  0257  3448               	retlw	72
   292  0258  346F               	retlw	111
   293  0259  346C               	retlw	108
   294  025A  3461               	retlw	97
   295  025B  3420               	retlw	32
   296  025C  344D               	retlw	77
   297  025D  3475               	retlw	117
   298  025E  346E               	retlw	110
   299  025F  3464               	retlw	100
   300  0260  346F               	retlw	111
   301  0261  3420               	retlw	32
   302  0262  3462               	retlw	98
   303  0263  3469               	retlw	105
   304  0264  3465               	retlw	101
   305  0265  346E               	retlw	110
   306  0266  3476               	retlw	118
   307  0267  3465               	retlw	101
   308  0268  346E               	retlw	110
   309  0269  3469               	retlw	105
   310  026A  3464               	retlw	100
   311  026B  346F               	retlw	111
   312  026C  3421               	retlw	33
   313  026D  3400               	retlw	0
   314                           
   315                           	psect	nvBANK0
   316  0076                     __pnvBANK0:
   317  0076                     _i:
   318  0076                     	ds	2
   319  0007                     _PORTC	set	7
   320  0006                     _PORTB	set	6
   321  0005                     _PORTA	set	5
   322  0006                     _PORTBbits	set	6
   323  0007                     _PORTCbits	set	7
   324  002B                     _RA3	set	43
   325  002A                     _RA2	set	42
   326  0029                     _RA1	set	41
   327  0028                     _RA0	set	40
   328  002C                     _RA4	set	44
   329  002D                     _RA5	set	45
   330  0038                     _RC0	set	56
   331  0039                     _RC1	set	57
   332  009F                     _ADCON1	set	159
   333  0085                     _TRISAbits	set	133
   334  0086                     _TRISBbits	set	134
   335  0087                     _TRISCbits	set	135
   336                           
   337                           	psect	strings
   338  0002                     __pstrings:
   339  0002                     stringtab:
   340  0002                     __stringtab:
   341                           
   342                           ;	String table - string pointers are 1 byte each
   343  0002  1BFF               	btfsc	btemp+1,7
   344  0003  280C               	ljmp	stringcode
   345  0004  1383               	bcf	3,7
   346  0005  187F               	btfsc	btemp+1,0
   347  0006  1783               	bsf	3,7
   348  0007  0800               	movf	0,w
   349  0008  0A84               	incf	4,f
   350  0009  1903               	skipnz
   351  000A  0AFF               	incf	btemp+1,f
   352  000B  0008               	return
   353  000C                     stringcode:
   354  000C                     stringdir:
   355  000C  3000               	movlw	high stringdir
   356  000D  008A               	movwf	10
   357  000E  0804               	movf	4,w
   358  000F  0A84               	incf	4,f
   359  0010  0782               	addwf	2,f
   360  0011                     __stringbase:
   361  0011  3400               	retlw	0
   362  0012                     __end_of__stringtab:
   363  0012                     STR_5:
   364  0012  3420               	retlw	32	;' '
   365  0013  3452               	retlw	82	;'R'
   366  0014  3450               	retlw	80	;'P'
   367  0015  344D               	retlw	77	;'M'
   368  0016  3400               	retlw	0
   369  0017                     STR_2:
   370  0017  3420               	retlw	32	;' '
   371  0018  3446               	retlw	70	;'F'
   372  0019  3431               	retlw	49	;'1'
   373  001A  3400               	retlw	0
   374  001B                     STR_3:
   375  001B  3420               	retlw	32	;' '
   376  001C  3446               	retlw	70	;'F'
   377  001D  3432               	retlw	50	;'2'
   378  001E  3400               	retlw	0
   379  001F                     STR_4:
   380  001F  343A               	retlw	58	;':'
   381  0020  3420               	retlw	32	;' '
   382  0021  3400               	retlw	0
   383  0022                     STR_1:
   384  0022  3420               	retlw	32	;' '
   385  0023  3456               	retlw	86	;'V'
   386  0024  3400               	retlw	0
   387                           
   388                           	psect	cinit
   389  07DA                     start_initialization:	
   390                           ; #config settings
   391                           
   392  07DA                     __initialization:
   393                           
   394                           ; Initialize objects allocated to BANK1
   395  07DA  1383               	bcf	3,7	;select IRP bank0
   396  07DB  30F6               	movlw	low (__pdataBANK1+86)
   397  07DC  00FD               	movwf	btemp+-1
   398  07DD  3002               	movlw	high __pidataBANK1
   399  07DE  00FE               	movwf	btemp
   400  07DF  3018               	movlw	low __pidataBANK1
   401  07E0  00FF               	movwf	btemp+1
   402  07E1  30A0               	movlw	low __pdataBANK1
   403  07E2  0084               	movwf	4
   404  07E3  118A  2042  118A   	fcall	init_ram0
   405                           
   406                           ; Initialize objects allocated to BANK0
   407  07E6  306B               	movlw	low (__pdataBANK0+17)
   408  07E7  00FD               	movwf	btemp+-1
   409  07E8  3000               	movlw	high __pidataBANK0
   410  07E9  00FE               	movwf	btemp
   411  07EA  304F               	movlw	low __pidataBANK0
   412  07EB  00FF               	movwf	btemp+1
   413  07EC  305A               	movlw	low __pdataBANK0
   414  07ED  0084               	movwf	4
   415  07EE  118A  2042  118A   	fcall	init_ram0
   416                           
   417                           ; Clear objects allocated to BANK0
   418  07F1  01EB               	clrf	__pbssBANK0& (0+127)
   419  07F2  01EC               	clrf	(__pbssBANK0+1)& (0+127)
   420  07F3  01ED               	clrf	(__pbssBANK0+2)& (0+127)
   421  07F4  01EE               	clrf	(__pbssBANK0+3)& (0+127)
   422  07F5  01EF               	clrf	(__pbssBANK0+4)& (0+127)
   423  07F6  01F0               	clrf	(__pbssBANK0+5)& (0+127)
   424  07F7  01F1               	clrf	(__pbssBANK0+6)& (0+127)
   425  07F8  01F2               	clrf	(__pbssBANK0+7)& (0+127)
   426  07F9  01F3               	clrf	(__pbssBANK0+8)& (0+127)
   427  07FA  01F4               	clrf	(__pbssBANK0+9)& (0+127)
   428  07FB  01F5               	clrf	(__pbssBANK0+10)& (0+127)
   429                           
   430                           ; Clear objects allocated to BITBANK0
   431  07FC  01F8               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   432  07FD                     end_of_initialization:	
   433                           ;End of C runtime variable initialization code
   434                           
   435  07FD                     __end_of__initialization:
   436  07FD  0183               	clrf	3
   437  07FE  118A  2D07         	ljmp	_main	;jump to C main() function
   438                           
   439                           	psect	bitbssBANK0
   440  03C0                     __pbitbssBANK0:
   441  03C0                     _RS:
   442  03C0                     	ds	1
   443                           
   444                           	psect	bssBANK0
   445  006B                     __pbssBANK0:
   446  006B                     _number:
   447  006B                     	ds	4
   448  006F                     _ADRES:
   449  006F                     	ds	2
   450  0071                     _ECO:
   451  0071                     	ds	2
   452  0073                     ventilator_screen@F1131:
   453  0073                     	ds	1
   454  0074                     ventilator_screen@F1129:
   455  0074                     	ds	1
   456  0075                     ventilator_screen@F1127:
   457  0075                     	ds	1
   458                           
   459                           	psect	dataBANK0
   460  005A                     __pdataBANK0:
   461  005A                     ventilator_screen@F1125:
   462  005A                     	ds	5
   463  005F                     _length_saludo:
   464  005F                     	ds	2
   465  0061                     _length_presentacion:
   466  0061                     	ds	2
   467  0063                     _length_grupo:
   468  0063                     	ds	2
   469  0065                     _grupo:
   470  0065                     	ds	6
   471                           
   472                           	psect	dataBANK1
   473  00A0                     __pdataBANK1:
   474  00A0                     conditional_screen@F1115:
   475  00A0                     	ds	14
   476  00AE                     ventilator_screen@F1123:
   477  00AE                     	ds	10
   478  00B8                     conditional_screen@F1117:
   479  00B8                     	ds	10
   480  00C2                     _presentacion:
   481  00C2                     	ds	29
   482  00DF                     _saludo:
   483  00DF                     	ds	23
   484                           
   485                           	psect	inittext
   486  003E                     init_fetch0:	
   487                           ;	Called with low address in FSR and high address in W
   488                           
   489  003E  087E               	movf	btemp,w
   490  003F  008A               	movwf	10
   491  0040  087F               	movf	btemp+1,w
   492  0041  0082               	movwf	2
   493  0042                     init_ram0:	
   494                           ;Called with:
   495                           ;	high address of idata address in btemp 
   496                           ;	low address of idata address in btemp+1 
   497                           ;	low address of data in FSR
   498                           ;	high address + 1 of data in btemp-1
   499                           
   500  0042  118A  203E  118A   	fcall	init_fetch0
   501  0045  0080               	movwf	0
   502  0046  0A84               	incf	4,f
   503  0047  0804               	movf	4,w
   504  0048  067D               	xorwf	btemp+-1,w
   505  0049  1903               	btfsc	3,2
   506  004A  3400               	retlw	0
   507  004B  0AFF               	incf	btemp+1,f
   508  004C  1903               	btfsc	3,2
   509  004D  0AFE               	incf	btemp,f
   510  004E  2842               	goto	init_ram0
   511                           
   512                           	psect	cstackCOMMON
   513  0000                     __pcstackCOMMON:
   514  0000                     ??_iniciar_puertos:
   515  0000                     ??_selector_type:	
   516                           ; 1 bytes @ 0x0
   517                           
   518                           
   519                           	psect	cstackBANK0
   520  0020                     __pcstackBANK0:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0020                     ?_strcat:
   524  0020                     ?_LCD_Write_Nibble:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0020                     ??_LCD_Write_Nibble:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0020                     ?_LCD_Cmd:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0020                     ?_LCD_PutC:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0020                     ?_LCD_Print:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0020                     ?_LCD_Begin:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0020                     ?_keypad_readkey:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0020                     ??_keypad_readkey:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0020                     ?_keypad_getkey:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0020                     ?_iniciar_puertos:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0020                     ?_selector_type:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0020                     ?_main:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0020                     ?___lwdiv:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0020                     ?___lwmod:	
   564                           ; 2 bytes @ 0x0
   565                           
   566  0020                     ?___fltol:	
   567                           ; 2 bytes @ 0x0
   568                           
   569  0020                     ___lwdiv@divisor:	
   570                           ; 4 bytes @ 0x0
   571                           
   572  0020                     ___lwmod@divisor:	
   573                           ; 2 bytes @ 0x0
   574                           
   575  0020                     strcat@from:	
   576                           ; 2 bytes @ 0x0
   577                           
   578  0020                     ___fltol@f1:	
   579                           ; 2 bytes @ 0x0
   580                           
   581                           
   582                           ; 4 bytes @ 0x0
   583  0020                     	ds	1
   584  0021                     ??_keypad_getkey:
   585                           
   586                           ; 1 bytes @ 0x1
   587  0021                     	ds	1
   588  0022                     ??_strcat:
   589  0022                     LCD_Write_Nibble@n:	
   590                           ; 1 bytes @ 0x2
   591                           
   592  0022                     keypad_getkey@key:	
   593                           ; 1 bytes @ 0x2
   594                           
   595  0022                     ___lwdiv@dividend:	
   596                           ; 1 bytes @ 0x2
   597                           
   598  0022                     ___lwmod@dividend:	
   599                           ; 2 bytes @ 0x2
   600                           
   601                           
   602                           ; 2 bytes @ 0x2
   603  0022                     	ds	1
   604  0023                     ??_LCD_Cmd:
   605  0023                     ??_LCD_PutC:	
   606                           ; 1 bytes @ 0x3
   607                           
   608  0023                     ??_LCD_Print:	
   609                           ; 1 bytes @ 0x3
   610                           
   611  0023                     strcat@cp:	
   612                           ; 1 bytes @ 0x3
   613                           
   614                           
   615                           ; 1 bytes @ 0x3
   616  0023                     	ds	1
   617  0024                     ??___fltol:
   618  0024                     ??___lwdiv:	
   619                           ; 1 bytes @ 0x4
   620                           
   621  0024                     ??___lwmod:	
   622                           ; 1 bytes @ 0x4
   623                           
   624  0024                     LCD_PutC@LCD_Char:	
   625                           ; 1 bytes @ 0x4
   626                           
   627  0024                     strcat@to:	
   628                           ; 1 bytes @ 0x4
   629                           
   630                           
   631                           ; 1 bytes @ 0x4
   632  0024                     	ds	1
   633  0025                     LCD_Cmd@Command:
   634  0025                     LCD_Print@i:	
   635                           ; 1 bytes @ 0x5
   636                           
   637  0025                     ___lwmod@counter:	
   638                           ; 1 bytes @ 0x5
   639                           
   640  0025                     ___lwdiv@quotient:	
   641                           ; 1 bytes @ 0x5
   642                           
   643                           
   644                           ; 2 bytes @ 0x5
   645  0025                     	ds	1
   646  0026                     ?_LCD_Goto:
   647  0026                     ??_LCD_Begin:	
   648                           ; 1 bytes @ 0x6
   649                           
   650  0026                     LCD_Goto@row:	
   651                           ; 1 bytes @ 0x6
   652                           
   653  0026                     LCD_Print@LCD_Str:	
   654                           ; 1 bytes @ 0x6
   655                           
   656                           
   657                           ; 1 bytes @ 0x6
   658  0026                     	ds	1
   659  0027                     ??_LCD_Goto:
   660  0027                     ___lwdiv@counter:	
   661                           ; 1 bytes @ 0x7
   662                           
   663                           
   664                           ; 1 bytes @ 0x7
   665  0027                     	ds	1
   666  0028                     ?_utoa:
   667  0028                     utoa@val:	
   668                           ; 1 bytes @ 0x8
   669                           
   670                           
   671                           ; 2 bytes @ 0x8
   672  0028                     	ds	1
   673  0029                     LCD_Goto@col:
   674  0029                     ___fltol@sign1:	
   675                           ; 1 bytes @ 0x9
   676                           
   677                           
   678                           ; 1 bytes @ 0x9
   679  0029                     	ds	1
   680  002A                     ?_inicio_presentacion:
   681  002A                     ?_conditional_screen:	
   682                           ; 1 bytes @ 0xA
   683                           
   684  002A                     ___fltol@exp1:	
   685                           ; 1 bytes @ 0xA
   686                           
   687  002A                     inicio_presentacion@length:	
   688                           ; 1 bytes @ 0xA
   689                           
   690  002A                     conditional_screen@x:	
   691                           ; 2 bytes @ 0xA
   692                           
   693  002A                     utoa@base:	
   694                           ; 2 bytes @ 0xA
   695                           
   696                           
   697                           ; 2 bytes @ 0xA
   698  002A                     	ds	2
   699  002C                     ??_utoa:
   700  002C                     ??_conditional_screen:	
   701                           ; 1 bytes @ 0xC
   702                           
   703  002C                     inicio_presentacion@str:	
   704                           ; 1 bytes @ 0xC
   705                           
   706                           
   707                           ; 1 bytes @ 0xC
   708  002C                     	ds	1
   709  002D                     ??_inicio_presentacion:
   710  002D                     utoa@v:	
   711                           ; 1 bytes @ 0xD
   712                           
   713                           
   714                           ; 2 bytes @ 0xD
   715  002D                     	ds	2
   716  002F                     utoa@c:
   717                           
   718                           ; 1 bytes @ 0xF
   719  002F                     	ds	1
   720  0030                     utoa@buf:
   721  0030                     inicio_presentacion@i:	
   722                           ; 1 bytes @ 0x10
   723                           
   724  0030                     conditional_screen@con:	
   725                           ; 2 bytes @ 0x10
   726                           
   727                           
   728                           ; 10 bytes @ 0x10
   729  0030                     	ds	1
   730  0031                     ?_itoa:
   731  0031                     itoa@val:	
   732                           ; 1 bytes @ 0x11
   733                           
   734                           
   735                           ; 2 bytes @ 0x11
   736  0031                     	ds	2
   737  0033                     itoa@base:
   738                           
   739                           ; 2 bytes @ 0x13
   740  0033                     	ds	2
   741  0035                     ??_itoa:
   742                           
   743                           ; 1 bytes @ 0x15
   744  0035                     	ds	1
   745  0036                     itoa@buf:
   746                           
   747                           ; 1 bytes @ 0x16
   748  0036                     	ds	1
   749  0037                     ?_ventilator_screen:
   750  0037                     ventilator_screen@voltaje:	
   751                           ; 1 bytes @ 0x17
   752                           
   753                           
   754                           ; 4 bytes @ 0x17
   755  0037                     	ds	3
   756  003A                     conditional_screen@msj:
   757                           
   758                           ; 14 bytes @ 0x1A
   759  003A                     	ds	1
   760  003B                     ventilator_screen@vrm:
   761                           
   762                           ; 2 bytes @ 0x1B
   763  003B                     	ds	2
   764  003D                     ventilator_screen@ventilator_number:
   765                           
   766                           ; 2 bytes @ 0x1D
   767  003D                     	ds	2
   768  003F                     ??_ventilator_screen:
   769                           
   770                           ; 1 bytes @ 0x1F
   771  003F                     	ds	4
   772  0043                     ventilator_screen@vol:
   773                           
   774                           ; 10 bytes @ 0x23
   775  0043                     	ds	10
   776  004D                     ventilator_screen@vel:
   777                           
   778                           ; 5 bytes @ 0x2D
   779  004D                     	ds	5
   780  0052                     ventilator_screen@vol_value:
   781                           
   782                           ; 1 bytes @ 0x32
   783  0052                     	ds	1
   784  0053                     ventilator_screen@vel_number:
   785                           
   786                           ; 1 bytes @ 0x33
   787  0053                     	ds	1
   788  0054                     ventilator_screen@vel_value:
   789                           
   790                           ; 1 bytes @ 0x34
   791  0054                     	ds	1
   792  0055                     selector_type@c:
   793                           
   794                           ; 1 bytes @ 0x35
   795  0055                     	ds	1
   796  0056                     ??_main:
   797                           
   798                           ; 1 bytes @ 0x36
   799  0056                     	ds	3
   800  0059                     main@c:
   801                           
   802                           ; 1 bytes @ 0x39
   803  0059                     	ds	1
   804                           
   805                           	psect	maintext
   806  0507                     __pmaintext:	
   807 ;;
   808 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   809 ;;
   810 ;; *************** function _main *****************
   811 ;; Defined at:
   812 ;;		line 171 in file "main.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;		None
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  c               1   57[BANK0 ] unsigned char 
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   821 ;; Tracked objects:
   822 ;;		On entry : B00/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMMON   BANK0   BANK1
   826 ;;      Params:         0       0       0
   827 ;;      Locals:         0       1       0
   828 ;;      Temps:          0       3       0
   829 ;;      Totals:         0       4       0
   830 ;;Total ram usage:        4 bytes
   831 ;; Hardware stack levels required when called: 5
   832 ;; This function calls:
   833 ;;		_LCD_Begin
   834 ;;		_LCD_Goto
   835 ;;		_LCD_PutC
   836 ;;		_iniciar_puertos
   837 ;;		_inicio_presentacion
   838 ;;		_keypad_getkey
   839 ;;		_selector_type
   840 ;; This function is called by:
   841 ;;		Startup code after reset
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           
   846                           ;psect for function _main
   847  0507                     _main:
   848  0507                     l1873:	
   849                           ;incstack = 0
   850                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   851                           
   852                           
   853                           ;main.c: 173:     i=1;
   854  0507  3001               	movlw	1
   855  0508  1283               	bcf	3,5	;RP0=0, select bank0
   856  0509  1303               	bcf	3,6	;RP1=0, select bank0
   857  050A  00F6               	movwf	_i
   858  050B  3000               	movlw	0
   859  050C  00F7               	movwf	_i+1
   860  050D                     l1875:
   861                           
   862                           ;main.c: 175:     iniciar_puertos();
   863  050D  118A  2060  118A   	fcall	_iniciar_puertos
   864  0510                     l1877:
   865                           
   866                           ;main.c: 177:     LCD_Begin();
   867  0510  118A  2645  118A   	fcall	_LCD_Begin
   868  0513                     l1879:
   869                           
   870                           ;main.c: 178:     inicio_presentacion(length_saludo, saludo);
   871  0513  3016               	movlw	22
   872  0514  1283               	bcf	3,5	;RP0=0, select bank0
   873  0515  1303               	bcf	3,6	;RP1=0, select bank0
   874  0516  00AA               	movwf	inicio_presentacion@length
   875  0517  3000               	movlw	0
   876  0518  00AB               	movwf	inicio_presentacion@length+1
   877  0519  30DF               	movlw	(low (_saludo| 0))& (0+255)
   878  051A  00D6               	movwf	??_main
   879  051B  0856               	movf	??_main,w
   880  051C  00AC               	movwf	inicio_presentacion@str
   881  051D  118A  226E  118A   	fcall	_inicio_presentacion
   882  0520                     l1881:
   883                           
   884                           ;main.c: 179:     _delay((unsigned long)((20)*(32000000/4000.0)));
   885  0520  30D0               	movlw	208
   886  0521  1283               	bcf	3,5	;RP0=0, select bank0
   887  0522  1303               	bcf	3,6	;RP1=0, select bank0
   888  0523  00D7               	movwf	??_main+1
   889  0524  30C9               	movlw	201
   890  0525  00D6               	movwf	??_main
   891  0526                     u1737:
   892  0526  0BD6               	decfsz	??_main,f
   893  0527  2D26               	goto	u1737
   894  0528  0BD7               	decfsz	??_main+1,f
   895  0529  2D26               	goto	u1737
   896  052A  0000               	nop
   897                           
   898                           ;main.c: 180:     inicio_presentacion(length_presentacion,presentacion);
   899  052B  3026               	movlw	38
   900  052C  1283               	bcf	3,5	;RP0=0, select bank0
   901  052D  1303               	bcf	3,6	;RP1=0, select bank0
   902  052E  00AA               	movwf	inicio_presentacion@length
   903  052F  3000               	movlw	0
   904  0530  00AB               	movwf	inicio_presentacion@length+1
   905  0531  30C2               	movlw	(low (_presentacion| 0))& (0+255)
   906  0532  00D6               	movwf	??_main
   907  0533  0856               	movf	??_main,w
   908  0534  00AC               	movwf	inicio_presentacion@str
   909  0535  118A  226E  118A   	fcall	_inicio_presentacion
   910  0538                     l1883:
   911                           
   912                           ;main.c: 181:     _delay((unsigned long)((20)*(32000000/4000.0)));
   913  0538  30D0               	movlw	208
   914  0539  1283               	bcf	3,5	;RP0=0, select bank0
   915  053A  1303               	bcf	3,6	;RP1=0, select bank0
   916  053B  00D7               	movwf	??_main+1
   917  053C  30C9               	movlw	201
   918  053D  00D6               	movwf	??_main
   919  053E                     u1747:
   920  053E  0BD6               	decfsz	??_main,f
   921  053F  2D3E               	goto	u1747
   922  0540  0BD7               	decfsz	??_main+1,f
   923  0541  2D3E               	goto	u1747
   924  0542  0000               	nop
   925  0543                     l1885:
   926                           
   927                           ;main.c: 182:     inicio_presentacion(length_grupo,grupo);
   928  0543  3005               	movlw	5
   929  0544  1283               	bcf	3,5	;RP0=0, select bank0
   930  0545  1303               	bcf	3,6	;RP1=0, select bank0
   931  0546  00AA               	movwf	inicio_presentacion@length
   932  0547  3000               	movlw	0
   933  0548  00AB               	movwf	inicio_presentacion@length+1
   934  0549  3065               	movlw	(low (_grupo| 0))& (0+255)
   935  054A  00D6               	movwf	??_main
   936  054B  0856               	movf	??_main,w
   937  054C  00AC               	movwf	inicio_presentacion@str
   938  054D  118A  226E  118A   	fcall	_inicio_presentacion
   939                           
   940                           ;main.c: 183:     _delay((unsigned long)((20)*(32000000/4000.0)));
   941  0550  30D0               	movlw	208
   942  0551  1283               	bcf	3,5	;RP0=0, select bank0
   943  0552  1303               	bcf	3,6	;RP1=0, select bank0
   944  0553  00D7               	movwf	??_main+1
   945  0554  30C9               	movlw	201
   946  0555  00D6               	movwf	??_main
   947  0556                     u1757:
   948  0556  0BD6               	decfsz	??_main,f
   949  0557  2D56               	goto	u1757
   950  0558  0BD7               	decfsz	??_main+1,f
   951  0559  2D56               	goto	u1757
   952  055A  0000               	nop
   953  055B                     l1887:
   954                           
   955                           ;main.c: 184:     LCD_Goto(1, 1);
   956  055B  1283               	bcf	3,5	;RP0=0, select bank0
   957  055C  1303               	bcf	3,6	;RP1=0, select bank0
   958  055D  01A6               	clrf	LCD_Goto@row
   959  055E  0AA6               	incf	LCD_Goto@row,f
   960  055F  3001               	movlw	1
   961  0560  118A  20FF  118A   	fcall	_LCD_Goto
   962  0563                     l1889:
   963                           
   964                           ;main.c: 185:     _delay((unsigned long)((50)*(32000000/4000.0)));
   965  0563  3003               	movlw	3
   966  0564  1283               	bcf	3,5	;RP0=0, select bank0
   967  0565  1303               	bcf	3,6	;RP1=0, select bank0
   968  0566  00D8               	movwf	??_main+2
   969  0567  3008               	movlw	8
   970  0568  00D7               	movwf	??_main+1
   971  0569  3076               	movlw	118
   972  056A  00D6               	movwf	??_main
   973  056B                     u1767:
   974  056B  0BD6               	decfsz	??_main,f
   975  056C  2D6B               	goto	u1767
   976  056D  0BD7               	decfsz	??_main+1,f
   977  056E  2D6B               	goto	u1767
   978  056F  0BD8               	decfsz	??_main+2,f
   979  0570  2D6B               	goto	u1767
   980  0571  2D72               	nop2
   981  0572                     l1891:
   982                           
   983                           ;main.c: 189:     char c = keypad_getkey();
   984  0572  118A  208C  118A   	fcall	_keypad_getkey
   985  0575  1283               	bcf	3,5	;RP0=0, select bank0
   986  0576  1303               	bcf	3,6	;RP1=0, select bank0
   987  0577  00D6               	movwf	??_main
   988  0578  0856               	movf	??_main,w
   989  0579  00D9               	movwf	main@c
   990  057A                     l1893:
   991                           
   992                           ;main.c: 190:         LCD_PutC(c);
   993  057A  0859               	movf	main@c,w
   994  057B  118A  2075  118A   	fcall	_LCD_PutC
   995  057E                     l1895:
   996                           
   997                           ;main.c: 191:         selector_type(c);
   998  057E  1283               	bcf	3,5	;RP0=0, select bank0
   999  057F  1303               	bcf	3,6	;RP1=0, select bank0
  1000  0580  0859               	movf	main@c,w
  1001  0581  118A  2398  118A   	fcall	_selector_type
  1002  0584                     l1897:
  1003                           
  1004                           ;main.c: 192:     _delay((unsigned long)((500)*(32000000/4000.0)));
  1005  0584  3015               	movlw	21
  1006  0585  1283               	bcf	3,5	;RP0=0, select bank0
  1007  0586  1303               	bcf	3,6	;RP1=0, select bank0
  1008  0587  00D8               	movwf	??_main+2
  1009  0588  304B               	movlw	75
  1010  0589  00D7               	movwf	??_main+1
  1011  058A  30BE               	movlw	190
  1012  058B  00D6               	movwf	??_main
  1013  058C                     u1777:
  1014  058C  0BD6               	decfsz	??_main,f
  1015  058D  2D8C               	goto	u1777
  1016  058E  0BD7               	decfsz	??_main+1,f
  1017  058F  2D8C               	goto	u1777
  1018  0590  0BD8               	decfsz	??_main+2,f
  1019  0591  2D8C               	goto	u1777
  1020  0592  2D72               	goto	l1891
  1021  0593  118A  2800         	ljmp	start
  1022  0595                     __end_of_main:
  1023                           
  1024                           	psect	text1
  1025  0398                     __ptext1:	
  1026 ;; *************** function _selector_type *****************
  1027 ;; Defined at:
  1028 ;;		line 143 in file "main.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;  c               1    wreg     unsigned char 
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;  c               1   53[BANK0 ] unsigned char 
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  1    wreg      void 
  1035 ;; Registers used:
  1036 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMMON   BANK0   BANK1
  1042 ;;      Params:         0       0       0
  1043 ;;      Locals:         0       1       0
  1044 ;;      Temps:          0       0       0
  1045 ;;      Totals:         0       1       0
  1046 ;;Total ram usage:        1 bytes
  1047 ;; Hardware stack levels used: 1
  1048 ;; Hardware stack levels required when called: 4
  1049 ;; This function calls:
  1050 ;;		_conditional_screen
  1051 ;;		_ventilator_screen
  1052 ;; This function is called by:
  1053 ;;		_main
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057                           
  1058                           ;psect for function _selector_type
  1059  0398                     _selector_type:
  1060                           
  1061                           ;incstack = 0
  1062                           ; Regs used in _selector_type: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1063                           ;selector_type@c stored from wreg
  1064  0398  1283               	bcf	3,5	;RP0=0, select bank0
  1065  0399  1303               	bcf	3,6	;RP1=0, select bank0
  1066  039A  00D5               	movwf	selector_type@c
  1067  039B                     l1847:
  1068                           
  1069                           ;main.c: 143: void selector_type(char c);main.c: 144: {;main.c: 145:     if(c=='A')
  1070  039B  3041               	movlw	65
  1071  039C  0655               	xorwf	selector_type@c,w
  1072  039D  1D03               	btfss	3,2
  1073  039E  2BA0               	goto	u1671
  1074  039F  2BA1               	goto	u1670
  1075  03A0                     u1671:
  1076  03A0  2BE6               	goto	l1861
  1077  03A1                     u1670:
  1078  03A1                     l1849:
  1079                           
  1080                           ;main.c: 146:         {;main.c: 147:             if(i==1){
  1081  03A1  0376               	decf	_i,w
  1082  03A2  0477               	iorwf	_i+1,w
  1083  03A3  1D03               	btfss	3,2
  1084  03A4  2BA6               	goto	u1681
  1085  03A5  2BA7               	goto	u1680
  1086  03A6                     u1681:
  1087  03A6  2BC3               	goto	l1855
  1088  03A7                     u1680:
  1089  03A7                     l1851:
  1090                           
  1091                           ;main.c: 148:                 ventilator_screen(1.1,1000,1);
  1092  03A7  303F               	movlw	63
  1093  03A8  00BA               	movwf	ventilator_screen@voltaje+3
  1094  03A9  308C               	movlw	140
  1095  03AA  00B9               	movwf	ventilator_screen@voltaje+2
  1096  03AB  30CC               	movlw	204
  1097  03AC  00B8               	movwf	ventilator_screen@voltaje+1
  1098  03AD  30CD               	movlw	205
  1099  03AE  00B7               	movwf	ventilator_screen@voltaje
  1100  03AF  30E8               	movlw	232
  1101  03B0  00BB               	movwf	ventilator_screen@vrm
  1102  03B1  3003               	movlw	3
  1103  03B2  00BC               	movwf	ventilator_screen@vrm+1
  1104  03B3  3001               	movlw	1
  1105  03B4  00BD               	movwf	ventilator_screen@ventilator_number
  1106  03B5  3000               	movlw	0
  1107  03B6  00BE               	movwf	ventilator_screen@ventilator_number+1
  1108  03B7  118A  2595  118A   	fcall	_ventilator_screen
  1109  03BA                     l1853:
  1110                           
  1111                           ;main.c: 149:             ++i;
  1112  03BA  3001               	movlw	1
  1113  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  1114  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  1115  03BD  07F6               	addwf	_i,f
  1116  03BE  1803               	skipnc
  1117  03BF  0AF7               	incf	_i+1,f
  1118  03C0  3000               	movlw	0
  1119  03C1  07F7               	addwf	_i+1,f
  1120                           
  1121                           ;main.c: 150:             }
  1122  03C2  2C0F               	goto	l186
  1123  03C3                     l1855:
  1124  03C3  3002               	movlw	2
  1125  03C4  0676               	xorwf	_i,w
  1126  03C5  0477               	iorwf	_i+1,w
  1127  03C6  1D03               	btfss	3,2
  1128  03C7  2BC9               	goto	u1691
  1129  03C8  2BCA               	goto	u1690
  1130  03C9                     u1691:
  1131  03C9  2C0F               	goto	l186
  1132  03CA                     u1690:
  1133  03CA                     l1857:
  1134                           
  1135                           ;main.c: 152:                 ventilator_screen(2.2,1000,2);
  1136  03CA  3040               	movlw	64
  1137  03CB  00BA               	movwf	ventilator_screen@voltaje+3
  1138  03CC  300C               	movlw	12
  1139  03CD  00B9               	movwf	ventilator_screen@voltaje+2
  1140  03CE  30CC               	movlw	204
  1141  03CF  00B8               	movwf	ventilator_screen@voltaje+1
  1142  03D0  30CD               	movlw	205
  1143  03D1  00B7               	movwf	ventilator_screen@voltaje
  1144  03D2  30E8               	movlw	232
  1145  03D3  00BB               	movwf	ventilator_screen@vrm
  1146  03D4  3003               	movlw	3
  1147  03D5  00BC               	movwf	ventilator_screen@vrm+1
  1148  03D6  3002               	movlw	2
  1149  03D7  00BD               	movwf	ventilator_screen@ventilator_number
  1150  03D8  3000               	movlw	0
  1151  03D9  00BE               	movwf	ventilator_screen@ventilator_number+1
  1152  03DA  118A  2595  118A   	fcall	_ventilator_screen
  1153  03DD                     l1859:
  1154                           
  1155                           ;main.c: 153:                 --i;
  1156  03DD  30FF               	movlw	255
  1157  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  1158  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  1159  03E0  07F6               	addwf	_i,f
  1160  03E1  1803               	skipnc
  1161  03E2  0AF7               	incf	_i+1,f
  1162  03E3  30FF               	movlw	255
  1163  03E4  07F7               	addwf	_i+1,f
  1164  03E5  2C0F               	goto	l186
  1165  03E6                     l1861:
  1166  03E6  3042               	movlw	66
  1167  03E7  0655               	xorwf	selector_type@c,w
  1168  03E8  1D03               	btfss	3,2
  1169  03E9  2BEB               	goto	u1701
  1170  03EA  2BEC               	goto	u1700
  1171  03EB                     u1701:
  1172  03EB  2BF4               	goto	l1865
  1173  03EC                     u1700:
  1174  03EC                     l1863:
  1175                           
  1176                           ;main.c: 158:     {;main.c: 159:         conditional_screen(1);
  1177  03EC  3001               	movlw	1
  1178  03ED  00AA               	movwf	conditional_screen@x
  1179  03EE  3000               	movlw	0
  1180  03EF  00AB               	movwf	conditional_screen@x+1
  1181  03F0  118A  2410  118A   	fcall	_conditional_screen
  1182                           
  1183                           ;main.c: 160:     }
  1184  03F3  2C0F               	goto	l186
  1185  03F4                     l1865:
  1186  03F4  3043               	movlw	67
  1187  03F5  0655               	xorwf	selector_type@c,w
  1188  03F6  1D03               	btfss	3,2
  1189  03F7  2BF9               	goto	u1711
  1190  03F8  2BFA               	goto	u1710
  1191  03F9                     u1711:
  1192  03F9  2C02               	goto	l1869
  1193  03FA                     u1710:
  1194  03FA                     l1867:
  1195                           
  1196                           ;main.c: 162:     {;main.c: 163:         conditional_screen(2);
  1197  03FA  3002               	movlw	2
  1198  03FB  00AA               	movwf	conditional_screen@x
  1199  03FC  3000               	movlw	0
  1200  03FD  00AB               	movwf	conditional_screen@x+1
  1201  03FE  118A  2410  118A   	fcall	_conditional_screen
  1202                           
  1203                           ;main.c: 164:     }
  1204  0401  2C0F               	goto	l186
  1205  0402                     l1869:
  1206  0402  3044               	movlw	68
  1207  0403  0655               	xorwf	selector_type@c,w
  1208  0404  1D03               	btfss	3,2
  1209  0405  2C07               	goto	u1721
  1210  0406  2C08               	goto	u1720
  1211  0407                     u1721:
  1212  0407  2C0F               	goto	l186
  1213  0408                     u1720:
  1214  0408                     l1871:
  1215                           
  1216                           ;main.c: 166:     {;main.c: 167:         conditional_screen(3);
  1217  0408  3003               	movlw	3
  1218  0409  00AA               	movwf	conditional_screen@x
  1219  040A  3000               	movlw	0
  1220  040B  00AB               	movwf	conditional_screen@x+1
  1221  040C  118A  2410  118A   	fcall	_conditional_screen
  1222  040F                     l186:
  1223  040F  0008               	return
  1224  0410                     __end_of_selector_type:
  1225                           
  1226                           	psect	text2
  1227  0595                     __ptext2:	
  1228 ;; *************** function _ventilator_screen *****************
  1229 ;; Defined at:
  1230 ;;		line 113 in file "main.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;  voltaje         4   23[BANK0 ] float 
  1233 ;;  vrm             2   27[BANK0 ] int 
  1234 ;;  ventilator_n    2   29[BANK0 ] int 
  1235 ;; Auto vars:     Size  Location     Type
  1236 ;;  vol            10   35[BANK0 ] unsigned char [10]
  1237 ;;  vel             5   45[BANK0 ] unsigned char [5]
  1238 ;;  vel_value       1   52[BANK0 ] unsigned char [1]
  1239 ;;  vel_number      1   51[BANK0 ] unsigned char [1]
  1240 ;;  vol_value       1   50[BANK0 ] unsigned char [1]
  1241 ;; Return value:  Size  Location     Type
  1242 ;;                  1    wreg      void 
  1243 ;; Registers used:
  1244 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMMON   BANK0   BANK1
  1250 ;;      Params:         0       8       0
  1251 ;;      Locals:         0      18       0
  1252 ;;      Temps:          0       4       0
  1253 ;;      Totals:         0      30       0
  1254 ;;Total ram usage:       30 bytes
  1255 ;; Hardware stack levels used: 1
  1256 ;; Hardware stack levels required when called: 3
  1257 ;; This function calls:
  1258 ;;		_LCD_Cmd
  1259 ;;		_LCD_Goto
  1260 ;;		_LCD_Print
  1261 ;;		___fltol
  1262 ;;		_itoa
  1263 ;;		_strcat
  1264 ;; This function is called by:
  1265 ;;		_selector_type
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           
  1270                           ;psect for function _ventilator_screen
  1271  0595                     _ventilator_screen:
  1272  0595                     l1721:	
  1273                           ;incstack = 0
  1274                           ; Regs used in _ventilator_screen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1275                           
  1276                           
  1277                           ;main.c: 113: void ventilator_screen(float voltaje, int vrm, int ventilator_number);main
      +                          .c: 114: {;main.c: 115:     LCD_Cmd(0x01);
  1278  0595  3001               	movlw	1
  1279  0596  118A  20D1  118A   	fcall	_LCD_Cmd
  1280  0599                     l1723:
  1281                           
  1282                           ;main.c: 116:     unsigned char vol[]="Voltaje: ";
  1283  0599  3043               	movlw	ventilator_screen@vol& (0+255)
  1284  059A  0084               	movwf	4
  1285  059B  30AE               	movlw	low ventilator_screen@F1123
  1286  059C  1283               	bcf	3,5	;RP0=0, select bank0
  1287  059D  1303               	bcf	3,6	;RP1=0, select bank0
  1288  059E  00BF               	movwf	??_ventilator_screen
  1289  059F  0804               	movf	4,w
  1290  05A0  00C0               	movwf	??_ventilator_screen+1
  1291  05A1  300A               	movlw	10
  1292  05A2  00C1               	movwf	??_ventilator_screen+2
  1293  05A3                     u1620:
  1294  05A3  083F               	movf	??_ventilator_screen,w
  1295  05A4  0084               	movwf	4
  1296  05A5  1383               	bcf	3,7	;select IRP bank1
  1297  05A6  0800               	movf	0,w
  1298  05A7  00C2               	movwf	??_ventilator_screen+3
  1299  05A8  0ABF               	incf	??_ventilator_screen,f
  1300  05A9  0840               	movf	??_ventilator_screen+1,w
  1301  05AA  0084               	movwf	4
  1302  05AB  0842               	movf	??_ventilator_screen+3,w
  1303  05AC  0080               	movwf	0
  1304  05AD  0AC0               	incf	??_ventilator_screen+1,f
  1305  05AE  0BC1               	decfsz	??_ventilator_screen+2,f
  1306  05AF  2DA3               	goto	u1620
  1307  05B0                     l1725:
  1308                           
  1309                           ;main.c: 117:     unsigned char vel[]="Vel ";
  1310  05B0  304D               	movlw	ventilator_screen@vel& (0+255)
  1311  05B1  0084               	movwf	4
  1312  05B2  085A               	movf	ventilator_screen@F1125,w
  1313  05B3  0080               	movwf	0
  1314  05B4  0A84               	incf	4,f
  1315  05B5  085B               	movf	ventilator_screen@F1125+1,w
  1316  05B6  0080               	movwf	0
  1317  05B7  0A84               	incf	4,f
  1318  05B8  085C               	movf	ventilator_screen@F1125+2,w
  1319  05B9  0080               	movwf	0
  1320  05BA  0A84               	incf	4,f
  1321  05BB  085D               	movf	ventilator_screen@F1125+3,w
  1322  05BC  0080               	movwf	0
  1323  05BD  0A84               	incf	4,f
  1324  05BE  085E               	movf	ventilator_screen@F1125+4,w
  1325  05BF  0080               	movwf	0
  1326  05C0                     l1727:
  1327                           
  1328                           ;main.c: 118:     char vol_value[]="";
  1329  05C0  01D2               	clrf	ventilator_screen@vol_value
  1330  05C1                     l1729:
  1331                           
  1332                           ;main.c: 119:     char vel_number[]="";
  1333  05C1  01D3               	clrf	ventilator_screen@vel_number
  1334  05C2                     l1731:
  1335                           
  1336                           ;main.c: 120:     char vel_value[]="";
  1337  05C2  01D4               	clrf	ventilator_screen@vel_value
  1338  05C3                     l1733:
  1339                           
  1340                           ;main.c: 125:     LCD_Goto(1,1);
  1341  05C3  01A6               	clrf	LCD_Goto@row
  1342  05C4  0AA6               	incf	LCD_Goto@row,f
  1343  05C5  3001               	movlw	1
  1344  05C6  118A  20FF  118A   	fcall	_LCD_Goto
  1345  05C9                     l1735:
  1346                           
  1347                           ;main.c: 128:     itoa(vol_value,voltaje,10);
  1348  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  1349  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  1350  05CB  083A               	movf	ventilator_screen@voltaje+3,w
  1351  05CC  00A3               	movwf	___fltol@f1+3
  1352  05CD  0839               	movf	ventilator_screen@voltaje+2,w
  1353  05CE  00A2               	movwf	___fltol@f1+2
  1354  05CF  0838               	movf	ventilator_screen@voltaje+1,w
  1355  05D0  00A1               	movwf	___fltol@f1+1
  1356  05D1  0837               	movf	ventilator_screen@voltaje,w
  1357  05D2  00A0               	movwf	___fltol@f1
  1358  05D3  118A  248B  118A   	fcall	___fltol
  1359  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  1360  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  1361  05D8  0821               	movf	?___fltol+1,w
  1362  05D9  00B2               	movwf	itoa@val+1
  1363  05DA  0820               	movf	?___fltol,w
  1364  05DB  00B1               	movwf	itoa@val
  1365  05DC  300A               	movlw	10
  1366  05DD  00B3               	movwf	itoa@base
  1367  05DE  3000               	movlw	0
  1368  05DF  00B4               	movwf	itoa@base+1
  1369  05E0  3052               	movlw	(low (ventilator_screen@vol_value| 0))& (0+255)
  1370  05E1  118A  20AD  118A   	fcall	_itoa
  1371  05E4                     l1737:
  1372                           
  1373                           ;main.c: 129:     strcat(vol,vol_value);
  1374  05E4  3052               	movlw	(low (ventilator_screen@vol_value| 0))& (0+255)
  1375  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  1376  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  1377  05E7  00A0               	movwf	strcat@from
  1378  05E8  3000               	movlw	0
  1379  05E9  00A1               	movwf	strcat@from+1
  1380  05EA  3043               	movlw	(low (ventilator_screen@vol| 0))& (0+255)
  1381  05EB  118A  212F  118A   	fcall	_strcat
  1382  05EE                     l1739:
  1383                           
  1384                           ;main.c: 131:     LCD_Print(vol);
  1385  05EE  3043               	movlw	(low (ventilator_screen@vol| 0))& (0+255)
  1386  05EF  118A  2161  118A   	fcall	_LCD_Print
  1387  05F2                     l1741:
  1388                           
  1389                           ;main.c: 132:     LCD_Goto(1,2);
  1390  05F2  3002               	movlw	2
  1391  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  1392  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  1393  05F5  00BF               	movwf	??_ventilator_screen
  1394  05F6  083F               	movf	??_ventilator_screen,w
  1395  05F7  00A6               	movwf	LCD_Goto@row
  1396  05F8  3001               	movlw	1
  1397  05F9  118A  20FF  118A   	fcall	_LCD_Goto
  1398  05FC                     l1743:
  1399                           
  1400                           ;main.c: 133:     itoa(vel_number,ventilator_number,10);
  1401  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  1402  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  1403  05FE  083E               	movf	ventilator_screen@ventilator_number+1,w
  1404  05FF  00B2               	movwf	itoa@val+1
  1405  0600  083D               	movf	ventilator_screen@ventilator_number,w
  1406  0601  00B1               	movwf	itoa@val
  1407  0602  300A               	movlw	10
  1408  0603  00B3               	movwf	itoa@base
  1409  0604  3000               	movlw	0
  1410  0605  00B4               	movwf	itoa@base+1
  1411  0606  3053               	movlw	(low (ventilator_screen@vel_number| 0))& (0+255)
  1412  0607  118A  20AD  118A   	fcall	_itoa
  1413  060A                     l1745:
  1414                           
  1415                           ;main.c: 134:     strcat(vel,vel_number);
  1416  060A  3053               	movlw	(low (ventilator_screen@vel_number| 0))& (0+255)
  1417  060B  1283               	bcf	3,5	;RP0=0, select bank0
  1418  060C  1303               	bcf	3,6	;RP1=0, select bank0
  1419  060D  00A0               	movwf	strcat@from
  1420  060E  3000               	movlw	0
  1421  060F  00A1               	movwf	strcat@from+1
  1422  0610  304D               	movlw	(low (ventilator_screen@vel| 0))& (0+255)
  1423  0611  118A  212F  118A   	fcall	_strcat
  1424  0614                     l1747:
  1425                           
  1426                           ;main.c: 135:     strcat(vel,": ");
  1427  0614  300E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1428  0615  1283               	bcf	3,5	;RP0=0, select bank0
  1429  0616  1303               	bcf	3,6	;RP1=0, select bank0
  1430  0617  00A0               	movwf	strcat@from
  1431  0618  3080               	movlw	128
  1432  0619  00A1               	movwf	strcat@from+1
  1433  061A  304D               	movlw	(low (ventilator_screen@vel| 0))& (0+255)
  1434  061B  118A  212F  118A   	fcall	_strcat
  1435  061E                     l1749:
  1436                           
  1437                           ;main.c: 136:     itoa(vel_value,vrm,10);
  1438  061E  1283               	bcf	3,5	;RP0=0, select bank0
  1439  061F  1303               	bcf	3,6	;RP1=0, select bank0
  1440  0620  083C               	movf	ventilator_screen@vrm+1,w
  1441  0621  00B2               	movwf	itoa@val+1
  1442  0622  083B               	movf	ventilator_screen@vrm,w
  1443  0623  00B1               	movwf	itoa@val
  1444  0624  300A               	movlw	10
  1445  0625  00B3               	movwf	itoa@base
  1446  0626  3000               	movlw	0
  1447  0627  00B4               	movwf	itoa@base+1
  1448  0628  3054               	movlw	(low (ventilator_screen@vel_value| 0))& (0+255)
  1449  0629  118A  20AD  118A   	fcall	_itoa
  1450  062C                     l1751:
  1451                           
  1452                           ;main.c: 137:     strcat(vel,vel_value);
  1453  062C  3054               	movlw	(low (ventilator_screen@vel_value| 0))& (0+255)
  1454  062D  1283               	bcf	3,5	;RP0=0, select bank0
  1455  062E  1303               	bcf	3,6	;RP1=0, select bank0
  1456  062F  00A0               	movwf	strcat@from
  1457  0630  3000               	movlw	0
  1458  0631  00A1               	movwf	strcat@from+1
  1459  0632  304D               	movlw	(low (ventilator_screen@vel| 0))& (0+255)
  1460  0633  118A  212F  118A   	fcall	_strcat
  1461  0636                     l1753:
  1462                           
  1463                           ;main.c: 138:     strcat(vel," RPM");
  1464  0636  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1465  0637  1283               	bcf	3,5	;RP0=0, select bank0
  1466  0638  1303               	bcf	3,6	;RP1=0, select bank0
  1467  0639  00A0               	movwf	strcat@from
  1468  063A  3080               	movlw	128
  1469  063B  00A1               	movwf	strcat@from+1
  1470  063C  304D               	movlw	(low (ventilator_screen@vel| 0))& (0+255)
  1471  063D  118A  212F  118A   	fcall	_strcat
  1472  0640                     l1755:
  1473                           
  1474                           ;main.c: 140:     LCD_Print(vel);
  1475  0640  304D               	movlw	(low (ventilator_screen@vel| 0))& (0+255)
  1476  0641  118A  2161  118A   	fcall	_LCD_Print
  1477  0644                     l173:
  1478  0644  0008               	return
  1479  0645                     __end_of_ventilator_screen:
  1480                           
  1481                           	psect	text3
  1482  00AD                     __ptext3:	
  1483 ;; *************** function _itoa *****************
  1484 ;; Defined at:
  1485 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\itoa.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;  buf             1    wreg     PTR unsigned char 
  1488 ;;		 -> ventilator_screen@vel_value(1), ventilator_screen@vel_number(1), ventilator_screen@vol_value(1), 
  1489 ;;  val             2   17[BANK0 ] int 
  1490 ;;  base            2   19[BANK0 ] int 
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;  buf             1   22[BANK0 ] PTR unsigned char 
  1493 ;;		 -> ventilator_screen@vel_value(1), ventilator_screen@vel_number(1), ventilator_screen@vol_value(1), 
  1494 ;;  cp              1    0        PTR unsigned char 
  1495 ;;		 -> ventilator_screen@vel_value(1), ventilator_screen@vel_number(1), ventilator_screen@vol_value(1), 
  1496 ;; Return value:  Size  Location     Type
  1497 ;;                  1    wreg      PTR unsigned char 
  1498 ;; Registers used:
  1499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1500 ;; Tracked objects:
  1501 ;;		On entry : 0/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMMON   BANK0   BANK1
  1505 ;;      Params:         0       4       0
  1506 ;;      Locals:         0       1       0
  1507 ;;      Temps:          0       1       0
  1508 ;;      Totals:         0       6       0
  1509 ;;Total ram usage:        6 bytes
  1510 ;; Hardware stack levels used: 1
  1511 ;; Hardware stack levels required when called: 2
  1512 ;; This function calls:
  1513 ;;		_utoa
  1514 ;; This function is called by:
  1515 ;;		_ventilator_screen
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           
  1520                           ;psect for function _itoa
  1521  00AD                     _itoa:
  1522                           
  1523                           ;incstack = 0
  1524                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1525                           ;itoa@buf stored from wreg
  1526  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1527  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1528  00AF  00B6               	movwf	itoa@buf
  1529  00B0                     l1529:
  1530  00B0                     l1531:
  1531  00B0  1FB2               	btfss	itoa@val+1,7
  1532  00B1  28B3               	goto	u1141
  1533  00B2  28B4               	goto	u1140
  1534  00B3                     u1141:
  1535  00B3  28C4               	goto	l1539
  1536  00B4                     u1140:
  1537  00B4                     l1533:
  1538  00B4  302D               	movlw	45
  1539  00B5  00B5               	movwf	??_itoa
  1540  00B6  0836               	movf	itoa@buf,w
  1541  00B7  0084               	movwf	4
  1542  00B8  0835               	movf	??_itoa,w
  1543  00B9  1383               	bcf	3,7	;select IRP bank0
  1544  00BA  0080               	movwf	0
  1545  00BB                     l1535:
  1546  00BB  3001               	movlw	1
  1547  00BC  00B5               	movwf	??_itoa
  1548  00BD  0835               	movf	??_itoa,w
  1549  00BE  07B6               	addwf	itoa@buf,f
  1550  00BF                     l1537:
  1551  00BF  09B1               	comf	itoa@val,f
  1552  00C0  09B2               	comf	itoa@val+1,f
  1553  00C1  0AB1               	incf	itoa@val,f
  1554  00C2  1903               	skipnz
  1555  00C3  0AB2               	incf	itoa@val+1,f
  1556  00C4                     l1539:
  1557  00C4  0832               	movf	itoa@val+1,w
  1558  00C5  00A9               	movwf	utoa@val+1
  1559  00C6  0831               	movf	itoa@val,w
  1560  00C7  00A8               	movwf	utoa@val
  1561  00C8  0834               	movf	itoa@base+1,w
  1562  00C9  00AB               	movwf	utoa@base+1
  1563  00CA  0833               	movf	itoa@base,w
  1564  00CB  00AA               	movwf	utoa@base
  1565  00CC  0836               	movf	itoa@buf,w
  1566  00CD  118A  232C  118A   	fcall	_utoa
  1567  00D0                     l734:
  1568  00D0  0008               	return
  1569  00D1                     __end_of_itoa:
  1570                           
  1571                           	psect	text4
  1572  032C                     __ptext4:	
  1573 ;; *************** function _utoa *****************
  1574 ;; Defined at:
  1575 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\itoa.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;  buf             1    wreg     PTR unsigned char 
  1578 ;;		 -> ventilator_screen@vel_value(1), ventilator_screen@vel_number(1), ventilator_screen@vol_value(1), 
  1579 ;;  val             2    8[BANK0 ] unsigned int 
  1580 ;;  base            2   10[BANK0 ] int 
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;  buf             1   16[BANK0 ] PTR unsigned char 
  1583 ;;		 -> ventilator_screen@vel_value(1), ventilator_screen@vel_number(1), ventilator_screen@vol_value(1), 
  1584 ;;  v               2   13[BANK0 ] unsigned int 
  1585 ;;  c               1   15[BANK0 ] unsigned char 
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      PTR unsigned char 
  1588 ;; Registers used:
  1589 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMMON   BANK0   BANK1
  1595 ;;      Params:         0       4       0
  1596 ;;      Locals:         0       4       0
  1597 ;;      Temps:          0       1       0
  1598 ;;      Totals:         0       9       0
  1599 ;;Total ram usage:        9 bytes
  1600 ;; Hardware stack levels used: 1
  1601 ;; Hardware stack levels required when called: 1
  1602 ;; This function calls:
  1603 ;;		___lwdiv
  1604 ;;		___lwmod
  1605 ;; This function is called by:
  1606 ;;		_itoa
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           
  1611                           ;psect for function _utoa
  1612  032C                     _utoa:
  1613                           
  1614                           ;incstack = 0
  1615                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1616                           ;utoa@buf stored from wreg
  1617  032C  1283               	bcf	3,5	;RP0=0, select bank0
  1618  032D  1303               	bcf	3,6	;RP1=0, select bank0
  1619  032E  00B0               	movwf	utoa@buf
  1620  032F                     l1459:
  1621  032F  0829               	movf	utoa@val+1,w
  1622  0330  00AE               	movwf	utoa@v+1
  1623  0331  0828               	movf	utoa@val,w
  1624  0332  00AD               	movwf	utoa@v
  1625  0333                     l1461:
  1626  0333  082B               	movf	utoa@base+1,w
  1627  0334  00A1               	movwf	___lwdiv@divisor+1
  1628  0335  082A               	movf	utoa@base,w
  1629  0336  00A0               	movwf	___lwdiv@divisor
  1630  0337  082E               	movf	utoa@v+1,w
  1631  0338  00A3               	movwf	___lwdiv@dividend+1
  1632  0339  082D               	movf	utoa@v,w
  1633  033A  00A2               	movwf	___lwdiv@dividend
  1634  033B  118A  21D2  118A   	fcall	___lwdiv
  1635  033E  1283               	bcf	3,5	;RP0=0, select bank0
  1636  033F  1303               	bcf	3,6	;RP1=0, select bank0
  1637  0340  0821               	movf	?___lwdiv+1,w
  1638  0341  00AE               	movwf	utoa@v+1
  1639  0342  0820               	movf	?___lwdiv,w
  1640  0343  00AD               	movwf	utoa@v
  1641  0344                     l1463:
  1642  0344  3001               	movlw	1
  1643  0345  00AC               	movwf	??_utoa
  1644  0346  082C               	movf	??_utoa,w
  1645  0347  07B0               	addwf	utoa@buf,f
  1646  0348                     l1465:
  1647  0348  082D               	movf	utoa@v,w
  1648  0349  042E               	iorwf	utoa@v+1,w
  1649  034A  1D03               	btfss	3,2
  1650  034B  2B4D               	goto	u1071
  1651  034C  2B4E               	goto	u1070
  1652  034D                     u1071:
  1653  034D  2B33               	goto	l1461
  1654  034E                     u1070:
  1655  034E                     l1467:
  1656  034E  0830               	movf	utoa@buf,w
  1657  034F  0084               	movwf	4
  1658  0350  1383               	bcf	3,7	;select IRP bank0
  1659  0351  0180               	clrf	0
  1660  0352                     l1469:
  1661  0352  3001               	movlw	1
  1662  0353  02B0               	subwf	utoa@buf,f
  1663  0354                     l1471:
  1664  0354  082B               	movf	utoa@base+1,w
  1665  0355  00A1               	movwf	___lwmod@divisor+1
  1666  0356  082A               	movf	utoa@base,w
  1667  0357  00A0               	movwf	___lwmod@divisor
  1668  0358  0829               	movf	utoa@val+1,w
  1669  0359  00A3               	movwf	___lwmod@dividend+1
  1670  035A  0828               	movf	utoa@val,w
  1671  035B  00A2               	movwf	___lwmod@dividend
  1672  035C  118A  2196  118A   	fcall	___lwmod
  1673  035F  1283               	bcf	3,5	;RP0=0, select bank0
  1674  0360  1303               	bcf	3,6	;RP1=0, select bank0
  1675  0361  0820               	movf	?___lwmod,w
  1676  0362  00AC               	movwf	??_utoa
  1677  0363  082C               	movf	??_utoa,w
  1678  0364  00AF               	movwf	utoa@c
  1679  0365                     l1473:
  1680  0365  082B               	movf	utoa@base+1,w
  1681  0366  00A1               	movwf	___lwdiv@divisor+1
  1682  0367  082A               	movf	utoa@base,w
  1683  0368  00A0               	movwf	___lwdiv@divisor
  1684  0369  0829               	movf	utoa@val+1,w
  1685  036A  00A3               	movwf	___lwdiv@dividend+1
  1686  036B  0828               	movf	utoa@val,w
  1687  036C  00A2               	movwf	___lwdiv@dividend
  1688  036D  118A  21D2  118A   	fcall	___lwdiv
  1689  0370  1283               	bcf	3,5	;RP0=0, select bank0
  1690  0371  1303               	bcf	3,6	;RP1=0, select bank0
  1691  0372  0821               	movf	?___lwdiv+1,w
  1692  0373  00A9               	movwf	utoa@val+1
  1693  0374  0820               	movf	?___lwdiv,w
  1694  0375  00A8               	movwf	utoa@val
  1695  0376                     l1475:
  1696  0376  300A               	movlw	10
  1697  0377  022F               	subwf	utoa@c,w
  1698  0378  1C03               	skipc
  1699  0379  2B7B               	goto	u1081
  1700  037A  2B7C               	goto	u1080
  1701  037B                     u1081:
  1702  037B  2B80               	goto	l740
  1703  037C                     u1080:
  1704  037C                     l1477:
  1705  037C  3007               	movlw	7
  1706  037D  00AC               	movwf	??_utoa
  1707  037E  082C               	movf	??_utoa,w
  1708  037F  07AF               	addwf	utoa@c,f
  1709  0380                     l740:
  1710  0380  3030               	movlw	48
  1711  0381  00AC               	movwf	??_utoa
  1712  0382  082C               	movf	??_utoa,w
  1713  0383  07AF               	addwf	utoa@c,f
  1714  0384                     l1479:
  1715  0384  082F               	movf	utoa@c,w
  1716  0385  00AC               	movwf	??_utoa
  1717  0386  0830               	movf	utoa@buf,w
  1718  0387  0084               	movwf	4
  1719  0388  082C               	movf	??_utoa,w
  1720  0389  1383               	bcf	3,7	;select IRP bank0
  1721  038A  0080               	movwf	0
  1722  038B                     l1481:
  1723  038B  3001               	movlw	1
  1724  038C  02B0               	subwf	utoa@buf,f
  1725  038D                     l1483:
  1726  038D  0828               	movf	utoa@val,w
  1727  038E  0429               	iorwf	utoa@val+1,w
  1728  038F  1D03               	btfss	3,2
  1729  0390  2B92               	goto	u1091
  1730  0391  2B93               	goto	u1090
  1731  0392                     u1091:
  1732  0392  2B54               	goto	l1471
  1733  0393                     u1090:
  1734  0393                     l1485:
  1735                           
  1736                           ;	Return value of _utoa is never used
  1737  0393  3001               	movlw	1
  1738  0394  00AC               	movwf	??_utoa
  1739  0395  082C               	movf	??_utoa,w
  1740  0396  07B0               	addwf	utoa@buf,f
  1741  0397                     l742:
  1742  0397  0008               	return
  1743  0398                     __end_of_utoa:
  1744                           
  1745                           	psect	text5
  1746  0196                     __ptext5:	
  1747 ;; *************** function ___lwmod *****************
  1748 ;; Defined at:
  1749 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;  divisor         2    0[BANK0 ] unsigned int 
  1752 ;;  dividend        2    2[BANK0 ] unsigned int 
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;  counter         1    5[BANK0 ] unsigned char 
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  2    0[BANK0 ] unsigned int 
  1757 ;; Registers used:
  1758 ;;		wreg, status,2, status,0
  1759 ;; Tracked objects:
  1760 ;;		On entry : 0/0
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMMON   BANK0   BANK1
  1764 ;;      Params:         0       4       0
  1765 ;;      Locals:         0       1       0
  1766 ;;      Temps:          0       1       0
  1767 ;;      Totals:         0       6       0
  1768 ;;Total ram usage:        6 bytes
  1769 ;; Hardware stack levels used: 1
  1770 ;; This function calls:
  1771 ;;		Nothing
  1772 ;; This function is called by:
  1773 ;;		_utoa
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           
  1778                           ;psect for function ___lwmod
  1779  0196                     ___lwmod:
  1780  0196                     l1427:	
  1781                           ;incstack = 0
  1782                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1783                           
  1784  0196  1283               	bcf	3,5	;RP0=0, select bank0
  1785  0197  1303               	bcf	3,6	;RP1=0, select bank0
  1786  0198  0820               	movf	___lwmod@divisor,w
  1787  0199  0421               	iorwf	___lwmod@divisor+1,w
  1788  019A  1903               	btfsc	3,2
  1789  019B  299D               	goto	u981
  1790  019C  299E               	goto	u980
  1791  019D                     u981:
  1792  019D  29CD               	goto	l1445
  1793  019E                     u980:
  1794  019E                     l1429:
  1795  019E  01A5               	clrf	___lwmod@counter
  1796  019F  0AA5               	incf	___lwmod@counter,f
  1797  01A0  29AC               	goto	l1435
  1798  01A1                     l1431:
  1799  01A1  3001               	movlw	1
  1800  01A2                     u995:
  1801  01A2  1003               	clrc
  1802  01A3  0DA0               	rlf	___lwmod@divisor,f
  1803  01A4  0DA1               	rlf	___lwmod@divisor+1,f
  1804  01A5  3EFF               	addlw	-1
  1805  01A6  1D03               	skipz
  1806  01A7  29A2               	goto	u995
  1807  01A8                     l1433:
  1808  01A8  3001               	movlw	1
  1809  01A9  00A4               	movwf	??___lwmod
  1810  01AA  0824               	movf	??___lwmod,w
  1811  01AB  07A5               	addwf	___lwmod@counter,f
  1812  01AC                     l1435:
  1813  01AC  1FA1               	btfss	___lwmod@divisor+1,7
  1814  01AD  29AF               	goto	u1001
  1815  01AE  29B0               	goto	u1000
  1816  01AF                     u1001:
  1817  01AF  29A1               	goto	l1431
  1818  01B0                     u1000:
  1819  01B0                     l1437:
  1820  01B0  0821               	movf	___lwmod@divisor+1,w
  1821  01B1  0223               	subwf	___lwmod@dividend+1,w
  1822  01B2  1D03               	skipz
  1823  01B3  29B6               	goto	u1015
  1824  01B4  0820               	movf	___lwmod@divisor,w
  1825  01B5  0222               	subwf	___lwmod@dividend,w
  1826  01B6                     u1015:
  1827  01B6  1C03               	skipc
  1828  01B7  29B9               	goto	u1011
  1829  01B8  29BA               	goto	u1010
  1830  01B9                     u1011:
  1831  01B9  29C0               	goto	l1441
  1832  01BA                     u1010:
  1833  01BA                     l1439:
  1834  01BA  0820               	movf	___lwmod@divisor,w
  1835  01BB  02A2               	subwf	___lwmod@dividend,f
  1836  01BC  0821               	movf	___lwmod@divisor+1,w
  1837  01BD  1C03               	skipc
  1838  01BE  03A3               	decf	___lwmod@dividend+1,f
  1839  01BF  02A3               	subwf	___lwmod@dividend+1,f
  1840  01C0                     l1441:
  1841  01C0  3001               	movlw	1
  1842  01C1                     u1025:
  1843  01C1  1003               	clrc
  1844  01C2  0CA1               	rrf	___lwmod@divisor+1,f
  1845  01C3  0CA0               	rrf	___lwmod@divisor,f
  1846  01C4  3EFF               	addlw	-1
  1847  01C5  1D03               	skipz
  1848  01C6  29C1               	goto	u1025
  1849  01C7                     l1443:
  1850  01C7  3001               	movlw	1
  1851  01C8  02A5               	subwf	___lwmod@counter,f
  1852  01C9  1D03               	btfss	3,2
  1853  01CA  29CC               	goto	u1031
  1854  01CB  29CD               	goto	u1030
  1855  01CC                     u1031:
  1856  01CC  29B0               	goto	l1437
  1857  01CD                     u1030:
  1858  01CD                     l1445:
  1859  01CD  0823               	movf	___lwmod@dividend+1,w
  1860  01CE  00A1               	movwf	?___lwmod+1
  1861  01CF  0822               	movf	___lwmod@dividend,w
  1862  01D0  00A0               	movwf	?___lwmod
  1863  01D1                     l562:
  1864  01D1  0008               	return
  1865  01D2                     __end_of___lwmod:
  1866                           
  1867                           	psect	text6
  1868  01D2                     __ptext6:	
  1869 ;; *************** function ___lwdiv *****************
  1870 ;; Defined at:
  1871 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;  divisor         2    0[BANK0 ] unsigned int 
  1874 ;;  dividend        2    2[BANK0 ] unsigned int 
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;  quotient        2    5[BANK0 ] unsigned int 
  1877 ;;  counter         1    7[BANK0 ] unsigned char 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  2    0[BANK0 ] unsigned int 
  1880 ;; Registers used:
  1881 ;;		wreg, status,2, status,0
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMMON   BANK0   BANK1
  1887 ;;      Params:         0       4       0
  1888 ;;      Locals:         0       3       0
  1889 ;;      Temps:          0       1       0
  1890 ;;      Totals:         0       8       0
  1891 ;;Total ram usage:        8 bytes
  1892 ;; Hardware stack levels used: 1
  1893 ;; This function calls:
  1894 ;;		Nothing
  1895 ;; This function is called by:
  1896 ;;		_utoa
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           
  1901                           ;psect for function ___lwdiv
  1902  01D2                     ___lwdiv:
  1903  01D2                     l1401:	
  1904                           ;incstack = 0
  1905                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1906                           
  1907  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  1908  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  1909  01D4  01A5               	clrf	___lwdiv@quotient
  1910  01D5  01A6               	clrf	___lwdiv@quotient+1
  1911  01D6                     l1403:
  1912  01D6  0820               	movf	___lwdiv@divisor,w
  1913  01D7  0421               	iorwf	___lwdiv@divisor+1,w
  1914  01D8  1903               	btfsc	3,2
  1915  01D9  29DB               	goto	u911
  1916  01DA  29DC               	goto	u910
  1917  01DB                     u911:
  1918  01DB  2A13               	goto	l1423
  1919  01DC                     u910:
  1920  01DC                     l1405:
  1921  01DC  01A7               	clrf	___lwdiv@counter
  1922  01DD  0AA7               	incf	___lwdiv@counter,f
  1923  01DE  29EA               	goto	l1411
  1924  01DF                     l1407:
  1925  01DF  3001               	movlw	1
  1926  01E0                     u925:
  1927  01E0  1003               	clrc
  1928  01E1  0DA0               	rlf	___lwdiv@divisor,f
  1929  01E2  0DA1               	rlf	___lwdiv@divisor+1,f
  1930  01E3  3EFF               	addlw	-1
  1931  01E4  1D03               	skipz
  1932  01E5  29E0               	goto	u925
  1933  01E6                     l1409:
  1934  01E6  3001               	movlw	1
  1935  01E7  00A4               	movwf	??___lwdiv
  1936  01E8  0824               	movf	??___lwdiv,w
  1937  01E9  07A7               	addwf	___lwdiv@counter,f
  1938  01EA                     l1411:
  1939  01EA  1FA1               	btfss	___lwdiv@divisor+1,7
  1940  01EB  29ED               	goto	u931
  1941  01EC  29EE               	goto	u930
  1942  01ED                     u931:
  1943  01ED  29DF               	goto	l1407
  1944  01EE                     u930:
  1945  01EE                     l1413:
  1946  01EE  3001               	movlw	1
  1947  01EF                     u945:
  1948  01EF  1003               	clrc
  1949  01F0  0DA5               	rlf	___lwdiv@quotient,f
  1950  01F1  0DA6               	rlf	___lwdiv@quotient+1,f
  1951  01F2  3EFF               	addlw	-1
  1952  01F3  1D03               	skipz
  1953  01F4  29EF               	goto	u945
  1954  01F5  0821               	movf	___lwdiv@divisor+1,w
  1955  01F6  0223               	subwf	___lwdiv@dividend+1,w
  1956  01F7  1D03               	skipz
  1957  01F8  29FB               	goto	u955
  1958  01F9  0820               	movf	___lwdiv@divisor,w
  1959  01FA  0222               	subwf	___lwdiv@dividend,w
  1960  01FB                     u955:
  1961  01FB  1C03               	skipc
  1962  01FC  29FE               	goto	u951
  1963  01FD  29FF               	goto	u950
  1964  01FE                     u951:
  1965  01FE  2A06               	goto	l1419
  1966  01FF                     u950:
  1967  01FF                     l1415:
  1968  01FF  0820               	movf	___lwdiv@divisor,w
  1969  0200  02A2               	subwf	___lwdiv@dividend,f
  1970  0201  0821               	movf	___lwdiv@divisor+1,w
  1971  0202  1C03               	skipc
  1972  0203  03A3               	decf	___lwdiv@dividend+1,f
  1973  0204  02A3               	subwf	___lwdiv@dividend+1,f
  1974  0205                     l1417:
  1975  0205  1425               	bsf	___lwdiv@quotient,0
  1976  0206                     l1419:
  1977  0206  3001               	movlw	1
  1978  0207                     u965:
  1979  0207  1003               	clrc
  1980  0208  0CA1               	rrf	___lwdiv@divisor+1,f
  1981  0209  0CA0               	rrf	___lwdiv@divisor,f
  1982  020A  3EFF               	addlw	-1
  1983  020B  1D03               	skipz
  1984  020C  2A07               	goto	u965
  1985  020D                     l1421:
  1986  020D  3001               	movlw	1
  1987  020E  02A7               	subwf	___lwdiv@counter,f
  1988  020F  1D03               	btfss	3,2
  1989  0210  2A12               	goto	u971
  1990  0211  2A13               	goto	u970
  1991  0212                     u971:
  1992  0212  29EE               	goto	l1413
  1993  0213                     u970:
  1994  0213                     l1423:
  1995  0213  0826               	movf	___lwdiv@quotient+1,w
  1996  0214  00A1               	movwf	?___lwdiv+1
  1997  0215  0825               	movf	___lwdiv@quotient,w
  1998  0216  00A0               	movwf	?___lwdiv
  1999  0217                     l552:
  2000  0217  0008               	return
  2001  0218                     __end_of___lwdiv:
  2002                           
  2003                           	psect	text7
  2004  048B                     __ptext7:	
  2005 ;; *************** function ___fltol *****************
  2006 ;; Defined at:
  2007 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;  f1              4    0[BANK0 ] unsigned int 
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;  exp1            1   10[BANK0 ] unsigned char 
  2012 ;;  sign1           1    9[BANK0 ] unsigned char 
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  4    0[BANK0 ] long 
  2015 ;; Registers used:
  2016 ;;		wreg, status,2, status,0
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMMON   BANK0   BANK1
  2022 ;;      Params:         0       4       0
  2023 ;;      Locals:         0       2       0
  2024 ;;      Temps:          0       5       0
  2025 ;;      Totals:         0      11       0
  2026 ;;Total ram usage:       11 bytes
  2027 ;; Hardware stack levels used: 1
  2028 ;; This function calls:
  2029 ;;		Nothing
  2030 ;; This function is called by:
  2031 ;;		_ventilator_screen
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           
  2036                           ;psect for function ___fltol
  2037  048B                     ___fltol:
  2038  048B                     l1543:	
  2039                           ;incstack = 0
  2040                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2041                           
  2042  048B  1003               	clrc
  2043  048C  1283               	bcf	3,5	;RP0=0, select bank0
  2044  048D  1303               	bcf	3,6	;RP1=0, select bank0
  2045  048E  0D22               	rlf	___fltol@f1+2,w
  2046  048F  0D23               	rlf	___fltol@f1+3,w
  2047  0490  00A4               	movwf	??___fltol
  2048  0491  0824               	movf	??___fltol,w
  2049  0492  00AA               	movwf	___fltol@exp1
  2050  0493  082A               	movf	___fltol@exp1,w
  2051  0494  1D03               	btfss	3,2
  2052  0495  2C97               	goto	u1151
  2053  0496  2C98               	goto	u1150
  2054  0497                     u1151:
  2055  0497  2CA1               	goto	l1549
  2056  0498                     u1150:
  2057  0498                     l1545:
  2058  0498  3000               	movlw	0
  2059  0499  00A3               	movwf	?___fltol+3
  2060  049A  3000               	movlw	0
  2061  049B  00A2               	movwf	?___fltol+2
  2062  049C  3000               	movlw	0
  2063  049D  00A1               	movwf	?___fltol+1
  2064  049E  3000               	movlw	0
  2065  049F  00A0               	movwf	?___fltol
  2066  04A0  2D06               	goto	l466
  2067  04A1                     l1549:
  2068  04A1  0820               	movf	___fltol@f1,w
  2069  04A2  00A4               	movwf	??___fltol
  2070  04A3  0821               	movf	___fltol@f1+1,w
  2071  04A4  00A5               	movwf	??___fltol+1
  2072  04A5  0822               	movf	___fltol@f1+2,w
  2073  04A6  00A6               	movwf	??___fltol+2
  2074  04A7  0823               	movf	___fltol@f1+3,w
  2075  04A8  00A7               	movwf	??___fltol+3
  2076  04A9  301F               	movlw	31
  2077  04AA                     u1165:
  2078  04AA  1003               	clrc
  2079  04AB  0CA7               	rrf	??___fltol+3,f
  2080  04AC  0CA6               	rrf	??___fltol+2,f
  2081  04AD  0CA5               	rrf	??___fltol+1,f
  2082  04AE  0CA4               	rrf	??___fltol,f
  2083  04AF                     u1160:
  2084  04AF  3EFF               	addlw	-1
  2085  04B0  1D03               	skipz
  2086  04B1  2CAA               	goto	u1165
  2087  04B2  0824               	movf	??___fltol,w
  2088  04B3  00A8               	movwf	??___fltol+4
  2089  04B4  0828               	movf	??___fltol+4,w
  2090  04B5  00A9               	movwf	___fltol@sign1
  2091  04B6                     l1551:
  2092  04B6  17A2               	bsf	___fltol@f1+2,7
  2093  04B7                     l1553:
  2094  04B7  30FF               	movlw	255
  2095  04B8  05A0               	andwf	___fltol@f1,f
  2096  04B9  30FF               	movlw	255
  2097  04BA  05A1               	andwf	___fltol@f1+1,f
  2098  04BB  30FF               	movlw	255
  2099  04BC  05A2               	andwf	___fltol@f1+2,f
  2100  04BD  3000               	movlw	0
  2101  04BE  05A3               	andwf	___fltol@f1+3,f
  2102  04BF                     l1555:
  2103  04BF  3096               	movlw	150
  2104  04C0  02AA               	subwf	___fltol@exp1,f
  2105  04C1                     l1557:
  2106  04C1  1FAA               	btfss	___fltol@exp1,7
  2107  04C2  2CC4               	goto	u1171
  2108  04C3  2CC5               	goto	u1170
  2109  04C4                     u1171:
  2110  04C4  2CDF               	goto	l1567
  2111  04C5                     u1170:
  2112  04C5                     l1559:
  2113  04C5  082A               	movf	___fltol@exp1,w
  2114  04C6  3A80               	xorlw	128
  2115  04C7  3E97               	addlw	151
  2116  04C8  1803               	skipnc
  2117  04C9  2CCB               	goto	u1181
  2118  04CA  2CCC               	goto	u1180
  2119  04CB                     u1181:
  2120  04CB  2CCD               	goto	l1565
  2121  04CC                     u1180:
  2122  04CC  2C98               	goto	l1545
  2123  04CD                     l1565:
  2124  04CD  3001               	movlw	1
  2125  04CE                     u1195:
  2126  04CE  1003               	clrc
  2127  04CF  0CA3               	rrf	___fltol@f1+3,f
  2128  04D0  0CA2               	rrf	___fltol@f1+2,f
  2129  04D1  0CA1               	rrf	___fltol@f1+1,f
  2130  04D2  0CA0               	rrf	___fltol@f1,f
  2131  04D3  3EFF               	addlw	-1
  2132  04D4  1D03               	skipz
  2133  04D5  2CCE               	goto	u1195
  2134  04D6  3001               	movlw	1
  2135  04D7  00A4               	movwf	??___fltol
  2136  04D8  0824               	movf	??___fltol,w
  2137  04D9  07AA               	addwf	___fltol@exp1,f
  2138  04DA  1D03               	btfss	3,2
  2139  04DB  2CDD               	goto	u1201
  2140  04DC  2CDE               	goto	u1200
  2141  04DD                     u1201:
  2142  04DD  2CCD               	goto	l1565
  2143  04DE                     u1200:
  2144  04DE  2CF6               	goto	l1575
  2145  04DF                     l1567:
  2146  04DF  3020               	movlw	32
  2147  04E0  022A               	subwf	___fltol@exp1,w
  2148  04E1  1C03               	skipc
  2149  04E2  2CE4               	goto	u1211
  2150  04E3  2CE5               	goto	u1210
  2151  04E4                     u1211:
  2152  04E4  2CF1               	goto	l473
  2153  04E5                     u1210:
  2154  04E5  2C98               	goto	l1545
  2155  04E6                     l1573:
  2156  04E6  3001               	movlw	1
  2157  04E7  00A4               	movwf	??___fltol
  2158  04E8                     u1225:
  2159  04E8  1003               	clrc
  2160  04E9  0DA0               	rlf	___fltol@f1,f
  2161  04EA  0DA1               	rlf	___fltol@f1+1,f
  2162  04EB  0DA2               	rlf	___fltol@f1+2,f
  2163  04EC  0DA3               	rlf	___fltol@f1+3,f
  2164  04ED  0BA4               	decfsz	??___fltol,f
  2165  04EE  2CE8               	goto	u1225
  2166  04EF  3001               	movlw	1
  2167  04F0  02AA               	subwf	___fltol@exp1,f
  2168  04F1                     l473:
  2169  04F1  082A               	movf	___fltol@exp1,w
  2170  04F2  1D03               	btfss	3,2
  2171  04F3  2CF5               	goto	u1231
  2172  04F4  2CF6               	goto	u1230
  2173  04F5                     u1231:
  2174  04F5  2CE6               	goto	l1573
  2175  04F6                     u1230:
  2176  04F6                     l1575:
  2177  04F6  0829               	movf	___fltol@sign1,w
  2178  04F7  1903               	btfsc	3,2
  2179  04F8  2CFA               	goto	u1241
  2180  04F9  2CFB               	goto	u1240
  2181  04FA                     u1241:
  2182  04FA  2D06               	goto	l476
  2183  04FB                     u1240:
  2184  04FB                     l1577:
  2185  04FB  09A0               	comf	___fltol@f1,f
  2186  04FC  09A1               	comf	___fltol@f1+1,f
  2187  04FD  09A2               	comf	___fltol@f1+2,f
  2188  04FE  09A3               	comf	___fltol@f1+3,f
  2189  04FF  0AA0               	incf	___fltol@f1,f
  2190  0500  1903               	skipnz
  2191  0501  0AA1               	incf	___fltol@f1+1,f
  2192  0502  1903               	skipnz
  2193  0503  0AA2               	incf	___fltol@f1+2,f
  2194  0504  1903               	skipnz
  2195  0505  0AA3               	incf	___fltol@f1+3,f
  2196  0506                     l476:
  2197  0506                     l466:
  2198  0506  0008               	return
  2199  0507                     __end_of___fltol:
  2200                           
  2201                           	psect	text8
  2202  0410                     __ptext8:	
  2203 ;; *************** function _conditional_screen *****************
  2204 ;; Defined at:
  2205 ;;		line 89 in file "main.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;  x               2   10[BANK0 ] int 
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;  msj            14   26[BANK0 ] unsigned char [14]
  2210 ;;  con            10   16[BANK0 ] unsigned char [10]
  2211 ;; Return value:  Size  Location     Type
  2212 ;;                  1    wreg      void 
  2213 ;; Registers used:
  2214 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2215 ;; Tracked objects:
  2216 ;;		On entry : 0/0
  2217 ;;		On exit  : 0/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMMON   BANK0   BANK1
  2220 ;;      Params:         0       2       0
  2221 ;;      Locals:         0      24       0
  2222 ;;      Temps:          0       4       0
  2223 ;;      Totals:         0      30       0
  2224 ;;Total ram usage:       30 bytes
  2225 ;; Hardware stack levels used: 1
  2226 ;; Hardware stack levels required when called: 3
  2227 ;; This function calls:
  2228 ;;		_LCD_Cmd
  2229 ;;		_LCD_Goto
  2230 ;;		_LCD_Print
  2231 ;;		_strcat
  2232 ;; This function is called by:
  2233 ;;		_selector_type
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236                           
  2237                           
  2238                           ;psect for function _conditional_screen
  2239  0410                     _conditional_screen:
  2240  0410                     l1697:	
  2241                           ;incstack = 0
  2242                           ; Regs used in _conditional_screen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2243                           
  2244                           
  2245                           ;main.c: 89: void conditional_screen(int x);main.c: 90: {;main.c: 91:     char msj[]="Ca
      +                          mbiar cond.";
  2246  0410  303A               	movlw	conditional_screen@msj& (0+255)
  2247  0411  0084               	movwf	4
  2248  0412  30A0               	movlw	low conditional_screen@F1115
  2249  0413  1283               	bcf	3,5	;RP0=0, select bank0
  2250  0414  1303               	bcf	3,6	;RP1=0, select bank0
  2251  0415  00AC               	movwf	??_conditional_screen
  2252  0416  0804               	movf	4,w
  2253  0417  00AD               	movwf	??_conditional_screen+1
  2254  0418  300E               	movlw	14
  2255  0419  00AE               	movwf	??_conditional_screen+2
  2256  041A                     u1570:
  2257  041A  082C               	movf	??_conditional_screen,w
  2258  041B  0084               	movwf	4
  2259  041C  1383               	bcf	3,7	;select IRP bank1
  2260  041D  0800               	movf	0,w
  2261  041E  00AF               	movwf	??_conditional_screen+3
  2262  041F  0AAC               	incf	??_conditional_screen,f
  2263  0420  082D               	movf	??_conditional_screen+1,w
  2264  0421  0084               	movwf	4
  2265  0422  082F               	movf	??_conditional_screen+3,w
  2266  0423  0080               	movwf	0
  2267  0424  0AAD               	incf	??_conditional_screen+1,f
  2268  0425  0BAE               	decfsz	??_conditional_screen+2,f
  2269  0426  2C1A               	goto	u1570
  2270                           
  2271                           ;main.c: 92:     char con[]="1.Si 2.No";
  2272  0427  3030               	movlw	conditional_screen@con& (0+255)
  2273  0428  0084               	movwf	4
  2274  0429  30B8               	movlw	low conditional_screen@F1117
  2275  042A  00AC               	movwf	??_conditional_screen
  2276  042B  0804               	movf	4,w
  2277  042C  00AD               	movwf	??_conditional_screen+1
  2278  042D  300A               	movlw	10
  2279  042E  00AE               	movwf	??_conditional_screen+2
  2280  042F                     u1580:
  2281  042F  082C               	movf	??_conditional_screen,w
  2282  0430  0084               	movwf	4
  2283  0431  1383               	bcf	3,7	;select IRP bank1
  2284  0432  0800               	movf	0,w
  2285  0433  00AF               	movwf	??_conditional_screen+3
  2286  0434  0AAC               	incf	??_conditional_screen,f
  2287  0435  082D               	movf	??_conditional_screen+1,w
  2288  0436  0084               	movwf	4
  2289  0437  082F               	movf	??_conditional_screen+3,w
  2290  0438  0080               	movwf	0
  2291  0439  0AAD               	incf	??_conditional_screen+1,f
  2292  043A  0BAE               	decfsz	??_conditional_screen+2,f
  2293  043B  2C2F               	goto	u1580
  2294  043C                     l1699:
  2295                           
  2296                           ;main.c: 93:     LCD_Cmd(0x01);
  2297  043C  3001               	movlw	1
  2298  043D  118A  20D1  118A   	fcall	_LCD_Cmd
  2299  0440                     l1701:
  2300                           
  2301                           ;main.c: 94:     if(x==1)
  2302  0440  1283               	bcf	3,5	;RP0=0, select bank0
  2303  0441  1303               	bcf	3,6	;RP1=0, select bank0
  2304  0442  032A               	decf	conditional_screen@x,w
  2305  0443  042B               	iorwf	conditional_screen@x+1,w
  2306  0444  1D03               	btfss	3,2
  2307  0445  2C47               	goto	u1591
  2308  0446  2C48               	goto	u1590
  2309  0447                     u1591:
  2310  0447  2C51               	goto	l1705
  2311  0448                     u1590:
  2312  0448                     l1703:
  2313                           
  2314                           ;main.c: 95:     {;main.c: 96:         strcat(msj," V");
  2315  0448  3011               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2316  0449  00A0               	movwf	strcat@from
  2317  044A  3080               	movlw	128
  2318  044B  00A1               	movwf	strcat@from+1
  2319  044C  303A               	movlw	(low (conditional_screen@msj| 0))& (0+255)
  2320  044D  118A  212F  118A   	fcall	_strcat
  2321                           
  2322                           ;main.c: 97:     }
  2323  0450  2C70               	goto	l1713
  2324  0451                     l1705:
  2325  0451  3002               	movlw	2
  2326  0452  062A               	xorwf	conditional_screen@x,w
  2327  0453  042B               	iorwf	conditional_screen@x+1,w
  2328  0454  1D03               	btfss	3,2
  2329  0455  2C57               	goto	u1601
  2330  0456  2C58               	goto	u1600
  2331  0457                     u1601:
  2332  0457  2C61               	goto	l1709
  2333  0458                     u1600:
  2334  0458                     l1707:
  2335                           
  2336                           ;main.c: 99:     {;main.c: 100:         strcat(msj," F1");
  2337  0458  3006               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2338  0459  00A0               	movwf	strcat@from
  2339  045A  3080               	movlw	128
  2340  045B  00A1               	movwf	strcat@from+1
  2341  045C  303A               	movlw	(low (conditional_screen@msj| 0))& (0+255)
  2342  045D  118A  212F  118A   	fcall	_strcat
  2343                           
  2344                           ;main.c: 101:     }
  2345  0460  2C70               	goto	l1713
  2346  0461                     l1709:
  2347  0461  3003               	movlw	3
  2348  0462  062A               	xorwf	conditional_screen@x,w
  2349  0463  042B               	iorwf	conditional_screen@x+1,w
  2350  0464  1D03               	btfss	3,2
  2351  0465  2C67               	goto	u1611
  2352  0466  2C68               	goto	u1610
  2353  0467                     u1611:
  2354  0467  2C70               	goto	l1713
  2355  0468                     u1610:
  2356  0468                     l1711:
  2357                           
  2358                           ;main.c: 103:     {;main.c: 104:         strcat(msj," F2");
  2359  0468  300A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2360  0469  00A0               	movwf	strcat@from
  2361  046A  3080               	movlw	128
  2362  046B  00A1               	movwf	strcat@from+1
  2363  046C  303A               	movlw	(low (conditional_screen@msj| 0))& (0+255)
  2364  046D  118A  212F  118A   	fcall	_strcat
  2365  0470                     l1713:
  2366                           
  2367                           ;main.c: 106:     LCD_Goto(1,1);
  2368  0470  1283               	bcf	3,5	;RP0=0, select bank0
  2369  0471  1303               	bcf	3,6	;RP1=0, select bank0
  2370  0472  01A6               	clrf	LCD_Goto@row
  2371  0473  0AA6               	incf	LCD_Goto@row,f
  2372  0474  3001               	movlw	1
  2373  0475  118A  20FF  118A   	fcall	_LCD_Goto
  2374  0478                     l1715:
  2375                           
  2376                           ;main.c: 107:     LCD_Print(msj);
  2377  0478  303A               	movlw	(low (conditional_screen@msj| 0))& (0+255)
  2378  0479  118A  2161  118A   	fcall	_LCD_Print
  2379  047C                     l1717:
  2380                           
  2381                           ;main.c: 108:     LCD_Goto(1,2);
  2382  047C  3002               	movlw	2
  2383  047D  1283               	bcf	3,5	;RP0=0, select bank0
  2384  047E  1303               	bcf	3,6	;RP1=0, select bank0
  2385  047F  00AC               	movwf	??_conditional_screen
  2386  0480  082C               	movf	??_conditional_screen,w
  2387  0481  00A6               	movwf	LCD_Goto@row
  2388  0482  3001               	movlw	1
  2389  0483  118A  20FF  118A   	fcall	_LCD_Goto
  2390  0486                     l1719:
  2391                           
  2392                           ;main.c: 109:     LCD_Print(con);
  2393  0486  3030               	movlw	(low (conditional_screen@con| 0))& (0+255)
  2394  0487  118A  2161  118A   	fcall	_LCD_Print
  2395  048A                     l160:
  2396  048A  0008               	return
  2397  048B                     __end_of_conditional_screen:
  2398                           
  2399                           	psect	text9
  2400  012F                     __ptext9:	
  2401 ;; *************** function _strcat *****************
  2402 ;; Defined at:
  2403 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strcat.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;  to              1    wreg     PTR unsigned char 
  2406 ;;		 -> ventilator_screen@vel(5), ventilator_screen@vol(10), conditional_screen@msj(14), 
  2407 ;;  from            2    0[BANK0 ] PTR const unsigned char 
  2408 ;;		 -> STR_5(5), STR_4(3), ventilator_screen@vel_value(1), ventilator_screen@vel_number(1), 
  2409 ;;		 -> ventilator_screen@vol_value(1), STR_3(4), STR_2(4), STR_1(3), 
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;  to              1    4[BANK0 ] PTR unsigned char 
  2412 ;;		 -> ventilator_screen@vel(5), ventilator_screen@vol(10), conditional_screen@msj(14), 
  2413 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  2414 ;;		 -> ventilator_screen@vel(5), ventilator_screen@vol(10), conditional_screen@msj(14), 
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      PTR unsigned char 
  2417 ;; Registers used:
  2418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMMON   BANK0   BANK1
  2424 ;;      Params:         0       2       0
  2425 ;;      Locals:         0       2       0
  2426 ;;      Temps:          0       1       0
  2427 ;;      Totals:         0       5       0
  2428 ;;Total ram usage:        5 bytes
  2429 ;; Hardware stack levels used: 2
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_conditional_screen
  2434 ;;		_ventilator_screen
  2435 ;; This function uses a non-reentrant model
  2436 ;;
  2437                           
  2438                           
  2439                           ;psect for function _strcat
  2440  012F                     _strcat:
  2441                           
  2442                           ;incstack = 0
  2443                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  2444                           ;strcat@to stored from wreg
  2445  012F  1283               	bcf	3,5	;RP0=0, select bank0
  2446  0130  1303               	bcf	3,6	;RP1=0, select bank0
  2447  0131  00A4               	movwf	strcat@to
  2448  0132                     l1517:
  2449  0132  0824               	movf	strcat@to,w
  2450  0133  00A2               	movwf	??_strcat
  2451  0134  0822               	movf	??_strcat,w
  2452  0135  00A3               	movwf	strcat@cp
  2453  0136  293B               	goto	l1521
  2454  0137                     l1519:
  2455  0137  3001               	movlw	1
  2456  0138  00A2               	movwf	??_strcat
  2457  0139  0822               	movf	??_strcat,w
  2458  013A  07A3               	addwf	strcat@cp,f
  2459  013B                     l1521:
  2460  013B  0823               	movf	strcat@cp,w
  2461  013C  0084               	movwf	4
  2462  013D  1383               	bcf	3,7	;select IRP bank0
  2463  013E  0800               	movf	0,w
  2464  013F  1D03               	btfss	3,2
  2465  0140  2942               	goto	u1121
  2466  0141  2943               	goto	u1120
  2467  0142                     u1121:
  2468  0142  2937               	goto	l1519
  2469  0143                     u1120:
  2470  0143  294E               	goto	l1527
  2471  0144                     l1523:
  2472  0144  3001               	movlw	1
  2473  0145  00A2               	movwf	??_strcat
  2474  0146  0822               	movf	??_strcat,w
  2475  0147  07A3               	addwf	strcat@cp,f
  2476  0148                     l1525:
  2477  0148  3001               	movlw	1
  2478  0149  07A0               	addwf	strcat@from,f
  2479  014A  1803               	skipnc
  2480  014B  0AA1               	incf	strcat@from+1,f
  2481  014C  3000               	movlw	0
  2482  014D  07A1               	addwf	strcat@from+1,f
  2483  014E                     l1527:
  2484  014E  0821               	movf	strcat@from+1,w
  2485  014F  00FF               	movwf	btemp+1
  2486  0150  0820               	movf	strcat@from,w
  2487  0151  0084               	movwf	4
  2488  0152  118A  2002  118A   	fcall	stringtab
  2489  0155  00A2               	movwf	??_strcat
  2490  0156  0823               	movf	strcat@cp,w
  2491  0157  0084               	movwf	4
  2492  0158  0822               	movf	??_strcat,w
  2493  0159  1383               	bcf	3,7	;select IRP bank0
  2494  015A  0080               	movwf	0
  2495  015B  0800               	movf	0,w
  2496  015C  1D03               	btfss	3,2
  2497  015D  295F               	goto	u1131
  2498  015E  2960               	goto	u1130
  2499  015F                     u1131:
  2500  015F  2944               	goto	l1523
  2501  0160                     u1130:
  2502  0160                     l751:
  2503  0160  0008               	return
  2504  0161                     __end_of_strcat:
  2505                           
  2506                           	psect	text10
  2507  008C                     __ptext10:	
  2508 ;; *************** function _keypad_getkey *****************
  2509 ;; Defined at:
  2510 ;;		line 91 in file "./kbd.h"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;		None
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;  key             1    2[BANK0 ] unsigned char 
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  1    wreg      unsigned char 
  2517 ;; Registers used:
  2518 ;;		wreg, status,2, status,0, pclath, cstack
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMMON   BANK0   BANK1
  2524 ;;      Params:         0       0       0
  2525 ;;      Locals:         0       1       0
  2526 ;;      Temps:          0       1       0
  2527 ;;      Totals:         0       2       0
  2528 ;;Total ram usage:        2 bytes
  2529 ;; Hardware stack levels used: 1
  2530 ;; Hardware stack levels required when called: 1
  2531 ;; This function calls:
  2532 ;;		_keypad_readkey
  2533 ;; This function is called by:
  2534 ;;		_main
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           
  2539                           ;psect for function _keypad_getkey
  2540  008C                     _keypad_getkey:
  2541  008C                     l1789:	
  2542                           ;incstack = 0
  2543                           ; Regs used in _keypad_getkey: [wreg+status,2+status,0+pclath+cstack]
  2544                           
  2545                           
  2546                           ;./kbd.h: 93:  unsigned char key = 'x';
  2547  008C  3078               	movlw	120
  2548  008D  1283               	bcf	3,5	;RP0=0, select bank0
  2549  008E  1303               	bcf	3,6	;RP1=0, select bank0
  2550  008F  00A1               	movwf	??_keypad_getkey
  2551  0090  0821               	movf	??_keypad_getkey,w
  2552  0091  00A2               	movwf	keypad_getkey@key
  2553                           
  2554                           ;./kbd.h: 96:  while(key == 'x')
  2555  0092  289B               	goto	l1793
  2556  0093                     l1791:
  2557                           
  2558                           ;./kbd.h: 97:   key = keypad_readkey();
  2559  0093  118A  2702  118A   	fcall	_keypad_readkey
  2560  0096  1283               	bcf	3,5	;RP0=0, select bank0
  2561  0097  1303               	bcf	3,6	;RP1=0, select bank0
  2562  0098  00A1               	movwf	??_keypad_getkey
  2563  0099  0821               	movf	??_keypad_getkey,w
  2564  009A  00A2               	movwf	keypad_getkey@key
  2565  009B                     l1793:
  2566                           
  2567                           ;./kbd.h: 96:  while(key == 'x')
  2568  009B  3078               	movlw	120
  2569  009C  0622               	xorwf	keypad_getkey@key,w
  2570  009D  1903               	btfsc	3,2
  2571  009E  28A0               	goto	u1641
  2572  009F  28A1               	goto	u1640
  2573  00A0                     u1641:
  2574  00A0  2893               	goto	l1791
  2575  00A1                     u1640:
  2576  00A1                     l1795:
  2577  00A1  118A  2702  118A   	fcall	_keypad_readkey
  2578  00A4  3A78               	xorlw	120
  2579  00A5  1D03               	skipz
  2580  00A6  28A8               	goto	u1651
  2581  00A7  28A9               	goto	u1650
  2582  00A8                     u1651:
  2583  00A8  28A1               	goto	l1795
  2584  00A9                     u1650:
  2585  00A9                     l1797:
  2586                           
  2587                           ;./kbd.h: 102:  return key;
  2588  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  2589  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  2590  00AB  0822               	movf	keypad_getkey@key,w
  2591  00AC                     l119:
  2592  00AC  0008               	return
  2593  00AD                     __end_of_keypad_getkey:
  2594                           
  2595                           	psect	text11
  2596  0702                     __ptext11:	
  2597 ;; *************** function _keypad_readkey *****************
  2598 ;; Defined at:
  2599 ;;		line 36 in file "./kbd.h"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;		None
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;		None
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  1    wreg      unsigned char 
  2606 ;; Registers used:
  2607 ;;		wreg
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMMON   BANK0   BANK1
  2613 ;;      Params:         0       0       0
  2614 ;;      Locals:         0       0       0
  2615 ;;      Temps:          0       1       0
  2616 ;;      Totals:         0       1       0
  2617 ;;Total ram usage:        1 bytes
  2618 ;; Hardware stack levels used: 1
  2619 ;; This function calls:
  2620 ;;		Nothing
  2621 ;; This function is called by:
  2622 ;;		_keypad_getkey
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625                           
  2626                           
  2627                           ;psect for function _keypad_readkey
  2628  0702                     _keypad_readkey:
  2629  0702                     l1579:	
  2630                           ;incstack = 0
  2631                           ; Regs used in _keypad_readkey: [wreg]
  2632                           
  2633                           
  2634                           ;./kbd.h: 38:     RC1 = 1;
  2635  0702  1283               	bcf	3,5	;RP0=0, select bank0
  2636  0703  1303               	bcf	3,6	;RP1=0, select bank0
  2637  0704  1487               	bsf	7,1	;volatile
  2638                           
  2639                           ;./kbd.h: 39:     RC0 = 0;
  2640  0705  1007               	bcf	7,0	;volatile
  2641                           
  2642                           ;./kbd.h: 40:     RA5 = 0;
  2643  0706  1285               	bcf	5,5	;volatile
  2644                           
  2645                           ;./kbd.h: 41:     RA4 = 0;
  2646  0707  1205               	bcf	5,4	;volatile
  2647  0708                     l1581:
  2648                           
  2649                           ;./kbd.h: 42:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  2650  0708  304F               	movlw	79
  2651  0709  1283               	bcf	3,5	;RP0=0, select bank0
  2652  070A  1303               	bcf	3,6	;RP1=0, select bank0
  2653  070B  00A0               	movwf	??_keypad_readkey
  2654  070C                     u1787:
  2655  070C  0BA0               	decfsz	??_keypad_readkey,f
  2656  070D  2F0C               	goto	u1787
  2657  070E  0000               	nop
  2658  070F                     l1583:
  2659                           
  2660                           ;./kbd.h: 44:     if(RC1==1 && RC0==0 && RA5==0 && RA4==0) {
  2661  070F  1283               	bcf	3,5	;RP0=0, select bank0
  2662  0710  1303               	bcf	3,6	;RP1=0, select bank0
  2663  0711  1C87               	btfss	7,1	;volatile
  2664  0712  2F14               	goto	u1251
  2665  0713  2F15               	goto	u1250
  2666  0714                     u1251:
  2667  0714  2F39               	goto	l90
  2668  0715                     u1250:
  2669  0715                     l1585:
  2670  0715  1807               	btfsc	7,0	;volatile
  2671  0716  2F18               	goto	u1261
  2672  0717  2F19               	goto	u1260
  2673  0718                     u1261:
  2674  0718  2F39               	goto	l90
  2675  0719                     u1260:
  2676  0719                     l1587:
  2677  0719  1A85               	btfsc	5,5	;volatile
  2678  071A  2F1C               	goto	u1271
  2679  071B  2F1D               	goto	u1270
  2680  071C                     u1271:
  2681  071C  2F39               	goto	l90
  2682  071D                     u1270:
  2683  071D                     l1589:
  2684  071D  1A05               	btfsc	5,4	;volatile
  2685  071E  2F20               	goto	u1281
  2686  071F  2F21               	goto	u1280
  2687  0720                     u1281:
  2688  0720  2F39               	goto	l90
  2689  0721                     u1280:
  2690  0721                     l1591:
  2691                           
  2692                           ;./kbd.h: 45:         if (RA0 == 1) return 'Z';
  2693  0721  1C05               	btfss	5,0	;volatile
  2694  0722  2F24               	goto	u1291
  2695  0723  2F25               	goto	u1290
  2696  0724                     u1291:
  2697  0724  2F27               	goto	l91
  2698  0725                     u1290:
  2699  0725                     l1593:
  2700  0725  305A               	movlw	90
  2701  0726  2FD9               	goto	l92
  2702  0727                     l91:
  2703                           
  2704                           ;./kbd.h: 46:         if (RA1 == 1) return '0';
  2705  0727  1C85               	btfss	5,1	;volatile
  2706  0728  2F2A               	goto	u1301
  2707  0729  2F2B               	goto	u1300
  2708  072A                     u1301:
  2709  072A  2F2D               	goto	l93
  2710  072B                     u1300:
  2711  072B                     l1597:
  2712  072B  3030               	movlw	48
  2713  072C  2FD9               	goto	l92
  2714  072D                     l93:
  2715                           
  2716                           ;./kbd.h: 47:         if (RA2 == 1) return '=';
  2717  072D  1D05               	btfss	5,2	;volatile
  2718  072E  2F30               	goto	u1311
  2719  072F  2F31               	goto	u1310
  2720  0730                     u1311:
  2721  0730  2F33               	goto	l94
  2722  0731                     u1310:
  2723  0731                     l1601:
  2724  0731  303D               	movlw	61
  2725  0732  2FD9               	goto	l92
  2726  0733                     l94:
  2727                           
  2728                           ;./kbd.h: 48:         if (RA3 == 1) return 'D';
  2729  0733  1D85               	btfss	5,3	;volatile
  2730  0734  2F36               	goto	u1321
  2731  0735  2F37               	goto	u1320
  2732  0736                     u1321:
  2733  0736  2F39               	goto	l90
  2734  0737                     u1320:
  2735  0737                     l1605:
  2736  0737  3044               	movlw	68
  2737  0738  2FD9               	goto	l92
  2738  0739                     l90:	
  2739                           ;./kbd.h: 49:     }
  2740                           
  2741                           
  2742                           ;./kbd.h: 50:     RC1 = 0;
  2743  0739  1087               	bcf	7,1	;volatile
  2744                           
  2745                           ;./kbd.h: 51:     RC0 = 1;
  2746  073A  1407               	bsf	7,0	;volatile
  2747                           
  2748                           ;./kbd.h: 52:     RA5 = 0;
  2749  073B  1285               	bcf	5,5	;volatile
  2750                           
  2751                           ;./kbd.h: 53:     RA4 = 0;
  2752  073C  1205               	bcf	5,4	;volatile
  2753  073D                     l1609:
  2754                           
  2755                           ;./kbd.h: 54:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  2756  073D  304F               	movlw	79
  2757  073E  1283               	bcf	3,5	;RP0=0, select bank0
  2758  073F  1303               	bcf	3,6	;RP1=0, select bank0
  2759  0740  00A0               	movwf	??_keypad_readkey
  2760  0741                     u1797:
  2761  0741  0BA0               	decfsz	??_keypad_readkey,f
  2762  0742  2F41               	goto	u1797
  2763  0743  0000               	nop
  2764  0744                     l1611:
  2765                           
  2766                           ;./kbd.h: 56:     if(RC1==0 && RC0==1 && RA5==0 && RA4==0) {
  2767  0744  1283               	bcf	3,5	;RP0=0, select bank0
  2768  0745  1303               	bcf	3,6	;RP1=0, select bank0
  2769  0746  1887               	btfsc	7,1	;volatile
  2770  0747  2F49               	goto	u1331
  2771  0748  2F4A               	goto	u1330
  2772  0749                     u1331:
  2773  0749  2F6E               	goto	l96
  2774  074A                     u1330:
  2775  074A                     l1613:
  2776  074A  1C07               	btfss	7,0	;volatile
  2777  074B  2F4D               	goto	u1341
  2778  074C  2F4E               	goto	u1340
  2779  074D                     u1341:
  2780  074D  2F6E               	goto	l96
  2781  074E                     u1340:
  2782  074E                     l1615:
  2783  074E  1A85               	btfsc	5,5	;volatile
  2784  074F  2F51               	goto	u1351
  2785  0750  2F52               	goto	u1350
  2786  0751                     u1351:
  2787  0751  2F6E               	goto	l96
  2788  0752                     u1350:
  2789  0752                     l1617:
  2790  0752  1A05               	btfsc	5,4	;volatile
  2791  0753  2F55               	goto	u1361
  2792  0754  2F56               	goto	u1360
  2793  0755                     u1361:
  2794  0755  2F6E               	goto	l96
  2795  0756                     u1360:
  2796  0756                     l1619:
  2797                           
  2798                           ;./kbd.h: 57:         if (RA0 == 1) return '1';
  2799  0756  1C05               	btfss	5,0	;volatile
  2800  0757  2F59               	goto	u1371
  2801  0758  2F5A               	goto	u1370
  2802  0759                     u1371:
  2803  0759  2F5C               	goto	l97
  2804  075A                     u1370:
  2805  075A                     l1621:
  2806  075A  3031               	movlw	49
  2807  075B  2FD9               	goto	l92
  2808  075C                     l97:
  2809                           
  2810                           ;./kbd.h: 58:         if (RA1 == 1) return '2';
  2811  075C  1C85               	btfss	5,1	;volatile
  2812  075D  2F5F               	goto	u1381
  2813  075E  2F60               	goto	u1380
  2814  075F                     u1381:
  2815  075F  2F62               	goto	l98
  2816  0760                     u1380:
  2817  0760                     l1625:
  2818  0760  3032               	movlw	50
  2819  0761  2FD9               	goto	l92
  2820  0762                     l98:
  2821                           
  2822                           ;./kbd.h: 59:         if (RA2 == 1) return '3';
  2823  0762  1D05               	btfss	5,2	;volatile
  2824  0763  2F65               	goto	u1391
  2825  0764  2F66               	goto	u1390
  2826  0765                     u1391:
  2827  0765  2F68               	goto	l99
  2828  0766                     u1390:
  2829  0766                     l1629:
  2830  0766  3033               	movlw	51
  2831  0767  2FD9               	goto	l92
  2832  0768                     l99:
  2833                           
  2834                           ;./kbd.h: 60:         if (RA3 == 1) return 'C';
  2835  0768  1D85               	btfss	5,3	;volatile
  2836  0769  2F6B               	goto	u1401
  2837  076A  2F6C               	goto	u1400
  2838  076B                     u1401:
  2839  076B  2F6E               	goto	l96
  2840  076C                     u1400:
  2841  076C                     l1633:
  2842  076C  3043               	movlw	67
  2843  076D  2FD9               	goto	l92
  2844  076E                     l96:	
  2845                           ;./kbd.h: 61:     }
  2846                           
  2847                           
  2848                           ;./kbd.h: 63:     RC1 = 0;
  2849  076E  1087               	bcf	7,1	;volatile
  2850                           
  2851                           ;./kbd.h: 64:     RC0 = 0;
  2852  076F  1007               	bcf	7,0	;volatile
  2853                           
  2854                           ;./kbd.h: 65:     RA5 = 1;
  2855  0770  1685               	bsf	5,5	;volatile
  2856                           
  2857                           ;./kbd.h: 66:     RA4 = 0;
  2858  0771  1205               	bcf	5,4	;volatile
  2859  0772                     l1637:
  2860                           
  2861                           ;./kbd.h: 67:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  2862  0772  304F               	movlw	79
  2863  0773  1283               	bcf	3,5	;RP0=0, select bank0
  2864  0774  1303               	bcf	3,6	;RP1=0, select bank0
  2865  0775  00A0               	movwf	??_keypad_readkey
  2866  0776                     u1807:
  2867  0776  0BA0               	decfsz	??_keypad_readkey,f
  2868  0777  2F76               	goto	u1807
  2869  0778  0000               	nop
  2870  0779                     l1639:
  2871                           
  2872                           ;./kbd.h: 69:     if(RC1==0 && RC0==0 && RA5==1 && RA4==0) {
  2873  0779  1283               	bcf	3,5	;RP0=0, select bank0
  2874  077A  1303               	bcf	3,6	;RP1=0, select bank0
  2875  077B  1887               	btfsc	7,1	;volatile
  2876  077C  2F7E               	goto	u1411
  2877  077D  2F7F               	goto	u1410
  2878  077E                     u1411:
  2879  077E  2FA3               	goto	l101
  2880  077F                     u1410:
  2881  077F                     l1641:
  2882  077F  1807               	btfsc	7,0	;volatile
  2883  0780  2F82               	goto	u1421
  2884  0781  2F83               	goto	u1420
  2885  0782                     u1421:
  2886  0782  2FA3               	goto	l101
  2887  0783                     u1420:
  2888  0783                     l1643:
  2889  0783  1E85               	btfss	5,5	;volatile
  2890  0784  2F86               	goto	u1431
  2891  0785  2F87               	goto	u1430
  2892  0786                     u1431:
  2893  0786  2FA3               	goto	l101
  2894  0787                     u1430:
  2895  0787                     l1645:
  2896  0787  1A05               	btfsc	5,4	;volatile
  2897  0788  2F8A               	goto	u1441
  2898  0789  2F8B               	goto	u1440
  2899  078A                     u1441:
  2900  078A  2FA3               	goto	l101
  2901  078B                     u1440:
  2902  078B                     l1647:
  2903                           
  2904                           ;./kbd.h: 70:         if (RA0 == 1) return '4';
  2905  078B  1C05               	btfss	5,0	;volatile
  2906  078C  2F8E               	goto	u1451
  2907  078D  2F8F               	goto	u1450
  2908  078E                     u1451:
  2909  078E  2F91               	goto	l102
  2910  078F                     u1450:
  2911  078F                     l1649:
  2912  078F  3034               	movlw	52
  2913  0790  2FD9               	goto	l92
  2914  0791                     l102:
  2915                           
  2916                           ;./kbd.h: 71:         if (RA1 == 1) return '5';
  2917  0791  1C85               	btfss	5,1	;volatile
  2918  0792  2F94               	goto	u1461
  2919  0793  2F95               	goto	u1460
  2920  0794                     u1461:
  2921  0794  2F97               	goto	l103
  2922  0795                     u1460:
  2923  0795                     l1653:
  2924  0795  3035               	movlw	53
  2925  0796  2FD9               	goto	l92
  2926  0797                     l103:
  2927                           
  2928                           ;./kbd.h: 72:         if (RA2 == 1) return '6';
  2929  0797  1D05               	btfss	5,2	;volatile
  2930  0798  2F9A               	goto	u1471
  2931  0799  2F9B               	goto	u1470
  2932  079A                     u1471:
  2933  079A  2F9D               	goto	l104
  2934  079B                     u1470:
  2935  079B                     l1657:
  2936  079B  3036               	movlw	54
  2937  079C  2FD9               	goto	l92
  2938  079D                     l104:
  2939                           
  2940                           ;./kbd.h: 73:         if (RA3 == 1) return 'B';
  2941  079D  1D85               	btfss	5,3	;volatile
  2942  079E  2FA0               	goto	u1481
  2943  079F  2FA1               	goto	u1480
  2944  07A0                     u1481:
  2945  07A0  2FA3               	goto	l101
  2946  07A1                     u1480:
  2947  07A1                     l1661:
  2948  07A1  3042               	movlw	66
  2949  07A2  2FD9               	goto	l92
  2950  07A3                     l101:	
  2951                           ;./kbd.h: 74:     }
  2952                           
  2953                           
  2954                           ;./kbd.h: 76:     RC1 = 0;
  2955  07A3  1087               	bcf	7,1	;volatile
  2956                           
  2957                           ;./kbd.h: 77:     RC0 = 0;
  2958  07A4  1007               	bcf	7,0	;volatile
  2959                           
  2960                           ;./kbd.h: 78:     RA5 = 0;
  2961  07A5  1285               	bcf	5,5	;volatile
  2962                           
  2963                           ;./kbd.h: 79:     RA4 = 1;
  2964  07A6  1605               	bsf	5,4	;volatile
  2965  07A7                     l1665:
  2966                           
  2967                           ;./kbd.h: 80:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  2968  07A7  304F               	movlw	79
  2969  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  2970  07A9  1303               	bcf	3,6	;RP1=0, select bank0
  2971  07AA  00A0               	movwf	??_keypad_readkey
  2972  07AB                     u1817:
  2973  07AB  0BA0               	decfsz	??_keypad_readkey,f
  2974  07AC  2FAB               	goto	u1817
  2975  07AD  0000               	nop
  2976  07AE                     l1667:
  2977                           
  2978                           ;./kbd.h: 82:     if(RC1==0 && RC0==0 && RA5==0 && RA4==1) {
  2979  07AE  1283               	bcf	3,5	;RP0=0, select bank0
  2980  07AF  1303               	bcf	3,6	;RP1=0, select bank0
  2981  07B0  1887               	btfsc	7,1	;volatile
  2982  07B1  2FB3               	goto	u1491
  2983  07B2  2FB4               	goto	u1490
  2984  07B3                     u1491:
  2985  07B3  2FD8               	goto	l1693
  2986  07B4                     u1490:
  2987  07B4                     l1669:
  2988  07B4  1807               	btfsc	7,0	;volatile
  2989  07B5  2FB7               	goto	u1501
  2990  07B6  2FB8               	goto	u1500
  2991  07B7                     u1501:
  2992  07B7  2FD8               	goto	l1693
  2993  07B8                     u1500:
  2994  07B8                     l1671:
  2995  07B8  1A85               	btfsc	5,5	;volatile
  2996  07B9  2FBB               	goto	u1511
  2997  07BA  2FBC               	goto	u1510
  2998  07BB                     u1511:
  2999  07BB  2FD8               	goto	l1693
  3000  07BC                     u1510:
  3001  07BC                     l1673:
  3002  07BC  1E05               	btfss	5,4	;volatile
  3003  07BD  2FBF               	goto	u1521
  3004  07BE  2FC0               	goto	u1520
  3005  07BF                     u1521:
  3006  07BF  2FD8               	goto	l1693
  3007  07C0                     u1520:
  3008  07C0                     l1675:
  3009                           
  3010                           ;./kbd.h: 83:         if (RA0 == 1) return '7';
  3011  07C0  1C05               	btfss	5,0	;volatile
  3012  07C1  2FC3               	goto	u1531
  3013  07C2  2FC4               	goto	u1530
  3014  07C3                     u1531:
  3015  07C3  2FC6               	goto	l107
  3016  07C4                     u1530:
  3017  07C4                     l1677:
  3018  07C4  3037               	movlw	55
  3019  07C5  2FD9               	goto	l92
  3020  07C6                     l107:
  3021                           
  3022                           ;./kbd.h: 84:         if (RA1 == 1) return '8';
  3023  07C6  1C85               	btfss	5,1	;volatile
  3024  07C7  2FC9               	goto	u1541
  3025  07C8  2FCA               	goto	u1540
  3026  07C9                     u1541:
  3027  07C9  2FCC               	goto	l108
  3028  07CA                     u1540:
  3029  07CA                     l1681:
  3030  07CA  3038               	movlw	56
  3031  07CB  2FD9               	goto	l92
  3032  07CC                     l108:
  3033                           
  3034                           ;./kbd.h: 85:         if (RA2 == 1) return '9';
  3035  07CC  1D05               	btfss	5,2	;volatile
  3036  07CD  2FCF               	goto	u1551
  3037  07CE  2FD0               	goto	u1550
  3038  07CF                     u1551:
  3039  07CF  2FD2               	goto	l109
  3040  07D0                     u1550:
  3041  07D0                     l1685:
  3042  07D0  3039               	movlw	57
  3043  07D1  2FD9               	goto	l92
  3044  07D2                     l109:
  3045                           
  3046                           ;./kbd.h: 86:         if (RA3 == 1) return 'A';
  3047  07D2  1D85               	btfss	5,3	;volatile
  3048  07D3  2FD5               	goto	u1561
  3049  07D4  2FD6               	goto	u1560
  3050  07D5                     u1561:
  3051  07D5  2FD8               	goto	l1693
  3052  07D6                     u1560:
  3053  07D6                     l1689:
  3054  07D6  3041               	movlw	65
  3055  07D7  2FD9               	goto	l92
  3056  07D8                     l1693:
  3057                           
  3058                           ;./kbd.h: 88:  return 'x';
  3059  07D8  3078               	movlw	120
  3060  07D9                     l92:
  3061  07D9  0008               	return
  3062  07DA                     __end_of_keypad_readkey:
  3063                           
  3064                           	psect	text12
  3065  026E                     __ptext12:	
  3066 ;; *************** function _inicio_presentacion *****************
  3067 ;; Defined at:
  3068 ;;		line 75 in file "main.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;  length          2   10[BANK0 ] int 
  3071 ;;  str             1   12[BANK0 ] PTR unsigned char 
  3072 ;;		 -> grupo(6), presentacion(29), saludo(23), 
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;  i               2   16[BANK0 ] int 
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  1    wreg      void 
  3077 ;; Registers used:
  3078 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMMON   BANK0   BANK1
  3084 ;;      Params:         0       3       0
  3085 ;;      Locals:         0       2       0
  3086 ;;      Temps:          0       3       0
  3087 ;;      Totals:         0       8       0
  3088 ;;Total ram usage:        8 bytes
  3089 ;; Hardware stack levels used: 1
  3090 ;; Hardware stack levels required when called: 3
  3091 ;; This function calls:
  3092 ;;		_LCD_Cmd
  3093 ;;		_LCD_Goto
  3094 ;;		_LCD_Print
  3095 ;; This function is called by:
  3096 ;;		_main
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           
  3101                           ;psect for function _inicio_presentacion
  3102  026E                     _inicio_presentacion:
  3103  026E                     l1827:	
  3104                           ;incstack = 0
  3105                           ; Regs used in _inicio_presentacion: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3106                           
  3107                           
  3108                           ;main.c: 75: void inicio_presentacion (int length, char *str);main.c: 76: {;main.c: 77: 
      +                              LCD_Goto(1,1);
  3109  026E  1283               	bcf	3,5	;RP0=0, select bank0
  3110  026F  1303               	bcf	3,6	;RP1=0, select bank0
  3111  0270  01A6               	clrf	LCD_Goto@row
  3112  0271  0AA6               	incf	LCD_Goto@row,f
  3113  0272  3001               	movlw	1
  3114  0273  118A  20FF  118A   	fcall	_LCD_Goto
  3115                           
  3116                           ;main.c: 78:     LCD_Print(str);
  3117  0276  1283               	bcf	3,5	;RP0=0, select bank0
  3118  0277  1303               	bcf	3,6	;RP1=0, select bank0
  3119  0278  082C               	movf	inicio_presentacion@str,w
  3120  0279  118A  2161  118A   	fcall	_LCD_Print
  3121  027C                     l1829:
  3122                           
  3123                           ;main.c: 79:     _delay((unsigned long)((25)*(32000000/4000.0)));
  3124  027C  3002               	movlw	2
  3125  027D  1283               	bcf	3,5	;RP0=0, select bank0
  3126  027E  1303               	bcf	3,6	;RP1=0, select bank0
  3127  027F  00AF               	movwf	??_inicio_presentacion+2
  3128  0280  3004               	movlw	4
  3129  0281  00AE               	movwf	??_inicio_presentacion+1
  3130  0282  30BA               	movlw	186
  3131  0283  00AD               	movwf	??_inicio_presentacion
  3132  0284                     u1827:
  3133  0284  0BAD               	decfsz	??_inicio_presentacion,f
  3134  0285  2A84               	goto	u1827
  3135  0286  0BAE               	decfsz	??_inicio_presentacion+1,f
  3136  0287  2A84               	goto	u1827
  3137  0288  0BAF               	decfsz	??_inicio_presentacion+2,f
  3138  0289  2A84               	goto	u1827
  3139  028A                     l1831:
  3140                           
  3141                           ;main.c: 80:     for(int i=0;i<length;i++){
  3142  028A  1283               	bcf	3,5	;RP0=0, select bank0
  3143  028B  1303               	bcf	3,6	;RP1=0, select bank0
  3144  028C  01B0               	clrf	inicio_presentacion@i
  3145  028D  01B1               	clrf	inicio_presentacion@i+1
  3146  028E  2AA6               	goto	l1839
  3147  028F                     l1833:
  3148                           
  3149                           ;main.c: 81:         LCD_Cmd(0x18);
  3150  028F  3018               	movlw	24
  3151  0290  118A  20D1  118A   	fcall	_LCD_Cmd
  3152  0293                     l1835:
  3153                           
  3154                           ;main.c: 82:         _delay((unsigned long)((20)*(32000000/4000.0)));
  3155  0293  30D0               	movlw	208
  3156  0294  1283               	bcf	3,5	;RP0=0, select bank0
  3157  0295  1303               	bcf	3,6	;RP1=0, select bank0
  3158  0296  00AE               	movwf	??_inicio_presentacion+1
  3159  0297  30C9               	movlw	201
  3160  0298  00AD               	movwf	??_inicio_presentacion
  3161  0299                     u1837:
  3162  0299  0BAD               	decfsz	??_inicio_presentacion,f
  3163  029A  2A99               	goto	u1837
  3164  029B  0BAE               	decfsz	??_inicio_presentacion+1,f
  3165  029C  2A99               	goto	u1837
  3166  029D  0000               	nop
  3167  029E                     l1837:
  3168                           
  3169                           ;main.c: 83:     }
  3170  029E  3001               	movlw	1
  3171  029F  1283               	bcf	3,5	;RP0=0, select bank0
  3172  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  3173  02A1  07B0               	addwf	inicio_presentacion@i,f
  3174  02A2  1803               	skipnc
  3175  02A3  0AB1               	incf	inicio_presentacion@i+1,f
  3176  02A4  3000               	movlw	0
  3177  02A5  07B1               	addwf	inicio_presentacion@i+1,f
  3178  02A6                     l1839:
  3179  02A6  0831               	movf	inicio_presentacion@i+1,w
  3180  02A7  3A80               	xorlw	128
  3181  02A8  00AD               	movwf	??_inicio_presentacion
  3182  02A9  082B               	movf	inicio_presentacion@length+1,w
  3183  02AA  3A80               	xorlw	128
  3184  02AB  022D               	subwf	??_inicio_presentacion,w
  3185  02AC  1D03               	skipz
  3186  02AD  2AB0               	goto	u1665
  3187  02AE  082A               	movf	inicio_presentacion@length,w
  3188  02AF  0230               	subwf	inicio_presentacion@i,w
  3189  02B0                     u1665:
  3190  02B0  1C03               	skipc
  3191  02B1  2AB3               	goto	u1661
  3192  02B2  2AB4               	goto	u1660
  3193  02B3                     u1661:
  3194  02B3  2A8F               	goto	l1833
  3195  02B4                     u1660:
  3196  02B4                     l1841:
  3197                           
  3198                           ;main.c: 84:     _delay((unsigned long)((10)*(32000000/4000.0)));
  3199  02B4  3068               	movlw	104
  3200  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  3201  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  3202  02B7  00AE               	movwf	??_inicio_presentacion+1
  3203  02B8  30E4               	movlw	228
  3204  02B9  00AD               	movwf	??_inicio_presentacion
  3205  02BA                     u1847:
  3206  02BA  0BAD               	decfsz	??_inicio_presentacion,f
  3207  02BB  2ABA               	goto	u1847
  3208  02BC  0BAE               	decfsz	??_inicio_presentacion+1,f
  3209  02BD  2ABA               	goto	u1847
  3210  02BE                     l1843:
  3211                           
  3212                           ;main.c: 85:     LCD_Cmd(0x01);
  3213  02BE  3001               	movlw	1
  3214  02BF  118A  20D1  118A   	fcall	_LCD_Cmd
  3215  02C2                     l1845:
  3216                           
  3217                           ;main.c: 86:     LCD_Goto(1, 1);
  3218  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  3219  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  3220  02C4  01A6               	clrf	LCD_Goto@row
  3221  02C5  0AA6               	incf	LCD_Goto@row,f
  3222  02C6  3001               	movlw	1
  3223  02C7  118A  20FF  118A   	fcall	_LCD_Goto
  3224  02CA                     l148:
  3225  02CA  0008               	return
  3226  02CB                     __end_of_inicio_presentacion:
  3227                           
  3228                           	psect	text13
  3229  0161                     __ptext13:	
  3230 ;; *************** function _LCD_Print *****************
  3231 ;; Defined at:
  3232 ;;		line 113 in file "./lcd.h"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;  LCD_Str         1    wreg     PTR unsigned char 
  3235 ;;		 -> grupo(6), presentacion(29), saludo(23), ventilator_screen@vel(5), 
  3236 ;;		 -> ventilator_screen@vol(10), conditional_screen@con(10), conditional_screen@msj(14), 
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;  LCD_Str         1    6[BANK0 ] PTR unsigned char 
  3239 ;;		 -> grupo(6), presentacion(29), saludo(23), ventilator_screen@vel(5), 
  3240 ;;		 -> ventilator_screen@vol(10), conditional_screen@con(10), conditional_screen@msj(14), 
  3241 ;;  i               1    5[BANK0 ] unsigned char 
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  1    wreg      void 
  3244 ;; Registers used:
  3245 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMMON   BANK0   BANK1
  3251 ;;      Params:         0       0       0
  3252 ;;      Locals:         0       2       0
  3253 ;;      Temps:          0       2       0
  3254 ;;      Totals:         0       4       0
  3255 ;;Total ram usage:        4 bytes
  3256 ;; Hardware stack levels used: 1
  3257 ;; Hardware stack levels required when called: 1
  3258 ;; This function calls:
  3259 ;;		_LCD_Write_Nibble
  3260 ;; This function is called by:
  3261 ;;		_inicio_presentacion
  3262 ;;		_conditional_screen
  3263 ;;		_ventilator_screen
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267                           
  3268                           ;psect for function _LCD_Print
  3269  0161                     _LCD_Print:
  3270                           
  3271                           ;incstack = 0
  3272                           ; Regs used in _LCD_Print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3273                           ;LCD_Print@LCD_Str stored from wreg
  3274  0161  1283               	bcf	3,5	;RP0=0, select bank0
  3275  0162  1303               	bcf	3,6	;RP1=0, select bank0
  3276  0163  00A6               	movwf	LCD_Print@LCD_Str
  3277  0164                     l1507:
  3278                           
  3279                           ;./lcd.h: 113: void LCD_Print(char* LCD_Str);./lcd.h: 114: {;./lcd.h: 115:   uint8_t i =
      +                           0;
  3280  0164  01A5               	clrf	LCD_Print@i
  3281  0165                     l1509:
  3282                           
  3283                           ;./lcd.h: 116:   RS = 1;
  3284  0165  1478               	bsf	_RS/(0+8),_RS& (0+7)
  3285                           
  3286                           ;./lcd.h: 117:   while(LCD_Str[i] != '\0')
  3287  0166  298A               	goto	l1515
  3288  0167                     l1511:
  3289                           
  3290                           ;./lcd.h: 118:   {;./lcd.h: 119:     LCD_Write_Nibble(LCD_Str[i] >> 4);
  3291  0167  0825               	movf	LCD_Print@i,w
  3292  0168  0726               	addwf	LCD_Print@LCD_Str,w
  3293  0169  00A3               	movwf	??_LCD_Print
  3294  016A  0823               	movf	??_LCD_Print,w
  3295  016B  0084               	movwf	4
  3296  016C  0800               	movf	0,w
  3297  016D  00A4               	movwf	??_LCD_Print+1
  3298  016E  3004               	movlw	4
  3299  016F                     u1105:
  3300  016F  1003               	clrc
  3301  0170  0CA4               	rrf	??_LCD_Print+1,f
  3302  0171  3EFF               	addlw	-1
  3303  0172  1D03               	skipz
  3304  0173  296F               	goto	u1105
  3305  0174  0824               	movf	??_LCD_Print+1,w
  3306  0175  118A  22CB  118A   	fcall	_LCD_Write_Nibble
  3307                           
  3308                           ;./lcd.h: 120:     LCD_Write_Nibble(LCD_Str[i++] );
  3309  0178  1283               	bcf	3,5	;RP0=0, select bank0
  3310  0179  1303               	bcf	3,6	;RP1=0, select bank0
  3311  017A  0825               	movf	LCD_Print@i,w
  3312  017B  0726               	addwf	LCD_Print@LCD_Str,w
  3313  017C  00A3               	movwf	??_LCD_Print
  3314  017D  0823               	movf	??_LCD_Print,w
  3315  017E  0084               	movwf	4
  3316  017F  1383               	bcf	3,7	;select IRP bank0
  3317  0180  0800               	movf	0,w
  3318  0181  118A  22CB  118A   	fcall	_LCD_Write_Nibble
  3319  0184                     l1513:
  3320  0184  3001               	movlw	1
  3321  0185  1283               	bcf	3,5	;RP0=0, select bank0
  3322  0186  1303               	bcf	3,6	;RP1=0, select bank0
  3323  0187  00A3               	movwf	??_LCD_Print
  3324  0188  0823               	movf	??_LCD_Print,w
  3325  0189  07A5               	addwf	LCD_Print@i,f
  3326  018A                     l1515:
  3327                           
  3328                           ;./lcd.h: 117:   while(LCD_Str[i] != '\0')
  3329  018A  0825               	movf	LCD_Print@i,w
  3330  018B  0726               	addwf	LCD_Print@LCD_Str,w
  3331  018C  00A3               	movwf	??_LCD_Print
  3332  018D  0823               	movf	??_LCD_Print,w
  3333  018E  0084               	movwf	4
  3334  018F  1383               	bcf	3,7	;select IRP bank0
  3335  0190  0800               	movf	0,w
  3336  0191  1D03               	btfss	3,2
  3337  0192  2994               	goto	u1111
  3338  0193  2995               	goto	u1110
  3339  0194                     u1111:
  3340  0194  2967               	goto	l1511
  3341  0195                     u1110:
  3342  0195                     l69:
  3343  0195  0008               	return
  3344  0196                     __end_of_LCD_Print:
  3345                           
  3346                           	psect	text14
  3347  00FF                     __ptext14:	
  3348 ;; *************** function _LCD_Goto *****************
  3349 ;; Defined at:
  3350 ;;		line 87 in file "./lcd.h"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;  col             1    wreg     unsigned char 
  3353 ;;  row             1    6[BANK0 ] unsigned char 
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;  col             1    9[BANK0 ] unsigned char 
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  1    wreg      void 
  3358 ;; Registers used:
  3359 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMMON   BANK0   BANK1
  3365 ;;      Params:         0       1       0
  3366 ;;      Locals:         0       1       0
  3367 ;;      Temps:          0       2       0
  3368 ;;      Totals:         0       4       0
  3369 ;;Total ram usage:        4 bytes
  3370 ;; Hardware stack levels used: 1
  3371 ;; Hardware stack levels required when called: 2
  3372 ;; This function calls:
  3373 ;;		_LCD_Cmd
  3374 ;; This function is called by:
  3375 ;;		_inicio_presentacion
  3376 ;;		_conditional_screen
  3377 ;;		_ventilator_screen
  3378 ;;		_main
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           
  3383                           ;psect for function _LCD_Goto
  3384  00FF                     _LCD_Goto:
  3385                           
  3386                           ;incstack = 0
  3387                           ; Regs used in _LCD_Goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3388                           ;LCD_Goto@col stored from wreg
  3389  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  3390  0100  1303               	bcf	3,6	;RP1=0, select bank0
  3391  0101  00A9               	movwf	LCD_Goto@col
  3392  0102                     l1489:
  3393                           
  3394                           ;./lcd.h: 87: void LCD_Goto(uint8_t col, uint8_t row);./lcd.h: 88: {;./lcd.h: 89:   swit
      +                          ch(row)
  3395  0102  291B               	goto	l1499
  3396  0103                     l1491:
  3397                           
  3398                           ;./lcd.h: 92:       LCD_Cmd(0xC0 + col - 1);
  3399  0103  0829               	movf	LCD_Goto@col,w
  3400  0104  3EBF               	addlw	191
  3401  0105  118A  20D1  118A   	fcall	_LCD_Cmd
  3402                           
  3403                           ;./lcd.h: 93:       break;
  3404  0108  292E               	goto	l60
  3405  0109                     l1493:
  3406                           
  3407                           ;./lcd.h: 95:       LCD_Cmd(0x94 + col - 1);
  3408  0109  0829               	movf	LCD_Goto@col,w
  3409  010A  3E93               	addlw	147
  3410  010B  118A  20D1  118A   	fcall	_LCD_Cmd
  3411                           
  3412                           ;./lcd.h: 96:       break;
  3413  010E  292E               	goto	l60
  3414  010F                     l1495:
  3415                           
  3416                           ;./lcd.h: 98:       LCD_Cmd(0xD4 + col - 1);
  3417  010F  0829               	movf	LCD_Goto@col,w
  3418  0110  3ED3               	addlw	211
  3419  0111  118A  20D1  118A   	fcall	_LCD_Cmd
  3420                           
  3421                           ;./lcd.h: 99:     break;
  3422  0114  292E               	goto	l60
  3423  0115                     l1497:
  3424                           
  3425                           ;./lcd.h: 101:       LCD_Cmd(0x80 + col - 1);
  3426  0115  0829               	movf	LCD_Goto@col,w
  3427  0116  3E7F               	addlw	127
  3428  0117  118A  20D1  118A   	fcall	_LCD_Cmd
  3429                           
  3430                           ;./lcd.h: 102:   }
  3431  011A  292E               	goto	l60
  3432  011B                     l1499:
  3433  011B  0826               	movf	LCD_Goto@row,w
  3434  011C  00A7               	movwf	??_LCD_Goto
  3435  011D  01A8               	clrf	??_LCD_Goto+1
  3436                           
  3437                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3438                           ; Switch size 1, requested type "simple"
  3439                           ; Number of cases is 1, Range of values is 0 to 0
  3440                           ; switch strategies available:
  3441                           ; Name         Instructions Cycles
  3442                           ; simple_byte            4     3 (average)
  3443                           ; direct_byte            9     7 (fixed)
  3444                           ; jumptable            260     6 (fixed)
  3445                           ;	Chosen strategy is simple_byte
  3446  011E  0828               	movf	??_LCD_Goto+1,w
  3447  011F  3A00               	xorlw	0	; case 0
  3448  0120  1903               	skipnz
  3449  0121  2923               	goto	l1929
  3450  0122  2915               	goto	l1497
  3451  0123                     l1929:
  3452                           
  3453                           ; Switch size 1, requested type "simple"
  3454                           ; Number of cases is 3, Range of values is 2 to 4
  3455                           ; switch strategies available:
  3456                           ; Name         Instructions Cycles
  3457                           ; simple_byte           10     6 (average)
  3458                           ; direct_byte           16    10 (fixed)
  3459                           ; jumptable            263     9 (fixed)
  3460                           ;	Chosen strategy is simple_byte
  3461  0123  0827               	movf	??_LCD_Goto,w
  3462  0124  3A02               	xorlw	2	; case 2
  3463  0125  1903               	skipnz
  3464  0126  2903               	goto	l1491
  3465  0127  3A01               	xorlw	1	; case 3
  3466  0128  1903               	skipnz
  3467  0129  2909               	goto	l1493
  3468  012A  3A07               	xorlw	7	; case 4
  3469  012B  1903               	skipnz
  3470  012C  290F               	goto	l1495
  3471  012D  2915               	goto	l1497
  3472  012E                     l60:
  3473  012E  0008               	return
  3474  012F                     __end_of_LCD_Goto:
  3475                           
  3476                           	psect	text15
  3477  0060                     __ptext15:	
  3478 ;; *************** function _iniciar_puertos *****************
  3479 ;; Defined at:
  3480 ;;		line 43 in file "main.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;		None
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;		None
  3485 ;; Return value:  Size  Location     Type
  3486 ;;                  1    wreg      void 
  3487 ;; Registers used:
  3488 ;;		wreg, status,2
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMMON   BANK0   BANK1
  3494 ;;      Params:         0       0       0
  3495 ;;      Locals:         0       0       0
  3496 ;;      Temps:          0       0       0
  3497 ;;      Totals:         0       0       0
  3498 ;;Total ram usage:        0 bytes
  3499 ;; Hardware stack levels used: 1
  3500 ;; This function calls:
  3501 ;;		Nothing
  3502 ;; This function is called by:
  3503 ;;		_main
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506                           
  3507                           
  3508                           ;psect for function _iniciar_puertos
  3509  0060                     _iniciar_puertos:
  3510  0060                     l1801:	
  3511                           ;incstack = 0
  3512                           ; Regs used in _iniciar_puertos: [wreg+status,2]
  3513                           
  3514                           
  3515                           ;main.c: 47:     PORTA = 0x00;
  3516  0060  1283               	bcf	3,5	;RP0=0, select bank0
  3517  0061  1303               	bcf	3,6	;RP1=0, select bank0
  3518  0062  0185               	clrf	5	;volatile
  3519                           
  3520                           ;main.c: 48:     PORTB = 0x00;
  3521  0063  0186               	clrf	6	;volatile
  3522                           
  3523                           ;main.c: 49:     PORTC = 0x00;
  3524  0064  0187               	clrf	7	;volatile
  3525  0065                     l1803:
  3526                           
  3527                           ;main.c: 54:     TRISCbits.TRISC0 = 0;
  3528  0065  1683               	bsf	3,5	;RP0=1, select bank1
  3529  0066  1303               	bcf	3,6	;RP1=0, select bank1
  3530  0067  1007               	bcf	7,0	;volatile
  3531  0068                     l1805:
  3532                           
  3533                           ;main.c: 55:     TRISCbits.TRISC1 = 0;
  3534  0068  1087               	bcf	7,1	;volatile
  3535  0069                     l1807:
  3536                           
  3537                           ;main.c: 57:     TRISCbits.TRISC3 = 0;
  3538  0069  1187               	bcf	7,3	;volatile
  3539  006A                     l1809:
  3540                           
  3541                           ;main.c: 58:     TRISCbits.TRISC4 = 0;
  3542  006A  1207               	bcf	7,4	;volatile
  3543  006B                     l1811:
  3544                           
  3545                           ;main.c: 60:     TRISCbits.TRISC6 = 0;
  3546  006B  1307               	bcf	7,6	;volatile
  3547  006C                     l1813:
  3548                           
  3549                           ;main.c: 64:     TRISAbits.TRISA0 = 1;
  3550  006C  1405               	bsf	5,0	;volatile
  3551  006D                     l1815:
  3552                           
  3553                           ;main.c: 65:     TRISAbits.TRISA1 = 1;
  3554  006D  1485               	bsf	5,1	;volatile
  3555  006E                     l1817:
  3556                           
  3557                           ;main.c: 66:     TRISAbits.TRISA2 = 1;
  3558  006E  1505               	bsf	5,2	;volatile
  3559  006F                     l1819:
  3560                           
  3561                           ;main.c: 67:     TRISAbits.TRISA3 = 1;
  3562  006F  1585               	bsf	5,3	;volatile
  3563  0070                     l1821:
  3564                           
  3565                           ;main.c: 68:     TRISAbits.TRISA4 = 0;
  3566  0070  1205               	bcf	5,4	;volatile
  3567  0071                     l1823:
  3568                           
  3569                           ;main.c: 69:     TRISAbits.TRISA5 = 0;
  3570  0071  1285               	bcf	5,5	;volatile
  3571  0072                     l1825:
  3572                           
  3573                           ;main.c: 71:     ADCON1 = 0x07;
  3574  0072  3007               	movlw	7
  3575  0073  009F               	movwf	31	;volatile
  3576  0074                     l142:
  3577  0074  0008               	return
  3578  0075                     __end_of_iniciar_puertos:
  3579                           
  3580                           	psect	text16
  3581  0075                     __ptext16:	
  3582 ;; *************** function _LCD_PutC *****************
  3583 ;; Defined at:
  3584 ;;		line 106 in file "./lcd.h"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;  LCD_Char        1    wreg     unsigned char 
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;  LCD_Char        1    4[BANK0 ] unsigned char 
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  1    wreg      void 
  3591 ;; Registers used:
  3592 ;;		wreg, status,2, status,0, pclath, cstack
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMMON   BANK0   BANK1
  3598 ;;      Params:         0       0       0
  3599 ;;      Locals:         0       1       0
  3600 ;;      Temps:          0       1       0
  3601 ;;      Totals:         0       2       0
  3602 ;;Total ram usage:        2 bytes
  3603 ;; Hardware stack levels used: 1
  3604 ;; Hardware stack levels required when called: 1
  3605 ;; This function calls:
  3606 ;;		_LCD_Write_Nibble
  3607 ;; This function is called by:
  3608 ;;		_main
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           
  3613                           ;psect for function _LCD_PutC
  3614  0075                     _LCD_PutC:
  3615                           
  3616                           ;incstack = 0
  3617                           ; Regs used in _LCD_PutC: [wreg+status,2+status,0+pclath+cstack]
  3618                           ;LCD_PutC@LCD_Char stored from wreg
  3619  0075  1283               	bcf	3,5	;RP0=0, select bank0
  3620  0076  1303               	bcf	3,6	;RP1=0, select bank0
  3621  0077  00A4               	movwf	LCD_PutC@LCD_Char
  3622  0078                     l1757:
  3623                           
  3624                           ;./lcd.h: 106: void LCD_PutC(char LCD_Char);./lcd.h: 107: {;./lcd.h: 108:   RS = 1;
  3625  0078  1478               	bsf	_RS/(0+8),_RS& (0+7)
  3626  0079                     l1759:
  3627                           
  3628                           ;./lcd.h: 109:   LCD_Write_Nibble(LCD_Char >> 4);
  3629  0079  0824               	movf	LCD_PutC@LCD_Char,w
  3630  007A  00A3               	movwf	??_LCD_PutC
  3631  007B  3004               	movlw	4
  3632  007C                     u1635:
  3633  007C  1003               	clrc
  3634  007D  0CA3               	rrf	??_LCD_PutC,f
  3635  007E  3EFF               	addlw	-1
  3636  007F  1D03               	skipz
  3637  0080  287C               	goto	u1635
  3638  0081  0823               	movf	??_LCD_PutC,w
  3639  0082  118A  22CB  118A   	fcall	_LCD_Write_Nibble
  3640                           
  3641                           ;./lcd.h: 110:   LCD_Write_Nibble(LCD_Char );
  3642  0085  1283               	bcf	3,5	;RP0=0, select bank0
  3643  0086  1303               	bcf	3,6	;RP1=0, select bank0
  3644  0087  0824               	movf	LCD_PutC@LCD_Char,w
  3645  0088  118A  22CB  118A   	fcall	_LCD_Write_Nibble
  3646  008B                     l63:
  3647  008B  0008               	return
  3648  008C                     __end_of_LCD_PutC:
  3649                           
  3650                           	psect	text17
  3651  0645                     __ptext17:	
  3652 ;; *************** function _LCD_Begin *****************
  3653 ;; Defined at:
  3654 ;;		line 124 in file "./lcd.h"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;		None
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;		None
  3659 ;; Return value:  Size  Location     Type
  3660 ;;                  1    wreg      void 
  3661 ;; Registers used:
  3662 ;;		wreg, status,2, status,0, pclath, cstack
  3663 ;; Tracked objects:
  3664 ;;		On entry : 0/0
  3665 ;;		On exit  : 0/0
  3666 ;;		Unchanged: 0/0
  3667 ;; Data sizes:     COMMON   BANK0   BANK1
  3668 ;;      Params:         0       0       0
  3669 ;;      Locals:         0       0       0
  3670 ;;      Temps:          0       3       0
  3671 ;;      Totals:         0       3       0
  3672 ;;Total ram usage:        3 bytes
  3673 ;; Hardware stack levels used: 1
  3674 ;; Hardware stack levels required when called: 2
  3675 ;; This function calls:
  3676 ;;		_LCD_Cmd
  3677 ;; This function is called by:
  3678 ;;		_main
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           
  3683                           ;psect for function _LCD_Begin
  3684  0645                     _LCD_Begin:
  3685  0645                     l1761:	
  3686                           ;incstack = 0
  3687                           ; Regs used in _LCD_Begin: [wreg+status,2+status,0+pclath+cstack]
  3688                           
  3689                           
  3690                           ;./lcd.h: 126:   RS = 0;
  3691  0645  1283               	bcf	3,5	;RP0=0, select bank0
  3692  0646  1303               	bcf	3,6	;RP1=0, select bank0
  3693  0647  1078               	bcf	_RS/(0+8),_RS& (0+7)
  3694                           
  3695                           ;./lcd.h: 127:   PORTCbits.RC5 = 0;
  3696  0648  1287               	bcf	7,5	;volatile
  3697                           
  3698                           ;./lcd.h: 128:   PORTCbits.RC6 = 0;
  3699  0649  1307               	bcf	7,6	;volatile
  3700                           
  3701                           ;./lcd.h: 129:   PORTCbits.RC7 = 0;
  3702  064A  1387               	bcf	7,7	;volatile
  3703                           
  3704                           ;./lcd.h: 134:   PORTBbits.RB4 = 0;
  3705  064B  1206               	bcf	6,4	;volatile
  3706                           
  3707                           ;./lcd.h: 135:   PORTBbits.RB5 = 0;
  3708  064C  1286               	bcf	6,5	;volatile
  3709                           
  3710                           ;./lcd.h: 136:   PORTBbits.RB6 = 0;
  3711  064D  1306               	bcf	6,6	;volatile
  3712                           
  3713                           ;./lcd.h: 137:   PORTBbits.RB7 = 0;
  3714  064E  1386               	bcf	6,7	;volatile
  3715                           
  3716                           ;./lcd.h: 138:   TRISCbits.TRISC5 = 0;
  3717  064F  1683               	bsf	3,5	;RP0=1, select bank1
  3718  0650  1303               	bcf	3,6	;RP1=0, select bank1
  3719  0651  1287               	bcf	7,5	;volatile
  3720                           
  3721                           ;./lcd.h: 139:   TRISCbits.TRISC6 = 0;
  3722  0652  1307               	bcf	7,6	;volatile
  3723                           
  3724                           ;./lcd.h: 140:   TRISCbits.TRISC7 = 0;
  3725  0653  1387               	bcf	7,7	;volatile
  3726                           
  3727                           ;./lcd.h: 145:   TRISBbits.TRISB4 = 0;
  3728  0654  1206               	bcf	6,4	;volatile
  3729                           
  3730                           ;./lcd.h: 146:   TRISBbits.TRISB5 = 0;
  3731  0655  1286               	bcf	6,5	;volatile
  3732                           
  3733                           ;./lcd.h: 147:   TRISBbits.TRISB6 = 0;
  3734  0656  1306               	bcf	6,6	;volatile
  3735                           
  3736                           ;./lcd.h: 148:   TRISBbits.TRISB7 = 0;
  3737  0657  1386               	bcf	6,7	;volatile
  3738  0658                     l1763:
  3739                           
  3740                           ;./lcd.h: 149:   _delay((unsigned long)((40)*(32000000/4000.0)));
  3741  0658  3002               	movlw	2
  3742  0659  1283               	bcf	3,5	;RP0=0, select bank0
  3743  065A  1303               	bcf	3,6	;RP1=0, select bank0
  3744  065B  00A8               	movwf	??_LCD_Begin+2
  3745  065C  30A0               	movlw	160
  3746  065D  00A7               	movwf	??_LCD_Begin+1
  3747  065E  3092               	movlw	146
  3748  065F  00A6               	movwf	??_LCD_Begin
  3749  0660                     u1857:
  3750  0660  0BA6               	decfsz	??_LCD_Begin,f
  3751  0661  2E60               	goto	u1857
  3752  0662  0BA7               	decfsz	??_LCD_Begin+1,f
  3753  0663  2E60               	goto	u1857
  3754  0664  0BA8               	decfsz	??_LCD_Begin+2,f
  3755  0665  2E60               	goto	u1857
  3756  0666                     l1765:
  3757                           
  3758                           ;./lcd.h: 150:   LCD_Cmd(3);
  3759  0666  3003               	movlw	3
  3760  0667  118A  20D1  118A   	fcall	_LCD_Cmd
  3761  066A                     l1767:
  3762                           
  3763                           ;./lcd.h: 151:   _delay((unsigned long)((5)*(32000000/4000.0)));
  3764  066A  3034               	movlw	52
  3765  066B  1283               	bcf	3,5	;RP0=0, select bank0
  3766  066C  1303               	bcf	3,6	;RP1=0, select bank0
  3767  066D  00A7               	movwf	??_LCD_Begin+1
  3768  066E  30F1               	movlw	241
  3769  066F  00A6               	movwf	??_LCD_Begin
  3770  0670                     u1867:
  3771  0670  0BA6               	decfsz	??_LCD_Begin,f
  3772  0671  2E70               	goto	u1867
  3773  0672  0BA7               	decfsz	??_LCD_Begin+1,f
  3774  0673  2E70               	goto	u1867
  3775  0674  0000               	nop
  3776                           
  3777                           ;./lcd.h: 152:   LCD_Cmd(3);
  3778  0675  3003               	movlw	3
  3779  0676  118A  20D1  118A   	fcall	_LCD_Cmd
  3780  0679                     l1769:
  3781                           
  3782                           ;./lcd.h: 153:   _delay((unsigned long)((5)*(32000000/4000.0)));
  3783  0679  3034               	movlw	52
  3784  067A  1283               	bcf	3,5	;RP0=0, select bank0
  3785  067B  1303               	bcf	3,6	;RP1=0, select bank0
  3786  067C  00A7               	movwf	??_LCD_Begin+1
  3787  067D  30F1               	movlw	241
  3788  067E  00A6               	movwf	??_LCD_Begin
  3789  067F                     u1877:
  3790  067F  0BA6               	decfsz	??_LCD_Begin,f
  3791  0680  2E7F               	goto	u1877
  3792  0681  0BA7               	decfsz	??_LCD_Begin+1,f
  3793  0682  2E7F               	goto	u1877
  3794  0683  0000               	nop
  3795  0684                     l1771:
  3796                           
  3797                           ;./lcd.h: 154:   LCD_Cmd(3);
  3798  0684  3003               	movlw	3
  3799  0685  118A  20D1  118A   	fcall	_LCD_Cmd
  3800                           
  3801                           ;./lcd.h: 155:   _delay((unsigned long)((5)*(32000000/4000.0)));
  3802  0688  3034               	movlw	52
  3803  0689  1283               	bcf	3,5	;RP0=0, select bank0
  3804  068A  1303               	bcf	3,6	;RP1=0, select bank0
  3805  068B  00A7               	movwf	??_LCD_Begin+1
  3806  068C  30F1               	movlw	241
  3807  068D  00A6               	movwf	??_LCD_Begin
  3808  068E                     u1887:
  3809  068E  0BA6               	decfsz	??_LCD_Begin,f
  3810  068F  2E8E               	goto	u1887
  3811  0690  0BA7               	decfsz	??_LCD_Begin+1,f
  3812  0691  2E8E               	goto	u1887
  3813  0692  0000               	nop
  3814  0693                     l1773:
  3815                           
  3816                           ;./lcd.h: 156:   LCD_Cmd(0x02);
  3817  0693  3002               	movlw	2
  3818  0694  118A  20D1  118A   	fcall	_LCD_Cmd
  3819  0697                     l1775:
  3820                           
  3821                           ;./lcd.h: 157:   _delay((unsigned long)((5)*(32000000/4000.0)));
  3822  0697  3034               	movlw	52
  3823  0698  1283               	bcf	3,5	;RP0=0, select bank0
  3824  0699  1303               	bcf	3,6	;RP1=0, select bank0
  3825  069A  00A7               	movwf	??_LCD_Begin+1
  3826  069B  30F1               	movlw	241
  3827  069C  00A6               	movwf	??_LCD_Begin
  3828  069D                     u1897:
  3829  069D  0BA6               	decfsz	??_LCD_Begin,f
  3830  069E  2E9D               	goto	u1897
  3831  069F  0BA7               	decfsz	??_LCD_Begin+1,f
  3832  06A0  2E9D               	goto	u1897
  3833  06A1  0000               	nop
  3834                           
  3835                           ;./lcd.h: 158:   LCD_Cmd(0x20 | (2 << 2));
  3836  06A2  3028               	movlw	40
  3837  06A3  118A  20D1  118A   	fcall	_LCD_Cmd
  3838  06A6                     l1777:
  3839                           
  3840                           ;./lcd.h: 159:   _delay((unsigned long)((50)*(32000000/4000.0)));
  3841  06A6  3003               	movlw	3
  3842  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  3843  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  3844  06A9  00A8               	movwf	??_LCD_Begin+2
  3845  06AA  3008               	movlw	8
  3846  06AB  00A7               	movwf	??_LCD_Begin+1
  3847  06AC  3076               	movlw	118
  3848  06AD  00A6               	movwf	??_LCD_Begin
  3849  06AE                     u1907:
  3850  06AE  0BA6               	decfsz	??_LCD_Begin,f
  3851  06AF  2EAE               	goto	u1907
  3852  06B0  0BA7               	decfsz	??_LCD_Begin+1,f
  3853  06B1  2EAE               	goto	u1907
  3854  06B2  0BA8               	decfsz	??_LCD_Begin+2,f
  3855  06B3  2EAE               	goto	u1907
  3856  06B4  2EB5               	nop2
  3857  06B5                     l1779:
  3858                           
  3859                           ;./lcd.h: 160:   LCD_Cmd(0x0C);
  3860  06B5  300C               	movlw	12
  3861  06B6  118A  20D1  118A   	fcall	_LCD_Cmd
  3862                           
  3863                           ;./lcd.h: 161:   _delay((unsigned long)((50)*(32000000/4000.0)));
  3864  06B9  3003               	movlw	3
  3865  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  3866  06BB  1303               	bcf	3,6	;RP1=0, select bank0
  3867  06BC  00A8               	movwf	??_LCD_Begin+2
  3868  06BD  3008               	movlw	8
  3869  06BE  00A7               	movwf	??_LCD_Begin+1
  3870  06BF  3076               	movlw	118
  3871  06C0  00A6               	movwf	??_LCD_Begin
  3872  06C1                     u1917:
  3873  06C1  0BA6               	decfsz	??_LCD_Begin,f
  3874  06C2  2EC1               	goto	u1917
  3875  06C3  0BA7               	decfsz	??_LCD_Begin+1,f
  3876  06C4  2EC1               	goto	u1917
  3877  06C5  0BA8               	decfsz	??_LCD_Begin+2,f
  3878  06C6  2EC1               	goto	u1917
  3879  06C7  2EC8               	nop2
  3880  06C8                     l1781:
  3881                           
  3882                           ;./lcd.h: 162:   LCD_Cmd(0x01);
  3883  06C8  3001               	movlw	1
  3884  06C9  118A  20D1  118A   	fcall	_LCD_Cmd
  3885  06CC                     l1783:
  3886                           
  3887                           ;./lcd.h: 163:   _delay((unsigned long)((50)*(32000000/4000.0)));
  3888  06CC  3003               	movlw	3
  3889  06CD  1283               	bcf	3,5	;RP0=0, select bank0
  3890  06CE  1303               	bcf	3,6	;RP1=0, select bank0
  3891  06CF  00A8               	movwf	??_LCD_Begin+2
  3892  06D0  3008               	movlw	8
  3893  06D1  00A7               	movwf	??_LCD_Begin+1
  3894  06D2  3076               	movlw	118
  3895  06D3  00A6               	movwf	??_LCD_Begin
  3896  06D4                     u1927:
  3897  06D4  0BA6               	decfsz	??_LCD_Begin,f
  3898  06D5  2ED4               	goto	u1927
  3899  06D6  0BA7               	decfsz	??_LCD_Begin+1,f
  3900  06D7  2ED4               	goto	u1927
  3901  06D8  0BA8               	decfsz	??_LCD_Begin+2,f
  3902  06D9  2ED4               	goto	u1927
  3903  06DA  2EDB               	nop2
  3904                           
  3905                           ;./lcd.h: 164:   LCD_Cmd(0x04 | 0x02);
  3906  06DB  3006               	movlw	6
  3907  06DC  118A  20D1  118A   	fcall	_LCD_Cmd
  3908  06DF                     l1785:
  3909                           
  3910                           ;./lcd.h: 165:   _delay((unsigned long)((50)*(32000000/4000.0)));
  3911  06DF  3003               	movlw	3
  3912  06E0  1283               	bcf	3,5	;RP0=0, select bank0
  3913  06E1  1303               	bcf	3,6	;RP1=0, select bank0
  3914  06E2  00A8               	movwf	??_LCD_Begin+2
  3915  06E3  3008               	movlw	8
  3916  06E4  00A7               	movwf	??_LCD_Begin+1
  3917  06E5  3076               	movlw	118
  3918  06E6  00A6               	movwf	??_LCD_Begin
  3919  06E7                     u1937:
  3920  06E7  0BA6               	decfsz	??_LCD_Begin,f
  3921  06E8  2EE7               	goto	u1937
  3922  06E9  0BA7               	decfsz	??_LCD_Begin+1,f
  3923  06EA  2EE7               	goto	u1937
  3924  06EB  0BA8               	decfsz	??_LCD_Begin+2,f
  3925  06EC  2EE7               	goto	u1937
  3926  06ED  2EEE               	nop2
  3927  06EE                     l1787:
  3928                           
  3929                           ;./lcd.h: 166:   LCD_Cmd(0x0F);
  3930  06EE  300F               	movlw	15
  3931  06EF  118A  20D1  118A   	fcall	_LCD_Cmd
  3932                           
  3933                           ;./lcd.h: 167:   _delay((unsigned long)((50)*(32000000/4000.0)));
  3934  06F2  3003               	movlw	3
  3935  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  3936  06F4  1303               	bcf	3,6	;RP1=0, select bank0
  3937  06F5  00A8               	movwf	??_LCD_Begin+2
  3938  06F6  3008               	movlw	8
  3939  06F7  00A7               	movwf	??_LCD_Begin+1
  3940  06F8  3076               	movlw	118
  3941  06F9  00A6               	movwf	??_LCD_Begin
  3942  06FA                     u1947:
  3943  06FA  0BA6               	decfsz	??_LCD_Begin,f
  3944  06FB  2EFA               	goto	u1947
  3945  06FC  0BA7               	decfsz	??_LCD_Begin+1,f
  3946  06FD  2EFA               	goto	u1947
  3947  06FE  0BA8               	decfsz	??_LCD_Begin+2,f
  3948  06FF  2EFA               	goto	u1947
  3949  0700  2F01               	nop2
  3950  0701                     l72:
  3951  0701  0008               	return
  3952  0702                     __end_of_LCD_Begin:
  3953                           
  3954                           	psect	text18
  3955  00D1                     __ptext18:	
  3956 ;; *************** function _LCD_Cmd *****************
  3957 ;; Defined at:
  3958 ;;		line 78 in file "./lcd.h"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;  Command         1    wreg     unsigned char 
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;  Command         1    5[BANK0 ] unsigned char 
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  1    wreg      void 
  3965 ;; Registers used:
  3966 ;;		wreg, status,2, status,0, pclath, cstack
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMMON   BANK0   BANK1
  3972 ;;      Params:         0       0       0
  3973 ;;      Locals:         0       1       0
  3974 ;;      Temps:          0       2       0
  3975 ;;      Totals:         0       3       0
  3976 ;;Total ram usage:        3 bytes
  3977 ;; Hardware stack levels used: 1
  3978 ;; Hardware stack levels required when called: 1
  3979 ;; This function calls:
  3980 ;;		_LCD_Write_Nibble
  3981 ;; This function is called by:
  3982 ;;		_LCD_Goto
  3983 ;;		_LCD_Begin
  3984 ;;		_inicio_presentacion
  3985 ;;		_conditional_screen
  3986 ;;		_ventilator_screen
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990                           
  3991                           ;psect for function _LCD_Cmd
  3992  00D1                     _LCD_Cmd:
  3993                           
  3994                           ;incstack = 0
  3995                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3996                           ;LCD_Cmd@Command stored from wreg
  3997  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  3998  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  3999  00D3  00A5               	movwf	LCD_Cmd@Command
  4000  00D4                     l1449:
  4001                           
  4002                           ;./lcd.h: 78: void LCD_Cmd(uint8_t Command);./lcd.h: 79: {;./lcd.h: 80:   RS = 0;
  4003  00D4  1078               	bcf	_RS/(0+8),_RS& (0+7)
  4004  00D5                     l1451:
  4005                           
  4006                           ;./lcd.h: 81:   LCD_Write_Nibble(Command >> 4);
  4007  00D5  0825               	movf	LCD_Cmd@Command,w
  4008  00D6  00A3               	movwf	??_LCD_Cmd
  4009  00D7  3004               	movlw	4
  4010  00D8                     u1045:
  4011  00D8  1003               	clrc
  4012  00D9  0CA3               	rrf	??_LCD_Cmd,f
  4013  00DA  3EFF               	addlw	-1
  4014  00DB  1D03               	skipz
  4015  00DC  28D8               	goto	u1045
  4016  00DD  0823               	movf	??_LCD_Cmd,w
  4017  00DE  118A  22CB  118A   	fcall	_LCD_Write_Nibble
  4018                           
  4019                           ;./lcd.h: 82:   LCD_Write_Nibble(Command);
  4020  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  4021  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  4022  00E3  0825               	movf	LCD_Cmd@Command,w
  4023  00E4  118A  22CB  118A   	fcall	_LCD_Write_Nibble
  4024  00E7                     l1453:
  4025                           
  4026                           ;./lcd.h: 83:   if((Command == 0x01) || (Command == 0x02))
  4027  00E7  1283               	bcf	3,5	;RP0=0, select bank0
  4028  00E8  1303               	bcf	3,6	;RP1=0, select bank0
  4029  00E9  0325               	decf	LCD_Cmd@Command,w
  4030  00EA  1903               	btfsc	3,2
  4031  00EB  28ED               	goto	u1051
  4032  00EC  28EE               	goto	u1050
  4033  00ED                     u1051:
  4034  00ED  28F4               	goto	l1457
  4035  00EE                     u1050:
  4036  00EE                     l1455:
  4037  00EE  3002               	movlw	2
  4038  00EF  0625               	xorwf	LCD_Cmd@Command,w
  4039  00F0  1D03               	btfss	3,2
  4040  00F1  28F3               	goto	u1061
  4041  00F2  28F4               	goto	u1060
  4042  00F3                     u1061:
  4043  00F3  28FE               	goto	l51
  4044  00F4                     u1060:
  4045  00F4                     l1457:
  4046                           
  4047                           ;./lcd.h: 84:     _delay((unsigned long)((2)*(32000000/4000.0)));
  4048  00F4  3015               	movlw	21
  4049  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  4050  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  4051  00F7  00A4               	movwf	??_LCD_Cmd+1
  4052  00F8  30C6               	movlw	198
  4053  00F9  00A3               	movwf	??_LCD_Cmd
  4054  00FA                     u1957:
  4055  00FA  0BA3               	decfsz	??_LCD_Cmd,f
  4056  00FB  28FA               	goto	u1957
  4057  00FC  0BA4               	decfsz	??_LCD_Cmd+1,f
  4058  00FD  28FA               	goto	u1957
  4059  00FE                     l51:
  4060  00FE  0008               	return
  4061  00FF                     __end_of_LCD_Cmd:
  4062                           
  4063                           	psect	text19
  4064  02CB                     __ptext19:	
  4065 ;; *************** function _LCD_Write_Nibble *****************
  4066 ;; Defined at:
  4067 ;;		line 61 in file "./lcd.h"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;  n               1    wreg     unsigned char 
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;  n               1    2[BANK0 ] unsigned char 
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  1    wreg      void 
  4074 ;; Registers used:
  4075 ;;		wreg, status,2, status,0
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMMON   BANK0   BANK1
  4081 ;;      Params:         0       0       0
  4082 ;;      Locals:         0       1       0
  4083 ;;      Temps:          0       2       0
  4084 ;;      Totals:         0       3       0
  4085 ;;Total ram usage:        3 bytes
  4086 ;; Hardware stack levels used: 1
  4087 ;; This function calls:
  4088 ;;		Nothing
  4089 ;; This function is called by:
  4090 ;;		_LCD_Cmd
  4091 ;;		_LCD_PutC
  4092 ;;		_LCD_Print
  4093 ;; This function uses a non-reentrant model
  4094 ;;
  4095                           
  4096                           
  4097                           ;psect for function _LCD_Write_Nibble
  4098  02CB                     _LCD_Write_Nibble:
  4099                           
  4100                           ;incstack = 0
  4101                           ; Regs used in _LCD_Write_Nibble: [wreg+status,2+status,0]
  4102                           ;LCD_Write_Nibble@n stored from wreg
  4103  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  4104  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  4105  02CD  00A2               	movwf	LCD_Write_Nibble@n
  4106  02CE                     l1385:
  4107                           
  4108                           ;./lcd.h: 61: void LCD_Write_Nibble(uint8_t n);./lcd.h: 62: {;./lcd.h: 63:   PORTCbits.R
      +                          C5 = RS;
  4109  02CE  1878               	btfsc	_RS/(0+8),_RS& (0+7)
  4110  02CF  2AD1               	goto	u871
  4111  02D0  2AD5               	goto	u870
  4112  02D1                     u871:
  4113  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  4114  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  4115  02D3  1687               	bsf	7,5	;volatile
  4116  02D4  2AD8               	goto	u884
  4117  02D5                     u870:
  4118  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  4119  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  4120  02D7  1287               	bcf	7,5	;volatile
  4121  02D8                     u884:
  4122  02D8                     l1387:
  4123                           
  4124                           ;./lcd.h: 64:   PORTBbits.RB4 = n & 0x01;
  4125  02D8  0822               	movf	LCD_Write_Nibble@n,w
  4126  02D9  3901               	andlw	1
  4127  02DA  00A0               	movwf	??_LCD_Write_Nibble
  4128  02DB  0EA0               	swapf	??_LCD_Write_Nibble,f
  4129  02DC  0806               	movf	6,w	;volatile
  4130  02DD  0620               	xorwf	??_LCD_Write_Nibble,w
  4131  02DE  39EF               	andlw	-17
  4132  02DF  0620               	xorwf	??_LCD_Write_Nibble,w
  4133  02E0  0086               	movwf	6	;volatile
  4134                           
  4135                           ;./lcd.h: 65:   PORTBbits.RB5 = (n >> 1) & 0x01;
  4136  02E1  0822               	movf	LCD_Write_Nibble@n,w
  4137  02E2  00A0               	movwf	??_LCD_Write_Nibble
  4138  02E3  1003               	clrc
  4139  02E4  0C20               	rrf	??_LCD_Write_Nibble,w
  4140  02E5  3901               	andlw	1
  4141  02E6  00A1               	movwf	??_LCD_Write_Nibble+1
  4142  02E7  0EA1               	swapf	??_LCD_Write_Nibble+1,f
  4143  02E8  0DA1               	rlf	??_LCD_Write_Nibble+1,f
  4144  02E9  0806               	movf	6,w	;volatile
  4145  02EA  0621               	xorwf	??_LCD_Write_Nibble+1,w
  4146  02EB  39DF               	andlw	-33
  4147  02EC  0621               	xorwf	??_LCD_Write_Nibble+1,w
  4148  02ED  0086               	movwf	6	;volatile
  4149                           
  4150                           ;./lcd.h: 66:   PORTBbits.RB6 = (n >> 2) & 0x01;
  4151  02EE  0822               	movf	LCD_Write_Nibble@n,w
  4152  02EF  00A0               	movwf	??_LCD_Write_Nibble
  4153  02F0  3002               	movlw	2
  4154  02F1                     u895:
  4155  02F1  1003               	clrc
  4156  02F2  0CA0               	rrf	??_LCD_Write_Nibble,f
  4157  02F3  3EFF               	addlw	-1
  4158  02F4  1D03               	skipz
  4159  02F5  2AF1               	goto	u895
  4160  02F6  0820               	movf	??_LCD_Write_Nibble,w
  4161  02F7  3901               	andlw	1
  4162  02F8  00A1               	movwf	??_LCD_Write_Nibble+1
  4163  02F9  0EA1               	swapf	??_LCD_Write_Nibble+1,f
  4164  02FA  0DA1               	rlf	??_LCD_Write_Nibble+1,f
  4165  02FB  0DA1               	rlf	??_LCD_Write_Nibble+1,f
  4166  02FC  0806               	movf	6,w	;volatile
  4167  02FD  0621               	xorwf	??_LCD_Write_Nibble+1,w
  4168  02FE  39BF               	andlw	-65
  4169  02FF  0621               	xorwf	??_LCD_Write_Nibble+1,w
  4170  0300  0086               	movwf	6	;volatile
  4171                           
  4172                           ;./lcd.h: 67:   PORTBbits.RB7 = (n >> 3) & 0x01;
  4173  0301  0822               	movf	LCD_Write_Nibble@n,w
  4174  0302  00A0               	movwf	??_LCD_Write_Nibble
  4175  0303  3003               	movlw	3
  4176  0304                     u905:
  4177  0304  1003               	clrc
  4178  0305  0CA0               	rrf	??_LCD_Write_Nibble,f
  4179  0306  3EFF               	addlw	-1
  4180  0307  1D03               	skipz
  4181  0308  2B04               	goto	u905
  4182  0309  0820               	movf	??_LCD_Write_Nibble,w
  4183  030A  3901               	andlw	1
  4184  030B  00A1               	movwf	??_LCD_Write_Nibble+1
  4185  030C  0CA1               	rrf	??_LCD_Write_Nibble+1,f
  4186  030D  0CA1               	rrf	??_LCD_Write_Nibble+1,f
  4187  030E  0806               	movf	6,w	;volatile
  4188  030F  0621               	xorwf	??_LCD_Write_Nibble+1,w
  4189  0310  397F               	andlw	-129
  4190  0311  0621               	xorwf	??_LCD_Write_Nibble+1,w
  4191  0312  0086               	movwf	6	;volatile
  4192  0313                     l1389:
  4193                           
  4194                           ;./lcd.h: 70:   PORTCbits.RC7 = 0;
  4195  0313  1387               	bcf	7,7	;volatile
  4196  0314                     l1391:
  4197                           
  4198                           ;./lcd.h: 71:   _delay((unsigned long)((1)*(32000000/4000000.0)));
  4199  0314  2B15               	nop2	;2 cycle nop
  4200  0315  2B16               	nop2	;2 cycle nop
  4201  0316  2B17               	nop2	;2 cycle nop
  4202  0317  2B18               	nop2	;2 cycle nop
  4203  0318                     l1393:
  4204                           
  4205                           ;./lcd.h: 72:   PORTCbits.RC7 = 1;
  4206  0318  1283               	bcf	3,5	;RP0=0, select bank0
  4207  0319  1303               	bcf	3,6	;RP1=0, select bank0
  4208  031A  1787               	bsf	7,7	;volatile
  4209  031B                     l1395:
  4210                           
  4211                           ;./lcd.h: 73:   _delay((unsigned long)((1)*(32000000/4000000.0)));
  4212  031B  2B1C               	nop2	;2 cycle nop
  4213  031C  2B1D               	nop2	;2 cycle nop
  4214  031D  2B1E               	nop2	;2 cycle nop
  4215  031E  2B1F               	nop2	;2 cycle nop
  4216  031F                     l1397:
  4217                           
  4218                           ;./lcd.h: 74:   PORTCbits.RC7 = 0;
  4219  031F  1283               	bcf	3,5	;RP0=0, select bank0
  4220  0320  1303               	bcf	3,6	;RP1=0, select bank0
  4221  0321  1387               	bcf	7,7	;volatile
  4222  0322                     l1399:
  4223                           
  4224                           ;./lcd.h: 75:   _delay((unsigned long)((100)*(32000000/4000000.0)));
  4225  0322  309F               	movlw	159
  4226  0323  1283               	bcf	3,5	;RP0=0, select bank0
  4227  0324  1303               	bcf	3,6	;RP1=0, select bank0
  4228  0325  00A0               	movwf	??_LCD_Write_Nibble
  4229  0326                     u1967:
  4230  0326  2B27               	nop2
  4231  0327  0BA0               	decfsz	??_LCD_Write_Nibble,f
  4232  0328  2B26               	goto	u1967
  4233  0329  2B2A               	nop2
  4234  032A  0000               	nop
  4235  032B                     l45:
  4236  032B  0008               	return
  4237  032C                     __end_of_LCD_Write_Nibble:
  4238  007E                     btemp	set	126	;btemp
  4239  007E                     wtemp0	set	126
  4240                           
  4241                           	psect	config
  4242                           
  4243                           ;Config register CONFIG @ 0x2007
  4244                           ;	Oscillator Selection bits
  4245                           ;	FOSC = XT, XT oscillator
  4246                           ;	Watchdog Timer Enable bit
  4247                           ;	WDTE = OFF, WDT disabled
  4248                           ;	Power-up Timer Enable bit
  4249                           ;	PWRTE = OFF, PWRT disabled
  4250                           ;	Brown-out Reset Enable bit
  4251                           ;	BOREN = OFF, BOR disabled
  4252                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4253                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4254                           ;	Data EEPROM Memory Code Protection bit
  4255                           ;	CPD = OFF, Data EEPROM code protection off
  4256                           ;	Flash Program Memory Write Enable bits
  4257                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4258                           ;	In-Circuit Debugger Mode bit
  4259                           ;	DEBUG = 0x1, unprogrammed default
  4260                           ;	Flash Program Memory Code Protection bit
  4261                           ;	CP = OFF, Code protection off
  4262  2007                     	org	8199
  4263  2007  3F39               	dw	16185

Data Sizes:
    Strings     19
    Constant    0
    Data        103
    BSS         11
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94     58      89
    BANK1            94      0      86

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), STR_4(CODE[3]), ventilator_screen@vel_value(BANK0[1]), ventilator_screen@vel_number(BANK0[1]), 
		 -> ventilator_screen@vol_value(BANK0[1]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[3]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 14
		 -> ventilator_screen@vel(BANK0[5]), ventilator_screen@vol(BANK0[10]), conditional_screen@msj(BANK0[14]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 14
		 -> ventilator_screen@vel(BANK0[5]), ventilator_screen@vol(BANK0[10]), conditional_screen@msj(BANK0[14]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 1
		 -> ventilator_screen@vel_value(BANK0[1]), ventilator_screen@vel_number(BANK0[1]), ventilator_screen@vol_value(BANK0[1]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 1
		 -> ventilator_screen@vel_value(BANK0[1]), ventilator_screen@vel_number(BANK0[1]), ventilator_screen@vol_value(BANK0[1]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 1
		 -> ventilator_screen@vel_value(BANK0[1]), ventilator_screen@vel_number(BANK0[1]), ventilator_screen@vol_value(BANK0[1]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 1
		 -> ventilator_screen@vel_value(BANK0[1]), ventilator_screen@vel_number(BANK0[1]), ventilator_screen@vol_value(BANK0[1]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 1
		 -> ventilator_screen@vel_value(BANK0[1]), ventilator_screen@vel_number(BANK0[1]), ventilator_screen@vol_value(BANK0[1]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 14
		 -> ventilator_screen@vel(BANK0[5]), ventilator_screen@vol(BANK0[10]), conditional_screen@msj(BANK0[14]), 

    inicio_presentacion@str	PTR unsigned char  size(1) Largest target is 29
		 -> grupo(BANK0[6]), presentacion(BANK1[29]), saludo(BANK1[23]), 

    LCD_Print@LCD_Str	PTR unsigned char  size(1) Largest target is 29
		 -> grupo(BANK0[6]), presentacion(BANK1[29]), saludo(BANK1[23]), ventilator_screen@vel(BANK0[5]), 
		 -> ventilator_screen@vol(BANK0[10]), conditional_screen@con(BANK0[10]), conditional_screen@msj(BANK0[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_selector_type
    _selector_type->_ventilator_screen
    _ventilator_screen->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _conditional_screen->_LCD_Goto
    _keypad_getkey->_keypad_readkey
    _inicio_presentacion->_LCD_Goto
    _LCD_Print->_LCD_Write_Nibble
    _LCD_Goto->_LCD_Cmd
    _LCD_PutC->_LCD_Write_Nibble
    _LCD_Begin->_LCD_Cmd
    _LCD_Cmd->_LCD_Write_Nibble

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   11460
                                             54 BANK0      4     4      0
                          _LCD_Begin
                           _LCD_Goto
                           _LCD_PutC
                    _iniciar_puertos
                _inicio_presentacion
                      _keypad_getkey
                      _selector_type
 ---------------------------------------------------------------------------------
 (1) _selector_type                                        1     1      0    8338
                                             53 BANK0      1     1      0
                 _conditional_screen
                  _ventilator_screen
 ---------------------------------------------------------------------------------
 (2) _ventilator_screen                                   30    22      8    5484
                                             23 BANK0     30    22      8
                            _LCD_Cmd
                           _LCD_Goto
                          _LCD_Print
                            ___fltol
                               _itoa
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 7     3      4    1982
                                             17 BANK0      6     2      4
                            ___fltol (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     5      4    1264
                                              8 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              6     2      4     311
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4     466
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     305
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (2) _conditional_screen                                  30    28      2    2766
                                             10 BANK0     30    28      2
                            _LCD_Cmd
                           _LCD_Goto
                          _LCD_Print
                             _strcat
 ---------------------------------------------------------------------------------
 (4) _strcat                                               5     3      2     970
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _keypad_getkey                                        2     2      0      46
                                              1 BANK0      2     2      0
                     _keypad_readkey
 ---------------------------------------------------------------------------------
 (2) _keypad_readkey                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicio_presentacion                                  8     5      3    1905
                                             10 BANK0      8     5      3
                            _LCD_Cmd
                           _LCD_Goto
                          _LCD_Print
 ---------------------------------------------------------------------------------
 (3) _LCD_Print                                            4     4      0     387
                                              3 BANK0      4     4      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (3) _LCD_Goto                                             4     3      1     818
                                              6 BANK0      4     3      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _iniciar_puertos                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_PutC                                             2     2      0     132
                                              3 BANK0      2     2      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            3     3      0     176
                                              6 BANK0      3     3      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (4) _LCD_Cmd                                              3     3      0     176
                                              3 BANK0      3     3      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_Nibble                                     3     3      0      88
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Begin
     _LCD_Cmd
       _LCD_Write_Nibble
   _LCD_Goto
     _LCD_Cmd
   _LCD_PutC
     _LCD_Write_Nibble
   _iniciar_puertos
   _inicio_presentacion
     _LCD_Cmd
     _LCD_Goto
     _LCD_Print
       _LCD_Write_Nibble
   _keypad_getkey
     _keypad_readkey
   _selector_type
     _conditional_screen
       _LCD_Cmd
       _LCD_Goto
       _LCD_Print
       _strcat
     _ventilator_screen
       _LCD_Cmd
       _LCD_Goto
       _LCD_Print
       ___fltol
       _itoa
         ___fltol (ARG)
         _utoa (ARG)
           ___lwdiv
           ___lwmod
       _strcat

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               5E      0      56       6       91.5%
BITBANK1            5E      0       0       5        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               5E     3A      59       4       94.7%
BITBANK0            5E      0       1       3        1.1%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      AF       8        0.0%
ABS                  0      0      AF       7        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jun 23 00:51:51 2021

                                 _i 0076                                   pc 0002  
                                l51 00FE                                  l60 012E  
                                l45 032B                                  l63 008B  
                                l72 0701                                  l90 0739  
                                l91 0727                                  l92 07D9  
                                l69 0195                                  l93 072D  
                                l94 0733                                  l96 076E  
                                l97 075C                                  l98 0762  
                                l99 0768                                  _RS 03C0  
                                fsr 0004                                 l101 07A3  
                               l102 0791                                 l103 0797  
                               l104 079D                                 l107 07C6  
                               l108 07CC                                 l109 07D2  
                               l142 0074                                 l119 00AC  
                               l160 048A                                 l148 02CA  
                               l173 0644                                 l186 040F  
                               l552 0217                                 l473 04F1  
                               l466 0506                                 l562 01D1  
                               l476 0506                                 l740 0380  
                               l742 0397                                 l734 00D0  
                               l751 0160                                 _ECO 0071  
                               _RA0 0028                                 _RA1 0029  
                               _RA2 002A                                 _RA3 002B  
                               _RC0 0038                                 _RA4 002C  
                               _RC1 0039                                 _RA5 002D  
                               u910 01DC                                 u911 01DB  
                               u905 0304                                 u930 01EE  
                               u931 01ED                                 u925 01E0  
                               u870 02D5                                 u950 01FF  
                               u871 02D1                                 u951 01FE  
                               u945 01EF                                 u970 0213  
                               u971 0212                                 u955 01FB  
                               u884 02D8                                 u980 019E  
                               u965 0207                                 u981 019D  
                               u895 02F1                                 u995 01A2  
                  ?_iniciar_puertos 0020                                 fsr0 0004  
                               indf 0000                     __end_of_LCD_Cmd 00FF  
                      ___fltol@exp1 002A                                l1401 01D2  
                              l1411 01EA                                l1403 01D6  
                              l1421 020D                                l1413 01EE  
                              l1405 01DC                                l1511 0167  
                              l1415 01FF                                l1407 01DF  
                              l1423 0213                                l1431 01A1  
                              l1513 0184                                l1601 0731  
                              l1521 013B                                l1417 0205  
                              l1409 01E6                                l1441 01C0  
                              l1433 01A8                                l1451 00D5  
                              l1515 018A                                l1507 0164  
                              l1611 0744                                l1523 0144  
                              l1419 0206                                l1443 01C7  
                              l1435 01AC                                l1427 0196  
                              l1531 00B0                                l1453 00E7  
                              l1509 0165                                l1621 075A  
                              l1613 074A                                l1605 0737  
                              l1525 0148                                l1517 0132  
                              l1701 0440                                l1437 01B0  
                              l1429 019E                                l1445 01CD  
                              l1461 0333                                l1533 00B4  
                              l1391 0314                                l1455 00EE  
                              l1615 074E                                l1527 014E  
                              l1519 0137                                l1711 0468  
                              l1703 0448                                l1551 04B6  
                              l1543 048B                                l1439 01BA  
                              l1471 0354                                l1463 0344  
                              l1535 00BB                                l1393 0318  
                              l1385 02CE                                l1457 00F4  
                              l1449 00D4                                l1801 0060  
                              l1641 077F                                l1633 076C  
                              l1625 0760                                l1617 0752  
                              l1609 073D                                l1713 0470  
                              l1705 0451                                l1553 04B7  
                              l1545 0498                                l1481 038B  
                              l1473 0365                                l1465 0348  
                              l1537 00BF                                l1529 00B0  
                              l1721 0595                                l1395 031B  
                              l1387 02D8                                l1811 006B  
                              l1803 0065                                l1491 0103  
                              l1643 0783                                l1619 0756  
                              l1715 0478                                l1707 0458  
                              l1555 04BF                                l1483 038D  
                              l1475 0376                                l1467 034E  
                              l1459 032F                                l1539 00C4  
                              l1731 05C2                                l1723 0599  
                              l1397 031F                                l1389 0313  
                              l1821 0070                                l1813 006C  
                              l1805 0068                                l1493 0109  
                              l1661 07A1                                l1653 0795  
                              l1645 0787                                l1637 0772  
                              l1629 0766                                l1581 0708  
                              l1717 047C                                l1709 0461  
                              l1573 04E6                                l1565 04CD  
                              l1557 04C1                                l1549 04A1  
                              l1485 0393                                l1477 037C  
                              l1469 0352                                l1741 05F2  
                              l1733 05C3                                l1725 05B0  
                              l1399 0322                                l1823 0071  
                              l1815 006D                                l1807 0069  
                              l1495 010F                                l1831 028A  
                              l1671 07B8                                l1647 078B  
                              l1639 0779                                l1591 0721  
                              l1583 070F                                l1719 0486  
                              l1575 04F6                                l1559 04C5  
                              l1567 04DF                                l1479 0384  
                              l1751 062C                                l1743 05FC  
                              l1735 05C9                                l1727 05C0  
                              l1761 0645                                l1825 0072  
                              l1817 006E                                l1809 006A  
                              l1497 0115                                l1489 0102  
                              l1841 02B4                                l1833 028F  
                              l1681 07CA                                l1673 07BC  
                              l1665 07A7                                l1657 079B  
                              l1649 078F                                l1593 0725  
                              l1585 0715                                l1577 04FB  
                              l1753 0636                                l1745 060A  
                              l1737 05E4                                l1729 05C1  
                              l1771 0684                                l1763 0658  
                              l1819 006F                                l1499 011B  
                              l1843 02BE                                l1835 0293  
                              l1827 026E                                l1675 07C0  
                              l1667 07AE                                l1587 0719  
                              l1579 0702                                l1755 0640  
                              l1747 0614                                l1739 05EE  
                              l1851 03A7                                l1781 06C8  
                              l1773 0693                                l1765 0666  
                              l1757 0078                                l1845 02C2  
                              l1837 029E                                l1829 027C  
                              l1685 07D0                                l1677 07C4  
                              l1669 07B4                                l1693 07D8  
                              l1597 072B                                l1589 071D  
                              l1749 061E                                l1853 03BA  
                              l1861 03E6                                l1783 06CC  
                              l1775 0697                                l1767 066A  
                              l1759 0079                                l1839 02A6  
                              l1791 0093                                l1871 0408  
                              l1863 03EC                                l1855 03C3  
                              l1847 039B                                l1785 06DF  
                              l1777 06A6                                l1769 0679  
                              l1929 0123                                l1689 07D6  
                              l1793 009B                                l1697 0410  
                              l1865 03F4                                l1857 03CA  
                              l1849 03A1                                l1881 0520  
                              l1873 0507                                l1787 06EE  
                              l1779 06B5                                l1795 00A1  
                              l1699 043C                                l1867 03FA  
                              l1859 03DD                                l1891 0572  
                              l1883 0538                                l1875 050D  
                              l1797 00A9                                l1789 008C  
                              l1869 0402                                l1893 057A  
                              l1885 0543                                l1877 0510  
                              l1895 057E                                l1887 055B  
                              l1879 0513                                l1897 0584  
                              l1889 0563                   ?_LCD_Write_Nibble 0020  
                              STR_1 0022                                STR_2 0017  
                              STR_3 001B                                STR_4 001F  
                              STR_5 0012                                u1000 01B0  
                              u1001 01AF                                u1010 01BA  
                              u1011 01B9                                u1110 0195  
                              u1030 01CD                                u1111 0194  
                              u1031 01CC                                u1015 01B6  
                              u1120 0143                                u1200 04DE  
                              u1105 016F                                u1121 0142  
                              u1201 04DD                                u1025 01C1  
                              u1050 00EE                                u1130 0160  
                              u1210 04E5                                u1051 00ED  
                              u1131 015F                                u1211 04E4  
                              u1060 00F4                                u1300 072B  
                              u1140 00B4                                u1061 00F3  
                              u1045 00D8                                u1301 072A  
                              u1141 00B3                                u1310 0731  
                              u1230 04F6                                u1150 0498  
                              u1070 034E                                u1311 0730  
                              u1231 04F5                                u1151 0497  
                              u1071 034D                                u1400 076C  
                              u1320 0737                                u1240 04FB  
                              u1160 04AF                                u1080 037C  
                              u1401 076B                                u1321 0736  
                              u1241 04FA                                u1225 04E8  
                              u1081 037B                                u1410 077F  
                              u1330 074A                                u1250 0715  
                              u1170 04C5                                u1090 0393  
                              u1411 077E                                u1331 0749  
                              u1251 0714                                u1171 04C4  
                              u1091 0392                                u1500 07B8  
                              u1420 0783                                u1340 074E  
                              u1260 0719                                u1180 04CC  
                              u1501 07B7                                u1421 0782  
                              u1341 074D                                u1261 0718  
                              u1181 04CB                                u1165 04AA  
                              u1510 07BC                                u1430 0787  
                              u1350 0752                                u1270 071D  
                              u1511 07BB                                u1431 0786  
                              u1351 0751                                u1271 071C  
                              u1520 07C0                                u1440 078B  
                              u1360 0756                                u1280 0721  
                              u1600 0458                                u1521 07BF  
                              u1441 078A                                u1361 0755  
                              u1281 0720                                u1601 0457  
                              u1530 07C4                                u1450 078F  
                              u1370 075A                                u1290 0725  
                              u1610 0468                                u1531 07C3  
                              u1451 078E                                u1371 0759  
                              u1291 0724                                u1611 0467  
                              u1195 04CE                                u1540 07CA  
                              u1460 0795                                u1380 0760  
                              u1620 05A3                                u1700 03EC  
                              u1541 07C9                                u1461 0794  
                              u1381 075F                                u1701 03EB  
                              u1550 07D0                                u1470 079B  
                              u1390 0766                                u1710 03FA  
                              u1551 07CF                                u1471 079A  
                              u1391 0765                                u1711 03F9  
                              u1560 07D6                                u1480 07A1  
                              u1640 00A1                                u1720 0408  
                              u1561 07D5                                u1481 07A0  
                              u1641 00A0                                u1721 0407  
                              u1490 07B4                                u1650 00A9  
                              u1570 041A                                u1635 007C  
                              u1491 07B3                                u1651 00A8  
                              u1660 02B4                                u1580 042F  
                              u1661 02B3                                u1590 0448  
                              u1670 03A1                                u1807 0776  
                              u1591 0447                                u1671 03A0  
                              u1680 03A7                                u1665 02B0  
                              u1817 07AB                                u1681 03A6  
                              u1737 0526                                u1690 03CA  
                              u1907 06AE                                u1827 0284  
                              u1691 03C9                                u1747 053E  
                              u1917 06C1                                u1837 0299  
                              u1757 0556                                u1927 06D4  
                              u1847 02BA                                u1767 056B  
                              u1937 06E7                                u1857 0660  
                              u1777 058C                                u1947 06FA  
                              u1867 0670                                u1787 070C  
                              u1957 00FA                                u1877 067F  
                              u1797 0741                                u1967 0326  
                              u1887 068E                                u1897 069D  
                ??_LCD_Write_Nibble 0020                                _main 0507  
                __size_of_LCD_Begin 00BD                                _itoa 00AD  
                              btemp 007E                                _utoa 032C  
                __size_of_LCD_Print 0035                                start 0000  
                       LCD_Goto@col 0029                         LCD_Goto@row 0026  
                  __end_of_LCD_Goto 012F                    __end_of_LCD_PutC 008C  
                     ___fltol@sign1 0029                               ?_main 0020  
                             ?_itoa 0031                               _ADRES 006F  
                   __end_of___fltol 0507                               ?_utoa 0028  
                   __end_of___lwdiv 0218                     __end_of___lwmod 01D2  
                             _PORTA 0005                               _PORTB 0006  
                             _PORTC 0007                    ??_keypad_readkey 0020  
                             _grupo 0065          __end_of_conditional_screen 048B  
                             main@c 0059                               pclath 000A  
                             utoa@c 002F                               utoa@v 002D  
                             status 0003                               wtemp0 007E  
                   __initialization 07DA                        __end_of_main 0595  
                      __end_of_itoa 00D1                        __end_of_utoa 0398  
ventilator_screen@ventilator_number 003D                      selector_type@c 0055  
                            ??_main 0056                              ??_itoa 0035  
                 __end_of_LCD_Begin 0702                              ??_utoa 002C  
                         ??_LCD_Cmd 0023                   __end_of_LCD_Print 0196  
                            _ADCON1 009F               __end_of_selector_type 0410  
           conditional_screen@F1115 00A0             conditional_screen@F1117 00B8  
                 _ventilator_screen 0595                           ??___fltol 0024  
                         ??___lwdiv 0024                           ??___lwmod 0024  
                ?_ventilator_screen 0037                              _saludo 00DF  
                            _number 006B                              _strcat 012F  
               ??_ventilator_screen 003F             __end_of__initialization 07FD  
                         ?_LCD_Goto 0026                           ?_LCD_PutC 0020  
                     _length_saludo 005F                          ___fltol@f1 0020  
            __size_of_keypad_getkey 0021           __end_of_ventilator_screen 0645  
      __size_of_inicio_presentacion 005D                      __pcstackCOMMON 0000  
                      __pidataBANK0 004F                        __pidataBANK1 0218  
                    LCD_Cmd@Command 0025              inicio_presentacion@str 002C  
                        __pbssBANK0 006B                          ??_LCD_Goto 0027  
                        ??_LCD_PutC 0023              ventilator_screen@F1131 0073  
            ventilator_screen@F1123 00AE              ventilator_screen@F1125 005A  
            ventilator_screen@F1127 0075              ventilator_screen@F1129 0074  
                        __pmaintext 0507           __size_of_LCD_Write_Nibble 0061  
                           ?_strcat 0020                       _keypad_getkey 008C  
                           _LCD_Cmd 00D1                          __stringtab 0002  
          __size_of_iniciar_puertos 0015          __size_of_ventilator_screen 00B0  
                _conditional_screen 0410                    LCD_PutC@LCD_Char 0024  
                           ___fltol 048B                             ___lwdiv 01D2  
                           ___lwmod 0196                 ?_conditional_screen 002A  
        ventilator_screen@vel_value 0054            ventilator_screen@voltaje 0037  
                           __ptext1 0398                             __ptext2 0595  
                           __ptext3 00AD                             __ptext4 032C  
                           __ptext5 0196                             __ptext6 01D2  
                           __ptext7 048B                             __ptext8 0410  
                           __ptext9 012F                      ?_keypad_getkey 0020  
                   __size_of_strcat 0032                           _LCD_Begin 0645  
        ventilator_screen@vol_value 0052                           _LCD_Print 0161  
              end_of_initialization 07FD                ??_conditional_screen 002C  
                           itoa@buf 0036                             itoa@val 0031  
                           utoa@buf 0030                   LCD_Write_Nibble@n 0022  
                           utoa@val 0028                           _PORTBbits 0006  
                         _PORTCbits 0007                           _TRISAbits 0085  
                         _TRISBbits 0086                           _TRISCbits 0087  
                        ?_LCD_Begin 0020                 _inicio_presentacion 026E  
                        ?_LCD_Print 0020             __size_of_keypad_readkey 00D8  
                 __size_of_LCD_Goto 0030                   __size_of_LCD_PutC 0017  
                 ??_iniciar_puertos 0000                ?_inicio_presentacion 002A  
                  _LCD_Write_Nibble 02CB                          LCD_Print@i 0025  
                   ??_keypad_getkey 0021              __size_of_selector_type 0078  
                     __pbitbssBANK0 03C0               conditional_screen@con 0030  
             conditional_screen@msj 003A                      __end_of_strcat 0161  
               start_initialization 07DA                inicio_presentacion@i 0030  
             ??_inicio_presentacion 002D                          init_fetch0 003E  
                       __pdataBANK0 005A                         __pdataBANK1 00A0  
               _length_presentacion 0061                            ??_strcat 0022  
                          ?_LCD_Cmd 0020                        _length_grupo 0063  
                         ___latbits 0001                       __pcstackBANK0 0020  
                       ??_LCD_Begin 0026                         ??_LCD_Print 0023  
                     _selector_type 0398                           __pnvBANK0 0076  
                  ___lwdiv@dividend 0022                            ?___fltol 0020  
                          ?___lwdiv 0020                            ?___lwmod 0020  
                  LCD_Print@LCD_Str 0026                           __pstrings 0002  
                  ___lwdiv@quotient 0025                      ?_selector_type 0020  
                          _LCD_Goto 00FF                            _LCD_PutC 0075  
                    _keypad_readkey 0702                         __stringbase 0011  
                  __size_of_LCD_Cmd 002E            __end_of_LCD_Write_Nibble 032C  
                   _iniciar_puertos 0060              __end_of_keypad_readkey 07DA  
       __size_of_conditional_screen 007B                    __size_of___fltol 007C  
                  __size_of___lwdiv 0046                    __size_of___lwmod 003C  
                __end_of__stringtab 0012                          strcat@from 0020  
                   ___lwdiv@divisor 0020                     ___lwdiv@counter 0027  
       ventilator_screen@vel_number 0053                            __ptext10 008C  
                          __ptext11 0702                            __ptext12 026E  
                          __ptext13 0161                            __ptext14 00FF  
                          __ptext15 0060                            __ptext16 0075  
                          __ptext17 0645                            __ptext18 00D1  
                          __ptext19 02CB                ventilator_screen@vel 004D  
              ventilator_screen@vol 0043                ventilator_screen@vrm 003B  
                   ??_selector_type 0000                     ?_keypad_readkey 0020  
                     __size_of_main 008E                       __size_of_itoa 0024  
                     __size_of_utoa 006C               __end_of_keypad_getkey 00AD  
               conditional_screen@x 002A             __end_of_iniciar_puertos 0075  
                  keypad_getkey@key 0022                            itoa@base 0033  
                          init_ram0 0042           inicio_presentacion@length 002A  
       __end_of_inicio_presentacion 02CB                    ___lwmod@dividend 0022  
                         stringcode 000C                        _presentacion 00C2  
                          utoa@base 002A                            strcat@cp 0023  
                          strcat@to 0024                     ___lwmod@divisor 0020  
                   ___lwmod@counter 0025                            stringdir 000C  
                          stringtab 0002  
