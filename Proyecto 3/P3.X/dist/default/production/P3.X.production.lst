

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jun 23 20:01:32 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F873A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.20
    48                           ; Generated 12/02/2020 GMT
    49                           ; 
    50                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F873A Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  0081                     	;# 
   115  0085                     	;# 
   116  0086                     	;# 
   117  0087                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009C                     	;# 
   184  009D                     	;# 
   185  009E                     	;# 
   186  009F                     	;# 
   187  010C                     	;# 
   188  010D                     	;# 
   189  010E                     	;# 
   190  010F                     	;# 
   191  018C                     	;# 
   192  018D                     	;# 
   193  0000                     	;# 
   194  0001                     	;# 
   195  0002                     	;# 
   196  0003                     	;# 
   197  0004                     	;# 
   198  0005                     	;# 
   199  0006                     	;# 
   200  0007                     	;# 
   201  000A                     	;# 
   202  000B                     	;# 
   203  000C                     	;# 
   204  000D                     	;# 
   205  000E                     	;# 
   206  000E                     	;# 
   207  000F                     	;# 
   208  0010                     	;# 
   209  0011                     	;# 
   210  0012                     	;# 
   211  0013                     	;# 
   212  0014                     	;# 
   213  0015                     	;# 
   214  0015                     	;# 
   215  0016                     	;# 
   216  0017                     	;# 
   217  0018                     	;# 
   218  0019                     	;# 
   219  001A                     	;# 
   220  001B                     	;# 
   221  001B                     	;# 
   222  001C                     	;# 
   223  001D                     	;# 
   224  001E                     	;# 
   225  001F                     	;# 
   226  0081                     	;# 
   227  0085                     	;# 
   228  0086                     	;# 
   229  0087                     	;# 
   230  008C                     	;# 
   231  008D                     	;# 
   232  008E                     	;# 
   233  0091                     	;# 
   234  0092                     	;# 
   235  0093                     	;# 
   236  0094                     	;# 
   237  0098                     	;# 
   238  0099                     	;# 
   239  009C                     	;# 
   240  009D                     	;# 
   241  009E                     	;# 
   242  009F                     	;# 
   243  010C                     	;# 
   244  010D                     	;# 
   245  010E                     	;# 
   246  010F                     	;# 
   247  018C                     	;# 
   248  018D                     	;# 
   249                           
   250                           	psect	idataBANK0
   251  0D30                     __pidataBANK0:
   252                           
   253                           ;initializer for ventilator_screen@F1128
   254  0D30  3456               	retlw	86
   255  0D31  3465               	retlw	101
   256  0D32  346C               	retlw	108
   257  0D33  3420               	retlw	32
   258  0D34  3400               	retlw	0
   259                           
   260                           ;initializer for _length_saludo
   261  0D35  3416               	retlw	22
   262  0D36  3400               	retlw	0
   263                           
   264                           ;initializer for _length_presentacion
   265  0D37  3426               	retlw	38
   266  0D38  3400               	retlw	0
   267                           
   268                           ;initializer for _length_grupo
   269  0D39  3405               	retlw	5
   270  0D3A  3400               	retlw	0
   271                           
   272                           	psect	idataBANK1
   273  0FA4                     __pidataBANK1:
   274                           
   275                           ;initializer for conditional_screen@F1118
   276  0FA4  3443               	retlw	67
   277  0FA5  3461               	retlw	97
   278  0FA6  346D               	retlw	109
   279  0FA7  3462               	retlw	98
   280  0FA8  3469               	retlw	105
   281  0FA9  3461               	retlw	97
   282  0FAA  3472               	retlw	114
   283  0FAB  3420               	retlw	32
   284  0FAC  3463               	retlw	99
   285  0FAD  346F               	retlw	111
   286  0FAE  346E               	retlw	110
   287  0FAF  3464               	retlw	100
   288  0FB0  342E               	retlw	46
   289  0FB1  3400               	retlw	0
   290                           
   291                           ;initializer for ventilator_screen@F1126
   292  0FB2  3456               	retlw	86
   293  0FB3  346F               	retlw	111
   294  0FB4  346C               	retlw	108
   295  0FB5  3474               	retlw	116
   296  0FB6  3461               	retlw	97
   297  0FB7  346A               	retlw	106
   298  0FB8  3465               	retlw	101
   299  0FB9  343A               	retlw	58
   300  0FBA  3420               	retlw	32
   301  0FBB  3400               	retlw	0
   302                           
   303                           ;initializer for conditional_screen@F1120
   304  0FBC  3431               	retlw	49
   305  0FBD  342E               	retlw	46
   306  0FBE  3453               	retlw	83
   307  0FBF  3469               	retlw	105
   308  0FC0  3420               	retlw	32
   309  0FC1  3432               	retlw	50
   310  0FC2  342E               	retlw	46
   311  0FC3  344E               	retlw	78
   312  0FC4  346F               	retlw	111
   313  0FC5  3400               	retlw	0
   314                           
   315                           ;initializer for _presentacion
   316  0FC6  344A               	retlw	74
   317  0FC7  346F               	retlw	111
   318  0FC8  3473               	retlw	115
   319  0FC9  3465               	retlw	101
   320  0FCA  3420               	retlw	32
   321  0FCB  3452               	retlw	82
   322  0FCC  346F               	retlw	111
   323  0FCD  3464               	retlw	100
   324  0FCE  3472               	retlw	114
   325  0FCF  3469               	retlw	105
   326  0FD0  3467               	retlw	103
   327  0FD1  3475               	retlw	117
   328  0FD2  3465               	retlw	101
   329  0FD3  347A               	retlw	122
   330  0FD4  3420               	retlw	32
   331  0FD5  3479               	retlw	121
   332  0FD6  3420               	retlw	32
   333  0FD7  344B               	retlw	75
   334  0FD8  3461               	retlw	97
   335  0FD9  3472               	retlw	114
   336  0FDA  346C               	retlw	108
   337  0FDB  3461               	retlw	97
   338  0FDC  3420               	retlw	32
   339  0FDD  3452               	retlw	82
   340  0FDE  3465               	retlw	101
   341  0FDF  3479               	retlw	121
   342  0FE0  3465               	retlw	101
   343  0FE1  3473               	retlw	115
   344  0FE2  3400               	retlw	0
   345                           
   346                           ;initializer for _saludo
   347  0FE3  3448               	retlw	72
   348  0FE4  346F               	retlw	111
   349  0FE5  346C               	retlw	108
   350  0FE6  3461               	retlw	97
   351  0FE7  3420               	retlw	32
   352  0FE8  344D               	retlw	77
   353  0FE9  3475               	retlw	117
   354  0FEA  346E               	retlw	110
   355  0FEB  3464               	retlw	100
   356  0FEC  346F               	retlw	111
   357  0FED  3420               	retlw	32
   358  0FEE  3462               	retlw	98
   359  0FEF  3469               	retlw	105
   360  0FF0  3465               	retlw	101
   361  0FF1  346E               	retlw	110
   362  0FF2  3476               	retlw	118
   363  0FF3  3465               	retlw	101
   364  0FF4  346E               	retlw	110
   365  0FF5  3469               	retlw	105
   366  0FF6  3464               	retlw	100
   367  0FF7  346F               	retlw	111
   368  0FF8  3421               	retlw	33
   369  0FF9  3400               	retlw	0
   370                           
   371                           ;initializer for _grupo
   372  0FFA  3433               	retlw	51
   373  0FFB  3443               	retlw	67
   374  0FFC  3456               	retlw	86
   375  0FFD  3431               	retlw	49
   376  0FFE  3436               	retlw	54
   377  0FFF  3400               	retlw	0
   378                           
   379                           	psect	nvBANK0
   380  0077                     __pnvBANK0:
   381  0077                     _i:
   382  0077                     	ds	2
   383  000B                     _INTCONbits	set	11
   384  0003                     _STATUSbits	set	3
   385  0007                     _PORTC	set	7
   386  0006                     _PORTB	set	6
   387  0005                     _PORTA	set	5
   388  0006                     _PORTBbits	set	6
   389  0007                     _PORTCbits	set	7
   390  002B                     _RA3	set	43
   391  002A                     _RA2	set	42
   392  0029                     _RA1	set	41
   393  0028                     _RA0	set	40
   394  002C                     _RA4	set	44
   395  002D                     _RA5	set	45
   396  0038                     _RC0	set	56
   397  0039                     _RC1	set	57
   398  009F                     _ADCON1	set	159
   399  0085                     _TRISAbits	set	133
   400  0086                     _TRISBbits	set	134
   401  0087                     _TRISCbits	set	135
   402  010C                     _EEDATA	set	268
   403  010D                     _EEADR	set	269
   404  018D                     _EECON2	set	397
   405  018C                     _EECON1	set	396
   406  018C                     _EECON1bits	set	396
   407                           
   408                           	psect	strings
   409  0002                     __pstrings:
   410  0002                     stringtab:
   411  0002                     __stringtab:
   412                           
   413                           ;	String table - string pointers are 1 byte each
   414  0002  1BFF               	btfsc	btemp+1,7
   415  0003  280C               	ljmp	stringcode
   416  0004  1383               	bcf	3,7
   417  0005  187F               	btfsc	btemp+1,0
   418  0006  1783               	bsf	3,7
   419  0007  0800               	movf	0,w
   420  0008  0A84               	incf	4,f
   421  0009  1903               	skipnz
   422  000A  0AFF               	incf	btemp+1,f
   423  000B  0008               	return
   424  000C                     stringcode:
   425  000C                     stringdir:
   426  000C  3000               	movlw	high stringdir
   427  000D  008A               	movwf	10
   428  000E  0804               	movf	4,w
   429  000F  0A84               	incf	4,f
   430  0010  0782               	addwf	2,f
   431  0011                     __stringbase:
   432  0011  3400               	retlw	0
   433  0012                     __end_of__stringtab:
   434  0012                     STR_7:
   435  0012  3445               	retlw	69	;'E'
   436  0013  3473               	retlw	115	;'s'
   437  0014  3463               	retlw	99	;'c'
   438  0015  3472               	retlw	114	;'r'
   439  0016  3469               	retlw	105	;'i'
   440  0017  3462               	retlw	98	;'b'
   441  0018  3465               	retlw	101	;'e'
   442  0019  3420               	retlw	32	;' '
   443  001A  3444               	retlw	68	;'D'
   444  001B  3469               	retlw	105	;'i'
   445  001C  3472               	retlw	114	;'r'
   446  001D  3465               	retlw	101	;'e'
   447  001E  3463               	retlw	99	;'c'
   448  001F  3463               	retlw	99	;'c'
   449  0020  3469               	retlw	105	;'i'
   450  0021  346F               	retlw	111	;'o'
   451  0022  346E               	retlw	110	;'n'
   452  0023  3400               	retlw	0
   453  0024                     STR_11:
   454  0024  344F               	retlw	79	;'O'
   455  0025  3470               	retlw	112	;'p'
   456  0026  3463               	retlw	99	;'c'
   457  0027  3469               	retlw	105	;'i'
   458  0028  346F               	retlw	111	;'o'
   459  0029  346E               	retlw	110	;'n'
   460  002A  3420               	retlw	32	;' '
   461  002B  3449               	retlw	73	;'I'
   462  002C  346E               	retlw	110	;'n'
   463  002D  3476               	retlw	118	;'v'
   464  002E  3461               	retlw	97	;'a'
   465  002F  346C               	retlw	108	;'l'
   466  0030  3469               	retlw	105	;'i'
   467  0031  3464               	retlw	100	;'d'
   468  0032  3461               	retlw	97	;'a'
   469  0033  3400               	retlw	0
   470  0034                     STR_6:
   471  0034  3445               	retlw	69	;'E'
   472  0035  3473               	retlw	115	;'s'
   473  0036  3463               	retlw	99	;'c'
   474  0037  3472               	retlw	114	;'r'
   475  0038  3469               	retlw	105	;'i'
   476  0039  3462               	retlw	98	;'b'
   477  003A  3465               	retlw	101	;'e'
   478  003B  3420               	retlw	32	;' '
   479  003C  3476               	retlw	118	;'v'
   480  003D  3461               	retlw	97	;'a'
   481  003E  346C               	retlw	108	;'l'
   482  003F  346F               	retlw	111	;'o'
   483  0040  3472               	retlw	114	;'r'
   484  0041  3400               	retlw	0
   485  0042                     STR_8:
   486  0042  344E               	retlw	78	;'N'
   487  0043  3475               	retlw	117	;'u'
   488  0044  3465               	retlw	101	;'e'
   489  0045  3476               	retlw	118	;'v'
   490  0046  346F               	retlw	111	;'o'
   491  0047  3420               	retlw	32	;' '
   492  0048  3456               	retlw	86	;'V'
   493  0049  3461               	retlw	97	;'a'
   494  004A  346C               	retlw	108	;'l'
   495  004B  346F               	retlw	111	;'o'
   496  004C  3472               	retlw	114	;'r'
   497  004D  3400               	retlw	0
   498  004E                     STR_10:
   499  004E  3453               	retlw	83	;'S'
   500  004F  3461               	retlw	97	;'a'
   501  0050  346C               	retlw	108	;'l'
   502  0051  3469               	retlw	105	;'i'
   503  0052  3465               	retlw	101	;'e'
   504  0053  346E               	retlw	110	;'n'
   505  0054  3464               	retlw	100	;'d'
   506  0055  346F               	retlw	111	;'o'
   507  0056  3400               	retlw	0
   508  0057                     STR_5:
   509  0057  3420               	retlw	32	;' '
   510  0058  3452               	retlw	82	;'R'
   511  0059  3450               	retlw	80	;'P'
   512  005A  344D               	retlw	77	;'M'
   513  005B  3400               	retlw	0
   514  005C                     STR_2:
   515  005C  3420               	retlw	32	;' '
   516  005D  3446               	retlw	70	;'F'
   517  005E  3431               	retlw	49	;'1'
   518  005F  3400               	retlw	0
   519  0060                     STR_3:
   520  0060  3420               	retlw	32	;' '
   521  0061  3446               	retlw	70	;'F'
   522  0062  3432               	retlw	50	;'2'
   523  0063  3400               	retlw	0
   524  0064                     STR_9:
   525  0064  3420               	retlw	32	;' '
   526  0065  346D               	retlw	109	;'m'
   527  0066  3476               	retlw	118	;'v'
   528  0067  3400               	retlw	0
   529  0068                     STR_4:
   530  0068  343A               	retlw	58	;':'
   531  0069  3420               	retlw	32	;' '
   532  006A  3400               	retlw	0
   533  006B                     STR_1:
   534  006B  3420               	retlw	32	;' '
   535  006C  3456               	retlw	86	;'V'
   536  006D  3400               	retlw	0
   537                           
   538                           	psect	cinit
   539  07DF                     start_initialization:	
   540                           ; #config settings
   541                           
   542  07DF                     __initialization:
   543                           
   544                           ; Initialize objects allocated to BANK1
   545  07DF  1383               	bcf	3,7	;select IRP bank0
   546  07E0  30FC               	movlw	low (__pdataBANK1+92)
   547  07E1  00FD               	movwf	btemp+-1
   548  07E2  300F               	movlw	high __pidataBANK1
   549  07E3  00FE               	movwf	btemp
   550  07E4  30A4               	movlw	low __pidataBANK1
   551  07E5  00FF               	movwf	btemp+1
   552  07E6  30A0               	movlw	low __pdataBANK1
   553  07E7  0084               	movwf	4
   554  07E8  158A  253F  118A   	fcall	init_ram0
   555                           
   556                           ; Initialize objects allocated to BANK0
   557  07EB  3077               	movlw	low (__pdataBANK0+11)
   558  07EC  00FD               	movwf	btemp+-1
   559  07ED  300D               	movlw	high __pidataBANK0
   560  07EE  00FE               	movwf	btemp
   561  07EF  3030               	movlw	low __pidataBANK0
   562  07F0  00FF               	movwf	btemp+1
   563  07F1  306C               	movlw	low __pdataBANK0
   564  07F2  0084               	movwf	4
   565  07F3  158A  253F  118A   	fcall	init_ram0
   566                           
   567                           ; Clear objects allocated to BANK0
   568  07F6  305C               	movlw	low __pbssBANK0
   569  07F7  0084               	movwf	4
   570  07F8  306C               	movlw	low (__pbssBANK0+16)
   571  07F9  158A  2528  118A   	fcall	clear_ram0
   572                           
   573                           ; Clear objects allocated to BITBANK0
   574  07FC  01F9               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   575  07FD                     end_of_initialization:	
   576                           ;End of C runtime variable initialization code
   577                           
   578  07FD                     __end_of__initialization:
   579  07FD  0183               	clrf	3
   580  07FE  118A  2BB2         	ljmp	_main	;jump to C main() function
   581                           
   582                           	psect	bitbssBANK0
   583  03C8                     __pbitbssBANK0:
   584  03C8                     _RS:
   585  03C8                     	ds	1
   586                           
   587                           	psect	bssBANK0
   588  005C                     __pbssBANK0:
   589  005C                     _number:
   590  005C                     	ds	4
   591  0060                     _vb:
   592  0060                     	ds	2
   593  0062                     _va:
   594  0062                     	ds	2
   595  0064                     _ADRES:
   596  0064                     	ds	2
   597  0066                     _ECO:
   598  0066                     	ds	2
   599  0068                     screen_selector@F1145:
   600  0068                     	ds	1
   601  0069                     ventilator_screen@F1134:
   602  0069                     	ds	1
   603  006A                     ventilator_screen@F1132:
   604  006A                     	ds	1
   605  006B                     ventilator_screen@F1130:
   606  006B                     	ds	1
   607                           
   608                           	psect	dataBANK0
   609  006C                     __pdataBANK0:
   610  006C                     ventilator_screen@F1128:
   611  006C                     	ds	5
   612  0071                     _length_saludo:
   613  0071                     	ds	2
   614  0073                     _length_presentacion:
   615  0073                     	ds	2
   616  0075                     _length_grupo:
   617  0075                     	ds	2
   618                           
   619                           	psect	dataBANK1
   620  00A0                     __pdataBANK1:
   621  00A0                     conditional_screen@F1118:
   622  00A0                     	ds	14
   623  00AE                     ventilator_screen@F1126:
   624  00AE                     	ds	10
   625  00B8                     conditional_screen@F1120:
   626  00B8                     	ds	10
   627  00C2                     _presentacion:
   628  00C2                     	ds	29
   629  00DF                     _saludo:
   630  00DF                     	ds	23
   631  00F6                     _grupo:
   632  00F6                     	ds	6
   633                           
   634                           	psect	inittext
   635  0D3B                     init_fetch0:	
   636                           ;	Called with low address in FSR and high address in W
   637                           
   638  0D3B  087E               	movf	btemp,w
   639  0D3C  008A               	movwf	10
   640  0D3D  087F               	movf	btemp+1,w
   641  0D3E  0082               	movwf	2
   642  0D3F                     init_ram0:	
   643                           ;Called with:
   644                           ;	high address of idata address in btemp 
   645                           ;	low address of idata address in btemp+1 
   646                           ;	low address of data in FSR
   647                           ;	high address + 1 of data in btemp-1
   648                           
   649  0D3F  158A  253B  158A   	fcall	init_fetch0
   650  0D42  0080               	movwf	0
   651  0D43  0A84               	incf	4,f
   652  0D44  0804               	movf	4,w
   653  0D45  067D               	xorwf	btemp+-1,w
   654  0D46  1903               	btfsc	3,2
   655  0D47  3400               	retlw	0
   656  0D48  0AFF               	incf	btemp+1,f
   657  0D49  1903               	btfsc	3,2
   658  0D4A  0AFE               	incf	btemp,f
   659  0D4B  2D3F               	goto	init_ram0
   660                           
   661                           	psect	clrtext
   662  0D28                     clear_ram0:	
   663                           ;	Called with FSR containing the base address, and
   664                           ;	W with the last address+1
   665                           
   666  0D28  0064               	clrwdt	;clear the watchdog before getting into this loop
   667  0D29                     clrloop0:
   668  0D29  0180               	clrf	0	;clear RAM location pointed to by FSR
   669  0D2A  0A84               	incf	4,f	;increment pointer
   670  0D2B  0604               	xorwf	4,w	;XOR with final address
   671  0D2C  1903               	btfsc	3,2	;have we reached the end yet?
   672  0D2D  3400               	retlw	0	;all done for this memory range, return
   673  0D2E  0604               	xorwf	4,w	;XOR again to restore value
   674  0D2F  2D29               	goto	clrloop0	;do the next byte
   675                           
   676                           	psect	cstackCOMMON
   677  0000                     __pcstackCOMMON:
   678  0000                     ??_isdigit:
   679  0000                     ??_iniciar_puertos:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0000                     ??___wmul:	
   683                           ; 1 bytes @ 0x0
   684                           
   685                           
   686                           	psect	cstackBANK0
   687  0020                     __pcstackBANK0:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0020                     ?_isdigit:
   691  0020                     ?_eeprom_write:	
   692                           ; 1 bit 
   693                           
   694  0020                     ?_strcat:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0020                     ?_LCD_Write_Nibble:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0020                     ??_LCD_Write_Nibble:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0020                     ?_LCD_Cmd:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0020                     ?_LCD_PutC:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0020                     ?_LCD_Begin:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0020                     ?_keypad_readkey:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0020                     ??_keypad_readkey:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0020                     ?_keypad_getkey:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0020                     ?_load_values:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0020                     ?_iniciar_puertos:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0020                     ?_key_writing_value:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0020                     ?_selector_type:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0020                     ?_main:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0020                     ?___wmul:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0020                     ?___lwdiv:	
   740                           ; 2 bytes @ 0x0
   741                           
   742  0020                     ?___lwmod:	
   743                           ; 2 bytes @ 0x0
   744                           
   745  0020                     ?___fltol:	
   746                           ; 2 bytes @ 0x0
   747                           
   748  0020                     eeprom_write@value:	
   749                           ; 4 bytes @ 0x0
   750                           
   751  0020                     _isdigit$818:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0020                     ___wmul@multiplier:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0020                     ___lwdiv@divisor:	
   758                           ; 2 bytes @ 0x0
   759                           
   760  0020                     ___lwmod@divisor:	
   761                           ; 2 bytes @ 0x0
   762                           
   763  0020                     strcat@from:	
   764                           ; 2 bytes @ 0x0
   765                           
   766  0020                     ___fltol@f1:	
   767                           ; 2 bytes @ 0x0
   768                           
   769                           
   770                           ; 4 bytes @ 0x0
   771  0020                     	ds	1
   772  0021                     ??_eeprom_write:
   773  0021                     ??_keypad_getkey:	
   774                           ; 1 bytes @ 0x1
   775                           
   776  0021                     isdigit@c:	
   777                           ; 1 bytes @ 0x1
   778                           
   779                           
   780                           ; 1 bytes @ 0x1
   781  0021                     	ds	1
   782  0022                     ??_strcat:
   783  0022                     LCD_Write_Nibble@n:	
   784                           ; 1 bytes @ 0x2
   785                           
   786  0022                     keypad_getkey@key:	
   787                           ; 1 bytes @ 0x2
   788                           
   789  0022                     eeprom_write@addr:	
   790                           ; 1 bytes @ 0x2
   791                           
   792  0022                     ___wmul@multiplicand:	
   793                           ; 1 bytes @ 0x2
   794                           
   795  0022                     ___lwdiv@dividend:	
   796                           ; 2 bytes @ 0x2
   797                           
   798  0022                     ___lwmod@dividend:	
   799                           ; 2 bytes @ 0x2
   800                           
   801                           
   802                           ; 2 bytes @ 0x2
   803  0022                     	ds	1
   804  0023                     ??_LCD_Cmd:
   805  0023                     ??_LCD_PutC:	
   806                           ; 1 bytes @ 0x3
   807                           
   808  0023                     ?_LCD_Print:	
   809                           ; 1 bytes @ 0x3
   810                           
   811  0023                     ??_load_values:	
   812                           ; 1 bytes @ 0x3
   813                           
   814  0023                     strcat@cp:	
   815                           ; 1 bytes @ 0x3
   816                           
   817  0023                     LCD_Print@LCD_Str:	
   818                           ; 1 bytes @ 0x3
   819                           
   820                           
   821                           ; 2 bytes @ 0x3
   822  0023                     	ds	1
   823  0024                     ??___fltol:
   824  0024                     ??___lwdiv:	
   825                           ; 1 bytes @ 0x4
   826                           
   827  0024                     ??___lwmod:	
   828                           ; 1 bytes @ 0x4
   829                           
   830  0024                     LCD_PutC@LCD_Char:	
   831                           ; 1 bytes @ 0x4
   832                           
   833  0024                     strcat@to:	
   834                           ; 1 bytes @ 0x4
   835                           
   836  0024                     ___wmul@product:	
   837                           ; 1 bytes @ 0x4
   838                           
   839                           
   840                           ; 2 bytes @ 0x4
   841  0024                     	ds	1
   842  0025                     ??_LCD_Print:
   843  0025                     LCD_Cmd@Command:	
   844                           ; 1 bytes @ 0x5
   845                           
   846  0025                     ___lwmod@counter:	
   847                           ; 1 bytes @ 0x5
   848                           
   849  0025                     ___lwdiv@quotient:	
   850                           ; 1 bytes @ 0x5
   851                           
   852                           
   853                           ; 2 bytes @ 0x5
   854  0025                     	ds	1
   855  0026                     ?_LCD_Goto:
   856  0026                     ??_LCD_Begin:	
   857                           ; 1 bytes @ 0x6
   858                           
   859  0026                     ?_atoi:	
   860                           ; 1 bytes @ 0x6
   861                           
   862  0026                     LCD_Goto@row:	
   863                           ; 2 bytes @ 0x6
   864                           
   865  0026                     LCD_Print@i:	
   866                           ; 1 bytes @ 0x6
   867                           
   868                           
   869                           ; 1 bytes @ 0x6
   870  0026                     	ds	1
   871  0027                     ??_LCD_Goto:
   872  0027                     ___lwdiv@counter:	
   873                           ; 1 bytes @ 0x7
   874                           
   875                           
   876                           ; 1 bytes @ 0x7
   877  0027                     	ds	1
   878  0028                     ??_atoi:
   879  0028                     ?_utoa:	
   880                           ; 1 bytes @ 0x8
   881                           
   882  0028                     utoa@val:	
   883                           ; 1 bytes @ 0x8
   884                           
   885                           
   886                           ; 2 bytes @ 0x8
   887  0028                     	ds	1
   888  0029                     LCD_Goto@col:
   889  0029                     ___fltol@sign1:	
   890                           ; 1 bytes @ 0x9
   891                           
   892                           
   893                           ; 1 bytes @ 0x9
   894  0029                     	ds	1
   895  002A                     ?_inicio_presentacion:
   896  002A                     ?_conditional_screen:	
   897                           ; 1 bytes @ 0xA
   898                           
   899  002A                     ___fltol@exp1:	
   900                           ; 1 bytes @ 0xA
   901                           
   902  002A                     atoi@sign:	
   903                           ; 1 bytes @ 0xA
   904                           
   905  002A                     inicio_presentacion@length:	
   906                           ; 1 bytes @ 0xA
   907                           
   908  002A                     conditional_screen@x:	
   909                           ; 2 bytes @ 0xA
   910                           
   911  002A                     utoa@base:	
   912                           ; 2 bytes @ 0xA
   913                           
   914                           
   915                           ; 2 bytes @ 0xA
   916  002A                     	ds	1
   917  002B                     atoi@a:
   918                           
   919                           ; 2 bytes @ 0xB
   920  002B                     	ds	1
   921  002C                     ??_utoa:
   922  002C                     ??_conditional_screen:	
   923                           ; 1 bytes @ 0xC
   924                           
   925  002C                     inicio_presentacion@str:	
   926                           ; 1 bytes @ 0xC
   927                           
   928                           
   929                           ; 1 bytes @ 0xC
   930  002C                     	ds	1
   931  002D                     ??_inicio_presentacion:
   932  002D                     atoi@s:	
   933                           ; 1 bytes @ 0xD
   934                           
   935  002D                     utoa@v:	
   936                           ; 1 bytes @ 0xD
   937                           
   938                           
   939                           ; 2 bytes @ 0xD
   940  002D                     	ds	1
   941  002E                     ??_key_writing_value:
   942                           
   943                           ; 1 bytes @ 0xE
   944  002E                     	ds	1
   945  002F                     utoa@c:
   946                           
   947                           ; 1 bytes @ 0xF
   948  002F                     	ds	1
   949  0030                     utoa@buf:
   950  0030                     inicio_presentacion@i:	
   951                           ; 1 bytes @ 0x10
   952                           
   953  0030                     conditional_screen@con:	
   954                           ; 2 bytes @ 0x10
   955                           
   956                           
   957                           ; 10 bytes @ 0x10
   958  0030                     	ds	1
   959  0031                     ?_itoa:
   960  0031                     itoa@val:	
   961                           ; 1 bytes @ 0x11
   962                           
   963                           
   964                           ; 2 bytes @ 0x11
   965  0031                     	ds	2
   966  0033                     itoa@base:
   967                           
   968                           ; 2 bytes @ 0x13
   969  0033                     	ds	2
   970  0035                     ??_itoa:
   971                           
   972                           ; 1 bytes @ 0x15
   973  0035                     	ds	1
   974  0036                     itoa@buf:
   975                           
   976                           ; 1 bytes @ 0x16
   977  0036                     	ds	1
   978  0037                     ?_ventilator_screen:
   979  0037                     ?_screen_selector:	
   980                           ; 1 bytes @ 0x17
   981                           
   982  0037                     screen_selector@k:	
   983                           ; 1 bytes @ 0x17
   984                           
   985  0037                     ventilator_screen@voltaje:	
   986                           ; 1 bytes @ 0x17
   987                           
   988                           
   989                           ; 4 bytes @ 0x17
   990  0037                     	ds	1
   991  0038                     ??_screen_selector:
   992                           
   993                           ; 1 bytes @ 0x18
   994  0038                     	ds	2
   995  003A                     conditional_screen@msj:
   996                           
   997                           ; 14 bytes @ 0x1A
   998  003A                     	ds	1
   999  003B                     ventilator_screen@vrm:
  1000  003B                     screen_selector@v:	
  1001                           ; 2 bytes @ 0x1B
  1002                           
  1003                           
  1004                           ; 4 bytes @ 0x1B
  1005  003B                     	ds	2
  1006  003D                     ventilator_screen@ventilator_number:
  1007                           
  1008                           ; 2 bytes @ 0x1D
  1009  003D                     	ds	2
  1010  003F                     ??_ventilator_screen:
  1011  003F                     screen_selector@c:	
  1012                           ; 1 bytes @ 0x1F
  1013                           
  1014                           
  1015                           ; 1 bytes @ 0x1F
  1016  003F                     	ds	1
  1017  0040                     screen_selector@value:
  1018                           
  1019                           ; 1 bytes @ 0x20
  1020  0040                     	ds	3
  1021  0043                     ventilator_screen@vol:
  1022                           
  1023                           ; 10 bytes @ 0x23
  1024  0043                     	ds	10
  1025  004D                     ventilator_screen@vel:
  1026                           
  1027                           ; 5 bytes @ 0x2D
  1028  004D                     	ds	5
  1029  0052                     ventilator_screen@vol_value:
  1030                           
  1031                           ; 1 bytes @ 0x32
  1032  0052                     	ds	1
  1033  0053                     ventilator_screen@vel_number:
  1034                           
  1035                           ; 1 bytes @ 0x33
  1036  0053                     	ds	1
  1037  0054                     ventilator_screen@vel_value:
  1038                           
  1039                           ; 1 bytes @ 0x34
  1040  0054                     	ds	1
  1041  0055                     ??_selector_type:
  1042                           
  1043                           ; 1 bytes @ 0x35
  1044  0055                     	ds	1
  1045  0056                     selector_type@k:
  1046                           
  1047                           ; 1 bytes @ 0x36
  1048  0056                     	ds	1
  1049  0057                     selector_type@c:
  1050                           
  1051                           ; 1 bytes @ 0x37
  1052  0057                     	ds	1
  1053  0058                     ??_main:
  1054                           
  1055                           ; 1 bytes @ 0x38
  1056  0058                     	ds	3
  1057  005B                     main@c:
  1058                           
  1059                           ; 1 bytes @ 0x3B
  1060  005B                     	ds	1
  1061                           
  1062                           	psect	maintext
  1063  03B2                     __pmaintext:	
  1064 ;;
  1065 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1066 ;;
  1067 ;; *************** function _main *****************
  1068 ;; Defined at:
  1069 ;;		line 245 in file "main.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;		None
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;  c               1   59[BANK0 ] unsigned char 
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  1    wreg      void 
  1076 ;; Registers used:
  1077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1078 ;; Tracked objects:
  1079 ;;		On entry : B00/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMMON   BANK0   BANK1
  1083 ;;      Params:         0       0       0
  1084 ;;      Locals:         0       1       0
  1085 ;;      Temps:          0       3       0
  1086 ;;      Totals:         0       4       0
  1087 ;;Total ram usage:        4 bytes
  1088 ;; Hardware stack levels required when called: 6
  1089 ;; This function calls:
  1090 ;;		_LCD_Begin
  1091 ;;		_LCD_Goto
  1092 ;;		_LCD_PutC
  1093 ;;		_iniciar_puertos
  1094 ;;		_inicio_presentacion
  1095 ;;		_keypad_getkey
  1096 ;;		_load_values
  1097 ;;		_selector_type
  1098 ;; This function is called by:
  1099 ;;		Startup code after reset
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           
  1104                           ;psect for function _main
  1105  03B2                     _main:
  1106  03B2                     l2285:	
  1107                           ;incstack = 0
  1108                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1109                           
  1110                           
  1111                           ;main.c: 247:     i=1;
  1112  03B2  3001               	movlw	1
  1113  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  1114  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  1115  03B5  00F7               	movwf	_i
  1116  03B6  3000               	movlw	0
  1117  03B7  00F8               	movwf	_i+1
  1118  03B8                     l2287:
  1119                           
  1120                           ;main.c: 249:     load_values();
  1121  03B8  158A  26AB  118A   	fcall	_load_values
  1122  03BB                     l2289:
  1123                           
  1124                           ;main.c: 250:     iniciar_puertos();
  1125  03BB  158A  254C  118A   	fcall	_iniciar_puertos
  1126  03BE                     l2291:
  1127                           
  1128                           ;main.c: 252:     LCD_Begin();
  1129  03BE  118A  264A  118A   	fcall	_LCD_Begin
  1130  03C1                     l2293:
  1131                           
  1132                           ;main.c: 253:     inicio_presentacion(length_saludo, saludo);
  1133  03C1  3016               	movlw	22
  1134  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  1135  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  1136  03C4  00AA               	movwf	inicio_presentacion@length
  1137  03C5  3000               	movlw	0
  1138  03C6  00AB               	movwf	inicio_presentacion@length+1
  1139  03C7  30DF               	movlw	(low (_saludo| 0))& (0+255)
  1140  03C8  00D8               	movwf	??_main
  1141  03C9  0858               	movf	??_main,w
  1142  03CA  00AC               	movwf	inicio_presentacion@str
  1143  03CB  118A  2082  118A   	fcall	_inicio_presentacion
  1144  03CE                     l2295:
  1145                           
  1146                           ;main.c: 254:     _delay((unsigned long)((20)*(32000000/4000.0)));
  1147  03CE  30D0               	movlw	208
  1148  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  1149  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  1150  03D1  00D9               	movwf	??_main+1
  1151  03D2  30C9               	movlw	201
  1152  03D3  00D8               	movwf	??_main
  1153  03D4                     u2077:
  1154  03D4  0BD8               	decfsz	??_main,f
  1155  03D5  2BD4               	goto	u2077
  1156  03D6  0BD9               	decfsz	??_main+1,f
  1157  03D7  2BD4               	goto	u2077
  1158  03D8  0000               	nop
  1159  03D9                     l2297:
  1160                           
  1161                           ;main.c: 255:     inicio_presentacion(length_presentacion,presentacion);
  1162  03D9  3026               	movlw	38
  1163  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  1164  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  1165  03DC  00AA               	movwf	inicio_presentacion@length
  1166  03DD  3000               	movlw	0
  1167  03DE  00AB               	movwf	inicio_presentacion@length+1
  1168  03DF  30C2               	movlw	(low (_presentacion| 0))& (0+255)
  1169  03E0  00D8               	movwf	??_main
  1170  03E1  0858               	movf	??_main,w
  1171  03E2  00AC               	movwf	inicio_presentacion@str
  1172  03E3  118A  2082  118A   	fcall	_inicio_presentacion
  1173  03E6                     l2299:
  1174                           
  1175                           ;main.c: 256:     _delay((unsigned long)((20)*(32000000/4000.0)));
  1176  03E6  30D0               	movlw	208
  1177  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  1178  03E8  1303               	bcf	3,6	;RP1=0, select bank0
  1179  03E9  00D9               	movwf	??_main+1
  1180  03EA  30C9               	movlw	201
  1181  03EB  00D8               	movwf	??_main
  1182  03EC                     u2087:
  1183  03EC  0BD8               	decfsz	??_main,f
  1184  03ED  2BEC               	goto	u2087
  1185  03EE  0BD9               	decfsz	??_main+1,f
  1186  03EF  2BEC               	goto	u2087
  1187  03F0  0000               	nop
  1188  03F1                     l2301:
  1189                           
  1190                           ;main.c: 257:     inicio_presentacion(length_grupo,grupo);
  1191  03F1  3005               	movlw	5
  1192  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  1193  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  1194  03F4  00AA               	movwf	inicio_presentacion@length
  1195  03F5  3000               	movlw	0
  1196  03F6  00AB               	movwf	inicio_presentacion@length+1
  1197  03F7  30F6               	movlw	(low (_grupo| 0))& (0+255)
  1198  03F8  00D8               	movwf	??_main
  1199  03F9  0858               	movf	??_main,w
  1200  03FA  00AC               	movwf	inicio_presentacion@str
  1201  03FB  118A  2082  118A   	fcall	_inicio_presentacion
  1202  03FE                     l2303:
  1203                           
  1204                           ;main.c: 258:     _delay((unsigned long)((20)*(32000000/4000.0)));
  1205  03FE  30D0               	movlw	208
  1206  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  1207  0400  1303               	bcf	3,6	;RP1=0, select bank0
  1208  0401  00D9               	movwf	??_main+1
  1209  0402  30C9               	movlw	201
  1210  0403  00D8               	movwf	??_main
  1211  0404                     u2097:
  1212  0404  0BD8               	decfsz	??_main,f
  1213  0405  2C04               	goto	u2097
  1214  0406  0BD9               	decfsz	??_main+1,f
  1215  0407  2C04               	goto	u2097
  1216  0408  0000               	nop
  1217  0409                     l2305:
  1218                           
  1219                           ;main.c: 259:     LCD_Goto(1, 1);
  1220  0409  1283               	bcf	3,5	;RP0=0, select bank0
  1221  040A  1303               	bcf	3,6	;RP1=0, select bank0
  1222  040B  01A6               	clrf	LCD_Goto@row
  1223  040C  0AA6               	incf	LCD_Goto@row,f
  1224  040D  3001               	movlw	1
  1225  040E  158A  2612  118A   	fcall	_LCD_Goto
  1226  0411                     l2307:
  1227                           
  1228                           ;main.c: 260:     _delay((unsigned long)((50)*(32000000/4000.0)));
  1229  0411  3003               	movlw	3
  1230  0412  1283               	bcf	3,5	;RP0=0, select bank0
  1231  0413  1303               	bcf	3,6	;RP1=0, select bank0
  1232  0414  00DA               	movwf	??_main+2
  1233  0415  3008               	movlw	8
  1234  0416  00D9               	movwf	??_main+1
  1235  0417  3076               	movlw	118
  1236  0418  00D8               	movwf	??_main
  1237  0419                     u2107:
  1238  0419  0BD8               	decfsz	??_main,f
  1239  041A  2C19               	goto	u2107
  1240  041B  0BD9               	decfsz	??_main+1,f
  1241  041C  2C19               	goto	u2107
  1242  041D  0BDA               	decfsz	??_main+2,f
  1243  041E  2C19               	goto	u2107
  1244  041F  2C20               	nop2
  1245  0420                     l2309:
  1246                           
  1247                           ;main.c: 263:     char c = keypad_getkey();
  1248  0420  158A  2578  118A   	fcall	_keypad_getkey
  1249  0423  1283               	bcf	3,5	;RP0=0, select bank0
  1250  0424  1303               	bcf	3,6	;RP1=0, select bank0
  1251  0425  00D8               	movwf	??_main
  1252  0426  0858               	movf	??_main,w
  1253  0427  00DB               	movwf	main@c
  1254  0428                     l2311:
  1255                           
  1256                           ;main.c: 264:         LCD_PutC(c);
  1257  0428  085B               	movf	main@c,w
  1258  0429  158A  2561  118A   	fcall	_LCD_PutC
  1259  042C                     l2313:
  1260                           
  1261                           ;main.c: 265:         selector_type(c);
  1262  042C  1283               	bcf	3,5	;RP0=0, select bank0
  1263  042D  1303               	bcf	3,6	;RP1=0, select bank0
  1264  042E  085B               	movf	main@c,w
  1265  042F  118A  24E4  118A   	fcall	_selector_type
  1266  0432                     l2315:
  1267                           
  1268                           ;main.c: 266:     _delay((unsigned long)((60)*(32000000/4000.0)));
  1269  0432  3003               	movlw	3
  1270  0433  1283               	bcf	3,5	;RP0=0, select bank0
  1271  0434  1303               	bcf	3,6	;RP1=0, select bank0
  1272  0435  00DA               	movwf	??_main+2
  1273  0436  3070               	movlw	112
  1274  0437  00D9               	movwf	??_main+1
  1275  0438  305C               	movlw	92
  1276  0439  00D8               	movwf	??_main
  1277  043A                     u2117:
  1278  043A  0BD8               	decfsz	??_main,f
  1279  043B  2C3A               	goto	u2117
  1280  043C  0BD9               	decfsz	??_main+1,f
  1281  043D  2C3A               	goto	u2117
  1282  043E  0BDA               	decfsz	??_main+2,f
  1283  043F  2C3A               	goto	u2117
  1284  0440  2C20               	goto	l2309
  1285  0441  118A  2800         	ljmp	start
  1286  0443                     __end_of_main:
  1287                           
  1288                           	psect	text1
  1289  04E4                     __ptext1:	
  1290 ;; *************** function _selector_type *****************
  1291 ;; Defined at:
  1292 ;;		line 210 in file "main.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;  c               1    wreg     unsigned char 
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;  c               1   55[BANK0 ] unsigned char 
  1297 ;;  k               1   54[BANK0 ] unsigned char 
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  1    wreg      void 
  1300 ;; Registers used:
  1301 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMMON   BANK0   BANK1
  1307 ;;      Params:         0       0       0
  1308 ;;      Locals:         0       2       0
  1309 ;;      Temps:          0       1       0
  1310 ;;      Totals:         0       3       0
  1311 ;;Total ram usage:        3 bytes
  1312 ;; Hardware stack levels used: 1
  1313 ;; Hardware stack levels required when called: 5
  1314 ;; This function calls:
  1315 ;;		_conditional_screen
  1316 ;;		_keypad_getkey
  1317 ;;		_screen_selector
  1318 ;;		_ventilator_screen
  1319 ;; This function is called by:
  1320 ;;		_main
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           
  1325                           ;psect for function _selector_type
  1326  04E4                     _selector_type:
  1327                           
  1328                           ;incstack = 0
  1329                           ; Regs used in _selector_type: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1330                           ;selector_type@c stored from wreg
  1331  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  1332  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  1333  04E6  00D7               	movwf	selector_type@c
  1334  04E7                     l2243:
  1335                           
  1336                           ;main.c: 210: void selector_type(char c);main.c: 211: {;main.c: 212:     char k=c;
  1337  04E7  0857               	movf	selector_type@c,w
  1338  04E8  00D5               	movwf	??_selector_type
  1339  04E9  0855               	movf	??_selector_type,w
  1340  04EA  00D6               	movwf	selector_type@k
  1341  04EB                     l2245:
  1342                           
  1343                           ;main.c: 213:     if(c=='A')
  1344  04EB  3041               	movlw	65
  1345  04EC  0657               	xorwf	selector_type@c,w
  1346  04ED  1D03               	btfss	3,2
  1347  04EE  2CF0               	goto	u2011
  1348  04EF  2CF1               	goto	u2010
  1349  04F0                     u2011:
  1350  04F0  2D36               	goto	l2259
  1351  04F1                     u2010:
  1352  04F1                     l2247:
  1353                           
  1354                           ;main.c: 214:         {;main.c: 215:             if(i==1){
  1355  04F1  0377               	decf	_i,w
  1356  04F2  0478               	iorwf	_i+1,w
  1357  04F3  1D03               	btfss	3,2
  1358  04F4  2CF6               	goto	u2021
  1359  04F5  2CF7               	goto	u2020
  1360  04F6                     u2021:
  1361  04F6  2D13               	goto	l2253
  1362  04F7                     u2020:
  1363  04F7                     l2249:
  1364                           
  1365                           ;main.c: 216:                 ventilator_screen(1.1,1000,1);
  1366  04F7  303F               	movlw	63
  1367  04F8  00BA               	movwf	ventilator_screen@voltaje+3
  1368  04F9  308C               	movlw	140
  1369  04FA  00B9               	movwf	ventilator_screen@voltaje+2
  1370  04FB  30CC               	movlw	204
  1371  04FC  00B8               	movwf	ventilator_screen@voltaje+1
  1372  04FD  30CD               	movlw	205
  1373  04FE  00B7               	movwf	ventilator_screen@voltaje
  1374  04FF  30E8               	movlw	232
  1375  0500  00BB               	movwf	ventilator_screen@vrm
  1376  0501  3003               	movlw	3
  1377  0502  00BC               	movwf	ventilator_screen@vrm+1
  1378  0503  3001               	movlw	1
  1379  0504  00BD               	movwf	ventilator_screen@ventilator_number
  1380  0505  3000               	movlw	0
  1381  0506  00BE               	movwf	ventilator_screen@ventilator_number+1
  1382  0507  118A  2590  118A   	fcall	_ventilator_screen
  1383  050A                     l2251:
  1384                           
  1385                           ;main.c: 217:             ++i;
  1386  050A  3001               	movlw	1
  1387  050B  1283               	bcf	3,5	;RP0=0, select bank0
  1388  050C  1303               	bcf	3,6	;RP1=0, select bank0
  1389  050D  07F7               	addwf	_i,f
  1390  050E  1803               	skipnc
  1391  050F  0AF8               	incf	_i+1,f
  1392  0510  3000               	movlw	0
  1393  0511  07F8               	addwf	_i+1,f
  1394                           
  1395                           ;main.c: 218:             }
  1396  0512  2D8F               	goto	l212
  1397  0513                     l2253:
  1398  0513  3002               	movlw	2
  1399  0514  0677               	xorwf	_i,w
  1400  0515  0478               	iorwf	_i+1,w
  1401  0516  1D03               	btfss	3,2
  1402  0517  2D19               	goto	u2031
  1403  0518  2D1A               	goto	u2030
  1404  0519                     u2031:
  1405  0519  2D8F               	goto	l212
  1406  051A                     u2030:
  1407  051A                     l2255:
  1408                           
  1409                           ;main.c: 220:                 ventilator_screen(2.2,1000,2);
  1410  051A  3040               	movlw	64
  1411  051B  00BA               	movwf	ventilator_screen@voltaje+3
  1412  051C  300C               	movlw	12
  1413  051D  00B9               	movwf	ventilator_screen@voltaje+2
  1414  051E  30CC               	movlw	204
  1415  051F  00B8               	movwf	ventilator_screen@voltaje+1
  1416  0520  30CD               	movlw	205
  1417  0521  00B7               	movwf	ventilator_screen@voltaje
  1418  0522  30E8               	movlw	232
  1419  0523  00BB               	movwf	ventilator_screen@vrm
  1420  0524  3003               	movlw	3
  1421  0525  00BC               	movwf	ventilator_screen@vrm+1
  1422  0526  3002               	movlw	2
  1423  0527  00BD               	movwf	ventilator_screen@ventilator_number
  1424  0528  3000               	movlw	0
  1425  0529  00BE               	movwf	ventilator_screen@ventilator_number+1
  1426  052A  118A  2590  118A   	fcall	_ventilator_screen
  1427  052D                     l2257:
  1428                           
  1429                           ;main.c: 221:                 --i;
  1430  052D  30FF               	movlw	255
  1431  052E  1283               	bcf	3,5	;RP0=0, select bank0
  1432  052F  1303               	bcf	3,6	;RP1=0, select bank0
  1433  0530  07F7               	addwf	_i,f
  1434  0531  1803               	skipnc
  1435  0532  0AF8               	incf	_i+1,f
  1436  0533  30FF               	movlw	255
  1437  0534  07F8               	addwf	_i+1,f
  1438  0535  2D8F               	goto	l212
  1439  0536                     l2259:
  1440  0536  3042               	movlw	66
  1441  0537  0657               	xorwf	selector_type@c,w
  1442  0538  1D03               	btfss	3,2
  1443  0539  2D3B               	goto	u2041
  1444  053A  2D3C               	goto	u2040
  1445  053B                     u2041:
  1446  053B  2D54               	goto	l2267
  1447  053C                     u2040:
  1448  053C                     l2261:
  1449                           
  1450                           ;main.c: 226:     {;main.c: 227:         conditional_screen(1);
  1451  053C  3001               	movlw	1
  1452  053D  00AA               	movwf	conditional_screen@x
  1453  053E  3000               	movlw	0
  1454  053F  00AB               	movwf	conditional_screen@x+1
  1455  0540  118A  22A4  118A   	fcall	_conditional_screen
  1456  0543                     l2263:
  1457                           
  1458                           ;main.c: 228:         c = keypad_getkey();
  1459  0543  158A  2578  118A   	fcall	_keypad_getkey
  1460  0546  1283               	bcf	3,5	;RP0=0, select bank0
  1461  0547  1303               	bcf	3,6	;RP1=0, select bank0
  1462  0548  00D5               	movwf	??_selector_type
  1463  0549  0855               	movf	??_selector_type,w
  1464  054A  00D7               	movwf	selector_type@c
  1465  054B                     l2265:
  1466                           
  1467                           ;main.c: 229:         screen_selector(c,k);
  1468  054B  0856               	movf	selector_type@k,w
  1469  054C  00D5               	movwf	??_selector_type
  1470  054D  0855               	movf	??_selector_type,w
  1471  054E  00B7               	movwf	screen_selector@k
  1472  054F  0857               	movf	selector_type@c,w
  1473  0550  118A  2443  118A   	fcall	_screen_selector
  1474                           
  1475                           ;main.c: 230:     }
  1476  0553  2D8F               	goto	l212
  1477  0554                     l2267:
  1478  0554  3043               	movlw	67
  1479  0555  0657               	xorwf	selector_type@c,w
  1480  0556  1D03               	btfss	3,2
  1481  0557  2D59               	goto	u2051
  1482  0558  2D5A               	goto	u2050
  1483  0559                     u2051:
  1484  0559  2D72               	goto	l2275
  1485  055A                     u2050:
  1486  055A                     l2269:
  1487                           
  1488                           ;main.c: 232:     {;main.c: 233:         conditional_screen(2);
  1489  055A  3002               	movlw	2
  1490  055B  00AA               	movwf	conditional_screen@x
  1491  055C  3000               	movlw	0
  1492  055D  00AB               	movwf	conditional_screen@x+1
  1493  055E  118A  22A4  118A   	fcall	_conditional_screen
  1494  0561                     l2271:
  1495                           
  1496                           ;main.c: 234:         c = keypad_getkey();
  1497  0561  158A  2578  118A   	fcall	_keypad_getkey
  1498  0564  1283               	bcf	3,5	;RP0=0, select bank0
  1499  0565  1303               	bcf	3,6	;RP1=0, select bank0
  1500  0566  00D5               	movwf	??_selector_type
  1501  0567  0855               	movf	??_selector_type,w
  1502  0568  00D7               	movwf	selector_type@c
  1503  0569                     l2273:
  1504                           
  1505                           ;main.c: 235:         screen_selector(c,k);
  1506  0569  0856               	movf	selector_type@k,w
  1507  056A  00D5               	movwf	??_selector_type
  1508  056B  0855               	movf	??_selector_type,w
  1509  056C  00B7               	movwf	screen_selector@k
  1510  056D  0857               	movf	selector_type@c,w
  1511  056E  118A  2443  118A   	fcall	_screen_selector
  1512                           
  1513                           ;main.c: 236:     }
  1514  0571  2D8F               	goto	l212
  1515  0572                     l2275:
  1516  0572  3044               	movlw	68
  1517  0573  0657               	xorwf	selector_type@c,w
  1518  0574  1D03               	btfss	3,2
  1519  0575  2D77               	goto	u2061
  1520  0576  2D78               	goto	u2060
  1521  0577                     u2061:
  1522  0577  2D8F               	goto	l212
  1523  0578                     u2060:
  1524  0578                     l2277:
  1525                           
  1526                           ;main.c: 238:     {;main.c: 239:         conditional_screen(3);
  1527  0578  3003               	movlw	3
  1528  0579  00AA               	movwf	conditional_screen@x
  1529  057A  3000               	movlw	0
  1530  057B  00AB               	movwf	conditional_screen@x+1
  1531  057C  118A  22A4  118A   	fcall	_conditional_screen
  1532  057F                     l2279:
  1533                           
  1534                           ;main.c: 240:         c = keypad_getkey();
  1535  057F  158A  2578  118A   	fcall	_keypad_getkey
  1536  0582  1283               	bcf	3,5	;RP0=0, select bank0
  1537  0583  1303               	bcf	3,6	;RP1=0, select bank0
  1538  0584  00D5               	movwf	??_selector_type
  1539  0585  0855               	movf	??_selector_type,w
  1540  0586  00D7               	movwf	selector_type@c
  1541  0587                     l2281:
  1542                           
  1543                           ;main.c: 241:         screen_selector(c,k);
  1544  0587  0856               	movf	selector_type@k,w
  1545  0588  00D5               	movwf	??_selector_type
  1546  0589  0855               	movf	??_selector_type,w
  1547  058A  00B7               	movwf	screen_selector@k
  1548  058B  0857               	movf	selector_type@c,w
  1549  058C  118A  2443  118A   	fcall	_screen_selector
  1550  058F                     l212:
  1551  058F  0008               	return
  1552  0590                     __end_of_selector_type:
  1553                           
  1554                           	psect	text2
  1555  0590                     __ptext2:	
  1556 ;; *************** function _ventilator_screen *****************
  1557 ;; Defined at:
  1558 ;;		line 120 in file "main.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;  voltaje         4   23[BANK0 ] float 
  1561 ;;  vrm             2   27[BANK0 ] int 
  1562 ;;  ventilator_n    2   29[BANK0 ] int 
  1563 ;; Auto vars:     Size  Location     Type
  1564 ;;  vol            10   35[BANK0 ] unsigned char [10]
  1565 ;;  vel             5   45[BANK0 ] unsigned char [5]
  1566 ;;  vel_value       1   52[BANK0 ] unsigned char [1]
  1567 ;;  vel_number      1   51[BANK0 ] unsigned char [1]
  1568 ;;  vol_value       1   50[BANK0 ] unsigned char [1]
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  1    wreg      void 
  1571 ;; Registers used:
  1572 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMMON   BANK0   BANK1
  1578 ;;      Params:         0       8       0
  1579 ;;      Locals:         0      18       0
  1580 ;;      Temps:          0       4       0
  1581 ;;      Totals:         0      30       0
  1582 ;;Total ram usage:       30 bytes
  1583 ;; Hardware stack levels used: 1
  1584 ;; Hardware stack levels required when called: 3
  1585 ;; This function calls:
  1586 ;;		_LCD_Cmd
  1587 ;;		_LCD_Goto
  1588 ;;		_LCD_Print
  1589 ;;		___fltol
  1590 ;;		_itoa
  1591 ;;		_strcat
  1592 ;; This function is called by:
  1593 ;;		_selector_type
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           
  1598                           ;psect for function _ventilator_screen
  1599  0590                     _ventilator_screen:
  1600  0590                     l2089:	
  1601                           ;incstack = 0
  1602                           ; Regs used in _ventilator_screen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1603                           
  1604                           
  1605                           ;main.c: 120: void ventilator_screen(float voltaje, int vrm, int ventilator_number);main
      +                          .c: 121: {;main.c: 122:     LCD_Cmd(0x01);
  1606  0590  3001               	movlw	1
  1607  0591  158A  25E4  118A   	fcall	_LCD_Cmd
  1608  0594                     l2091:
  1609                           
  1610                           ;main.c: 123:     unsigned char vol[]="Voltaje: ";
  1611  0594  3043               	movlw	ventilator_screen@vol& (0+255)
  1612  0595  0084               	movwf	4
  1613  0596  30AE               	movlw	low ventilator_screen@F1126
  1614  0597  1283               	bcf	3,5	;RP0=0, select bank0
  1615  0598  1303               	bcf	3,6	;RP1=0, select bank0
  1616  0599  00BF               	movwf	??_ventilator_screen
  1617  059A  0804               	movf	4,w
  1618  059B  00C0               	movwf	??_ventilator_screen+1
  1619  059C  300A               	movlw	10
  1620  059D  00C1               	movwf	??_ventilator_screen+2
  1621  059E                     u1970:
  1622  059E  083F               	movf	??_ventilator_screen,w
  1623  059F  0084               	movwf	4
  1624  05A0  1383               	bcf	3,7	;select IRP bank1
  1625  05A1  0800               	movf	0,w
  1626  05A2  00C2               	movwf	??_ventilator_screen+3
  1627  05A3  0ABF               	incf	??_ventilator_screen,f
  1628  05A4  0840               	movf	??_ventilator_screen+1,w
  1629  05A5  0084               	movwf	4
  1630  05A6  0842               	movf	??_ventilator_screen+3,w
  1631  05A7  0080               	movwf	0
  1632  05A8  0AC0               	incf	??_ventilator_screen+1,f
  1633  05A9  0BC1               	decfsz	??_ventilator_screen+2,f
  1634  05AA  2D9E               	goto	u1970
  1635  05AB                     l2093:
  1636                           
  1637                           ;main.c: 124:     unsigned char vel[]="Vel ";
  1638  05AB  304D               	movlw	ventilator_screen@vel& (0+255)
  1639  05AC  0084               	movwf	4
  1640  05AD  086C               	movf	ventilator_screen@F1128,w
  1641  05AE  0080               	movwf	0
  1642  05AF  0A84               	incf	4,f
  1643  05B0  086D               	movf	ventilator_screen@F1128+1,w
  1644  05B1  0080               	movwf	0
  1645  05B2  0A84               	incf	4,f
  1646  05B3  086E               	movf	ventilator_screen@F1128+2,w
  1647  05B4  0080               	movwf	0
  1648  05B5  0A84               	incf	4,f
  1649  05B6  086F               	movf	ventilator_screen@F1128+3,w
  1650  05B7  0080               	movwf	0
  1651  05B8  0A84               	incf	4,f
  1652  05B9  0870               	movf	ventilator_screen@F1128+4,w
  1653  05BA  0080               	movwf	0
  1654  05BB                     l2095:
  1655                           
  1656                           ;main.c: 125:     char vol_value[]="";
  1657  05BB  01D2               	clrf	ventilator_screen@vol_value
  1658  05BC                     l2097:
  1659                           
  1660                           ;main.c: 126:     char vel_number[]="";
  1661  05BC  01D3               	clrf	ventilator_screen@vel_number
  1662  05BD                     l2099:
  1663                           
  1664                           ;main.c: 127:     char vel_value[]="";
  1665  05BD  01D4               	clrf	ventilator_screen@vel_value
  1666  05BE                     l2101:
  1667                           
  1668                           ;main.c: 128:     LCD_Goto(1,1);
  1669  05BE  01A6               	clrf	LCD_Goto@row
  1670  05BF  0AA6               	incf	LCD_Goto@row,f
  1671  05C0  3001               	movlw	1
  1672  05C1  158A  2612  118A   	fcall	_LCD_Goto
  1673  05C4                     l2103:
  1674                           
  1675                           ;main.c: 131:     itoa(vol_value,voltaje,10);
  1676  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  1677  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  1678  05C6  083A               	movf	ventilator_screen@voltaje+3,w
  1679  05C7  00A3               	movwf	___fltol@f1+3
  1680  05C8  0839               	movf	ventilator_screen@voltaje+2,w
  1681  05C9  00A2               	movwf	___fltol@f1+2
  1682  05CA  0838               	movf	ventilator_screen@voltaje+1,w
  1683  05CB  00A1               	movwf	___fltol@f1+1
  1684  05CC  0837               	movf	ventilator_screen@voltaje,w
  1685  05CD  00A0               	movwf	___fltol@f1
  1686  05CE  118A  2228  118A   	fcall	___fltol
  1687  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  1688  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  1689  05D3  0821               	movf	?___fltol+1,w
  1690  05D4  00B2               	movwf	itoa@val+1
  1691  05D5  0820               	movf	?___fltol,w
  1692  05D6  00B1               	movwf	itoa@val
  1693  05D7  300A               	movlw	10
  1694  05D8  00B3               	movwf	itoa@base
  1695  05D9  3000               	movlw	0
  1696  05DA  00B4               	movwf	itoa@base+1
  1697  05DB  3052               	movlw	(low (ventilator_screen@vol_value| 0))& (0+255)
  1698  05DC  158A  2599  118A   	fcall	_itoa
  1699  05DF                     l2105:
  1700                           
  1701                           ;main.c: 132:     strcat(vol,vol_value);
  1702  05DF  3052               	movlw	(low (ventilator_screen@vol_value| 0))& (0+255)
  1703  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  1704  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  1705  05E2  00A0               	movwf	strcat@from
  1706  05E3  3000               	movlw	0
  1707  05E4  00A1               	movwf	strcat@from+1
  1708  05E5  3043               	movlw	(low (ventilator_screen@vol| 0))& (0+255)
  1709  05E6  158A  2642  118A   	fcall	_strcat
  1710  05E9                     l2107:
  1711                           
  1712                           ;main.c: 134:     LCD_Print(vol);
  1713  05E9  3043               	movlw	(low (ventilator_screen@vol| 0))& (0+255)
  1714  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  1715  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  1716  05EC  00A3               	movwf	LCD_Print@LCD_Str
  1717  05ED  3000               	movlw	0
  1718  05EE  00A4               	movwf	LCD_Print@LCD_Str+1
  1719  05EF  158A  271F  118A   	fcall	_LCD_Print
  1720  05F2                     l2109:
  1721                           
  1722                           ;main.c: 135:     LCD_Goto(1,2);
  1723  05F2  3002               	movlw	2
  1724  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  1725  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  1726  05F5  00BF               	movwf	??_ventilator_screen
  1727  05F6  083F               	movf	??_ventilator_screen,w
  1728  05F7  00A6               	movwf	LCD_Goto@row
  1729  05F8  3001               	movlw	1
  1730  05F9  158A  2612  118A   	fcall	_LCD_Goto
  1731  05FC                     l2111:
  1732                           
  1733                           ;main.c: 136:     itoa(vel_number,ventilator_number,10);
  1734  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  1735  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  1736  05FE  083E               	movf	ventilator_screen@ventilator_number+1,w
  1737  05FF  00B2               	movwf	itoa@val+1
  1738  0600  083D               	movf	ventilator_screen@ventilator_number,w
  1739  0601  00B1               	movwf	itoa@val
  1740  0602  300A               	movlw	10
  1741  0603  00B3               	movwf	itoa@base
  1742  0604  3000               	movlw	0
  1743  0605  00B4               	movwf	itoa@base+1
  1744  0606  3053               	movlw	(low (ventilator_screen@vel_number| 0))& (0+255)
  1745  0607  158A  2599  118A   	fcall	_itoa
  1746  060A                     l2113:
  1747                           
  1748                           ;main.c: 137:     strcat(vel,vel_number);
  1749  060A  3053               	movlw	(low (ventilator_screen@vel_number| 0))& (0+255)
  1750  060B  1283               	bcf	3,5	;RP0=0, select bank0
  1751  060C  1303               	bcf	3,6	;RP1=0, select bank0
  1752  060D  00A0               	movwf	strcat@from
  1753  060E  3000               	movlw	0
  1754  060F  00A1               	movwf	strcat@from+1
  1755  0610  304D               	movlw	(low (ventilator_screen@vel| 0))& (0+255)
  1756  0611  158A  2642  118A   	fcall	_strcat
  1757  0614                     l2115:
  1758                           
  1759                           ;main.c: 138:     strcat(vel,": ");
  1760  0614  3057               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1761  0615  1283               	bcf	3,5	;RP0=0, select bank0
  1762  0616  1303               	bcf	3,6	;RP1=0, select bank0
  1763  0617  00A0               	movwf	strcat@from
  1764  0618  3080               	movlw	128
  1765  0619  00A1               	movwf	strcat@from+1
  1766  061A  304D               	movlw	(low (ventilator_screen@vel| 0))& (0+255)
  1767  061B  158A  2642  118A   	fcall	_strcat
  1768  061E                     l2117:
  1769                           
  1770                           ;main.c: 139:     itoa(vel_value,vrm,10);
  1771  061E  1283               	bcf	3,5	;RP0=0, select bank0
  1772  061F  1303               	bcf	3,6	;RP1=0, select bank0
  1773  0620  083C               	movf	ventilator_screen@vrm+1,w
  1774  0621  00B2               	movwf	itoa@val+1
  1775  0622  083B               	movf	ventilator_screen@vrm,w
  1776  0623  00B1               	movwf	itoa@val
  1777  0624  300A               	movlw	10
  1778  0625  00B3               	movwf	itoa@base
  1779  0626  3000               	movlw	0
  1780  0627  00B4               	movwf	itoa@base+1
  1781  0628  3054               	movlw	(low (ventilator_screen@vel_value| 0))& (0+255)
  1782  0629  158A  2599  118A   	fcall	_itoa
  1783  062C                     l2119:
  1784                           
  1785                           ;main.c: 140:     strcat(vel,vel_value);
  1786  062C  3054               	movlw	(low (ventilator_screen@vel_value| 0))& (0+255)
  1787  062D  1283               	bcf	3,5	;RP0=0, select bank0
  1788  062E  1303               	bcf	3,6	;RP1=0, select bank0
  1789  062F  00A0               	movwf	strcat@from
  1790  0630  3000               	movlw	0
  1791  0631  00A1               	movwf	strcat@from+1
  1792  0632  304D               	movlw	(low (ventilator_screen@vel| 0))& (0+255)
  1793  0633  158A  2642  118A   	fcall	_strcat
  1794  0636                     l2121:
  1795                           
  1796                           ;main.c: 141:     strcat(vel," RPM");
  1797  0636  3046               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1798  0637  1283               	bcf	3,5	;RP0=0, select bank0
  1799  0638  1303               	bcf	3,6	;RP1=0, select bank0
  1800  0639  00A0               	movwf	strcat@from
  1801  063A  3080               	movlw	128
  1802  063B  00A1               	movwf	strcat@from+1
  1803  063C  304D               	movlw	(low (ventilator_screen@vel| 0))& (0+255)
  1804  063D  158A  2642  118A   	fcall	_strcat
  1805  0640                     l2123:
  1806                           
  1807                           ;main.c: 143:     LCD_Print(vel);
  1808  0640  304D               	movlw	(low (ventilator_screen@vel| 0))& (0+255)
  1809  0641  1283               	bcf	3,5	;RP0=0, select bank0
  1810  0642  1303               	bcf	3,6	;RP1=0, select bank0
  1811  0643  00A3               	movwf	LCD_Print@LCD_Str
  1812  0644  3000               	movlw	0
  1813  0645  00A4               	movwf	LCD_Print@LCD_Str+1
  1814  0646  158A  271F  118A   	fcall	_LCD_Print
  1815  0649                     l184:
  1816  0649  0008               	return
  1817  064A                     __end_of_ventilator_screen:
  1818                           
  1819                           	psect	text3
  1820  0443                     __ptext3:	
  1821 ;; *************** function _screen_selector *****************
  1822 ;; Defined at:
  1823 ;;		line 173 in file "main.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;  c               1    wreg     unsigned char 
  1826 ;;  k               1   23[BANK0 ] unsigned char 
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;  c               1   31[BANK0 ] unsigned char 
  1829 ;;  v               4   27[BANK0 ] float 
  1830 ;;  val             2    0        int 
  1831 ;;  dir             2    0        int 
  1832 ;;  value           1   32[BANK0 ] unsigned char [1]
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  1    wreg      void 
  1835 ;; Registers used:
  1836 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMMON   BANK0   BANK1
  1842 ;;      Params:         0       1       0
  1843 ;;      Locals:         0       6       0
  1844 ;;      Temps:          0       3       0
  1845 ;;      Totals:         0      10       0
  1846 ;;Total ram usage:       10 bytes
  1847 ;; Hardware stack levels used: 1
  1848 ;; Hardware stack levels required when called: 4
  1849 ;; This function calls:
  1850 ;;		_LCD_Cmd
  1851 ;;		_LCD_Goto
  1852 ;;		_LCD_Print
  1853 ;;		___fltol
  1854 ;;		_itoa
  1855 ;;		_key_writing_value
  1856 ;;		_strcat
  1857 ;; This function is called by:
  1858 ;;		_selector_type
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           
  1863                           ;psect for function _screen_selector
  1864  0443                     _screen_selector:
  1865                           
  1866                           ;incstack = 0
  1867                           ; Regs used in _screen_selector: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1868                           ;screen_selector@c stored from wreg
  1869  0443  1283               	bcf	3,5	;RP0=0, select bank0
  1870  0444  1303               	bcf	3,6	;RP1=0, select bank0
  1871  0445  00BF               	movwf	screen_selector@c
  1872  0446                     l2125:
  1873                           
  1874                           ;main.c: 173: void screen_selector(char c, char k);main.c: 174: {;main.c: 176:     LCD_C
      +                          md(0x01);
  1875  0446  3001               	movlw	1
  1876  0447  158A  25E4  118A   	fcall	_LCD_Cmd
  1877  044A                     l2127:
  1878                           
  1879                           ;main.c: 177:     LCD_Goto(1,1);
  1880  044A  1283               	bcf	3,5	;RP0=0, select bank0
  1881  044B  1303               	bcf	3,6	;RP1=0, select bank0
  1882  044C  01A6               	clrf	LCD_Goto@row
  1883  044D  0AA6               	incf	LCD_Goto@row,f
  1884  044E  3001               	movlw	1
  1885  044F  158A  2612  118A   	fcall	_LCD_Goto
  1886  0452                     l2129:
  1887                           
  1888                           ;main.c: 178:     if(c=='1')
  1889  0452  3031               	movlw	49
  1890  0453  1283               	bcf	3,5	;RP0=0, select bank0
  1891  0454  1303               	bcf	3,6	;RP1=0, select bank0
  1892  0455  063F               	xorwf	screen_selector@c,w
  1893  0456  1D03               	btfss	3,2
  1894  0457  2C59               	goto	u1981
  1895  0458  2C5A               	goto	u1980
  1896  0459                     u1981:
  1897  0459  2CA8               	goto	l2151
  1898  045A                     u1980:
  1899  045A                     l2131:
  1900                           
  1901                           ;main.c: 179:     {;main.c: 180:         LCD_Print("Nuevo Valor");
  1902  045A  3031               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1903  045B  00A3               	movwf	LCD_Print@LCD_Str
  1904  045C  3080               	movlw	128
  1905  045D  00A4               	movwf	LCD_Print@LCD_Str+1
  1906  045E  158A  271F  118A   	fcall	_LCD_Print
  1907  0461                     l2133:
  1908                           
  1909                           ;main.c: 181:         LCD_Goto(1,2);
  1910  0461  3002               	movlw	2
  1911  0462  1283               	bcf	3,5	;RP0=0, select bank0
  1912  0463  1303               	bcf	3,6	;RP1=0, select bank0
  1913  0464  00B8               	movwf	??_screen_selector
  1914  0465  0838               	movf	??_screen_selector,w
  1915  0466  00A6               	movwf	LCD_Goto@row
  1916  0467  3001               	movlw	1
  1917  0468  158A  2612  118A   	fcall	_LCD_Goto
  1918  046B                     l2135:
  1919                           
  1920                           ;main.c: 182:         float v=5.12;
  1921  046B  3040               	movlw	64
  1922  046C  1283               	bcf	3,5	;RP0=0, select bank0
  1923  046D  1303               	bcf	3,6	;RP1=0, select bank0
  1924  046E  00BE               	movwf	screen_selector@v+3
  1925  046F  30A3               	movlw	163
  1926  0470  00BD               	movwf	screen_selector@v+2
  1927  0471  30D7               	movlw	215
  1928  0472  00BC               	movwf	screen_selector@v+1
  1929  0473  300A               	movlw	10
  1930  0474  00BB               	movwf	screen_selector@v
  1931  0475                     l2137:
  1932                           
  1933                           ;main.c: 183:         char value[]="";
  1934  0475  01C0               	clrf	screen_selector@value
  1935  0476                     l2139:
  1936  0476                     l2141:
  1937  0476                     l2143:
  1938                           
  1939                           ;main.c: 187:         key_writing_value();
  1940  0476  118A  21AF  118A   	fcall	_key_writing_value
  1941  0479                     l2145:
  1942                           
  1943                           ;main.c: 191:         itoa(value,v,10);
  1944  0479  1283               	bcf	3,5	;RP0=0, select bank0
  1945  047A  1303               	bcf	3,6	;RP1=0, select bank0
  1946  047B  083E               	movf	screen_selector@v+3,w
  1947  047C  00A3               	movwf	___fltol@f1+3
  1948  047D  083D               	movf	screen_selector@v+2,w
  1949  047E  00A2               	movwf	___fltol@f1+2
  1950  047F  083C               	movf	screen_selector@v+1,w
  1951  0480  00A1               	movwf	___fltol@f1+1
  1952  0481  083B               	movf	screen_selector@v,w
  1953  0482  00A0               	movwf	___fltol@f1
  1954  0483  118A  2228  118A   	fcall	___fltol
  1955  0486  1283               	bcf	3,5	;RP0=0, select bank0
  1956  0487  1303               	bcf	3,6	;RP1=0, select bank0
  1957  0488  0821               	movf	?___fltol+1,w
  1958  0489  00B2               	movwf	itoa@val+1
  1959  048A  0820               	movf	?___fltol,w
  1960  048B  00B1               	movwf	itoa@val
  1961  048C  300A               	movlw	10
  1962  048D  00B3               	movwf	itoa@base
  1963  048E  3000               	movlw	0
  1964  048F  00B4               	movwf	itoa@base+1
  1965  0490  3040               	movlw	(low (screen_selector@value| 0))& (0+255)
  1966  0491  158A  2599  118A   	fcall	_itoa
  1967  0494                     l2147:
  1968                           
  1969                           ;main.c: 192:         strcat(value," mv");
  1970  0494  3053               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1971  0495  1283               	bcf	3,5	;RP0=0, select bank0
  1972  0496  1303               	bcf	3,6	;RP1=0, select bank0
  1973  0497  00A0               	movwf	strcat@from
  1974  0498  3080               	movlw	128
  1975  0499  00A1               	movwf	strcat@from+1
  1976  049A  3040               	movlw	(low (screen_selector@value| 0))& (0+255)
  1977  049B  158A  2642  118A   	fcall	_strcat
  1978  049E                     l2149:
  1979                           
  1980                           ;main.c: 193:         LCD_Print(value);
  1981  049E  3040               	movlw	(low (screen_selector@value| 0))& (0+255)
  1982  049F  1283               	bcf	3,5	;RP0=0, select bank0
  1983  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  1984  04A1  00A3               	movwf	LCD_Print@LCD_Str
  1985  04A2  3000               	movlw	0
  1986  04A3  00A4               	movwf	LCD_Print@LCD_Str+1
  1987  04A4  158A  271F  118A   	fcall	_LCD_Print
  1988                           
  1989                           ;main.c: 194:     }
  1990  04A7  2CE3               	goto	l199
  1991  04A8                     l2151:
  1992  04A8  3032               	movlw	50
  1993  04A9  063F               	xorwf	screen_selector@c,w
  1994  04AA  1D03               	btfss	3,2
  1995  04AB  2CAD               	goto	u1991
  1996  04AC  2CAE               	goto	u1990
  1997  04AD                     u1991:
  1998  04AD  2CC9               	goto	l2159
  1999  04AE                     u1990:
  2000  04AE                     l2153:
  2001                           
  2002                           ;main.c: 196:     {;main.c: 197:          LCD_Print("Saliendo");
  2003  04AE  303D               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2004  04AF  00A3               	movwf	LCD_Print@LCD_Str
  2005  04B0  3080               	movlw	128
  2006  04B1  00A4               	movwf	LCD_Print@LCD_Str+1
  2007  04B2  158A  271F  118A   	fcall	_LCD_Print
  2008  04B5                     l2155:
  2009                           
  2010                           ;main.c: 198:         _delay((unsigned long)((50)*(32000000/4000.0)));
  2011  04B5  3003               	movlw	3
  2012  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  2013  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  2014  04B8  00BA               	movwf	??_screen_selector+2
  2015  04B9  3008               	movlw	8
  2016  04BA  00B9               	movwf	??_screen_selector+1
  2017  04BB  3076               	movlw	118
  2018  04BC  00B8               	movwf	??_screen_selector
  2019  04BD                     u2127:
  2020  04BD  0BB8               	decfsz	??_screen_selector,f
  2021  04BE  2CBD               	goto	u2127
  2022  04BF  0BB9               	decfsz	??_screen_selector+1,f
  2023  04C0  2CBD               	goto	u2127
  2024  04C1  0BBA               	decfsz	??_screen_selector+2,f
  2025  04C2  2CBD               	goto	u2127
  2026  04C3  2CC4               	nop2
  2027  04C4                     l2157:
  2028                           
  2029                           ;main.c: 199:         LCD_Cmd(0x01);
  2030  04C4  3001               	movlw	1
  2031  04C5  158A  25E4  118A   	fcall	_LCD_Cmd
  2032                           
  2033                           ;main.c: 200:     }
  2034  04C8  2CE3               	goto	l199
  2035  04C9                     l2159:
  2036                           
  2037                           ;main.c: 203:         LCD_Print("Opcion Invalida");
  2038  04C9  3013               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2039  04CA  00A3               	movwf	LCD_Print@LCD_Str
  2040  04CB  3080               	movlw	128
  2041  04CC  00A4               	movwf	LCD_Print@LCD_Str+1
  2042  04CD  158A  271F  118A   	fcall	_LCD_Print
  2043  04D0                     l2161:
  2044                           
  2045                           ;main.c: 204:         _delay((unsigned long)((50)*(32000000/4000.0)));
  2046  04D0  3003               	movlw	3
  2047  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  2048  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  2049  04D3  00BA               	movwf	??_screen_selector+2
  2050  04D4  3008               	movlw	8
  2051  04D5  00B9               	movwf	??_screen_selector+1
  2052  04D6  3076               	movlw	118
  2053  04D7  00B8               	movwf	??_screen_selector
  2054  04D8                     u2137:
  2055  04D8  0BB8               	decfsz	??_screen_selector,f
  2056  04D9  2CD8               	goto	u2137
  2057  04DA  0BB9               	decfsz	??_screen_selector+1,f
  2058  04DB  2CD8               	goto	u2137
  2059  04DC  0BBA               	decfsz	??_screen_selector+2,f
  2060  04DD  2CD8               	goto	u2137
  2061  04DE  2CDF               	nop2
  2062  04DF                     l2163:
  2063                           
  2064                           ;main.c: 206:         LCD_Cmd(0x01);
  2065  04DF  3001               	movlw	1
  2066  04E0  158A  25E4  118A   	fcall	_LCD_Cmd
  2067  04E3                     l199:
  2068  04E3  0008               	return
  2069  04E4                     __end_of_screen_selector:
  2070                           
  2071                           	psect	text4
  2072  01AF                     __ptext4:	
  2073 ;; *************** function _key_writing_value *****************
  2074 ;; Defined at:
  2075 ;;		line 150 in file "main.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;		None
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;  c               1    0        unsigned char 
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      void 
  2082 ;; Registers used:
  2083 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMMON   BANK0   BANK1
  2089 ;;      Params:         0       0       0
  2090 ;;      Locals:         0       0       0
  2091 ;;      Temps:          0       3       0
  2092 ;;      Totals:         0       3       0
  2093 ;;Total ram usage:        3 bytes
  2094 ;; Hardware stack levels used: 1
  2095 ;; Hardware stack levels required when called: 3
  2096 ;; This function calls:
  2097 ;;		_LCD_Cmd
  2098 ;;		_LCD_Goto
  2099 ;;		_LCD_Print
  2100 ;;		_LCD_PutC
  2101 ;;		_atoi
  2102 ;; This function is called by:
  2103 ;;		_screen_selector
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           
  2108                           ;psect for function _key_writing_value
  2109  01AF                     _key_writing_value:
  2110  01AF                     l1969:	
  2111                           ;incstack = 0
  2112                           ; Regs used in _key_writing_value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2113                           
  2114  01AF                     l1971:
  2115                           
  2116                           ;main.c: 153:    LCD_Cmd(0x01);
  2117  01AF  3001               	movlw	1
  2118  01B0  158A  25E4  118A   	fcall	_LCD_Cmd
  2119  01B3                     l1973:
  2120                           
  2121                           ;main.c: 154:    LCD_Goto(1,1);
  2122  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  2123  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  2124  01B5  01A6               	clrf	LCD_Goto@row
  2125  01B6  0AA6               	incf	LCD_Goto@row,f
  2126  01B7  3001               	movlw	1
  2127  01B8  158A  2612  118A   	fcall	_LCD_Goto
  2128  01BB                     l1975:
  2129                           
  2130                           ;main.c: 155:    LCD_Print("Escribe valor");
  2131  01BB  3023               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2132  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  2133  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  2134  01BE  00A3               	movwf	LCD_Print@LCD_Str
  2135  01BF  3080               	movlw	128
  2136  01C0  00A4               	movwf	LCD_Print@LCD_Str+1
  2137  01C1  158A  271F  118A   	fcall	_LCD_Print
  2138  01C4                     l1977:
  2139                           
  2140                           ;main.c: 157:    va = atoi(c);
  2141  01C4  3035               	movlw	53
  2142  01C5  118A  2329  118A   	fcall	_atoi
  2143  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  2144  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  2145  01CA  0827               	movf	?_atoi+1,w
  2146  01CB  00E3               	movwf	_va+1
  2147  01CC  0826               	movf	?_atoi,w
  2148  01CD  00E2               	movwf	_va
  2149  01CE                     l1979:
  2150                           
  2151                           ;main.c: 158:    LCD_Goto(1,2);
  2152  01CE  3002               	movlw	2
  2153  01CF  00AE               	movwf	??_key_writing_value
  2154  01D0  082E               	movf	??_key_writing_value,w
  2155  01D1  00A6               	movwf	LCD_Goto@row
  2156  01D2  3001               	movlw	1
  2157  01D3  158A  2612  118A   	fcall	_LCD_Goto
  2158  01D6                     l1981:
  2159                           
  2160                           ;main.c: 159:    LCD_PutC(c);
  2161  01D6  3035               	movlw	53
  2162  01D7  158A  2561  118A   	fcall	_LCD_PutC
  2163  01DA                     l1983:
  2164                           
  2165                           ;main.c: 160:    _delay((unsigned long)((50)*(32000000/4000.0)));
  2166  01DA  3003               	movlw	3
  2167  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  2168  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  2169  01DD  00B0               	movwf	??_key_writing_value+2
  2170  01DE  3008               	movlw	8
  2171  01DF  00AF               	movwf	??_key_writing_value+1
  2172  01E0  3076               	movlw	118
  2173  01E1  00AE               	movwf	??_key_writing_value
  2174  01E2                     u2147:
  2175  01E2  0BAE               	decfsz	??_key_writing_value,f
  2176  01E3  29E2               	goto	u2147
  2177  01E4  0BAF               	decfsz	??_key_writing_value+1,f
  2178  01E5  29E2               	goto	u2147
  2179  01E6  0BB0               	decfsz	??_key_writing_value+2,f
  2180  01E7  29E2               	goto	u2147
  2181  01E8  29E9               	nop2
  2182  01E9                     l1985:
  2183                           
  2184                           ;main.c: 161:    LCD_Cmd(0x01);
  2185  01E9  3001               	movlw	1
  2186  01EA  158A  25E4  118A   	fcall	_LCD_Cmd
  2187  01ED                     l1987:
  2188                           
  2189                           ;main.c: 162:    LCD_Goto(1,1);
  2190  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  2191  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  2192  01EF  01A6               	clrf	LCD_Goto@row
  2193  01F0  0AA6               	incf	LCD_Goto@row,f
  2194  01F1  3001               	movlw	1
  2195  01F2  158A  2612  118A   	fcall	_LCD_Goto
  2196  01F5                     l1989:
  2197                           
  2198                           ;main.c: 163:    LCD_Print("Escribe Direccion");
  2199  01F5  3001               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2200  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  2201  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  2202  01F8  00A3               	movwf	LCD_Print@LCD_Str
  2203  01F9  3080               	movlw	128
  2204  01FA  00A4               	movwf	LCD_Print@LCD_Str+1
  2205  01FB  158A  271F  118A   	fcall	_LCD_Print
  2206  01FE                     l1991:
  2207                           
  2208                           ;main.c: 165:    vb = atoi(c);
  2209  01FE  3035               	movlw	53
  2210  01FF  118A  2329  118A   	fcall	_atoi
  2211  0202  1283               	bcf	3,5	;RP0=0, select bank0
  2212  0203  1303               	bcf	3,6	;RP1=0, select bank0
  2213  0204  0827               	movf	?_atoi+1,w
  2214  0205  00E1               	movwf	_vb+1
  2215  0206  0826               	movf	?_atoi,w
  2216  0207  00E0               	movwf	_vb
  2217  0208                     l1993:
  2218                           
  2219                           ;main.c: 166:    LCD_Goto(1,2);
  2220  0208  3002               	movlw	2
  2221  0209  00AE               	movwf	??_key_writing_value
  2222  020A  082E               	movf	??_key_writing_value,w
  2223  020B  00A6               	movwf	LCD_Goto@row
  2224  020C  3001               	movlw	1
  2225  020D  158A  2612  118A   	fcall	_LCD_Goto
  2226                           
  2227                           ;main.c: 167:    LCD_PutC(c);
  2228  0210  3035               	movlw	53
  2229  0211  158A  2561  118A   	fcall	_LCD_PutC
  2230  0214                     l1995:
  2231                           
  2232                           ;main.c: 168:    _delay((unsigned long)((50)*(32000000/4000.0)));
  2233  0214  3003               	movlw	3
  2234  0215  1283               	bcf	3,5	;RP0=0, select bank0
  2235  0216  1303               	bcf	3,6	;RP1=0, select bank0
  2236  0217  00B0               	movwf	??_key_writing_value+2
  2237  0218  3008               	movlw	8
  2238  0219  00AF               	movwf	??_key_writing_value+1
  2239  021A  3076               	movlw	118
  2240  021B  00AE               	movwf	??_key_writing_value
  2241  021C                     u2157:
  2242  021C  0BAE               	decfsz	??_key_writing_value,f
  2243  021D  2A1C               	goto	u2157
  2244  021E  0BAF               	decfsz	??_key_writing_value+1,f
  2245  021F  2A1C               	goto	u2157
  2246  0220  0BB0               	decfsz	??_key_writing_value+2,f
  2247  0221  2A1C               	goto	u2157
  2248  0222  2A23               	nop2
  2249  0223                     l1997:
  2250                           
  2251                           ;main.c: 169:    LCD_Cmd(0x01);
  2252  0223  3001               	movlw	1
  2253  0224  158A  25E4  118A   	fcall	_LCD_Cmd
  2254  0227                     l190:
  2255  0227  0008               	return
  2256  0228                     __end_of_key_writing_value:
  2257                           
  2258                           	psect	text5
  2259  0329                     __ptext5:	
  2260 ;; *************** function _atoi *****************
  2261 ;; Defined at:
  2262 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\atoi.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;  s               1    wreg     PTR const unsigned char 
  2265 ;;		 -> ROM(4096), 
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;  s               1   13[BANK0 ] PTR const unsigned char 
  2268 ;;		 -> ROM(4096), 
  2269 ;;  a               2   11[BANK0 ] int 
  2270 ;;  sign            1   10[BANK0 ] unsigned char 
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  2    6[BANK0 ] int 
  2273 ;; Registers used:
  2274 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMMON   BANK0   BANK1
  2280 ;;      Params:         0       2       0
  2281 ;;      Locals:         0       4       0
  2282 ;;      Temps:          0       2       0
  2283 ;;      Totals:         0       8       0
  2284 ;;Total ram usage:        8 bytes
  2285 ;; Hardware stack levels used: 1
  2286 ;; Hardware stack levels required when called: 1
  2287 ;; This function calls:
  2288 ;;		___wmul
  2289 ;;		_isdigit
  2290 ;; This function is called by:
  2291 ;;		_key_writing_value
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           
  2296                           ;psect for function _atoi
  2297  0329                     _atoi:
  2298                           
  2299                           ;incstack = 0
  2300                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2301                           ;atoi@s stored from wreg
  2302  0329  1283               	bcf	3,5	;RP0=0, select bank0
  2303  032A  1303               	bcf	3,6	;RP1=0, select bank0
  2304  032B  00AD               	movwf	atoi@s
  2305  032C                     l1761:
  2306  032C  2B31               	goto	l1765
  2307  032D                     l1763:
  2308  032D  3001               	movlw	1
  2309  032E  00A8               	movwf	??_atoi
  2310  032F  0828               	movf	??_atoi,w
  2311  0330  07AD               	addwf	atoi@s,f
  2312  0331                     l1765:
  2313  0331  082D               	movf	atoi@s,w
  2314  0332  0084               	movwf	4
  2315  0333  118A  200C  118A   	fcall	stringdir
  2316  0336  3A20               	xorlw	32
  2317  0337  1903               	skipnz
  2318  0338  2B3A               	goto	u1331
  2319  0339  2B3B               	goto	u1330
  2320  033A                     u1331:
  2321  033A  2B2D               	goto	l1763
  2322  033B                     u1330:
  2323  033B                     l1767:
  2324  033B  082D               	movf	atoi@s,w
  2325  033C  0084               	movwf	4
  2326  033D  118A  200C  118A   	fcall	stringdir
  2327  0340  3A09               	xorlw	9
  2328  0341  1903               	skipnz
  2329  0342  2B44               	goto	u1341
  2330  0343  2B45               	goto	u1340
  2331  0344                     u1341:
  2332  0344  2B2D               	goto	l1763
  2333  0345                     u1340:
  2334  0345                     l1769:
  2335  0345  01AB               	clrf	atoi@a
  2336  0346  01AC               	clrf	atoi@a+1
  2337  0347  01AA               	clrf	atoi@sign
  2338  0348                     l1771:
  2339  0348  082D               	movf	atoi@s,w
  2340  0349  0084               	movwf	4
  2341  034A  118A  200C  118A   	fcall	stringdir
  2342  034D  3A2D               	xorlw	45
  2343  034E  1D03               	skipz
  2344  034F  2B51               	goto	u1351
  2345  0350  2B52               	goto	u1350
  2346  0351                     u1351:
  2347  0351  2B5B               	goto	l1775
  2348  0352                     u1350:
  2349  0352                     l1773:
  2350  0352  3001               	movlw	1
  2351  0353  00A8               	movwf	??_atoi
  2352  0354  0828               	movf	??_atoi,w
  2353  0355  07AA               	addwf	atoi@sign,f
  2354  0356  3001               	movlw	1
  2355  0357  00A8               	movwf	??_atoi
  2356  0358  0828               	movf	??_atoi,w
  2357  0359  07AD               	addwf	atoi@s,f
  2358  035A  2B8E               	goto	l1783
  2359  035B                     l1775:
  2360  035B  082D               	movf	atoi@s,w
  2361  035C  0084               	movwf	4
  2362  035D  118A  200C  118A   	fcall	stringdir
  2363  0360  3A2B               	xorlw	43
  2364  0361  1D03               	skipz
  2365  0362  2B64               	goto	u1361
  2366  0363  2B65               	goto	u1360
  2367  0364                     u1361:
  2368  0364  2B8E               	goto	l1783
  2369  0365                     u1360:
  2370  0365                     l1777:
  2371  0365  3001               	movlw	1
  2372  0366  00A8               	movwf	??_atoi
  2373  0367  0828               	movf	??_atoi,w
  2374  0368  07AD               	addwf	atoi@s,f
  2375  0369  2B8E               	goto	l1783
  2376  036A                     l1779:
  2377  036A  1283               	bcf	3,5	;RP0=0, select bank0
  2378  036B  1303               	bcf	3,6	;RP1=0, select bank0
  2379  036C  082C               	movf	atoi@a+1,w
  2380  036D  00A1               	movwf	___wmul@multiplier+1
  2381  036E  082B               	movf	atoi@a,w
  2382  036F  00A0               	movwf	___wmul@multiplier
  2383  0370  300A               	movlw	10
  2384  0371  00A2               	movwf	___wmul@multiplicand
  2385  0372  3000               	movlw	0
  2386  0373  00A3               	movwf	___wmul@multiplicand+1
  2387  0374  158A  25BD  118A   	fcall	___wmul
  2388  0377  1283               	bcf	3,5	;RP0=0, select bank0
  2389  0378  1303               	bcf	3,6	;RP1=0, select bank0
  2390  0379  082D               	movf	atoi@s,w
  2391  037A  0084               	movwf	4
  2392  037B  118A  200C  118A   	fcall	stringdir
  2393  037E  0720               	addwf	?___wmul,w
  2394  037F  00A8               	movwf	??_atoi
  2395  0380  3000               	movlw	0
  2396  0381  1803               	skipnc
  2397  0382  3001               	movlw	1
  2398  0383  0721               	addwf	?___wmul+1,w
  2399  0384  00A9               	movwf	??_atoi+1
  2400  0385  0828               	movf	??_atoi,w
  2401  0386  3ED0               	addlw	208
  2402  0387  00AB               	movwf	atoi@a
  2403  0388  0829               	movf	??_atoi+1,w
  2404  0389  1803               	skipnc
  2405  038A  3E01               	addlw	1
  2406  038B  3EFF               	addlw	255
  2407  038C  00AC               	movwf	atoi@a+1
  2408  038D  2B65               	goto	l1777
  2409  038E                     l1783:
  2410  038E  082D               	movf	atoi@s,w
  2411  038F  0084               	movwf	4
  2412  0390  118A  200C  118A   	fcall	stringdir
  2413  0393  118A  206E  118A   	fcall	_isdigit
  2414  0396  1803               	btfsc	3,0
  2415  0397  2B99               	goto	u1371
  2416  0398  2B9A               	goto	u1370
  2417  0399                     u1371:
  2418  0399  2B6A               	goto	l1779
  2419  039A                     u1370:
  2420  039A                     l1785:
  2421  039A  1283               	bcf	3,5	;RP0=0, select bank0
  2422  039B  1303               	bcf	3,6	;RP1=0, select bank0
  2423  039C  082A               	movf	atoi@sign,w
  2424  039D  1903               	btfsc	3,2
  2425  039E  2BA0               	goto	u1381
  2426  039F  2BA1               	goto	u1380
  2427  03A0                     u1381:
  2428  03A0  2BAD               	goto	l1791
  2429  03A1                     u1380:
  2430  03A1                     l1787:
  2431  03A1  092B               	comf	atoi@a,w
  2432  03A2  00A8               	movwf	??_atoi
  2433  03A3  092C               	comf	atoi@a+1,w
  2434  03A4  00A9               	movwf	??_atoi+1
  2435  03A5  0AA8               	incf	??_atoi,f
  2436  03A6  1903               	skipnz
  2437  03A7  0AA9               	incf	??_atoi+1,f
  2438  03A8  0828               	movf	??_atoi,w
  2439  03A9  00A6               	movwf	?_atoi
  2440  03AA  0829               	movf	??_atoi+1,w
  2441  03AB  00A7               	movwf	?_atoi+1
  2442  03AC  2BB1               	goto	l793
  2443  03AD                     l1791:
  2444  03AD  082C               	movf	atoi@a+1,w
  2445  03AE  00A7               	movwf	?_atoi+1
  2446  03AF  082B               	movf	atoi@a,w
  2447  03B0  00A6               	movwf	?_atoi
  2448  03B1                     l793:
  2449  03B1  0008               	return
  2450  03B2                     __end_of_atoi:
  2451                           
  2452                           	psect	text6
  2453  006E                     __ptext6:	
  2454 ;; *************** function _isdigit *****************
  2455 ;; Defined at:
  2456 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isdigit.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;  c               1    wreg     unsigned char 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  c               1    1[BANK0 ] unsigned char 
  2461 ;; Return value:  Size  Location     Type
  2462 ;;		None               void
  2463 ;; Registers used:
  2464 ;;		wreg, status,2, status,0
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMMON   BANK0   BANK1
  2470 ;;      Params:         0       0       0
  2471 ;;      Locals:         0       2       0
  2472 ;;      Temps:          0       0       0
  2473 ;;      Totals:         0       2       0
  2474 ;;Total ram usage:        2 bytes
  2475 ;; Hardware stack levels used: 1
  2476 ;; This function calls:
  2477 ;;		Nothing
  2478 ;; This function is called by:
  2479 ;;		_atoi
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           
  2484                           ;psect for function _isdigit
  2485  006E                     _isdigit:
  2486                           
  2487                           ;incstack = 0
  2488                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2489                           ;isdigit@c stored from wreg
  2490  006E  1283               	bcf	3,5	;RP0=0, select bank0
  2491  006F  1303               	bcf	3,6	;RP1=0, select bank0
  2492  0070  00A1               	movwf	isdigit@c
  2493  0071                     l1717:
  2494  0071  01A0               	clrf	_isdigit$818
  2495  0072                     l1719:
  2496  0072  303A               	movlw	58
  2497  0073  0221               	subwf	isdigit@c,w
  2498  0074  1803               	skipnc
  2499  0075  2877               	goto	u1281
  2500  0076  2878               	goto	u1280
  2501  0077                     u1281:
  2502  0077  2880               	goto	l1725
  2503  0078                     u1280:
  2504  0078                     l1721:
  2505  0078  3030               	movlw	48
  2506  0079  0221               	subwf	isdigit@c,w
  2507  007A  1C03               	skipc
  2508  007B  287D               	goto	u1291
  2509  007C  287E               	goto	u1290
  2510  007D                     u1291:
  2511  007D  2880               	goto	l1725
  2512  007E                     u1290:
  2513  007E                     l1723:
  2514  007E  01A0               	clrf	_isdigit$818
  2515  007F  0AA0               	incf	_isdigit$818,f
  2516  0080                     l1725:
  2517  0080  0C20               	rrf	_isdigit$818,w
  2518  0081                     l798:
  2519  0081  0008               	return
  2520  0082                     __end_of_isdigit:
  2521                           
  2522                           	psect	text7
  2523  0DBD                     __ptext7:	
  2524 ;; *************** function ___wmul *****************
  2525 ;; Defined at:
  2526 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2529 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;  product         2    4[BANK0 ] unsigned int 
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  2    0[BANK0 ] unsigned int 
  2534 ;; Registers used:
  2535 ;;		wreg, status,2, status,0
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMMON   BANK0   BANK1
  2541 ;;      Params:         0       4       0
  2542 ;;      Locals:         0       2       0
  2543 ;;      Temps:          0       0       0
  2544 ;;      Totals:         0       6       0
  2545 ;;Total ram usage:        6 bytes
  2546 ;; Hardware stack levels used: 1
  2547 ;; This function calls:
  2548 ;;		Nothing
  2549 ;; This function is called by:
  2550 ;;		_atoi
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           
  2555                           ;psect for function ___wmul
  2556  0DBD                     ___wmul:
  2557  0DBD                     l1655:	
  2558                           ;incstack = 0
  2559                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2560                           
  2561  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  2562  0DBE  1303               	bcf	3,6	;RP1=0, select bank0
  2563  0DBF  01A4               	clrf	___wmul@product
  2564  0DC0  01A5               	clrf	___wmul@product+1
  2565  0DC1                     l1657:
  2566  0DC1  1C20               	btfss	___wmul@multiplier,0
  2567  0DC2  2DC4               	goto	u1111
  2568  0DC3  2DC5               	goto	u1110
  2569  0DC4                     u1111:
  2570  0DC4  2DCB               	goto	l330
  2571  0DC5                     u1110:
  2572  0DC5                     l1659:
  2573  0DC5  0822               	movf	___wmul@multiplicand,w
  2574  0DC6  07A4               	addwf	___wmul@product,f
  2575  0DC7  1803               	skipnc
  2576  0DC8  0AA5               	incf	___wmul@product+1,f
  2577  0DC9  0823               	movf	___wmul@multiplicand+1,w
  2578  0DCA  07A5               	addwf	___wmul@product+1,f
  2579  0DCB                     l330:
  2580  0DCB  3001               	movlw	1
  2581  0DCC                     u1125:
  2582  0DCC  1003               	clrc
  2583  0DCD  0DA2               	rlf	___wmul@multiplicand,f
  2584  0DCE  0DA3               	rlf	___wmul@multiplicand+1,f
  2585  0DCF  3EFF               	addlw	-1
  2586  0DD0  1D03               	skipz
  2587  0DD1  2DCC               	goto	u1125
  2588  0DD2                     l1661:
  2589  0DD2  3001               	movlw	1
  2590  0DD3                     u1135:
  2591  0DD3  1003               	clrc
  2592  0DD4  0CA1               	rrf	___wmul@multiplier+1,f
  2593  0DD5  0CA0               	rrf	___wmul@multiplier,f
  2594  0DD6  3EFF               	addlw	-1
  2595  0DD7  1D03               	skipz
  2596  0DD8  2DD3               	goto	u1135
  2597  0DD9                     l1663:
  2598  0DD9  0820               	movf	___wmul@multiplier,w
  2599  0DDA  0421               	iorwf	___wmul@multiplier+1,w
  2600  0DDB  1D03               	btfss	3,2
  2601  0DDC  2DDE               	goto	u1141
  2602  0DDD  2DDF               	goto	u1140
  2603  0DDE                     u1141:
  2604  0DDE  2DC1               	goto	l1657
  2605  0DDF                     u1140:
  2606  0DDF                     l1665:
  2607  0DDF  0825               	movf	___wmul@product+1,w
  2608  0DE0  00A1               	movwf	?___wmul+1
  2609  0DE1  0824               	movf	___wmul@product,w
  2610  0DE2  00A0               	movwf	?___wmul
  2611  0DE3                     l332:
  2612  0DE3  0008               	return
  2613  0DE4                     __end_of___wmul:
  2614                           
  2615                           	psect	text8
  2616  0D61                     __ptext8:	
  2617 ;; *************** function _LCD_PutC *****************
  2618 ;; Defined at:
  2619 ;;		line 106 in file "./lcd.h"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;  LCD_Char        1    wreg     unsigned char 
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;  LCD_Char        1    4[BANK0 ] unsigned char 
  2624 ;; Return value:  Size  Location     Type
  2625 ;;                  1    wreg      void 
  2626 ;; Registers used:
  2627 ;;		wreg, status,2, status,0, pclath, cstack
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMMON   BANK0   BANK1
  2633 ;;      Params:         0       0       0
  2634 ;;      Locals:         0       1       0
  2635 ;;      Temps:          0       1       0
  2636 ;;      Totals:         0       2       0
  2637 ;;Total ram usage:        2 bytes
  2638 ;; Hardware stack levels used: 1
  2639 ;; Hardware stack levels required when called: 1
  2640 ;; This function calls:
  2641 ;;		_LCD_Write_Nibble
  2642 ;; This function is called by:
  2643 ;;		_key_writing_value
  2644 ;;		_main
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648                           
  2649                           ;psect for function _LCD_PutC
  2650  0D61                     _LCD_PutC:
  2651                           
  2652                           ;incstack = 0
  2653                           ; Regs used in _LCD_PutC: [wreg+status,2+status,0+pclath+cstack]
  2654                           ;LCD_PutC@LCD_Char stored from wreg
  2655  0D61  1283               	bcf	3,5	;RP0=0, select bank0
  2656  0D62  1303               	bcf	3,6	;RP1=0, select bank0
  2657  0D63  00A4               	movwf	LCD_PutC@LCD_Char
  2658  0D64                     l1747:
  2659                           
  2660                           ;./lcd.h: 106: void LCD_PutC(char LCD_Char);./lcd.h: 107: {;./lcd.h: 108:   RS = 1;
  2661  0D64  1479               	bsf	_RS/(0+8),_RS& (0+7)
  2662  0D65                     l1749:
  2663                           
  2664                           ;./lcd.h: 109:   LCD_Write_Nibble(LCD_Char >> 4);
  2665  0D65  0824               	movf	LCD_PutC@LCD_Char,w
  2666  0D66  00A3               	movwf	??_LCD_PutC
  2667  0D67  3004               	movlw	4
  2668  0D68                     u1305:
  2669  0D68  1003               	clrc
  2670  0D69  0CA3               	rrf	??_LCD_PutC,f
  2671  0D6A  3EFF               	addlw	-1
  2672  0D6B  1D03               	skipz
  2673  0D6C  2D68               	goto	u1305
  2674  0D6D  0823               	movf	??_LCD_PutC,w
  2675  0D6E  118A  20E2  158A   	fcall	_LCD_Write_Nibble
  2676                           
  2677                           ;./lcd.h: 110:   LCD_Write_Nibble(LCD_Char );
  2678  0D71  1283               	bcf	3,5	;RP0=0, select bank0
  2679  0D72  1303               	bcf	3,6	;RP1=0, select bank0
  2680  0D73  0824               	movf	LCD_PutC@LCD_Char,w
  2681  0D74  118A  20E2  158A   	fcall	_LCD_Write_Nibble
  2682  0D77                     l67:
  2683  0D77  0008               	return
  2684  0D78                     __end_of_LCD_PutC:
  2685                           
  2686                           	psect	text9
  2687  0D99                     __ptext9:	
  2688 ;; *************** function _itoa *****************
  2689 ;; Defined at:
  2690 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\itoa.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;  buf             1    wreg     PTR unsigned char 
  2693 ;;		 -> screen_selector@value(1), ventilator_screen@vel_value(1), ventilator_screen@vel_number(1), ventilator_screen@vol
      +_value(1), 
  2694 ;;  val             2   17[BANK0 ] int 
  2695 ;;  base            2   19[BANK0 ] int 
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;  buf             1   22[BANK0 ] PTR unsigned char 
  2698 ;;		 -> screen_selector@value(1), ventilator_screen@vel_value(1), ventilator_screen@vel_number(1), ventilator_screen@vol
      +_value(1), 
  2699 ;;  cp              1    0        PTR unsigned char 
  2700 ;;		 -> screen_selector@value(1), ventilator_screen@vel_value(1), ventilator_screen@vel_number(1), ventilator_screen@vol
      +_value(1), 
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  1    wreg      PTR unsigned char 
  2703 ;; Registers used:
  2704 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMMON   BANK0   BANK1
  2710 ;;      Params:         0       4       0
  2711 ;;      Locals:         0       1       0
  2712 ;;      Temps:          0       1       0
  2713 ;;      Totals:         0       6       0
  2714 ;;Total ram usage:        6 bytes
  2715 ;; Hardware stack levels used: 1
  2716 ;; Hardware stack levels required when called: 2
  2717 ;; This function calls:
  2718 ;;		_utoa
  2719 ;; This function is called by:
  2720 ;;		_ventilator_screen
  2721 ;;		_screen_selector
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           
  2726                           ;psect for function _itoa
  2727  0D99                     _itoa:
  2728                           
  2729                           ;incstack = 0
  2730                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2731                           ;itoa@buf stored from wreg
  2732  0D99  1283               	bcf	3,5	;RP0=0, select bank0
  2733  0D9A  1303               	bcf	3,6	;RP1=0, select bank0
  2734  0D9B  00B6               	movwf	itoa@buf
  2735  0D9C                     l1955:
  2736  0D9C                     l1957:
  2737  0D9C  1FB2               	btfss	itoa@val+1,7
  2738  0D9D  2D9F               	goto	u1761
  2739  0D9E  2DA0               	goto	u1760
  2740  0D9F                     u1761:
  2741  0D9F  2DB0               	goto	l1965
  2742  0DA0                     u1760:
  2743  0DA0                     l1959:
  2744  0DA0  302D               	movlw	45
  2745  0DA1  00B5               	movwf	??_itoa
  2746  0DA2  0836               	movf	itoa@buf,w
  2747  0DA3  0084               	movwf	4
  2748  0DA4  0835               	movf	??_itoa,w
  2749  0DA5  1383               	bcf	3,7	;select IRP bank0
  2750  0DA6  0080               	movwf	0
  2751  0DA7                     l1961:
  2752  0DA7  3001               	movlw	1
  2753  0DA8  00B5               	movwf	??_itoa
  2754  0DA9  0835               	movf	??_itoa,w
  2755  0DAA  07B6               	addwf	itoa@buf,f
  2756  0DAB                     l1963:
  2757  0DAB  09B1               	comf	itoa@val,f
  2758  0DAC  09B2               	comf	itoa@val+1,f
  2759  0DAD  0AB1               	incf	itoa@val,f
  2760  0DAE  1903               	skipnz
  2761  0DAF  0AB2               	incf	itoa@val+1,f
  2762  0DB0                     l1965:
  2763  0DB0  0832               	movf	itoa@val+1,w
  2764  0DB1  00A9               	movwf	utoa@val+1
  2765  0DB2  0831               	movf	itoa@val,w
  2766  0DB3  00A8               	movwf	utoa@val
  2767  0DB4  0834               	movf	itoa@base+1,w
  2768  0DB5  00AB               	movwf	utoa@base+1
  2769  0DB6  0833               	movf	itoa@base,w
  2770  0DB7  00AA               	movwf	utoa@base
  2771  0DB8  0836               	movf	itoa@buf,w
  2772  0DB9  118A  2143  158A   	fcall	_utoa
  2773  0DBC                     l804:
  2774  0DBC  0008               	return
  2775  0DBD                     __end_of_itoa:
  2776                           
  2777                           	psect	text10
  2778  0143                     __ptext10:	
  2779 ;; *************** function _utoa *****************
  2780 ;; Defined at:
  2781 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\itoa.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;  buf             1    wreg     PTR unsigned char 
  2784 ;;		 -> screen_selector@value(1), ventilator_screen@vel_value(1), ventilator_screen@vel_number(1), ventilator_screen@vol
      +_value(1), 
  2785 ;;  val             2    8[BANK0 ] unsigned int 
  2786 ;;  base            2   10[BANK0 ] int 
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;  buf             1   16[BANK0 ] PTR unsigned char 
  2789 ;;		 -> screen_selector@value(1), ventilator_screen@vel_value(1), ventilator_screen@vel_number(1), ventilator_screen@vol
      +_value(1), 
  2790 ;;  v               2   13[BANK0 ] unsigned int 
  2791 ;;  c               1   15[BANK0 ] unsigned char 
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      PTR unsigned char 
  2794 ;; Registers used:
  2795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMMON   BANK0   BANK1
  2801 ;;      Params:         0       4       0
  2802 ;;      Locals:         0       4       0
  2803 ;;      Temps:          0       1       0
  2804 ;;      Totals:         0       9       0
  2805 ;;Total ram usage:        9 bytes
  2806 ;; Hardware stack levels used: 1
  2807 ;; Hardware stack levels required when called: 1
  2808 ;; This function calls:
  2809 ;;		___lwdiv
  2810 ;;		___lwmod
  2811 ;; This function is called by:
  2812 ;;		_itoa
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816                           
  2817                           ;psect for function _utoa
  2818  0143                     _utoa:
  2819                           
  2820                           ;incstack = 0
  2821                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2822                           ;utoa@buf stored from wreg
  2823  0143  1283               	bcf	3,5	;RP0=0, select bank0
  2824  0144  1303               	bcf	3,6	;RP1=0, select bank0
  2825  0145  00B0               	movwf	utoa@buf
  2826  0146                     l1795:
  2827  0146  0829               	movf	utoa@val+1,w
  2828  0147  00AE               	movwf	utoa@v+1
  2829  0148  0828               	movf	utoa@val,w
  2830  0149  00AD               	movwf	utoa@v
  2831  014A                     l1797:
  2832  014A  082B               	movf	utoa@base+1,w
  2833  014B  00A1               	movwf	___lwdiv@divisor+1
  2834  014C  082A               	movf	utoa@base,w
  2835  014D  00A0               	movwf	___lwdiv@divisor
  2836  014E  082E               	movf	utoa@v+1,w
  2837  014F  00A3               	movwf	___lwdiv@dividend+1
  2838  0150  082D               	movf	utoa@v,w
  2839  0151  00A2               	movwf	___lwdiv@dividend
  2840  0152  158A  275E  118A   	fcall	___lwdiv
  2841  0155  1283               	bcf	3,5	;RP0=0, select bank0
  2842  0156  1303               	bcf	3,6	;RP1=0, select bank0
  2843  0157  0821               	movf	?___lwdiv+1,w
  2844  0158  00AE               	movwf	utoa@v+1
  2845  0159  0820               	movf	?___lwdiv,w
  2846  015A  00AD               	movwf	utoa@v
  2847  015B                     l1799:
  2848  015B  3001               	movlw	1
  2849  015C  00AC               	movwf	??_utoa
  2850  015D  082C               	movf	??_utoa,w
  2851  015E  07B0               	addwf	utoa@buf,f
  2852  015F                     l1801:
  2853  015F  082D               	movf	utoa@v,w
  2854  0160  042E               	iorwf	utoa@v+1,w
  2855  0161  1D03               	btfss	3,2
  2856  0162  2964               	goto	u1391
  2857  0163  2965               	goto	u1390
  2858  0164                     u1391:
  2859  0164  294A               	goto	l1797
  2860  0165                     u1390:
  2861  0165                     l1803:
  2862  0165  0830               	movf	utoa@buf,w
  2863  0166  0084               	movwf	4
  2864  0167  1383               	bcf	3,7	;select IRP bank0
  2865  0168  0180               	clrf	0
  2866  0169                     l1805:
  2867  0169  3001               	movlw	1
  2868  016A  02B0               	subwf	utoa@buf,f
  2869  016B                     l1807:
  2870  016B  082B               	movf	utoa@base+1,w
  2871  016C  00A1               	movwf	___lwmod@divisor+1
  2872  016D  082A               	movf	utoa@base,w
  2873  016E  00A0               	movwf	___lwmod@divisor
  2874  016F  0829               	movf	utoa@val+1,w
  2875  0170  00A3               	movwf	___lwmod@dividend+1
  2876  0171  0828               	movf	utoa@val,w
  2877  0172  00A2               	movwf	___lwmod@dividend
  2878  0173  158A  26E3  118A   	fcall	___lwmod
  2879  0176  1283               	bcf	3,5	;RP0=0, select bank0
  2880  0177  1303               	bcf	3,6	;RP1=0, select bank0
  2881  0178  0820               	movf	?___lwmod,w
  2882  0179  00AC               	movwf	??_utoa
  2883  017A  082C               	movf	??_utoa,w
  2884  017B  00AF               	movwf	utoa@c
  2885  017C                     l1809:
  2886  017C  082B               	movf	utoa@base+1,w
  2887  017D  00A1               	movwf	___lwdiv@divisor+1
  2888  017E  082A               	movf	utoa@base,w
  2889  017F  00A0               	movwf	___lwdiv@divisor
  2890  0180  0829               	movf	utoa@val+1,w
  2891  0181  00A3               	movwf	___lwdiv@dividend+1
  2892  0182  0828               	movf	utoa@val,w
  2893  0183  00A2               	movwf	___lwdiv@dividend
  2894  0184  158A  275E  118A   	fcall	___lwdiv
  2895  0187  1283               	bcf	3,5	;RP0=0, select bank0
  2896  0188  1303               	bcf	3,6	;RP1=0, select bank0
  2897  0189  0821               	movf	?___lwdiv+1,w
  2898  018A  00A9               	movwf	utoa@val+1
  2899  018B  0820               	movf	?___lwdiv,w
  2900  018C  00A8               	movwf	utoa@val
  2901  018D                     l1811:
  2902  018D  300A               	movlw	10
  2903  018E  022F               	subwf	utoa@c,w
  2904  018F  1C03               	skipc
  2905  0190  2992               	goto	u1401
  2906  0191  2993               	goto	u1400
  2907  0192                     u1401:
  2908  0192  2997               	goto	l810
  2909  0193                     u1400:
  2910  0193                     l1813:
  2911  0193  3007               	movlw	7
  2912  0194  00AC               	movwf	??_utoa
  2913  0195  082C               	movf	??_utoa,w
  2914  0196  07AF               	addwf	utoa@c,f
  2915  0197                     l810:
  2916  0197  3030               	movlw	48
  2917  0198  00AC               	movwf	??_utoa
  2918  0199  082C               	movf	??_utoa,w
  2919  019A  07AF               	addwf	utoa@c,f
  2920  019B                     l1815:
  2921  019B  082F               	movf	utoa@c,w
  2922  019C  00AC               	movwf	??_utoa
  2923  019D  0830               	movf	utoa@buf,w
  2924  019E  0084               	movwf	4
  2925  019F  082C               	movf	??_utoa,w
  2926  01A0  1383               	bcf	3,7	;select IRP bank0
  2927  01A1  0080               	movwf	0
  2928  01A2                     l1817:
  2929  01A2  3001               	movlw	1
  2930  01A3  02B0               	subwf	utoa@buf,f
  2931  01A4                     l1819:
  2932  01A4  0828               	movf	utoa@val,w
  2933  01A5  0429               	iorwf	utoa@val+1,w
  2934  01A6  1D03               	btfss	3,2
  2935  01A7  29A9               	goto	u1411
  2936  01A8  29AA               	goto	u1410
  2937  01A9                     u1411:
  2938  01A9  296B               	goto	l1807
  2939  01AA                     u1410:
  2940  01AA                     l1821:
  2941                           
  2942                           ;	Return value of _utoa is never used
  2943  01AA  3001               	movlw	1
  2944  01AB  00AC               	movwf	??_utoa
  2945  01AC  082C               	movf	??_utoa,w
  2946  01AD  07B0               	addwf	utoa@buf,f
  2947  01AE                     l812:
  2948  01AE  0008               	return
  2949  01AF                     __end_of_utoa:
  2950                           
  2951                           	psect	text11
  2952  0EE3                     __ptext11:	
  2953 ;; *************** function ___lwmod *****************
  2954 ;; Defined at:
  2955 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;  divisor         2    0[BANK0 ] unsigned int 
  2958 ;;  dividend        2    2[BANK0 ] unsigned int 
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;  counter         1    5[BANK0 ] unsigned char 
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  2    0[BANK0 ] unsigned int 
  2963 ;; Registers used:
  2964 ;;		wreg, status,2, status,0
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMMON   BANK0   BANK1
  2970 ;;      Params:         0       4       0
  2971 ;;      Locals:         0       1       0
  2972 ;;      Temps:          0       1       0
  2973 ;;      Totals:         0       6       0
  2974 ;;Total ram usage:        6 bytes
  2975 ;; Hardware stack levels used: 1
  2976 ;; This function calls:
  2977 ;;		Nothing
  2978 ;; This function is called by:
  2979 ;;		_utoa
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           
  2984                           ;psect for function ___lwmod
  2985  0EE3                     ___lwmod:
  2986  0EE3                     l1695:	
  2987                           ;incstack = 0
  2988                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2989                           
  2990  0EE3  1283               	bcf	3,5	;RP0=0, select bank0
  2991  0EE4  1303               	bcf	3,6	;RP1=0, select bank0
  2992  0EE5  0820               	movf	___lwmod@divisor,w
  2993  0EE6  0421               	iorwf	___lwmod@divisor+1,w
  2994  0EE7  1903               	btfsc	3,2
  2995  0EE8  2EEA               	goto	u1221
  2996  0EE9  2EEB               	goto	u1220
  2997  0EEA                     u1221:
  2998  0EEA  2F1A               	goto	l1713
  2999  0EEB                     u1220:
  3000  0EEB                     l1697:
  3001  0EEB  01A5               	clrf	___lwmod@counter
  3002  0EEC  0AA5               	incf	___lwmod@counter,f
  3003  0EED  2EF9               	goto	l1703
  3004  0EEE                     l1699:
  3005  0EEE  3001               	movlw	1
  3006  0EEF                     u1235:
  3007  0EEF  1003               	clrc
  3008  0EF0  0DA0               	rlf	___lwmod@divisor,f
  3009  0EF1  0DA1               	rlf	___lwmod@divisor+1,f
  3010  0EF2  3EFF               	addlw	-1
  3011  0EF3  1D03               	skipz
  3012  0EF4  2EEF               	goto	u1235
  3013  0EF5                     l1701:
  3014  0EF5  3001               	movlw	1
  3015  0EF6  00A4               	movwf	??___lwmod
  3016  0EF7  0824               	movf	??___lwmod,w
  3017  0EF8  07A5               	addwf	___lwmod@counter,f
  3018  0EF9                     l1703:
  3019  0EF9  1FA1               	btfss	___lwmod@divisor+1,7
  3020  0EFA  2EFC               	goto	u1241
  3021  0EFB  2EFD               	goto	u1240
  3022  0EFC                     u1241:
  3023  0EFC  2EEE               	goto	l1699
  3024  0EFD                     u1240:
  3025  0EFD                     l1705:
  3026  0EFD  0821               	movf	___lwmod@divisor+1,w
  3027  0EFE  0223               	subwf	___lwmod@dividend+1,w
  3028  0EFF  1D03               	skipz
  3029  0F00  2F03               	goto	u1255
  3030  0F01  0820               	movf	___lwmod@divisor,w
  3031  0F02  0222               	subwf	___lwmod@dividend,w
  3032  0F03                     u1255:
  3033  0F03  1C03               	skipc
  3034  0F04  2F06               	goto	u1251
  3035  0F05  2F07               	goto	u1250
  3036  0F06                     u1251:
  3037  0F06  2F0D               	goto	l1709
  3038  0F07                     u1250:
  3039  0F07                     l1707:
  3040  0F07  0820               	movf	___lwmod@divisor,w
  3041  0F08  02A2               	subwf	___lwmod@dividend,f
  3042  0F09  0821               	movf	___lwmod@divisor+1,w
  3043  0F0A  1C03               	skipc
  3044  0F0B  03A3               	decf	___lwmod@dividend+1,f
  3045  0F0C  02A3               	subwf	___lwmod@dividend+1,f
  3046  0F0D                     l1709:
  3047  0F0D  3001               	movlw	1
  3048  0F0E                     u1265:
  3049  0F0E  1003               	clrc
  3050  0F0F  0CA1               	rrf	___lwmod@divisor+1,f
  3051  0F10  0CA0               	rrf	___lwmod@divisor,f
  3052  0F11  3EFF               	addlw	-1
  3053  0F12  1D03               	skipz
  3054  0F13  2F0E               	goto	u1265
  3055  0F14                     l1711:
  3056  0F14  3001               	movlw	1
  3057  0F15  02A5               	subwf	___lwmod@counter,f
  3058  0F16  1D03               	btfss	3,2
  3059  0F17  2F19               	goto	u1271
  3060  0F18  2F1A               	goto	u1270
  3061  0F19                     u1271:
  3062  0F19  2EFD               	goto	l1705
  3063  0F1A                     u1270:
  3064  0F1A                     l1713:
  3065  0F1A  0823               	movf	___lwmod@dividend+1,w
  3066  0F1B  00A1               	movwf	?___lwmod+1
  3067  0F1C  0822               	movf	___lwmod@dividend,w
  3068  0F1D  00A0               	movwf	?___lwmod
  3069  0F1E                     l612:
  3070  0F1E  0008               	return
  3071  0F1F                     __end_of___lwmod:
  3072                           
  3073                           	psect	text12
  3074  0F5E                     __ptext12:	
  3075 ;; *************** function ___lwdiv *****************
  3076 ;; Defined at:
  3077 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;  divisor         2    0[BANK0 ] unsigned int 
  3080 ;;  dividend        2    2[BANK0 ] unsigned int 
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;  quotient        2    5[BANK0 ] unsigned int 
  3083 ;;  counter         1    7[BANK0 ] unsigned char 
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  2    0[BANK0 ] unsigned int 
  3086 ;; Registers used:
  3087 ;;		wreg, status,2, status,0
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMMON   BANK0   BANK1
  3093 ;;      Params:         0       4       0
  3094 ;;      Locals:         0       3       0
  3095 ;;      Temps:          0       1       0
  3096 ;;      Totals:         0       8       0
  3097 ;;Total ram usage:        8 bytes
  3098 ;; Hardware stack levels used: 1
  3099 ;; This function calls:
  3100 ;;		Nothing
  3101 ;; This function is called by:
  3102 ;;		_utoa
  3103 ;; This function uses a non-reentrant model
  3104 ;;
  3105                           
  3106                           
  3107                           ;psect for function ___lwdiv
  3108  0F5E                     ___lwdiv:
  3109  0F5E                     l1669:	
  3110                           ;incstack = 0
  3111                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3112                           
  3113  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  3114  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  3115  0F60  01A5               	clrf	___lwdiv@quotient
  3116  0F61  01A6               	clrf	___lwdiv@quotient+1
  3117  0F62                     l1671:
  3118  0F62  0820               	movf	___lwdiv@divisor,w
  3119  0F63  0421               	iorwf	___lwdiv@divisor+1,w
  3120  0F64  1903               	btfsc	3,2
  3121  0F65  2F67               	goto	u1151
  3122  0F66  2F68               	goto	u1150
  3123  0F67                     u1151:
  3124  0F67  2F9F               	goto	l1691
  3125  0F68                     u1150:
  3126  0F68                     l1673:
  3127  0F68  01A7               	clrf	___lwdiv@counter
  3128  0F69  0AA7               	incf	___lwdiv@counter,f
  3129  0F6A  2F76               	goto	l1679
  3130  0F6B                     l1675:
  3131  0F6B  3001               	movlw	1
  3132  0F6C                     u1165:
  3133  0F6C  1003               	clrc
  3134  0F6D  0DA0               	rlf	___lwdiv@divisor,f
  3135  0F6E  0DA1               	rlf	___lwdiv@divisor+1,f
  3136  0F6F  3EFF               	addlw	-1
  3137  0F70  1D03               	skipz
  3138  0F71  2F6C               	goto	u1165
  3139  0F72                     l1677:
  3140  0F72  3001               	movlw	1
  3141  0F73  00A4               	movwf	??___lwdiv
  3142  0F74  0824               	movf	??___lwdiv,w
  3143  0F75  07A7               	addwf	___lwdiv@counter,f
  3144  0F76                     l1679:
  3145  0F76  1FA1               	btfss	___lwdiv@divisor+1,7
  3146  0F77  2F79               	goto	u1171
  3147  0F78  2F7A               	goto	u1170
  3148  0F79                     u1171:
  3149  0F79  2F6B               	goto	l1675
  3150  0F7A                     u1170:
  3151  0F7A                     l1681:
  3152  0F7A  3001               	movlw	1
  3153  0F7B                     u1185:
  3154  0F7B  1003               	clrc
  3155  0F7C  0DA5               	rlf	___lwdiv@quotient,f
  3156  0F7D  0DA6               	rlf	___lwdiv@quotient+1,f
  3157  0F7E  3EFF               	addlw	-1
  3158  0F7F  1D03               	skipz
  3159  0F80  2F7B               	goto	u1185
  3160  0F81  0821               	movf	___lwdiv@divisor+1,w
  3161  0F82  0223               	subwf	___lwdiv@dividend+1,w
  3162  0F83  1D03               	skipz
  3163  0F84  2F87               	goto	u1195
  3164  0F85  0820               	movf	___lwdiv@divisor,w
  3165  0F86  0222               	subwf	___lwdiv@dividend,w
  3166  0F87                     u1195:
  3167  0F87  1C03               	skipc
  3168  0F88  2F8A               	goto	u1191
  3169  0F89  2F8B               	goto	u1190
  3170  0F8A                     u1191:
  3171  0F8A  2F92               	goto	l1687
  3172  0F8B                     u1190:
  3173  0F8B                     l1683:
  3174  0F8B  0820               	movf	___lwdiv@divisor,w
  3175  0F8C  02A2               	subwf	___lwdiv@dividend,f
  3176  0F8D  0821               	movf	___lwdiv@divisor+1,w
  3177  0F8E  1C03               	skipc
  3178  0F8F  03A3               	decf	___lwdiv@dividend+1,f
  3179  0F90  02A3               	subwf	___lwdiv@dividend+1,f
  3180  0F91                     l1685:
  3181  0F91  1425               	bsf	___lwdiv@quotient,0
  3182  0F92                     l1687:
  3183  0F92  3001               	movlw	1
  3184  0F93                     u1205:
  3185  0F93  1003               	clrc
  3186  0F94  0CA1               	rrf	___lwdiv@divisor+1,f
  3187  0F95  0CA0               	rrf	___lwdiv@divisor,f
  3188  0F96  3EFF               	addlw	-1
  3189  0F97  1D03               	skipz
  3190  0F98  2F93               	goto	u1205
  3191  0F99                     l1689:
  3192  0F99  3001               	movlw	1
  3193  0F9A  02A7               	subwf	___lwdiv@counter,f
  3194  0F9B  1D03               	btfss	3,2
  3195  0F9C  2F9E               	goto	u1211
  3196  0F9D  2F9F               	goto	u1210
  3197  0F9E                     u1211:
  3198  0F9E  2F7A               	goto	l1681
  3199  0F9F                     u1210:
  3200  0F9F                     l1691:
  3201  0F9F  0826               	movf	___lwdiv@quotient+1,w
  3202  0FA0  00A1               	movwf	?___lwdiv+1
  3203  0FA1  0825               	movf	___lwdiv@quotient,w
  3204  0FA2  00A0               	movwf	?___lwdiv
  3205  0FA3                     l602:
  3206  0FA3  0008               	return
  3207  0FA4                     __end_of___lwdiv:
  3208                           
  3209                           	psect	text13
  3210  0228                     __ptext13:	
  3211 ;; *************** function ___fltol *****************
  3212 ;; Defined at:
  3213 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;  f1              4    0[BANK0 ] unsigned int 
  3216 ;; Auto vars:     Size  Location     Type
  3217 ;;  exp1            1   10[BANK0 ] unsigned char 
  3218 ;;  sign1           1    9[BANK0 ] unsigned char 
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  4    0[BANK0 ] long 
  3221 ;; Registers used:
  3222 ;;		wreg, status,2, status,0
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMMON   BANK0   BANK1
  3228 ;;      Params:         0       4       0
  3229 ;;      Locals:         0       2       0
  3230 ;;      Temps:          0       5       0
  3231 ;;      Totals:         0      11       0
  3232 ;;Total ram usage:       11 bytes
  3233 ;; Hardware stack levels used: 1
  3234 ;; This function calls:
  3235 ;;		Nothing
  3236 ;; This function is called by:
  3237 ;;		_ventilator_screen
  3238 ;;		_screen_selector
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242                           
  3243                           ;psect for function ___fltol
  3244  0228                     ___fltol:
  3245  0228                     l1999:	
  3246                           ;incstack = 0
  3247                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3248                           
  3249  0228  1003               	clrc
  3250  0229  1283               	bcf	3,5	;RP0=0, select bank0
  3251  022A  1303               	bcf	3,6	;RP1=0, select bank0
  3252  022B  0D22               	rlf	___fltol@f1+2,w
  3253  022C  0D23               	rlf	___fltol@f1+3,w
  3254  022D  00A4               	movwf	??___fltol
  3255  022E  0824               	movf	??___fltol,w
  3256  022F  00AA               	movwf	___fltol@exp1
  3257  0230  082A               	movf	___fltol@exp1,w
  3258  0231  1D03               	btfss	3,2
  3259  0232  2A34               	goto	u1771
  3260  0233  2A35               	goto	u1770
  3261  0234                     u1771:
  3262  0234  2A3E               	goto	l2005
  3263  0235                     u1770:
  3264  0235                     l2001:
  3265  0235  3000               	movlw	0
  3266  0236  00A3               	movwf	?___fltol+3
  3267  0237  3000               	movlw	0
  3268  0238  00A2               	movwf	?___fltol+2
  3269  0239  3000               	movlw	0
  3270  023A  00A1               	movwf	?___fltol+1
  3271  023B  3000               	movlw	0
  3272  023C  00A0               	movwf	?___fltol
  3273  023D  2AA3               	goto	l516
  3274  023E                     l2005:
  3275  023E  0820               	movf	___fltol@f1,w
  3276  023F  00A4               	movwf	??___fltol
  3277  0240  0821               	movf	___fltol@f1+1,w
  3278  0241  00A5               	movwf	??___fltol+1
  3279  0242  0822               	movf	___fltol@f1+2,w
  3280  0243  00A6               	movwf	??___fltol+2
  3281  0244  0823               	movf	___fltol@f1+3,w
  3282  0245  00A7               	movwf	??___fltol+3
  3283  0246  301F               	movlw	31
  3284  0247                     u1785:
  3285  0247  1003               	clrc
  3286  0248  0CA7               	rrf	??___fltol+3,f
  3287  0249  0CA6               	rrf	??___fltol+2,f
  3288  024A  0CA5               	rrf	??___fltol+1,f
  3289  024B  0CA4               	rrf	??___fltol,f
  3290  024C                     u1780:
  3291  024C  3EFF               	addlw	-1
  3292  024D  1D03               	skipz
  3293  024E  2A47               	goto	u1785
  3294  024F  0824               	movf	??___fltol,w
  3295  0250  00A8               	movwf	??___fltol+4
  3296  0251  0828               	movf	??___fltol+4,w
  3297  0252  00A9               	movwf	___fltol@sign1
  3298  0253                     l2007:
  3299  0253  17A2               	bsf	___fltol@f1+2,7
  3300  0254                     l2009:
  3301  0254  30FF               	movlw	255
  3302  0255  05A0               	andwf	___fltol@f1,f
  3303  0256  30FF               	movlw	255
  3304  0257  05A1               	andwf	___fltol@f1+1,f
  3305  0258  30FF               	movlw	255
  3306  0259  05A2               	andwf	___fltol@f1+2,f
  3307  025A  3000               	movlw	0
  3308  025B  05A3               	andwf	___fltol@f1+3,f
  3309  025C                     l2011:
  3310  025C  3096               	movlw	150
  3311  025D  02AA               	subwf	___fltol@exp1,f
  3312  025E                     l2013:
  3313  025E  1FAA               	btfss	___fltol@exp1,7
  3314  025F  2A61               	goto	u1791
  3315  0260  2A62               	goto	u1790
  3316  0261                     u1791:
  3317  0261  2A7C               	goto	l2023
  3318  0262                     u1790:
  3319  0262                     l2015:
  3320  0262  082A               	movf	___fltol@exp1,w
  3321  0263  3A80               	xorlw	128
  3322  0264  3E97               	addlw	151
  3323  0265  1803               	skipnc
  3324  0266  2A68               	goto	u1801
  3325  0267  2A69               	goto	u1800
  3326  0268                     u1801:
  3327  0268  2A6A               	goto	l2021
  3328  0269                     u1800:
  3329  0269  2A35               	goto	l2001
  3330  026A                     l2021:
  3331  026A  3001               	movlw	1
  3332  026B                     u1815:
  3333  026B  1003               	clrc
  3334  026C  0CA3               	rrf	___fltol@f1+3,f
  3335  026D  0CA2               	rrf	___fltol@f1+2,f
  3336  026E  0CA1               	rrf	___fltol@f1+1,f
  3337  026F  0CA0               	rrf	___fltol@f1,f
  3338  0270  3EFF               	addlw	-1
  3339  0271  1D03               	skipz
  3340  0272  2A6B               	goto	u1815
  3341  0273  3001               	movlw	1
  3342  0274  00A4               	movwf	??___fltol
  3343  0275  0824               	movf	??___fltol,w
  3344  0276  07AA               	addwf	___fltol@exp1,f
  3345  0277  1D03               	btfss	3,2
  3346  0278  2A7A               	goto	u1821
  3347  0279  2A7B               	goto	u1820
  3348  027A                     u1821:
  3349  027A  2A6A               	goto	l2021
  3350  027B                     u1820:
  3351  027B  2A93               	goto	l2031
  3352  027C                     l2023:
  3353  027C  3020               	movlw	32
  3354  027D  022A               	subwf	___fltol@exp1,w
  3355  027E  1C03               	skipc
  3356  027F  2A81               	goto	u1831
  3357  0280  2A82               	goto	u1830
  3358  0281                     u1831:
  3359  0281  2A8E               	goto	l523
  3360  0282                     u1830:
  3361  0282  2A35               	goto	l2001
  3362  0283                     l2029:
  3363  0283  3001               	movlw	1
  3364  0284  00A4               	movwf	??___fltol
  3365  0285                     u1845:
  3366  0285  1003               	clrc
  3367  0286  0DA0               	rlf	___fltol@f1,f
  3368  0287  0DA1               	rlf	___fltol@f1+1,f
  3369  0288  0DA2               	rlf	___fltol@f1+2,f
  3370  0289  0DA3               	rlf	___fltol@f1+3,f
  3371  028A  0BA4               	decfsz	??___fltol,f
  3372  028B  2A85               	goto	u1845
  3373  028C  3001               	movlw	1
  3374  028D  02AA               	subwf	___fltol@exp1,f
  3375  028E                     l523:
  3376  028E  082A               	movf	___fltol@exp1,w
  3377  028F  1D03               	btfss	3,2
  3378  0290  2A92               	goto	u1851
  3379  0291  2A93               	goto	u1850
  3380  0292                     u1851:
  3381  0292  2A83               	goto	l2029
  3382  0293                     u1850:
  3383  0293                     l2031:
  3384  0293  0829               	movf	___fltol@sign1,w
  3385  0294  1903               	btfsc	3,2
  3386  0295  2A97               	goto	u1861
  3387  0296  2A98               	goto	u1860
  3388  0297                     u1861:
  3389  0297  2AA3               	goto	l526
  3390  0298                     u1860:
  3391  0298                     l2033:
  3392  0298  09A0               	comf	___fltol@f1,f
  3393  0299  09A1               	comf	___fltol@f1+1,f
  3394  029A  09A2               	comf	___fltol@f1+2,f
  3395  029B  09A3               	comf	___fltol@f1+3,f
  3396  029C  0AA0               	incf	___fltol@f1,f
  3397  029D  1903               	skipnz
  3398  029E  0AA1               	incf	___fltol@f1+1,f
  3399  029F  1903               	skipnz
  3400  02A0  0AA2               	incf	___fltol@f1+2,f
  3401  02A1  1903               	skipnz
  3402  02A2  0AA3               	incf	___fltol@f1+3,f
  3403  02A3                     l526:
  3404  02A3                     l516:
  3405  02A3  0008               	return
  3406  02A4                     __end_of___fltol:
  3407                           
  3408                           	psect	text14
  3409  0D78                     __ptext14:	
  3410 ;; *************** function _keypad_getkey *****************
  3411 ;; Defined at:
  3412 ;;		line 91 in file "./kbd.h"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;		None
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;  key             1    2[BANK0 ] unsigned char 
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      unsigned char 
  3419 ;; Registers used:
  3420 ;;		wreg, status,2, status,0, pclath, cstack
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMMON   BANK0   BANK1
  3426 ;;      Params:         0       0       0
  3427 ;;      Locals:         0       1       0
  3428 ;;      Temps:          0       1       0
  3429 ;;      Totals:         0       2       0
  3430 ;;Total ram usage:        2 bytes
  3431 ;; Hardware stack levels used: 1
  3432 ;; Hardware stack levels required when called: 1
  3433 ;; This function calls:
  3434 ;;		_keypad_readkey
  3435 ;; This function is called by:
  3436 ;;		_selector_type
  3437 ;;		_main
  3438 ;; This function uses a non-reentrant model
  3439 ;;
  3440                           
  3441                           
  3442                           ;psect for function _keypad_getkey
  3443  0D78                     _keypad_getkey:
  3444  0D78                     l2035:	
  3445                           ;incstack = 0
  3446                           ; Regs used in _keypad_getkey: [wreg+status,2+status,0+pclath+cstack]
  3447                           
  3448                           
  3449                           ;./kbd.h: 93:  unsigned char key = 'x';
  3450  0D78  3078               	movlw	120
  3451  0D79  1283               	bcf	3,5	;RP0=0, select bank0
  3452  0D7A  1303               	bcf	3,6	;RP1=0, select bank0
  3453  0D7B  00A1               	movwf	??_keypad_getkey
  3454  0D7C  0821               	movf	??_keypad_getkey,w
  3455  0D7D  00A2               	movwf	keypad_getkey@key
  3456                           
  3457                           ;./kbd.h: 96:  while(key == 'x')
  3458  0D7E  2D87               	goto	l2039
  3459  0D7F                     l2037:
  3460                           
  3461                           ;./kbd.h: 97:   key = keypad_readkey();
  3462  0D7F  118A  2707  158A   	fcall	_keypad_readkey
  3463  0D82  1283               	bcf	3,5	;RP0=0, select bank0
  3464  0D83  1303               	bcf	3,6	;RP1=0, select bank0
  3465  0D84  00A1               	movwf	??_keypad_getkey
  3466  0D85  0821               	movf	??_keypad_getkey,w
  3467  0D86  00A2               	movwf	keypad_getkey@key
  3468  0D87                     l2039:
  3469                           
  3470                           ;./kbd.h: 96:  while(key == 'x')
  3471  0D87  3078               	movlw	120
  3472  0D88  0622               	xorwf	keypad_getkey@key,w
  3473  0D89  1903               	btfsc	3,2
  3474  0D8A  2D8C               	goto	u1871
  3475  0D8B  2D8D               	goto	u1870
  3476  0D8C                     u1871:
  3477  0D8C  2D7F               	goto	l2037
  3478  0D8D                     u1870:
  3479  0D8D                     l2041:
  3480  0D8D  118A  2707  158A   	fcall	_keypad_readkey
  3481  0D90  3A78               	xorlw	120
  3482  0D91  1D03               	skipz
  3483  0D92  2D94               	goto	u1881
  3484  0D93  2D95               	goto	u1880
  3485  0D94                     u1881:
  3486  0D94  2D8D               	goto	l2041
  3487  0D95                     u1880:
  3488  0D95                     l2043:
  3489                           
  3490                           ;./kbd.h: 102:  return key;
  3491  0D95  1283               	bcf	3,5	;RP0=0, select bank0
  3492  0D96  1303               	bcf	3,6	;RP1=0, select bank0
  3493  0D97  0822               	movf	keypad_getkey@key,w
  3494  0D98                     l123:
  3495  0D98  0008               	return
  3496  0D99                     __end_of_keypad_getkey:
  3497                           
  3498                           	psect	text15
  3499  0707                     __ptext15:	
  3500 ;; *************** function _keypad_readkey *****************
  3501 ;; Defined at:
  3502 ;;		line 36 in file "./kbd.h"
  3503 ;; Parameters:    Size  Location     Type
  3504 ;;		None
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;		None
  3507 ;; Return value:  Size  Location     Type
  3508 ;;                  1    wreg      unsigned char 
  3509 ;; Registers used:
  3510 ;;		wreg
  3511 ;; Tracked objects:
  3512 ;;		On entry : 0/0
  3513 ;;		On exit  : 0/0
  3514 ;;		Unchanged: 0/0
  3515 ;; Data sizes:     COMMON   BANK0   BANK1
  3516 ;;      Params:         0       0       0
  3517 ;;      Locals:         0       0       0
  3518 ;;      Temps:          0       1       0
  3519 ;;      Totals:         0       1       0
  3520 ;;Total ram usage:        1 bytes
  3521 ;; Hardware stack levels used: 1
  3522 ;; This function calls:
  3523 ;;		Nothing
  3524 ;; This function is called by:
  3525 ;;		_keypad_getkey
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           
  3529                           
  3530                           ;psect for function _keypad_readkey
  3531  0707                     _keypad_readkey:
  3532  0707                     l1825:	
  3533                           ;incstack = 0
  3534                           ; Regs used in _keypad_readkey: [wreg]
  3535                           
  3536                           
  3537                           ;./kbd.h: 38:     RC1 = 1;
  3538  0707  1283               	bcf	3,5	;RP0=0, select bank0
  3539  0708  1303               	bcf	3,6	;RP1=0, select bank0
  3540  0709  1487               	bsf	7,1	;volatile
  3541                           
  3542                           ;./kbd.h: 39:     RC0 = 0;
  3543  070A  1007               	bcf	7,0	;volatile
  3544                           
  3545                           ;./kbd.h: 40:     RA5 = 0;
  3546  070B  1285               	bcf	5,5	;volatile
  3547                           
  3548                           ;./kbd.h: 41:     RA4 = 0;
  3549  070C  1205               	bcf	5,4	;volatile
  3550  070D                     l1827:
  3551                           
  3552                           ;./kbd.h: 42:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  3553  070D  304F               	movlw	79
  3554  070E  1283               	bcf	3,5	;RP0=0, select bank0
  3555  070F  1303               	bcf	3,6	;RP1=0, select bank0
  3556  0710  00A0               	movwf	??_keypad_readkey
  3557  0711                     u2167:
  3558  0711  0BA0               	decfsz	??_keypad_readkey,f
  3559  0712  2F11               	goto	u2167
  3560  0713  0000               	nop
  3561  0714                     l1829:
  3562                           
  3563                           ;./kbd.h: 44:     if(RC1==1 && RC0==0 && RA5==0 && RA4==0) {
  3564  0714  1283               	bcf	3,5	;RP0=0, select bank0
  3565  0715  1303               	bcf	3,6	;RP1=0, select bank0
  3566  0716  1C87               	btfss	7,1	;volatile
  3567  0717  2F19               	goto	u1421
  3568  0718  2F1A               	goto	u1420
  3569  0719                     u1421:
  3570  0719  2F3E               	goto	l94
  3571  071A                     u1420:
  3572  071A                     l1831:
  3573  071A  1807               	btfsc	7,0	;volatile
  3574  071B  2F1D               	goto	u1431
  3575  071C  2F1E               	goto	u1430
  3576  071D                     u1431:
  3577  071D  2F3E               	goto	l94
  3578  071E                     u1430:
  3579  071E                     l1833:
  3580  071E  1A85               	btfsc	5,5	;volatile
  3581  071F  2F21               	goto	u1441
  3582  0720  2F22               	goto	u1440
  3583  0721                     u1441:
  3584  0721  2F3E               	goto	l94
  3585  0722                     u1440:
  3586  0722                     l1835:
  3587  0722  1A05               	btfsc	5,4	;volatile
  3588  0723  2F25               	goto	u1451
  3589  0724  2F26               	goto	u1450
  3590  0725                     u1451:
  3591  0725  2F3E               	goto	l94
  3592  0726                     u1450:
  3593  0726                     l1837:
  3594                           
  3595                           ;./kbd.h: 45:         if (RA0 == 1) return '*';
  3596  0726  1C05               	btfss	5,0	;volatile
  3597  0727  2F29               	goto	u1461
  3598  0728  2F2A               	goto	u1460
  3599  0729                     u1461:
  3600  0729  2F2C               	goto	l95
  3601  072A                     u1460:
  3602  072A                     l1839:
  3603  072A  302A               	movlw	42
  3604  072B  2FDE               	goto	l96
  3605  072C                     l95:
  3606                           
  3607                           ;./kbd.h: 46:         if (RA1 == 1) return '0';
  3608  072C  1C85               	btfss	5,1	;volatile
  3609  072D  2F2F               	goto	u1471
  3610  072E  2F30               	goto	u1470
  3611  072F                     u1471:
  3612  072F  2F32               	goto	l97
  3613  0730                     u1470:
  3614  0730                     l1843:
  3615  0730  3030               	movlw	48
  3616  0731  2FDE               	goto	l96
  3617  0732                     l97:
  3618                           
  3619                           ;./kbd.h: 47:         if (RA2 == 1) return '#';
  3620  0732  1D05               	btfss	5,2	;volatile
  3621  0733  2F35               	goto	u1481
  3622  0734  2F36               	goto	u1480
  3623  0735                     u1481:
  3624  0735  2F38               	goto	l98
  3625  0736                     u1480:
  3626  0736                     l1847:
  3627  0736  3023               	movlw	35
  3628  0737  2FDE               	goto	l96
  3629  0738                     l98:
  3630                           
  3631                           ;./kbd.h: 48:         if (RA3 == 1) return 'D';
  3632  0738  1D85               	btfss	5,3	;volatile
  3633  0739  2F3B               	goto	u1491
  3634  073A  2F3C               	goto	u1490
  3635  073B                     u1491:
  3636  073B  2F3E               	goto	l94
  3637  073C                     u1490:
  3638  073C                     l1851:
  3639  073C  3044               	movlw	68
  3640  073D  2FDE               	goto	l96
  3641  073E                     l94:	
  3642                           ;./kbd.h: 49:     }
  3643                           
  3644                           
  3645                           ;./kbd.h: 50:     RC1 = 0;
  3646  073E  1087               	bcf	7,1	;volatile
  3647                           
  3648                           ;./kbd.h: 51:     RC0 = 1;
  3649  073F  1407               	bsf	7,0	;volatile
  3650                           
  3651                           ;./kbd.h: 52:     RA5 = 0;
  3652  0740  1285               	bcf	5,5	;volatile
  3653                           
  3654                           ;./kbd.h: 53:     RA4 = 0;
  3655  0741  1205               	bcf	5,4	;volatile
  3656  0742                     l1855:
  3657                           
  3658                           ;./kbd.h: 54:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  3659  0742  304F               	movlw	79
  3660  0743  1283               	bcf	3,5	;RP0=0, select bank0
  3661  0744  1303               	bcf	3,6	;RP1=0, select bank0
  3662  0745  00A0               	movwf	??_keypad_readkey
  3663  0746                     u2177:
  3664  0746  0BA0               	decfsz	??_keypad_readkey,f
  3665  0747  2F46               	goto	u2177
  3666  0748  0000               	nop
  3667  0749                     l1857:
  3668                           
  3669                           ;./kbd.h: 56:     if(RC1==0 && RC0==1 && RA5==0 && RA4==0) {
  3670  0749  1283               	bcf	3,5	;RP0=0, select bank0
  3671  074A  1303               	bcf	3,6	;RP1=0, select bank0
  3672  074B  1887               	btfsc	7,1	;volatile
  3673  074C  2F4E               	goto	u1501
  3674  074D  2F4F               	goto	u1500
  3675  074E                     u1501:
  3676  074E  2F73               	goto	l100
  3677  074F                     u1500:
  3678  074F                     l1859:
  3679  074F  1C07               	btfss	7,0	;volatile
  3680  0750  2F52               	goto	u1511
  3681  0751  2F53               	goto	u1510
  3682  0752                     u1511:
  3683  0752  2F73               	goto	l100
  3684  0753                     u1510:
  3685  0753                     l1861:
  3686  0753  1A85               	btfsc	5,5	;volatile
  3687  0754  2F56               	goto	u1521
  3688  0755  2F57               	goto	u1520
  3689  0756                     u1521:
  3690  0756  2F73               	goto	l100
  3691  0757                     u1520:
  3692  0757                     l1863:
  3693  0757  1A05               	btfsc	5,4	;volatile
  3694  0758  2F5A               	goto	u1531
  3695  0759  2F5B               	goto	u1530
  3696  075A                     u1531:
  3697  075A  2F73               	goto	l100
  3698  075B                     u1530:
  3699  075B                     l1865:
  3700                           
  3701                           ;./kbd.h: 57:         if (RA0 == 1) return '1';
  3702  075B  1C05               	btfss	5,0	;volatile
  3703  075C  2F5E               	goto	u1541
  3704  075D  2F5F               	goto	u1540
  3705  075E                     u1541:
  3706  075E  2F61               	goto	l101
  3707  075F                     u1540:
  3708  075F                     l1867:
  3709  075F  3031               	movlw	49
  3710  0760  2FDE               	goto	l96
  3711  0761                     l101:
  3712                           
  3713                           ;./kbd.h: 58:         if (RA1 == 1) return '2';
  3714  0761  1C85               	btfss	5,1	;volatile
  3715  0762  2F64               	goto	u1551
  3716  0763  2F65               	goto	u1550
  3717  0764                     u1551:
  3718  0764  2F67               	goto	l102
  3719  0765                     u1550:
  3720  0765                     l1871:
  3721  0765  3032               	movlw	50
  3722  0766  2FDE               	goto	l96
  3723  0767                     l102:
  3724                           
  3725                           ;./kbd.h: 59:         if (RA2 == 1) return '3';
  3726  0767  1D05               	btfss	5,2	;volatile
  3727  0768  2F6A               	goto	u1561
  3728  0769  2F6B               	goto	u1560
  3729  076A                     u1561:
  3730  076A  2F6D               	goto	l103
  3731  076B                     u1560:
  3732  076B                     l1875:
  3733  076B  3033               	movlw	51
  3734  076C  2FDE               	goto	l96
  3735  076D                     l103:
  3736                           
  3737                           ;./kbd.h: 60:         if (RA3 == 1) return 'C';
  3738  076D  1D85               	btfss	5,3	;volatile
  3739  076E  2F70               	goto	u1571
  3740  076F  2F71               	goto	u1570
  3741  0770                     u1571:
  3742  0770  2F73               	goto	l100
  3743  0771                     u1570:
  3744  0771                     l1879:
  3745  0771  3043               	movlw	67
  3746  0772  2FDE               	goto	l96
  3747  0773                     l100:	
  3748                           ;./kbd.h: 61:     }
  3749                           
  3750                           
  3751                           ;./kbd.h: 63:     RC1 = 0;
  3752  0773  1087               	bcf	7,1	;volatile
  3753                           
  3754                           ;./kbd.h: 64:     RC0 = 0;
  3755  0774  1007               	bcf	7,0	;volatile
  3756                           
  3757                           ;./kbd.h: 65:     RA5 = 1;
  3758  0775  1685               	bsf	5,5	;volatile
  3759                           
  3760                           ;./kbd.h: 66:     RA4 = 0;
  3761  0776  1205               	bcf	5,4	;volatile
  3762  0777                     l1883:
  3763                           
  3764                           ;./kbd.h: 67:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  3765  0777  304F               	movlw	79
  3766  0778  1283               	bcf	3,5	;RP0=0, select bank0
  3767  0779  1303               	bcf	3,6	;RP1=0, select bank0
  3768  077A  00A0               	movwf	??_keypad_readkey
  3769  077B                     u2187:
  3770  077B  0BA0               	decfsz	??_keypad_readkey,f
  3771  077C  2F7B               	goto	u2187
  3772  077D  0000               	nop
  3773  077E                     l1885:
  3774                           
  3775                           ;./kbd.h: 69:     if(RC1==0 && RC0==0 && RA5==1 && RA4==0) {
  3776  077E  1283               	bcf	3,5	;RP0=0, select bank0
  3777  077F  1303               	bcf	3,6	;RP1=0, select bank0
  3778  0780  1887               	btfsc	7,1	;volatile
  3779  0781  2F83               	goto	u1581
  3780  0782  2F84               	goto	u1580
  3781  0783                     u1581:
  3782  0783  2FA8               	goto	l105
  3783  0784                     u1580:
  3784  0784                     l1887:
  3785  0784  1807               	btfsc	7,0	;volatile
  3786  0785  2F87               	goto	u1591
  3787  0786  2F88               	goto	u1590
  3788  0787                     u1591:
  3789  0787  2FA8               	goto	l105
  3790  0788                     u1590:
  3791  0788                     l1889:
  3792  0788  1E85               	btfss	5,5	;volatile
  3793  0789  2F8B               	goto	u1601
  3794  078A  2F8C               	goto	u1600
  3795  078B                     u1601:
  3796  078B  2FA8               	goto	l105
  3797  078C                     u1600:
  3798  078C                     l1891:
  3799  078C  1A05               	btfsc	5,4	;volatile
  3800  078D  2F8F               	goto	u1611
  3801  078E  2F90               	goto	u1610
  3802  078F                     u1611:
  3803  078F  2FA8               	goto	l105
  3804  0790                     u1610:
  3805  0790                     l1893:
  3806                           
  3807                           ;./kbd.h: 70:         if (RA0 == 1) return '4';
  3808  0790  1C05               	btfss	5,0	;volatile
  3809  0791  2F93               	goto	u1621
  3810  0792  2F94               	goto	u1620
  3811  0793                     u1621:
  3812  0793  2F96               	goto	l106
  3813  0794                     u1620:
  3814  0794                     l1895:
  3815  0794  3034               	movlw	52
  3816  0795  2FDE               	goto	l96
  3817  0796                     l106:
  3818                           
  3819                           ;./kbd.h: 71:         if (RA1 == 1) return '5';
  3820  0796  1C85               	btfss	5,1	;volatile
  3821  0797  2F99               	goto	u1631
  3822  0798  2F9A               	goto	u1630
  3823  0799                     u1631:
  3824  0799  2F9C               	goto	l107
  3825  079A                     u1630:
  3826  079A                     l1899:
  3827  079A  3035               	movlw	53
  3828  079B  2FDE               	goto	l96
  3829  079C                     l107:
  3830                           
  3831                           ;./kbd.h: 72:         if (RA2 == 1) return '6';
  3832  079C  1D05               	btfss	5,2	;volatile
  3833  079D  2F9F               	goto	u1641
  3834  079E  2FA0               	goto	u1640
  3835  079F                     u1641:
  3836  079F  2FA2               	goto	l108
  3837  07A0                     u1640:
  3838  07A0                     l1903:
  3839  07A0  3036               	movlw	54
  3840  07A1  2FDE               	goto	l96
  3841  07A2                     l108:
  3842                           
  3843                           ;./kbd.h: 73:         if (RA3 == 1) return 'B';
  3844  07A2  1D85               	btfss	5,3	;volatile
  3845  07A3  2FA5               	goto	u1651
  3846  07A4  2FA6               	goto	u1650
  3847  07A5                     u1651:
  3848  07A5  2FA8               	goto	l105
  3849  07A6                     u1650:
  3850  07A6                     l1907:
  3851  07A6  3042               	movlw	66
  3852  07A7  2FDE               	goto	l96
  3853  07A8                     l105:	
  3854                           ;./kbd.h: 74:     }
  3855                           
  3856                           
  3857                           ;./kbd.h: 76:     RC1 = 0;
  3858  07A8  1087               	bcf	7,1	;volatile
  3859                           
  3860                           ;./kbd.h: 77:     RC0 = 0;
  3861  07A9  1007               	bcf	7,0	;volatile
  3862                           
  3863                           ;./kbd.h: 78:     RA5 = 0;
  3864  07AA  1285               	bcf	5,5	;volatile
  3865                           
  3866                           ;./kbd.h: 79:     RA4 = 1;
  3867  07AB  1605               	bsf	5,4	;volatile
  3868  07AC                     l1911:
  3869                           
  3870                           ;./kbd.h: 80:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  3871  07AC  304F               	movlw	79
  3872  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  3873  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  3874  07AF  00A0               	movwf	??_keypad_readkey
  3875  07B0                     u2197:
  3876  07B0  0BA0               	decfsz	??_keypad_readkey,f
  3877  07B1  2FB0               	goto	u2197
  3878  07B2  0000               	nop
  3879  07B3                     l1913:
  3880                           
  3881                           ;./kbd.h: 82:     if(RC1==0 && RC0==0 && RA5==0 && RA4==1) {
  3882  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  3883  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  3884  07B5  1887               	btfsc	7,1	;volatile
  3885  07B6  2FB8               	goto	u1661
  3886  07B7  2FB9               	goto	u1660
  3887  07B8                     u1661:
  3888  07B8  2FDD               	goto	l1939
  3889  07B9                     u1660:
  3890  07B9                     l1915:
  3891  07B9  1807               	btfsc	7,0	;volatile
  3892  07BA  2FBC               	goto	u1671
  3893  07BB  2FBD               	goto	u1670
  3894  07BC                     u1671:
  3895  07BC  2FDD               	goto	l1939
  3896  07BD                     u1670:
  3897  07BD                     l1917:
  3898  07BD  1A85               	btfsc	5,5	;volatile
  3899  07BE  2FC0               	goto	u1681
  3900  07BF  2FC1               	goto	u1680
  3901  07C0                     u1681:
  3902  07C0  2FDD               	goto	l1939
  3903  07C1                     u1680:
  3904  07C1                     l1919:
  3905  07C1  1E05               	btfss	5,4	;volatile
  3906  07C2  2FC4               	goto	u1691
  3907  07C3  2FC5               	goto	u1690
  3908  07C4                     u1691:
  3909  07C4  2FDD               	goto	l1939
  3910  07C5                     u1690:
  3911  07C5                     l1921:
  3912                           
  3913                           ;./kbd.h: 83:         if (RA0 == 1) return '7';
  3914  07C5  1C05               	btfss	5,0	;volatile
  3915  07C6  2FC8               	goto	u1701
  3916  07C7  2FC9               	goto	u1700
  3917  07C8                     u1701:
  3918  07C8  2FCB               	goto	l111
  3919  07C9                     u1700:
  3920  07C9                     l1923:
  3921  07C9  3037               	movlw	55
  3922  07CA  2FDE               	goto	l96
  3923  07CB                     l111:
  3924                           
  3925                           ;./kbd.h: 84:         if (RA1 == 1) return '8';
  3926  07CB  1C85               	btfss	5,1	;volatile
  3927  07CC  2FCE               	goto	u1711
  3928  07CD  2FCF               	goto	u1710
  3929  07CE                     u1711:
  3930  07CE  2FD1               	goto	l112
  3931  07CF                     u1710:
  3932  07CF                     l1927:
  3933  07CF  3038               	movlw	56
  3934  07D0  2FDE               	goto	l96
  3935  07D1                     l112:
  3936                           
  3937                           ;./kbd.h: 85:         if (RA2 == 1) return '9';
  3938  07D1  1D05               	btfss	5,2	;volatile
  3939  07D2  2FD4               	goto	u1721
  3940  07D3  2FD5               	goto	u1720
  3941  07D4                     u1721:
  3942  07D4  2FD7               	goto	l113
  3943  07D5                     u1720:
  3944  07D5                     l1931:
  3945  07D5  3039               	movlw	57
  3946  07D6  2FDE               	goto	l96
  3947  07D7                     l113:
  3948                           
  3949                           ;./kbd.h: 86:         if (RA3 == 1) return 'A';
  3950  07D7  1D85               	btfss	5,3	;volatile
  3951  07D8  2FDA               	goto	u1731
  3952  07D9  2FDB               	goto	u1730
  3953  07DA                     u1731:
  3954  07DA  2FDD               	goto	l1939
  3955  07DB                     u1730:
  3956  07DB                     l1935:
  3957  07DB  3041               	movlw	65
  3958  07DC  2FDE               	goto	l96
  3959  07DD                     l1939:
  3960                           
  3961                           ;./kbd.h: 88:  return 'x';
  3962  07DD  3078               	movlw	120
  3963  07DE                     l96:
  3964  07DE  0008               	return
  3965  07DF                     __end_of_keypad_readkey:
  3966                           
  3967                           	psect	text16
  3968  02A4                     __ptext16:	
  3969 ;; *************** function _conditional_screen *****************
  3970 ;; Defined at:
  3971 ;;		line 96 in file "main.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;  x               2   10[BANK0 ] int 
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;  msj            14   26[BANK0 ] unsigned char [14]
  3976 ;;  con            10   16[BANK0 ] unsigned char [10]
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  1    wreg      void 
  3979 ;; Registers used:
  3980 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMMON   BANK0   BANK1
  3986 ;;      Params:         0       2       0
  3987 ;;      Locals:         0      24       0
  3988 ;;      Temps:          0       4       0
  3989 ;;      Totals:         0      30       0
  3990 ;;Total ram usage:       30 bytes
  3991 ;; Hardware stack levels used: 1
  3992 ;; Hardware stack levels required when called: 3
  3993 ;; This function calls:
  3994 ;;		_LCD_Cmd
  3995 ;;		_LCD_Goto
  3996 ;;		_LCD_Print
  3997 ;;		_strcat
  3998 ;; This function is called by:
  3999 ;;		_selector_type
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003                           
  4004                           ;psect for function _conditional_screen
  4005  02A4                     _conditional_screen:
  4006  02A4                     l2067:	
  4007                           ;incstack = 0
  4008                           ; Regs used in _conditional_screen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4009                           
  4010                           
  4011                           ;main.c: 96: void conditional_screen(int x);main.c: 97: {;main.c: 98:     char msj[]="Ca
      +                          mbiar cond.";
  4012  02A4  303A               	movlw	conditional_screen@msj& (0+255)
  4013  02A5  0084               	movwf	4
  4014  02A6  30A0               	movlw	low conditional_screen@F1118
  4015  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  4016  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  4017  02A9  00AC               	movwf	??_conditional_screen
  4018  02AA  0804               	movf	4,w
  4019  02AB  00AD               	movwf	??_conditional_screen+1
  4020  02AC  300E               	movlw	14
  4021  02AD  00AE               	movwf	??_conditional_screen+2
  4022  02AE                     u1920:
  4023  02AE  082C               	movf	??_conditional_screen,w
  4024  02AF  0084               	movwf	4
  4025  02B0  1383               	bcf	3,7	;select IRP bank1
  4026  02B1  0800               	movf	0,w
  4027  02B2  00AF               	movwf	??_conditional_screen+3
  4028  02B3  0AAC               	incf	??_conditional_screen,f
  4029  02B4  082D               	movf	??_conditional_screen+1,w
  4030  02B5  0084               	movwf	4
  4031  02B6  082F               	movf	??_conditional_screen+3,w
  4032  02B7  0080               	movwf	0
  4033  02B8  0AAD               	incf	??_conditional_screen+1,f
  4034  02B9  0BAE               	decfsz	??_conditional_screen+2,f
  4035  02BA  2AAE               	goto	u1920
  4036                           
  4037                           ;main.c: 99:     char con[]="1.Si 2.No";
  4038  02BB  3030               	movlw	conditional_screen@con& (0+255)
  4039  02BC  0084               	movwf	4
  4040  02BD  30B8               	movlw	low conditional_screen@F1120
  4041  02BE  00AC               	movwf	??_conditional_screen
  4042  02BF  0804               	movf	4,w
  4043  02C0  00AD               	movwf	??_conditional_screen+1
  4044  02C1  300A               	movlw	10
  4045  02C2  00AE               	movwf	??_conditional_screen+2
  4046  02C3                     u1930:
  4047  02C3  082C               	movf	??_conditional_screen,w
  4048  02C4  0084               	movwf	4
  4049  02C5  1383               	bcf	3,7	;select IRP bank1
  4050  02C6  0800               	movf	0,w
  4051  02C7  00AF               	movwf	??_conditional_screen+3
  4052  02C8  0AAC               	incf	??_conditional_screen,f
  4053  02C9  082D               	movf	??_conditional_screen+1,w
  4054  02CA  0084               	movwf	4
  4055  02CB  082F               	movf	??_conditional_screen+3,w
  4056  02CC  0080               	movwf	0
  4057  02CD  0AAD               	incf	??_conditional_screen+1,f
  4058  02CE  0BAE               	decfsz	??_conditional_screen+2,f
  4059  02CF  2AC3               	goto	u1930
  4060  02D0                     l2069:
  4061                           
  4062                           ;main.c: 100:     LCD_Cmd(0x01);
  4063  02D0  3001               	movlw	1
  4064  02D1  158A  25E4  118A   	fcall	_LCD_Cmd
  4065  02D4                     l2071:
  4066                           
  4067                           ;main.c: 101:     if(x==1)
  4068  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  4069  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  4070  02D6  032A               	decf	conditional_screen@x,w
  4071  02D7  042B               	iorwf	conditional_screen@x+1,w
  4072  02D8  1D03               	btfss	3,2
  4073  02D9  2ADB               	goto	u1941
  4074  02DA  2ADC               	goto	u1940
  4075  02DB                     u1941:
  4076  02DB  2AE5               	goto	l2075
  4077  02DC                     u1940:
  4078  02DC                     l2073:
  4079                           
  4080                           ;main.c: 102:     {;main.c: 103:         strcat(msj," V");
  4081  02DC  305A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  4082  02DD  00A0               	movwf	strcat@from
  4083  02DE  3080               	movlw	128
  4084  02DF  00A1               	movwf	strcat@from+1
  4085  02E0  303A               	movlw	(low (conditional_screen@msj| 0))& (0+255)
  4086  02E1  158A  2642  118A   	fcall	_strcat
  4087                           
  4088                           ;main.c: 104:     }
  4089  02E4  2B04               	goto	l2083
  4090  02E5                     l2075:
  4091  02E5  3002               	movlw	2
  4092  02E6  062A               	xorwf	conditional_screen@x,w
  4093  02E7  042B               	iorwf	conditional_screen@x+1,w
  4094  02E8  1D03               	btfss	3,2
  4095  02E9  2AEB               	goto	u1951
  4096  02EA  2AEC               	goto	u1950
  4097  02EB                     u1951:
  4098  02EB  2AF5               	goto	l2079
  4099  02EC                     u1950:
  4100  02EC                     l2077:
  4101                           
  4102                           ;main.c: 106:     {;main.c: 107:         strcat(msj," F1");
  4103  02EC  304B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  4104  02ED  00A0               	movwf	strcat@from
  4105  02EE  3080               	movlw	128
  4106  02EF  00A1               	movwf	strcat@from+1
  4107  02F0  303A               	movlw	(low (conditional_screen@msj| 0))& (0+255)
  4108  02F1  158A  2642  118A   	fcall	_strcat
  4109                           
  4110                           ;main.c: 108:     }
  4111  02F4  2B04               	goto	l2083
  4112  02F5                     l2079:
  4113  02F5  3003               	movlw	3
  4114  02F6  062A               	xorwf	conditional_screen@x,w
  4115  02F7  042B               	iorwf	conditional_screen@x+1,w
  4116  02F8  1D03               	btfss	3,2
  4117  02F9  2AFB               	goto	u1961
  4118  02FA  2AFC               	goto	u1960
  4119  02FB                     u1961:
  4120  02FB  2B04               	goto	l2083
  4121  02FC                     u1960:
  4122  02FC                     l2081:
  4123                           
  4124                           ;main.c: 110:     {;main.c: 111:         strcat(msj," F2");
  4125  02FC  304F               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  4126  02FD  00A0               	movwf	strcat@from
  4127  02FE  3080               	movlw	128
  4128  02FF  00A1               	movwf	strcat@from+1
  4129  0300  303A               	movlw	(low (conditional_screen@msj| 0))& (0+255)
  4130  0301  158A  2642  118A   	fcall	_strcat
  4131  0304                     l2083:
  4132                           
  4133                           ;main.c: 113:     LCD_Goto(1,1);
  4134  0304  1283               	bcf	3,5	;RP0=0, select bank0
  4135  0305  1303               	bcf	3,6	;RP1=0, select bank0
  4136  0306  01A6               	clrf	LCD_Goto@row
  4137  0307  0AA6               	incf	LCD_Goto@row,f
  4138  0308  3001               	movlw	1
  4139  0309  158A  2612  118A   	fcall	_LCD_Goto
  4140  030C                     l2085:
  4141                           
  4142                           ;main.c: 114:     LCD_Print(msj);
  4143  030C  303A               	movlw	(low (conditional_screen@msj| 0))& (0+255)
  4144  030D  1283               	bcf	3,5	;RP0=0, select bank0
  4145  030E  1303               	bcf	3,6	;RP1=0, select bank0
  4146  030F  00A3               	movwf	LCD_Print@LCD_Str
  4147  0310  3000               	movlw	0
  4148  0311  00A4               	movwf	LCD_Print@LCD_Str+1
  4149  0312  158A  271F  118A   	fcall	_LCD_Print
  4150                           
  4151                           ;main.c: 115:     LCD_Goto(1,2);
  4152  0315  3002               	movlw	2
  4153  0316  1283               	bcf	3,5	;RP0=0, select bank0
  4154  0317  1303               	bcf	3,6	;RP1=0, select bank0
  4155  0318  00AC               	movwf	??_conditional_screen
  4156  0319  082C               	movf	??_conditional_screen,w
  4157  031A  00A6               	movwf	LCD_Goto@row
  4158  031B  3001               	movlw	1
  4159  031C  158A  2612  118A   	fcall	_LCD_Goto
  4160  031F                     l2087:
  4161                           
  4162                           ;main.c: 116:     LCD_Print(con);
  4163  031F  3030               	movlw	(low (conditional_screen@con| 0))& (0+255)
  4164  0320  1283               	bcf	3,5	;RP0=0, select bank0
  4165  0321  1303               	bcf	3,6	;RP1=0, select bank0
  4166  0322  00A3               	movwf	LCD_Print@LCD_Str
  4167  0323  3000               	movlw	0
  4168  0324  00A4               	movwf	LCD_Print@LCD_Str+1
  4169  0325  158A  271F  118A   	fcall	_LCD_Print
  4170  0328                     l171:
  4171  0328  0008               	return
  4172  0329                     __end_of_conditional_screen:
  4173                           
  4174                           	psect	text17
  4175  0E42                     __ptext17:	
  4176 ;; *************** function _strcat *****************
  4177 ;; Defined at:
  4178 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strcat.c"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;  to              1    wreg     PTR unsigned char 
  4181 ;;		 -> screen_selector@value(1), ventilator_screen@vel(5), ventilator_screen@vol(10), conditional_screen@msj(14), 
  4182 ;;  from            2    0[BANK0 ] PTR const unsigned char 
  4183 ;;		 -> STR_9(4), STR_5(5), STR_4(3), ventilator_screen@vel_value(1), 
  4184 ;;		 -> ventilator_screen@vel_number(1), ventilator_screen@vol_value(1), STR_3(4), STR_2(4), 
  4185 ;;		 -> STR_1(3), 
  4186 ;; Auto vars:     Size  Location     Type
  4187 ;;  to              1    4[BANK0 ] PTR unsigned char 
  4188 ;;		 -> screen_selector@value(1), ventilator_screen@vel(5), ventilator_screen@vol(10), conditional_screen@msj(14), 
  4189 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  4190 ;;		 -> screen_selector@value(1), ventilator_screen@vel(5), ventilator_screen@vol(10), conditional_screen@msj(14), 
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  1    wreg      PTR unsigned char 
  4193 ;; Registers used:
  4194 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMMON   BANK0   BANK1
  4200 ;;      Params:         0       2       0
  4201 ;;      Locals:         0       2       0
  4202 ;;      Temps:          0       1       0
  4203 ;;      Totals:         0       5       0
  4204 ;;Total ram usage:        5 bytes
  4205 ;; Hardware stack levels used: 2
  4206 ;; This function calls:
  4207 ;;		Nothing
  4208 ;; This function is called by:
  4209 ;;		_conditional_screen
  4210 ;;		_ventilator_screen
  4211 ;;		_screen_selector
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214                           
  4215                           
  4216                           ;psect for function _strcat
  4217  0E42                     _strcat:
  4218                           
  4219                           ;incstack = 0
  4220                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  4221                           ;strcat@to stored from wreg
  4222  0E42  1283               	bcf	3,5	;RP0=0, select bank0
  4223  0E43  1303               	bcf	3,6	;RP1=0, select bank0
  4224  0E44  00A4               	movwf	strcat@to
  4225  0E45                     l1943:
  4226  0E45  0824               	movf	strcat@to,w
  4227  0E46  00A2               	movwf	??_strcat
  4228  0E47  0822               	movf	??_strcat,w
  4229  0E48  00A3               	movwf	strcat@cp
  4230  0E49  2E4E               	goto	l1947
  4231  0E4A                     l1945:
  4232  0E4A  3001               	movlw	1
  4233  0E4B  00A2               	movwf	??_strcat
  4234  0E4C  0822               	movf	??_strcat,w
  4235  0E4D  07A3               	addwf	strcat@cp,f
  4236  0E4E                     l1947:
  4237  0E4E  0823               	movf	strcat@cp,w
  4238  0E4F  0084               	movwf	4
  4239  0E50  1383               	bcf	3,7	;select IRP bank0
  4240  0E51  0800               	movf	0,w
  4241  0E52  1D03               	btfss	3,2
  4242  0E53  2E55               	goto	u1741
  4243  0E54  2E56               	goto	u1740
  4244  0E55                     u1741:
  4245  0E55  2E4A               	goto	l1945
  4246  0E56                     u1740:
  4247  0E56  2E61               	goto	l1953
  4248  0E57                     l1949:
  4249  0E57  3001               	movlw	1
  4250  0E58  00A2               	movwf	??_strcat
  4251  0E59  0822               	movf	??_strcat,w
  4252  0E5A  07A3               	addwf	strcat@cp,f
  4253  0E5B                     l1951:
  4254  0E5B  3001               	movlw	1
  4255  0E5C  07A0               	addwf	strcat@from,f
  4256  0E5D  1803               	skipnc
  4257  0E5E  0AA1               	incf	strcat@from+1,f
  4258  0E5F  3000               	movlw	0
  4259  0E60  07A1               	addwf	strcat@from+1,f
  4260  0E61                     l1953:
  4261  0E61  0821               	movf	strcat@from+1,w
  4262  0E62  00FF               	movwf	btemp+1
  4263  0E63  0820               	movf	strcat@from,w
  4264  0E64  0084               	movwf	4
  4265  0E65  118A  2002  158A   	fcall	stringtab
  4266  0E68  00A2               	movwf	??_strcat
  4267  0E69  0823               	movf	strcat@cp,w
  4268  0E6A  0084               	movwf	4
  4269  0E6B  0822               	movf	??_strcat,w
  4270  0E6C  1383               	bcf	3,7	;select IRP bank0
  4271  0E6D  0080               	movwf	0
  4272  0E6E  0800               	movf	0,w
  4273  0E6F  1D03               	btfss	3,2
  4274  0E70  2E72               	goto	u1751
  4275  0E71  2E73               	goto	u1750
  4276  0E72                     u1751:
  4277  0E72  2E57               	goto	l1949
  4278  0E73                     u1750:
  4279  0E73                     l821:
  4280  0E73  0008               	return
  4281  0E74                     __end_of_strcat:
  4282                           
  4283                           	psect	text18
  4284  0EAB                     __ptext18:	
  4285 ;; *************** function _load_values *****************
  4286 ;; Defined at:
  4287 ;;		line 42 in file "main.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;		None
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;		None
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  1    wreg      void 
  4294 ;; Registers used:
  4295 ;;		wreg, status,2, status,0, pclath, cstack
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMMON   BANK0   BANK1
  4301 ;;      Params:         0       0       0
  4302 ;;      Locals:         0       0       0
  4303 ;;      Temps:          0       1       0
  4304 ;;      Totals:         0       1       0
  4305 ;;Total ram usage:        1 bytes
  4306 ;; Hardware stack levels used: 1
  4307 ;; Hardware stack levels required when called: 1
  4308 ;; This function calls:
  4309 ;;		_eeprom_write
  4310 ;; This function is called by:
  4311 ;;		_main
  4312 ;; This function uses a non-reentrant model
  4313 ;;
  4314                           
  4315                           
  4316                           ;psect for function _load_values
  4317  0EAB                     _load_values:
  4318  0EAB                     l2193:	
  4319                           ;incstack = 0
  4320                           ; Regs used in _load_values: [wreg+status,2+status,0+pclath+cstack]
  4321                           
  4322                           
  4323                           ;main.c: 44:         eeprom_write(0x00,4);
  4324  0EAB  3004               	movlw	4
  4325  0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  4326  0EAD  1303               	bcf	3,6	;RP1=0, select bank0
  4327  0EAE  00A3               	movwf	??_load_values
  4328  0EAF  0823               	movf	??_load_values,w
  4329  0EB0  00A0               	movwf	eeprom_write@value
  4330  0EB1  3000               	movlw	0
  4331  0EB2  158A  2674  158A   	fcall	_eeprom_write
  4332                           
  4333                           ;main.c: 45:         eeprom_write(0x01,5);
  4334  0EB5  3005               	movlw	5
  4335  0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  4336  0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  4337  0EB8  00A3               	movwf	??_load_values
  4338  0EB9  0823               	movf	??_load_values,w
  4339  0EBA  00A0               	movwf	eeprom_write@value
  4340  0EBB  3001               	movlw	1
  4341  0EBC  158A  2674  158A   	fcall	_eeprom_write
  4342                           
  4343                           ;main.c: 46:         eeprom_write(0x02,3);
  4344  0EBF  3003               	movlw	3
  4345  0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  4346  0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  4347  0EC2  00A3               	movwf	??_load_values
  4348  0EC3  0823               	movf	??_load_values,w
  4349  0EC4  00A0               	movwf	eeprom_write@value
  4350  0EC5  3002               	movlw	2
  4351  0EC6  158A  2674  158A   	fcall	_eeprom_write
  4352                           
  4353                           ;main.c: 47:         eeprom_write(0x03,1);
  4354  0EC9  1283               	bcf	3,5	;RP0=0, select bank0
  4355  0ECA  1303               	bcf	3,6	;RP1=0, select bank0
  4356  0ECB  01A0               	clrf	eeprom_write@value
  4357  0ECC  0AA0               	incf	eeprom_write@value,f
  4358  0ECD  3003               	movlw	3
  4359  0ECE  158A  2674  158A   	fcall	_eeprom_write
  4360                           
  4361                           ;main.c: 48:         eeprom_write(0x04,2);
  4362  0ED1  3002               	movlw	2
  4363  0ED2  1283               	bcf	3,5	;RP0=0, select bank0
  4364  0ED3  1303               	bcf	3,6	;RP1=0, select bank0
  4365  0ED4  00A3               	movwf	??_load_values
  4366  0ED5  0823               	movf	??_load_values,w
  4367  0ED6  00A0               	movwf	eeprom_write@value
  4368  0ED7  3004               	movlw	4
  4369  0ED8  158A  2674  158A   	fcall	_eeprom_write
  4370                           
  4371                           ;main.c: 49:         eeprom_write(0x05,0);
  4372  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  4373  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  4374  0EDD  01A0               	clrf	eeprom_write@value
  4375  0EDE  3005               	movlw	5
  4376  0EDF  158A  2674  158A   	fcall	_eeprom_write
  4377  0EE2                     l150:
  4378  0EE2  0008               	return
  4379  0EE3                     __end_of_load_values:
  4380                           
  4381                           	psect	text19
  4382  0E74                     __ptext19:	
  4383 ;; *************** function _eeprom_write *****************
  4384 ;; Defined at:
  4385 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\pic\__eewrite.c"
  4386 ;; Parameters:    Size  Location     Type
  4387 ;;  addr            1    wreg     unsigned char 
  4388 ;;  value           1    0[BANK0 ] unsigned char 
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;  addr            1    2[BANK0 ] unsigned char 
  4391 ;; Return value:  Size  Location     Type
  4392 ;;                  1    wreg      void 
  4393 ;; Registers used:
  4394 ;;		wreg, status,2, status,0
  4395 ;; Tracked objects:
  4396 ;;		On entry : 0/0
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMMON   BANK0   BANK1
  4400 ;;      Params:         0       1       0
  4401 ;;      Locals:         0       1       0
  4402 ;;      Temps:          0       1       0
  4403 ;;      Totals:         0       3       0
  4404 ;;Total ram usage:        3 bytes
  4405 ;; Hardware stack levels used: 1
  4406 ;; This function calls:
  4407 ;;		Nothing
  4408 ;; This function is called by:
  4409 ;;		_load_values
  4410 ;;		_write_value
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           
  4415                           ;psect for function _eeprom_write
  4416  0E74                     _eeprom_write:
  4417                           
  4418                           ;incstack = 0
  4419                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  4420                           ;eeprom_write@addr stored from wreg
  4421  0E74  1283               	bcf	3,5	;RP0=0, select bank0
  4422  0E75  1303               	bcf	3,6	;RP1=0, select bank0
  4423  0E76  00A2               	movwf	eeprom_write@addr
  4424  0E77                     l319:	
  4425                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\pic\__eewrite.c: 6: eeprom_write(u
      +                          nsigned char addr, unsigned char value);C:\Program Files\Microchip\xc8\v2.32\pic\sources
      +                          \c90\pic\__eewrite.c: 7: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\pic\__ee
      +                          write.c: 8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value); E
      +                          ECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCO
      +                          Nbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1; EEC
      +                          ON1bits.WREN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } while (0);
  4426                           
  4427  0E77                     l320:
  4428  0E77  1683               	bsf	3,5	;RP0=1, select bank3
  4429  0E78  1703               	bsf	3,6	;RP1=1, select bank3
  4430  0E79  188C               	btfsc	12,1	;volsfr
  4431  0E7A  2E7C               	goto	u1891
  4432  0E7B  2E7D               	goto	u1890
  4433  0E7C                     u1891:
  4434  0E7C  2E77               	goto	l320
  4435  0E7D                     u1890:
  4436  0E7D                     l2047:
  4437  0E7D  1283               	bcf	3,5	;RP0=0, select bank0
  4438  0E7E  1303               	bcf	3,6	;RP1=0, select bank0
  4439  0E7F  0822               	movf	eeprom_write@addr,w
  4440  0E80  1283               	bcf	3,5	;RP0=0, select bank2
  4441  0E81  1703               	bsf	3,6	;RP1=1, select bank2
  4442  0E82  008D               	movwf	13	;volatile
  4443  0E83  1283               	bcf	3,5	;RP0=0, select bank0
  4444  0E84  1303               	bcf	3,6	;RP1=0, select bank0
  4445  0E85  0820               	movf	eeprom_write@value,w
  4446  0E86  1283               	bcf	3,5	;RP0=0, select bank2
  4447  0E87  1703               	bsf	3,6	;RP1=1, select bank2
  4448  0E88  008C               	movwf	12	;volatile
  4449  0E89                     l2049:
  4450  0E89  303F               	movlw	63
  4451  0E8A  1283               	bcf	3,5	;RP0=0, select bank0
  4452  0E8B  1303               	bcf	3,6	;RP1=0, select bank0
  4453  0E8C  00A1               	movwf	??_eeprom_write
  4454  0E8D  0821               	movf	??_eeprom_write,w
  4455  0E8E  1683               	bsf	3,5	;RP0=1, select bank3
  4456  0E8F  1703               	bsf	3,6	;RP1=1, select bank3
  4457  0E90  058C               	andwf	12,f	;volsfr
  4458  0E91                     l2051:
  4459  0E91  1283               	bcf	3,5	;RP0=0, select bank0
  4460  0E92  1303               	bcf	3,6	;RP1=0, select bank0
  4461  0E93  1003               	bcf	3,0	;volatile
  4462  0E94                     l2053:
  4463  0E94  1F8B               	btfss	11,7	;volatile
  4464  0E95  2E97               	goto	u1901
  4465  0E96  2E98               	goto	u1900
  4466  0E97                     u1901:
  4467  0E97  2E99               	goto	l323
  4468  0E98                     u1900:
  4469  0E98                     l2055:
  4470  0E98  1403               	bsf	3,0	;volatile
  4471  0E99                     l323:
  4472  0E99  138B               	bcf	11,7	;volatile
  4473  0E9A  1683               	bsf	3,5	;RP0=1, select bank3
  4474  0E9B  1703               	bsf	3,6	;RP1=1, select bank3
  4475  0E9C  150C               	bsf	12,2	;volsfr
  4476  0E9D                     l2057:
  4477  0E9D  3055               	movlw	85
  4478  0E9E  008D               	movwf	13	;volsfr
  4479  0E9F  30AA               	movlw	170
  4480  0EA0  008D               	movwf	13	;volsfr
  4481  0EA1                     l2059:
  4482  0EA1  148C               	bsf	12,1	;volsfr
  4483  0EA2                     l2061:
  4484  0EA2  110C               	bcf	12,2	;volsfr
  4485  0EA3                     l2063:
  4486  0EA3  1283               	bcf	3,5	;RP0=0, select bank0
  4487  0EA4  1303               	bcf	3,6	;RP1=0, select bank0
  4488  0EA5  1C03               	btfss	3,0	;volatile
  4489  0EA6  2EA8               	goto	u1911
  4490  0EA7  2EA9               	goto	u1910
  4491  0EA8                     u1911:
  4492  0EA8  2EAA               	goto	l326
  4493  0EA9                     u1910:
  4494  0EA9                     l2065:
  4495  0EA9  178B               	bsf	11,7	;volatile
  4496  0EAA                     l326:
  4497  0EAA  0008               	return
  4498  0EAB                     __end_of_eeprom_write:
  4499                           
  4500                           	psect	text20
  4501  0082                     __ptext20:	
  4502 ;; *************** function _inicio_presentacion *****************
  4503 ;; Defined at:
  4504 ;;		line 82 in file "main.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;  length          2   10[BANK0 ] int 
  4507 ;;  str             1   12[BANK0 ] PTR unsigned char 
  4508 ;;		 -> grupo(6), presentacion(29), saludo(23), 
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;  i               2   16[BANK0 ] int 
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  1    wreg      void 
  4513 ;; Registers used:
  4514 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMMON   BANK0   BANK1
  4520 ;;      Params:         0       3       0
  4521 ;;      Locals:         0       2       0
  4522 ;;      Temps:          0       3       0
  4523 ;;      Totals:         0       8       0
  4524 ;;Total ram usage:        8 bytes
  4525 ;; Hardware stack levels used: 1
  4526 ;; Hardware stack levels required when called: 3
  4527 ;; This function calls:
  4528 ;;		_LCD_Cmd
  4529 ;;		_LCD_Goto
  4530 ;;		_LCD_Print
  4531 ;; This function is called by:
  4532 ;;		_main
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           
  4537                           ;psect for function _inicio_presentacion
  4538  0082                     _inicio_presentacion:
  4539  0082                     l2221:	
  4540                           ;incstack = 0
  4541                           ; Regs used in _inicio_presentacion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  4542                           
  4543                           
  4544                           ;main.c: 82: void inicio_presentacion (int length, char *str);main.c: 83: {;main.c: 84: 
      +                              LCD_Goto(1,1);
  4545  0082  1283               	bcf	3,5	;RP0=0, select bank0
  4546  0083  1303               	bcf	3,6	;RP1=0, select bank0
  4547  0084  01A6               	clrf	LCD_Goto@row
  4548  0085  0AA6               	incf	LCD_Goto@row,f
  4549  0086  3001               	movlw	1
  4550  0087  158A  2612  118A   	fcall	_LCD_Goto
  4551  008A                     l2223:
  4552                           
  4553                           ;main.c: 85:     LCD_Print(str);
  4554  008A  1283               	bcf	3,5	;RP0=0, select bank0
  4555  008B  1303               	bcf	3,6	;RP1=0, select bank0
  4556  008C  082C               	movf	inicio_presentacion@str,w
  4557  008D  00A3               	movwf	LCD_Print@LCD_Str
  4558  008E  3000               	movlw	0
  4559  008F  00A4               	movwf	LCD_Print@LCD_Str+1
  4560  0090  158A  271F  118A   	fcall	_LCD_Print
  4561  0093                     l2225:
  4562                           
  4563                           ;main.c: 86:     _delay((unsigned long)((25)*(32000000/4000.0)));
  4564  0093  3002               	movlw	2
  4565  0094  1283               	bcf	3,5	;RP0=0, select bank0
  4566  0095  1303               	bcf	3,6	;RP1=0, select bank0
  4567  0096  00AF               	movwf	??_inicio_presentacion+2
  4568  0097  3004               	movlw	4
  4569  0098  00AE               	movwf	??_inicio_presentacion+1
  4570  0099  30BA               	movlw	186
  4571  009A  00AD               	movwf	??_inicio_presentacion
  4572  009B                     u2207:
  4573  009B  0BAD               	decfsz	??_inicio_presentacion,f
  4574  009C  289B               	goto	u2207
  4575  009D  0BAE               	decfsz	??_inicio_presentacion+1,f
  4576  009E  289B               	goto	u2207
  4577  009F  0BAF               	decfsz	??_inicio_presentacion+2,f
  4578  00A0  289B               	goto	u2207
  4579  00A1                     l2227:
  4580                           
  4581                           ;main.c: 87:     for(int i=0;i<length;i++){
  4582  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  4583  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  4584  00A3  01B0               	clrf	inicio_presentacion@i
  4585  00A4  01B1               	clrf	inicio_presentacion@i+1
  4586  00A5  28BD               	goto	l2235
  4587  00A6                     l2229:
  4588                           
  4589                           ;main.c: 88:         LCD_Cmd(0x18);
  4590  00A6  3018               	movlw	24
  4591  00A7  158A  25E4  118A   	fcall	_LCD_Cmd
  4592  00AA                     l2231:
  4593                           
  4594                           ;main.c: 89:         _delay((unsigned long)((20)*(32000000/4000.0)));
  4595  00AA  30D0               	movlw	208
  4596  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  4597  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  4598  00AD  00AE               	movwf	??_inicio_presentacion+1
  4599  00AE  30C9               	movlw	201
  4600  00AF  00AD               	movwf	??_inicio_presentacion
  4601  00B0                     u2217:
  4602  00B0  0BAD               	decfsz	??_inicio_presentacion,f
  4603  00B1  28B0               	goto	u2217
  4604  00B2  0BAE               	decfsz	??_inicio_presentacion+1,f
  4605  00B3  28B0               	goto	u2217
  4606  00B4  0000               	nop
  4607  00B5                     l2233:
  4608                           
  4609                           ;main.c: 90:     }
  4610  00B5  3001               	movlw	1
  4611  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  4612  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  4613  00B8  07B0               	addwf	inicio_presentacion@i,f
  4614  00B9  1803               	skipnc
  4615  00BA  0AB1               	incf	inicio_presentacion@i+1,f
  4616  00BB  3000               	movlw	0
  4617  00BC  07B1               	addwf	inicio_presentacion@i+1,f
  4618  00BD                     l2235:
  4619  00BD  0831               	movf	inicio_presentacion@i+1,w
  4620  00BE  3A80               	xorlw	128
  4621  00BF  00AD               	movwf	??_inicio_presentacion
  4622  00C0  082B               	movf	inicio_presentacion@length+1,w
  4623  00C1  3A80               	xorlw	128
  4624  00C2  022D               	subwf	??_inicio_presentacion,w
  4625  00C3  1D03               	skipz
  4626  00C4  28C7               	goto	u2005
  4627  00C5  082A               	movf	inicio_presentacion@length,w
  4628  00C6  0230               	subwf	inicio_presentacion@i,w
  4629  00C7                     u2005:
  4630  00C7  1C03               	skipc
  4631  00C8  28CA               	goto	u2001
  4632  00C9  28CB               	goto	u2000
  4633  00CA                     u2001:
  4634  00CA  28A6               	goto	l2229
  4635  00CB                     u2000:
  4636  00CB                     l2237:
  4637                           
  4638                           ;main.c: 91:     _delay((unsigned long)((10)*(32000000/4000.0)));
  4639  00CB  3068               	movlw	104
  4640  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  4641  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  4642  00CE  00AE               	movwf	??_inicio_presentacion+1
  4643  00CF  30E4               	movlw	228
  4644  00D0  00AD               	movwf	??_inicio_presentacion
  4645  00D1                     u2227:
  4646  00D1  0BAD               	decfsz	??_inicio_presentacion,f
  4647  00D2  28D1               	goto	u2227
  4648  00D3  0BAE               	decfsz	??_inicio_presentacion+1,f
  4649  00D4  28D1               	goto	u2227
  4650  00D5                     l2239:
  4651                           
  4652                           ;main.c: 92:     LCD_Cmd(0x01);
  4653  00D5  3001               	movlw	1
  4654  00D6  158A  25E4  118A   	fcall	_LCD_Cmd
  4655  00D9                     l2241:
  4656                           
  4657                           ;main.c: 93:     LCD_Goto(1, 1);
  4658  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  4659  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  4660  00DB  01A6               	clrf	LCD_Goto@row
  4661  00DC  0AA6               	incf	LCD_Goto@row,f
  4662  00DD  3001               	movlw	1
  4663  00DE  158A  2612  118A   	fcall	_LCD_Goto
  4664  00E1                     l159:
  4665  00E1  0008               	return
  4666  00E2                     __end_of_inicio_presentacion:
  4667                           
  4668                           	psect	text21
  4669  0F1F                     __ptext21:	
  4670 ;; *************** function _LCD_Print *****************
  4671 ;; Defined at:
  4672 ;;		line 113 in file "./lcd.h"
  4673 ;; Parameters:    Size  Location     Type
  4674 ;;  LCD_Str         2    3[BANK0 ] PTR unsigned char 
  4675 ;;		 -> grupo(6), presentacion(29), saludo(23), STR_11(16), 
  4676 ;;		 -> STR_10(9), screen_selector@value(1), STR_8(12), STR_7(18), 
  4677 ;;		 -> STR_6(14), ventilator_screen@vel(5), ventilator_screen@vol(10), conditional_screen@con(10), 
  4678 ;;		 -> conditional_screen@msj(14), 
  4679 ;; Auto vars:     Size  Location     Type
  4680 ;;  i               1    6[BANK0 ] unsigned char 
  4681 ;; Return value:  Size  Location     Type
  4682 ;;                  1    wreg      void 
  4683 ;; Registers used:
  4684 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4685 ;; Tracked objects:
  4686 ;;		On entry : 0/0
  4687 ;;		On exit  : 0/0
  4688 ;;		Unchanged: 0/0
  4689 ;; Data sizes:     COMMON   BANK0   BANK1
  4690 ;;      Params:         0       2       0
  4691 ;;      Locals:         0       1       0
  4692 ;;      Temps:          0       1       0
  4693 ;;      Totals:         0       4       0
  4694 ;;Total ram usage:        4 bytes
  4695 ;; Hardware stack levels used: 1
  4696 ;; Hardware stack levels required when called: 1
  4697 ;; This function calls:
  4698 ;;		_LCD_Write_Nibble
  4699 ;; This function is called by:
  4700 ;;		_inicio_presentacion
  4701 ;;		_conditional_screen
  4702 ;;		_ventilator_screen
  4703 ;;		_key_writing_value
  4704 ;;		_screen_selector
  4705 ;; This function uses a non-reentrant model
  4706 ;;
  4707                           
  4708                           
  4709                           ;psect for function _LCD_Print
  4710  0F1F                     _LCD_Print:
  4711  0F1F                     l1751:	
  4712                           ;incstack = 0
  4713                           ; Regs used in _LCD_Print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4714                           
  4715                           
  4716                           ;./lcd.h: 113: void LCD_Print(char* LCD_Str);./lcd.h: 114: {;./lcd.h: 115:   uint8_t i =
      +                           0;
  4717  0F1F  1283               	bcf	3,5	;RP0=0, select bank0
  4718  0F20  1303               	bcf	3,6	;RP1=0, select bank0
  4719  0F21  01A6               	clrf	LCD_Print@i
  4720  0F22                     l1753:
  4721                           
  4722                           ;./lcd.h: 116:   RS = 1;
  4723  0F22  1479               	bsf	_RS/(0+8),_RS& (0+7)
  4724                           
  4725                           ;./lcd.h: 117:   while(LCD_Str[i] != '\0')
  4726  0F23  2F4E               	goto	l1759
  4727  0F24                     l1755:
  4728                           
  4729                           ;./lcd.h: 118:   {;./lcd.h: 119:     LCD_Write_Nibble(LCD_Str[i] >> 4);
  4730  0F24  0826               	movf	LCD_Print@i,w
  4731  0F25  0723               	addwf	LCD_Print@LCD_Str,w
  4732  0F26  0084               	movwf	4
  4733  0F27  0824               	movf	LCD_Print@LCD_Str+1,w
  4734  0F28  1803               	skipnc
  4735  0F29  0A24               	incf	LCD_Print@LCD_Str+1,w
  4736  0F2A  00FF               	movwf	btemp+1
  4737  0F2B  118A  2002  158A   	fcall	stringtab
  4738  0F2E  00A5               	movwf	??_LCD_Print
  4739  0F2F  3004               	movlw	4
  4740  0F30                     u1315:
  4741  0F30  1003               	clrc
  4742  0F31  0CA5               	rrf	??_LCD_Print,f
  4743  0F32  3EFF               	addlw	-1
  4744  0F33  1D03               	skipz
  4745  0F34  2F30               	goto	u1315
  4746  0F35  0825               	movf	??_LCD_Print,w
  4747  0F36  118A  20E2  158A   	fcall	_LCD_Write_Nibble
  4748                           
  4749                           ;./lcd.h: 120:     LCD_Write_Nibble(LCD_Str[i++] );
  4750  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4751  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4752  0F3B  0826               	movf	LCD_Print@i,w
  4753  0F3C  0723               	addwf	LCD_Print@LCD_Str,w
  4754  0F3D  0084               	movwf	4
  4755  0F3E  0824               	movf	LCD_Print@LCD_Str+1,w
  4756  0F3F  1803               	skipnc
  4757  0F40  0A24               	incf	LCD_Print@LCD_Str+1,w
  4758  0F41  00FF               	movwf	btemp+1
  4759  0F42  118A  2002  158A   	fcall	stringtab
  4760  0F45  118A  20E2  158A   	fcall	_LCD_Write_Nibble
  4761  0F48                     l1757:
  4762  0F48  3001               	movlw	1
  4763  0F49  1283               	bcf	3,5	;RP0=0, select bank0
  4764  0F4A  1303               	bcf	3,6	;RP1=0, select bank0
  4765  0F4B  00A5               	movwf	??_LCD_Print
  4766  0F4C  0825               	movf	??_LCD_Print,w
  4767  0F4D  07A6               	addwf	LCD_Print@i,f
  4768  0F4E                     l1759:
  4769                           
  4770                           ;./lcd.h: 117:   while(LCD_Str[i] != '\0')
  4771  0F4E  0826               	movf	LCD_Print@i,w
  4772  0F4F  0723               	addwf	LCD_Print@LCD_Str,w
  4773  0F50  0084               	movwf	4
  4774  0F51  0824               	movf	LCD_Print@LCD_Str+1,w
  4775  0F52  1803               	skipnc
  4776  0F53  0A24               	incf	LCD_Print@LCD_Str+1,w
  4777  0F54  00FF               	movwf	btemp+1
  4778  0F55  118A  2002  158A   	fcall	stringtab
  4779  0F58  3A00               	xorlw	0
  4780  0F59  1D03               	skipz
  4781  0F5A  2F5C               	goto	u1321
  4782  0F5B  2F5D               	goto	u1320
  4783  0F5C                     u1321:
  4784  0F5C  2F24               	goto	l1755
  4785  0F5D                     u1320:
  4786  0F5D                     l73:
  4787  0F5D  0008               	return
  4788  0F5E                     __end_of_LCD_Print:
  4789                           
  4790                           	psect	text22
  4791  0E12                     __ptext22:	
  4792 ;; *************** function _LCD_Goto *****************
  4793 ;; Defined at:
  4794 ;;		line 87 in file "./lcd.h"
  4795 ;; Parameters:    Size  Location     Type
  4796 ;;  col             1    wreg     unsigned char 
  4797 ;;  row             1    6[BANK0 ] unsigned char 
  4798 ;; Auto vars:     Size  Location     Type
  4799 ;;  col             1    9[BANK0 ] unsigned char 
  4800 ;; Return value:  Size  Location     Type
  4801 ;;                  1    wreg      void 
  4802 ;; Registers used:
  4803 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4804 ;; Tracked objects:
  4805 ;;		On entry : 0/0
  4806 ;;		On exit  : 0/0
  4807 ;;		Unchanged: 0/0
  4808 ;; Data sizes:     COMMON   BANK0   BANK1
  4809 ;;      Params:         0       1       0
  4810 ;;      Locals:         0       1       0
  4811 ;;      Temps:          0       2       0
  4812 ;;      Totals:         0       4       0
  4813 ;;Total ram usage:        4 bytes
  4814 ;; Hardware stack levels used: 1
  4815 ;; Hardware stack levels required when called: 2
  4816 ;; This function calls:
  4817 ;;		_LCD_Cmd
  4818 ;; This function is called by:
  4819 ;;		_inicio_presentacion
  4820 ;;		_conditional_screen
  4821 ;;		_ventilator_screen
  4822 ;;		_key_writing_value
  4823 ;;		_screen_selector
  4824 ;;		_main
  4825 ;; This function uses a non-reentrant model
  4826 ;;
  4827                           
  4828                           
  4829                           ;psect for function _LCD_Goto
  4830  0E12                     _LCD_Goto:
  4831                           
  4832                           ;incstack = 0
  4833                           ; Regs used in _LCD_Goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4834                           ;LCD_Goto@col stored from wreg
  4835  0E12  1283               	bcf	3,5	;RP0=0, select bank0
  4836  0E13  1303               	bcf	3,6	;RP1=0, select bank0
  4837  0E14  00A9               	movwf	LCD_Goto@col
  4838  0E15                     l1729:
  4839                           
  4840                           ;./lcd.h: 87: void LCD_Goto(uint8_t col, uint8_t row);./lcd.h: 88: {;./lcd.h: 89:   swit
      +                          ch(row)
  4841  0E15  2E2E               	goto	l1739
  4842  0E16                     l1731:
  4843                           
  4844                           ;./lcd.h: 92:       LCD_Cmd(0xC0 + col - 1);
  4845  0E16  0829               	movf	LCD_Goto@col,w
  4846  0E17  3EBF               	addlw	191
  4847  0E18  158A  25E4  158A   	fcall	_LCD_Cmd
  4848                           
  4849                           ;./lcd.h: 93:       break;
  4850  0E1B  2E41               	goto	l64
  4851  0E1C                     l1733:
  4852                           
  4853                           ;./lcd.h: 95:       LCD_Cmd(0x94 + col - 1);
  4854  0E1C  0829               	movf	LCD_Goto@col,w
  4855  0E1D  3E93               	addlw	147
  4856  0E1E  158A  25E4  158A   	fcall	_LCD_Cmd
  4857                           
  4858                           ;./lcd.h: 96:       break;
  4859  0E21  2E41               	goto	l64
  4860  0E22                     l1735:
  4861                           
  4862                           ;./lcd.h: 98:       LCD_Cmd(0xD4 + col - 1);
  4863  0E22  0829               	movf	LCD_Goto@col,w
  4864  0E23  3ED3               	addlw	211
  4865  0E24  158A  25E4  158A   	fcall	_LCD_Cmd
  4866                           
  4867                           ;./lcd.h: 99:     break;
  4868  0E27  2E41               	goto	l64
  4869  0E28                     l1737:
  4870                           
  4871                           ;./lcd.h: 101:       LCD_Cmd(0x80 + col - 1);
  4872  0E28  0829               	movf	LCD_Goto@col,w
  4873  0E29  3E7F               	addlw	127
  4874  0E2A  158A  25E4  158A   	fcall	_LCD_Cmd
  4875                           
  4876                           ;./lcd.h: 102:   }
  4877  0E2D  2E41               	goto	l64
  4878  0E2E                     l1739:
  4879  0E2E  0826               	movf	LCD_Goto@row,w
  4880  0E2F  00A7               	movwf	??_LCD_Goto
  4881  0E30  01A8               	clrf	??_LCD_Goto+1
  4882                           
  4883                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4884                           ; Switch size 1, requested type "simple"
  4885                           ; Number of cases is 1, Range of values is 0 to 0
  4886                           ; switch strategies available:
  4887                           ; Name         Instructions Cycles
  4888                           ; simple_byte            4     3 (average)
  4889                           ; direct_byte            9     7 (fixed)
  4890                           ; jumptable            260     6 (fixed)
  4891                           ;	Chosen strategy is simple_byte
  4892  0E31  0828               	movf	??_LCD_Goto+1,w
  4893  0E32  3A00               	xorlw	0	; case 0
  4894  0E33  1903               	skipnz
  4895  0E34  2E36               	goto	l2347
  4896  0E35  2E28               	goto	l1737
  4897  0E36                     l2347:
  4898                           
  4899                           ; Switch size 1, requested type "simple"
  4900                           ; Number of cases is 3, Range of values is 2 to 4
  4901                           ; switch strategies available:
  4902                           ; Name         Instructions Cycles
  4903                           ; simple_byte           10     6 (average)
  4904                           ; direct_byte           16    10 (fixed)
  4905                           ; jumptable            263     9 (fixed)
  4906                           ;	Chosen strategy is simple_byte
  4907  0E36  0827               	movf	??_LCD_Goto,w
  4908  0E37  3A02               	xorlw	2	; case 2
  4909  0E38  1903               	skipnz
  4910  0E39  2E16               	goto	l1731
  4911  0E3A  3A01               	xorlw	1	; case 3
  4912  0E3B  1903               	skipnz
  4913  0E3C  2E1C               	goto	l1733
  4914  0E3D  3A07               	xorlw	7	; case 4
  4915  0E3E  1903               	skipnz
  4916  0E3F  2E22               	goto	l1735
  4917  0E40  2E28               	goto	l1737
  4918  0E41                     l64:
  4919  0E41  0008               	return
  4920  0E42                     __end_of_LCD_Goto:
  4921                           
  4922                           	psect	text23
  4923  0D4C                     __ptext23:	
  4924 ;; *************** function _iniciar_puertos *****************
  4925 ;; Defined at:
  4926 ;;		line 52 in file "main.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;		None
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;		None
  4931 ;; Return value:  Size  Location     Type
  4932 ;;                  1    wreg      void 
  4933 ;; Registers used:
  4934 ;;		wreg, status,2
  4935 ;; Tracked objects:
  4936 ;;		On entry : 0/0
  4937 ;;		On exit  : 0/0
  4938 ;;		Unchanged: 0/0
  4939 ;; Data sizes:     COMMON   BANK0   BANK1
  4940 ;;      Params:         0       0       0
  4941 ;;      Locals:         0       0       0
  4942 ;;      Temps:          0       0       0
  4943 ;;      Totals:         0       0       0
  4944 ;;Total ram usage:        0 bytes
  4945 ;; Hardware stack levels used: 1
  4946 ;; This function calls:
  4947 ;;		Nothing
  4948 ;; This function is called by:
  4949 ;;		_main
  4950 ;; This function uses a non-reentrant model
  4951 ;;
  4952                           
  4953                           
  4954                           ;psect for function _iniciar_puertos
  4955  0D4C                     _iniciar_puertos:
  4956  0D4C                     l2195:	
  4957                           ;incstack = 0
  4958                           ; Regs used in _iniciar_puertos: [wreg+status,2]
  4959                           
  4960                           
  4961                           ;main.c: 54:     PORTA = 0x00;
  4962  0D4C  1283               	bcf	3,5	;RP0=0, select bank0
  4963  0D4D  1303               	bcf	3,6	;RP1=0, select bank0
  4964  0D4E  0185               	clrf	5	;volatile
  4965                           
  4966                           ;main.c: 55:     PORTB = 0x00;
  4967  0D4F  0186               	clrf	6	;volatile
  4968                           
  4969                           ;main.c: 56:     PORTC = 0x00;
  4970  0D50  0187               	clrf	7	;volatile
  4971  0D51                     l2197:
  4972                           
  4973                           ;main.c: 61:     TRISCbits.TRISC0 = 0;
  4974  0D51  1683               	bsf	3,5	;RP0=1, select bank1
  4975  0D52  1303               	bcf	3,6	;RP1=0, select bank1
  4976  0D53  1007               	bcf	7,0	;volatile
  4977  0D54                     l2199:
  4978                           
  4979                           ;main.c: 62:     TRISCbits.TRISC1 = 0;
  4980  0D54  1087               	bcf	7,1	;volatile
  4981  0D55                     l2201:
  4982                           
  4983                           ;main.c: 64:     TRISCbits.TRISC3 = 0;
  4984  0D55  1187               	bcf	7,3	;volatile
  4985  0D56                     l2203:
  4986                           
  4987                           ;main.c: 65:     TRISCbits.TRISC4 = 0;
  4988  0D56  1207               	bcf	7,4	;volatile
  4989  0D57                     l2205:
  4990                           
  4991                           ;main.c: 67:     TRISCbits.TRISC6 = 0;
  4992  0D57  1307               	bcf	7,6	;volatile
  4993  0D58                     l2207:
  4994                           
  4995                           ;main.c: 71:     TRISAbits.TRISA0 = 1;
  4996  0D58  1405               	bsf	5,0	;volatile
  4997  0D59                     l2209:
  4998                           
  4999                           ;main.c: 72:     TRISAbits.TRISA1 = 1;
  5000  0D59  1485               	bsf	5,1	;volatile
  5001  0D5A                     l2211:
  5002                           
  5003                           ;main.c: 73:     TRISAbits.TRISA2 = 1;
  5004  0D5A  1505               	bsf	5,2	;volatile
  5005  0D5B                     l2213:
  5006                           
  5007                           ;main.c: 74:     TRISAbits.TRISA3 = 1;
  5008  0D5B  1585               	bsf	5,3	;volatile
  5009  0D5C                     l2215:
  5010                           
  5011                           ;main.c: 75:     TRISAbits.TRISA4 = 0;
  5012  0D5C  1205               	bcf	5,4	;volatile
  5013  0D5D                     l2217:
  5014                           
  5015                           ;main.c: 76:     TRISAbits.TRISA5 = 0;
  5016  0D5D  1285               	bcf	5,5	;volatile
  5017  0D5E                     l2219:
  5018                           
  5019                           ;main.c: 78:     ADCON1 = 0x07;
  5020  0D5E  3007               	movlw	7
  5021  0D5F  009F               	movwf	31	;volatile
  5022  0D60                     l153:
  5023  0D60  0008               	return
  5024  0D61                     __end_of_iniciar_puertos:
  5025                           
  5026                           	psect	text24
  5027  064A                     __ptext24:	
  5028 ;; *************** function _LCD_Begin *****************
  5029 ;; Defined at:
  5030 ;;		line 124 in file "./lcd.h"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;		None
  5033 ;; Auto vars:     Size  Location     Type
  5034 ;;		None
  5035 ;; Return value:  Size  Location     Type
  5036 ;;                  1    wreg      void 
  5037 ;; Registers used:
  5038 ;;		wreg, status,2, status,0, pclath, cstack
  5039 ;; Tracked objects:
  5040 ;;		On entry : 0/0
  5041 ;;		On exit  : 0/0
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMMON   BANK0   BANK1
  5044 ;;      Params:         0       0       0
  5045 ;;      Locals:         0       0       0
  5046 ;;      Temps:          0       3       0
  5047 ;;      Totals:         0       3       0
  5048 ;;Total ram usage:        3 bytes
  5049 ;; Hardware stack levels used: 1
  5050 ;; Hardware stack levels required when called: 2
  5051 ;; This function calls:
  5052 ;;		_LCD_Cmd
  5053 ;; This function is called by:
  5054 ;;		_main
  5055 ;; This function uses a non-reentrant model
  5056 ;;
  5057                           
  5058                           
  5059                           ;psect for function _LCD_Begin
  5060  064A                     _LCD_Begin:
  5061  064A                     l2165:	
  5062                           ;incstack = 0
  5063                           ; Regs used in _LCD_Begin: [wreg+status,2+status,0+pclath+cstack]
  5064                           
  5065                           
  5066                           ;./lcd.h: 126:   RS = 0;
  5067  064A  1283               	bcf	3,5	;RP0=0, select bank0
  5068  064B  1303               	bcf	3,6	;RP1=0, select bank0
  5069  064C  1079               	bcf	_RS/(0+8),_RS& (0+7)
  5070                           
  5071                           ;./lcd.h: 127:   PORTCbits.RC5 = 0;
  5072  064D  1287               	bcf	7,5	;volatile
  5073                           
  5074                           ;./lcd.h: 128:   PORTCbits.RC6 = 0;
  5075  064E  1307               	bcf	7,6	;volatile
  5076                           
  5077                           ;./lcd.h: 129:   PORTCbits.RC7 = 0;
  5078  064F  1387               	bcf	7,7	;volatile
  5079                           
  5080                           ;./lcd.h: 134:   PORTBbits.RB4 = 0;
  5081  0650  1206               	bcf	6,4	;volatile
  5082                           
  5083                           ;./lcd.h: 135:   PORTBbits.RB5 = 0;
  5084  0651  1286               	bcf	6,5	;volatile
  5085                           
  5086                           ;./lcd.h: 136:   PORTBbits.RB6 = 0;
  5087  0652  1306               	bcf	6,6	;volatile
  5088                           
  5089                           ;./lcd.h: 137:   PORTBbits.RB7 = 0;
  5090  0653  1386               	bcf	6,7	;volatile
  5091                           
  5092                           ;./lcd.h: 138:   TRISCbits.TRISC5 = 0;
  5093  0654  1683               	bsf	3,5	;RP0=1, select bank1
  5094  0655  1303               	bcf	3,6	;RP1=0, select bank1
  5095  0656  1287               	bcf	7,5	;volatile
  5096                           
  5097                           ;./lcd.h: 139:   TRISCbits.TRISC6 = 0;
  5098  0657  1307               	bcf	7,6	;volatile
  5099                           
  5100                           ;./lcd.h: 140:   TRISCbits.TRISC7 = 0;
  5101  0658  1387               	bcf	7,7	;volatile
  5102                           
  5103                           ;./lcd.h: 145:   TRISBbits.TRISB4 = 0;
  5104  0659  1206               	bcf	6,4	;volatile
  5105                           
  5106                           ;./lcd.h: 146:   TRISBbits.TRISB5 = 0;
  5107  065A  1286               	bcf	6,5	;volatile
  5108                           
  5109                           ;./lcd.h: 147:   TRISBbits.TRISB6 = 0;
  5110  065B  1306               	bcf	6,6	;volatile
  5111                           
  5112                           ;./lcd.h: 148:   TRISBbits.TRISB7 = 0;
  5113  065C  1386               	bcf	6,7	;volatile
  5114  065D                     l2167:
  5115                           
  5116                           ;./lcd.h: 149:   _delay((unsigned long)((40)*(32000000/4000.0)));
  5117  065D  3002               	movlw	2
  5118  065E  1283               	bcf	3,5	;RP0=0, select bank0
  5119  065F  1303               	bcf	3,6	;RP1=0, select bank0
  5120  0660  00A8               	movwf	??_LCD_Begin+2
  5121  0661  30A0               	movlw	160
  5122  0662  00A7               	movwf	??_LCD_Begin+1
  5123  0663  3092               	movlw	146
  5124  0664  00A6               	movwf	??_LCD_Begin
  5125  0665                     u2237:
  5126  0665  0BA6               	decfsz	??_LCD_Begin,f
  5127  0666  2E65               	goto	u2237
  5128  0667  0BA7               	decfsz	??_LCD_Begin+1,f
  5129  0668  2E65               	goto	u2237
  5130  0669  0BA8               	decfsz	??_LCD_Begin+2,f
  5131  066A  2E65               	goto	u2237
  5132  066B                     l2169:
  5133                           
  5134                           ;./lcd.h: 150:   LCD_Cmd(3);
  5135  066B  3003               	movlw	3
  5136  066C  158A  25E4  118A   	fcall	_LCD_Cmd
  5137  066F                     l2171:
  5138                           
  5139                           ;./lcd.h: 151:   _delay((unsigned long)((5)*(32000000/4000.0)));
  5140  066F  3034               	movlw	52
  5141  0670  1283               	bcf	3,5	;RP0=0, select bank0
  5142  0671  1303               	bcf	3,6	;RP1=0, select bank0
  5143  0672  00A7               	movwf	??_LCD_Begin+1
  5144  0673  30F1               	movlw	241
  5145  0674  00A6               	movwf	??_LCD_Begin
  5146  0675                     u2247:
  5147  0675  0BA6               	decfsz	??_LCD_Begin,f
  5148  0676  2E75               	goto	u2247
  5149  0677  0BA7               	decfsz	??_LCD_Begin+1,f
  5150  0678  2E75               	goto	u2247
  5151  0679  0000               	nop
  5152                           
  5153                           ;./lcd.h: 152:   LCD_Cmd(3);
  5154  067A  3003               	movlw	3
  5155  067B  158A  25E4  118A   	fcall	_LCD_Cmd
  5156  067E                     l2173:
  5157                           
  5158                           ;./lcd.h: 153:   _delay((unsigned long)((5)*(32000000/4000.0)));
  5159  067E  3034               	movlw	52
  5160  067F  1283               	bcf	3,5	;RP0=0, select bank0
  5161  0680  1303               	bcf	3,6	;RP1=0, select bank0
  5162  0681  00A7               	movwf	??_LCD_Begin+1
  5163  0682  30F1               	movlw	241
  5164  0683  00A6               	movwf	??_LCD_Begin
  5165  0684                     u2257:
  5166  0684  0BA6               	decfsz	??_LCD_Begin,f
  5167  0685  2E84               	goto	u2257
  5168  0686  0BA7               	decfsz	??_LCD_Begin+1,f
  5169  0687  2E84               	goto	u2257
  5170  0688  0000               	nop
  5171  0689                     l2175:
  5172                           
  5173                           ;./lcd.h: 154:   LCD_Cmd(3);
  5174  0689  3003               	movlw	3
  5175  068A  158A  25E4  118A   	fcall	_LCD_Cmd
  5176                           
  5177                           ;./lcd.h: 155:   _delay((unsigned long)((5)*(32000000/4000.0)));
  5178  068D  3034               	movlw	52
  5179  068E  1283               	bcf	3,5	;RP0=0, select bank0
  5180  068F  1303               	bcf	3,6	;RP1=0, select bank0
  5181  0690  00A7               	movwf	??_LCD_Begin+1
  5182  0691  30F1               	movlw	241
  5183  0692  00A6               	movwf	??_LCD_Begin
  5184  0693                     u2267:
  5185  0693  0BA6               	decfsz	??_LCD_Begin,f
  5186  0694  2E93               	goto	u2267
  5187  0695  0BA7               	decfsz	??_LCD_Begin+1,f
  5188  0696  2E93               	goto	u2267
  5189  0697  0000               	nop
  5190  0698                     l2177:
  5191                           
  5192                           ;./lcd.h: 156:   LCD_Cmd(0x02);
  5193  0698  3002               	movlw	2
  5194  0699  158A  25E4  118A   	fcall	_LCD_Cmd
  5195  069C                     l2179:
  5196                           
  5197                           ;./lcd.h: 157:   _delay((unsigned long)((5)*(32000000/4000.0)));
  5198  069C  3034               	movlw	52
  5199  069D  1283               	bcf	3,5	;RP0=0, select bank0
  5200  069E  1303               	bcf	3,6	;RP1=0, select bank0
  5201  069F  00A7               	movwf	??_LCD_Begin+1
  5202  06A0  30F1               	movlw	241
  5203  06A1  00A6               	movwf	??_LCD_Begin
  5204  06A2                     u2277:
  5205  06A2  0BA6               	decfsz	??_LCD_Begin,f
  5206  06A3  2EA2               	goto	u2277
  5207  06A4  0BA7               	decfsz	??_LCD_Begin+1,f
  5208  06A5  2EA2               	goto	u2277
  5209  06A6  0000               	nop
  5210                           
  5211                           ;./lcd.h: 158:   LCD_Cmd(0x20 | (2 << 2));
  5212  06A7  3028               	movlw	40
  5213  06A8  158A  25E4  118A   	fcall	_LCD_Cmd
  5214  06AB                     l2181:
  5215                           
  5216                           ;./lcd.h: 159:   _delay((unsigned long)((50)*(32000000/4000.0)));
  5217  06AB  3003               	movlw	3
  5218  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  5219  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  5220  06AE  00A8               	movwf	??_LCD_Begin+2
  5221  06AF  3008               	movlw	8
  5222  06B0  00A7               	movwf	??_LCD_Begin+1
  5223  06B1  3076               	movlw	118
  5224  06B2  00A6               	movwf	??_LCD_Begin
  5225  06B3                     u2287:
  5226  06B3  0BA6               	decfsz	??_LCD_Begin,f
  5227  06B4  2EB3               	goto	u2287
  5228  06B5  0BA7               	decfsz	??_LCD_Begin+1,f
  5229  06B6  2EB3               	goto	u2287
  5230  06B7  0BA8               	decfsz	??_LCD_Begin+2,f
  5231  06B8  2EB3               	goto	u2287
  5232  06B9  2EBA               	nop2
  5233  06BA                     l2183:
  5234                           
  5235                           ;./lcd.h: 160:   LCD_Cmd(0x0C);
  5236  06BA  300C               	movlw	12
  5237  06BB  158A  25E4  118A   	fcall	_LCD_Cmd
  5238                           
  5239                           ;./lcd.h: 161:   _delay((unsigned long)((50)*(32000000/4000.0)));
  5240  06BE  3003               	movlw	3
  5241  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  5242  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  5243  06C1  00A8               	movwf	??_LCD_Begin+2
  5244  06C2  3008               	movlw	8
  5245  06C3  00A7               	movwf	??_LCD_Begin+1
  5246  06C4  3076               	movlw	118
  5247  06C5  00A6               	movwf	??_LCD_Begin
  5248  06C6                     u2297:
  5249  06C6  0BA6               	decfsz	??_LCD_Begin,f
  5250  06C7  2EC6               	goto	u2297
  5251  06C8  0BA7               	decfsz	??_LCD_Begin+1,f
  5252  06C9  2EC6               	goto	u2297
  5253  06CA  0BA8               	decfsz	??_LCD_Begin+2,f
  5254  06CB  2EC6               	goto	u2297
  5255  06CC  2ECD               	nop2
  5256  06CD                     l2185:
  5257                           
  5258                           ;./lcd.h: 162:   LCD_Cmd(0x01);
  5259  06CD  3001               	movlw	1
  5260  06CE  158A  25E4  118A   	fcall	_LCD_Cmd
  5261  06D1                     l2187:
  5262                           
  5263                           ;./lcd.h: 163:   _delay((unsigned long)((50)*(32000000/4000.0)));
  5264  06D1  3003               	movlw	3
  5265  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  5266  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  5267  06D4  00A8               	movwf	??_LCD_Begin+2
  5268  06D5  3008               	movlw	8
  5269  06D6  00A7               	movwf	??_LCD_Begin+1
  5270  06D7  3076               	movlw	118
  5271  06D8  00A6               	movwf	??_LCD_Begin
  5272  06D9                     u2307:
  5273  06D9  0BA6               	decfsz	??_LCD_Begin,f
  5274  06DA  2ED9               	goto	u2307
  5275  06DB  0BA7               	decfsz	??_LCD_Begin+1,f
  5276  06DC  2ED9               	goto	u2307
  5277  06DD  0BA8               	decfsz	??_LCD_Begin+2,f
  5278  06DE  2ED9               	goto	u2307
  5279  06DF  2EE0               	nop2
  5280                           
  5281                           ;./lcd.h: 164:   LCD_Cmd(0x04 | 0x02);
  5282  06E0  3006               	movlw	6
  5283  06E1  158A  25E4  118A   	fcall	_LCD_Cmd
  5284  06E4                     l2189:
  5285                           
  5286                           ;./lcd.h: 165:   _delay((unsigned long)((50)*(32000000/4000.0)));
  5287  06E4  3003               	movlw	3
  5288  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  5289  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  5290  06E7  00A8               	movwf	??_LCD_Begin+2
  5291  06E8  3008               	movlw	8
  5292  06E9  00A7               	movwf	??_LCD_Begin+1
  5293  06EA  3076               	movlw	118
  5294  06EB  00A6               	movwf	??_LCD_Begin
  5295  06EC                     u2317:
  5296  06EC  0BA6               	decfsz	??_LCD_Begin,f
  5297  06ED  2EEC               	goto	u2317
  5298  06EE  0BA7               	decfsz	??_LCD_Begin+1,f
  5299  06EF  2EEC               	goto	u2317
  5300  06F0  0BA8               	decfsz	??_LCD_Begin+2,f
  5301  06F1  2EEC               	goto	u2317
  5302  06F2  2EF3               	nop2
  5303  06F3                     l2191:
  5304                           
  5305                           ;./lcd.h: 166:   LCD_Cmd(0x0F);
  5306  06F3  300F               	movlw	15
  5307  06F4  158A  25E4  118A   	fcall	_LCD_Cmd
  5308                           
  5309                           ;./lcd.h: 167:   _delay((unsigned long)((50)*(32000000/4000.0)));
  5310  06F7  3003               	movlw	3
  5311  06F8  1283               	bcf	3,5	;RP0=0, select bank0
  5312  06F9  1303               	bcf	3,6	;RP1=0, select bank0
  5313  06FA  00A8               	movwf	??_LCD_Begin+2
  5314  06FB  3008               	movlw	8
  5315  06FC  00A7               	movwf	??_LCD_Begin+1
  5316  06FD  3076               	movlw	118
  5317  06FE  00A6               	movwf	??_LCD_Begin
  5318  06FF                     u2327:
  5319  06FF  0BA6               	decfsz	??_LCD_Begin,f
  5320  0700  2EFF               	goto	u2327
  5321  0701  0BA7               	decfsz	??_LCD_Begin+1,f
  5322  0702  2EFF               	goto	u2327
  5323  0703  0BA8               	decfsz	??_LCD_Begin+2,f
  5324  0704  2EFF               	goto	u2327
  5325  0705  2F06               	nop2
  5326  0706                     l76:
  5327  0706  0008               	return
  5328  0707                     __end_of_LCD_Begin:
  5329                           
  5330                           	psect	text25
  5331  0DE4                     __ptext25:	
  5332 ;; *************** function _LCD_Cmd *****************
  5333 ;; Defined at:
  5334 ;;		line 78 in file "./lcd.h"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;  Command         1    wreg     unsigned char 
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;  Command         1    5[BANK0 ] unsigned char 
  5339 ;; Return value:  Size  Location     Type
  5340 ;;                  1    wreg      void 
  5341 ;; Registers used:
  5342 ;;		wreg, status,2, status,0, pclath, cstack
  5343 ;; Tracked objects:
  5344 ;;		On entry : 0/0
  5345 ;;		On exit  : 0/0
  5346 ;;		Unchanged: 0/0
  5347 ;; Data sizes:     COMMON   BANK0   BANK1
  5348 ;;      Params:         0       0       0
  5349 ;;      Locals:         0       1       0
  5350 ;;      Temps:          0       2       0
  5351 ;;      Totals:         0       3       0
  5352 ;;Total ram usage:        3 bytes
  5353 ;; Hardware stack levels used: 1
  5354 ;; Hardware stack levels required when called: 1
  5355 ;; This function calls:
  5356 ;;		_LCD_Write_Nibble
  5357 ;; This function is called by:
  5358 ;;		_LCD_Goto
  5359 ;;		_LCD_Begin
  5360 ;;		_inicio_presentacion
  5361 ;;		_conditional_screen
  5362 ;;		_ventilator_screen
  5363 ;;		_key_writing_value
  5364 ;;		_screen_selector
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           
  5369                           ;psect for function _LCD_Cmd
  5370  0DE4                     _LCD_Cmd:
  5371                           
  5372                           ;incstack = 0
  5373                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  5374                           ;LCD_Cmd@Command stored from wreg
  5375  0DE4  1283               	bcf	3,5	;RP0=0, select bank0
  5376  0DE5  1303               	bcf	3,6	;RP1=0, select bank0
  5377  0DE6  00A5               	movwf	LCD_Cmd@Command
  5378  0DE7                     l1645:
  5379                           
  5380                           ;./lcd.h: 78: void LCD_Cmd(uint8_t Command);./lcd.h: 79: {;./lcd.h: 80:   RS = 0;
  5381  0DE7  1079               	bcf	_RS/(0+8),_RS& (0+7)
  5382  0DE8                     l1647:
  5383                           
  5384                           ;./lcd.h: 81:   LCD_Write_Nibble(Command >> 4);
  5385  0DE8  0825               	movf	LCD_Cmd@Command,w
  5386  0DE9  00A3               	movwf	??_LCD_Cmd
  5387  0DEA  3004               	movlw	4
  5388  0DEB                     u1085:
  5389  0DEB  1003               	clrc
  5390  0DEC  0CA3               	rrf	??_LCD_Cmd,f
  5391  0DED  3EFF               	addlw	-1
  5392  0DEE  1D03               	skipz
  5393  0DEF  2DEB               	goto	u1085
  5394  0DF0  0823               	movf	??_LCD_Cmd,w
  5395  0DF1  118A  20E2  158A   	fcall	_LCD_Write_Nibble
  5396                           
  5397                           ;./lcd.h: 82:   LCD_Write_Nibble(Command);
  5398  0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  5399  0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  5400  0DF6  0825               	movf	LCD_Cmd@Command,w
  5401  0DF7  118A  20E2  158A   	fcall	_LCD_Write_Nibble
  5402  0DFA                     l1649:
  5403                           
  5404                           ;./lcd.h: 83:   if((Command == 0x01) || (Command == 0x02))
  5405  0DFA  1283               	bcf	3,5	;RP0=0, select bank0
  5406  0DFB  1303               	bcf	3,6	;RP1=0, select bank0
  5407  0DFC  0325               	decf	LCD_Cmd@Command,w
  5408  0DFD  1903               	btfsc	3,2
  5409  0DFE  2E00               	goto	u1091
  5410  0DFF  2E01               	goto	u1090
  5411  0E00                     u1091:
  5412  0E00  2E07               	goto	l1653
  5413  0E01                     u1090:
  5414  0E01                     l1651:
  5415  0E01  3002               	movlw	2
  5416  0E02  0625               	xorwf	LCD_Cmd@Command,w
  5417  0E03  1D03               	btfss	3,2
  5418  0E04  2E06               	goto	u1101
  5419  0E05  2E07               	goto	u1100
  5420  0E06                     u1101:
  5421  0E06  2E11               	goto	l55
  5422  0E07                     u1100:
  5423  0E07                     l1653:
  5424                           
  5425                           ;./lcd.h: 84:     _delay((unsigned long)((2)*(32000000/4000.0)));
  5426  0E07  3015               	movlw	21
  5427  0E08  1283               	bcf	3,5	;RP0=0, select bank0
  5428  0E09  1303               	bcf	3,6	;RP1=0, select bank0
  5429  0E0A  00A4               	movwf	??_LCD_Cmd+1
  5430  0E0B  30C6               	movlw	198
  5431  0E0C  00A3               	movwf	??_LCD_Cmd
  5432  0E0D                     u2337:
  5433  0E0D  0BA3               	decfsz	??_LCD_Cmd,f
  5434  0E0E  2E0D               	goto	u2337
  5435  0E0F  0BA4               	decfsz	??_LCD_Cmd+1,f
  5436  0E10  2E0D               	goto	u2337
  5437  0E11                     l55:
  5438  0E11  0008               	return
  5439  0E12                     __end_of_LCD_Cmd:
  5440                           
  5441                           	psect	text26
  5442  00E2                     __ptext26:	
  5443 ;; *************** function _LCD_Write_Nibble *****************
  5444 ;; Defined at:
  5445 ;;		line 61 in file "./lcd.h"
  5446 ;; Parameters:    Size  Location     Type
  5447 ;;  n               1    wreg     unsigned char 
  5448 ;; Auto vars:     Size  Location     Type
  5449 ;;  n               1    2[BANK0 ] unsigned char 
  5450 ;; Return value:  Size  Location     Type
  5451 ;;                  1    wreg      void 
  5452 ;; Registers used:
  5453 ;;		wreg, status,2, status,0
  5454 ;; Tracked objects:
  5455 ;;		On entry : 0/0
  5456 ;;		On exit  : 0/0
  5457 ;;		Unchanged: 0/0
  5458 ;; Data sizes:     COMMON   BANK0   BANK1
  5459 ;;      Params:         0       0       0
  5460 ;;      Locals:         0       1       0
  5461 ;;      Temps:          0       2       0
  5462 ;;      Totals:         0       3       0
  5463 ;;Total ram usage:        3 bytes
  5464 ;; Hardware stack levels used: 1
  5465 ;; This function calls:
  5466 ;;		Nothing
  5467 ;; This function is called by:
  5468 ;;		_LCD_Cmd
  5469 ;;		_LCD_PutC
  5470 ;;		_LCD_Print
  5471 ;; This function uses a non-reentrant model
  5472 ;;
  5473                           
  5474                           
  5475                           ;psect for function _LCD_Write_Nibble
  5476  00E2                     _LCD_Write_Nibble:
  5477                           
  5478                           ;incstack = 0
  5479                           ; Regs used in _LCD_Write_Nibble: [wreg+status,2+status,0]
  5480                           ;LCD_Write_Nibble@n stored from wreg
  5481  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  5482  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  5483  00E4  00A2               	movwf	LCD_Write_Nibble@n
  5484  00E5                     l1629:
  5485                           
  5486                           ;./lcd.h: 61: void LCD_Write_Nibble(uint8_t n);./lcd.h: 62: {;./lcd.h: 63:   PORTCbits.R
      +                          C5 = RS;
  5487  00E5  1879               	btfsc	_RS/(0+8),_RS& (0+7)
  5488  00E6  28E8               	goto	u1041
  5489  00E7  28EC               	goto	u1040
  5490  00E8                     u1041:
  5491  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  5492  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  5493  00EA  1687               	bsf	7,5	;volatile
  5494  00EB  28EF               	goto	u1054
  5495  00EC                     u1040:
  5496  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  5497  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  5498  00EE  1287               	bcf	7,5	;volatile
  5499  00EF                     u1054:
  5500  00EF                     l1631:
  5501                           
  5502                           ;./lcd.h: 64:   PORTBbits.RB4 = n & 0x01;
  5503  00EF  0822               	movf	LCD_Write_Nibble@n,w
  5504  00F0  3901               	andlw	1
  5505  00F1  00A0               	movwf	??_LCD_Write_Nibble
  5506  00F2  0EA0               	swapf	??_LCD_Write_Nibble,f
  5507  00F3  0806               	movf	6,w	;volatile
  5508  00F4  0620               	xorwf	??_LCD_Write_Nibble,w
  5509  00F5  39EF               	andlw	-17
  5510  00F6  0620               	xorwf	??_LCD_Write_Nibble,w
  5511  00F7  0086               	movwf	6	;volatile
  5512                           
  5513                           ;./lcd.h: 65:   PORTBbits.RB5 = (n >> 1) & 0x01;
  5514  00F8  0822               	movf	LCD_Write_Nibble@n,w
  5515  00F9  00A0               	movwf	??_LCD_Write_Nibble
  5516  00FA  1003               	clrc
  5517  00FB  0C20               	rrf	??_LCD_Write_Nibble,w
  5518  00FC  3901               	andlw	1
  5519  00FD  00A1               	movwf	??_LCD_Write_Nibble+1
  5520  00FE  0EA1               	swapf	??_LCD_Write_Nibble+1,f
  5521  00FF  0DA1               	rlf	??_LCD_Write_Nibble+1,f
  5522  0100  0806               	movf	6,w	;volatile
  5523  0101  0621               	xorwf	??_LCD_Write_Nibble+1,w
  5524  0102  39DF               	andlw	-33
  5525  0103  0621               	xorwf	??_LCD_Write_Nibble+1,w
  5526  0104  0086               	movwf	6	;volatile
  5527                           
  5528                           ;./lcd.h: 66:   PORTBbits.RB6 = (n >> 2) & 0x01;
  5529  0105  0822               	movf	LCD_Write_Nibble@n,w
  5530  0106  00A0               	movwf	??_LCD_Write_Nibble
  5531  0107  3002               	movlw	2
  5532  0108                     u1065:
  5533  0108  1003               	clrc
  5534  0109  0CA0               	rrf	??_LCD_Write_Nibble,f
  5535  010A  3EFF               	addlw	-1
  5536  010B  1D03               	skipz
  5537  010C  2908               	goto	u1065
  5538  010D  0820               	movf	??_LCD_Write_Nibble,w
  5539  010E  3901               	andlw	1
  5540  010F  00A1               	movwf	??_LCD_Write_Nibble+1
  5541  0110  0EA1               	swapf	??_LCD_Write_Nibble+1,f
  5542  0111  0DA1               	rlf	??_LCD_Write_Nibble+1,f
  5543  0112  0DA1               	rlf	??_LCD_Write_Nibble+1,f
  5544  0113  0806               	movf	6,w	;volatile
  5545  0114  0621               	xorwf	??_LCD_Write_Nibble+1,w
  5546  0115  39BF               	andlw	-65
  5547  0116  0621               	xorwf	??_LCD_Write_Nibble+1,w
  5548  0117  0086               	movwf	6	;volatile
  5549                           
  5550                           ;./lcd.h: 67:   PORTBbits.RB7 = (n >> 3) & 0x01;
  5551  0118  0822               	movf	LCD_Write_Nibble@n,w
  5552  0119  00A0               	movwf	??_LCD_Write_Nibble
  5553  011A  3003               	movlw	3
  5554  011B                     u1075:
  5555  011B  1003               	clrc
  5556  011C  0CA0               	rrf	??_LCD_Write_Nibble,f
  5557  011D  3EFF               	addlw	-1
  5558  011E  1D03               	skipz
  5559  011F  291B               	goto	u1075
  5560  0120  0820               	movf	??_LCD_Write_Nibble,w
  5561  0121  3901               	andlw	1
  5562  0122  00A1               	movwf	??_LCD_Write_Nibble+1
  5563  0123  0CA1               	rrf	??_LCD_Write_Nibble+1,f
  5564  0124  0CA1               	rrf	??_LCD_Write_Nibble+1,f
  5565  0125  0806               	movf	6,w	;volatile
  5566  0126  0621               	xorwf	??_LCD_Write_Nibble+1,w
  5567  0127  397F               	andlw	-129
  5568  0128  0621               	xorwf	??_LCD_Write_Nibble+1,w
  5569  0129  0086               	movwf	6	;volatile
  5570  012A                     l1633:
  5571                           
  5572                           ;./lcd.h: 70:   PORTCbits.RC7 = 0;
  5573  012A  1387               	bcf	7,7	;volatile
  5574  012B                     l1635:
  5575                           
  5576                           ;./lcd.h: 71:   _delay((unsigned long)((1)*(32000000/4000000.0)));
  5577  012B  292C               	nop2	;2 cycle nop
  5578  012C  292D               	nop2	;2 cycle nop
  5579  012D  292E               	nop2	;2 cycle nop
  5580  012E  292F               	nop2	;2 cycle nop
  5581  012F                     l1637:
  5582                           
  5583                           ;./lcd.h: 72:   PORTCbits.RC7 = 1;
  5584  012F  1283               	bcf	3,5	;RP0=0, select bank0
  5585  0130  1303               	bcf	3,6	;RP1=0, select bank0
  5586  0131  1787               	bsf	7,7	;volatile
  5587  0132                     l1639:
  5588                           
  5589                           ;./lcd.h: 73:   _delay((unsigned long)((1)*(32000000/4000000.0)));
  5590  0132  2933               	nop2	;2 cycle nop
  5591  0133  2934               	nop2	;2 cycle nop
  5592  0134  2935               	nop2	;2 cycle nop
  5593  0135  2936               	nop2	;2 cycle nop
  5594  0136                     l1641:
  5595                           
  5596                           ;./lcd.h: 74:   PORTCbits.RC7 = 0;
  5597  0136  1283               	bcf	3,5	;RP0=0, select bank0
  5598  0137  1303               	bcf	3,6	;RP1=0, select bank0
  5599  0138  1387               	bcf	7,7	;volatile
  5600  0139                     l1643:
  5601                           
  5602                           ;./lcd.h: 75:   _delay((unsigned long)((100)*(32000000/4000000.0)));
  5603  0139  309F               	movlw	159
  5604  013A  1283               	bcf	3,5	;RP0=0, select bank0
  5605  013B  1303               	bcf	3,6	;RP1=0, select bank0
  5606  013C  00A0               	movwf	??_LCD_Write_Nibble
  5607  013D                     u2347:
  5608  013D  293E               	nop2
  5609  013E  0BA0               	decfsz	??_LCD_Write_Nibble,f
  5610  013F  293D               	goto	u2347
  5611  0140  2941               	nop2
  5612  0141  0000               	nop
  5613  0142                     l49:
  5614  0142  0008               	return
  5615  0143                     __end_of_LCD_Write_Nibble:
  5616  007E                     btemp	set	126	;btemp
  5617  007E                     wtemp0	set	126
  5618                           
  5619                           	psect	config
  5620                           
  5621                           ;Config register CONFIG @ 0x2007
  5622                           ;	Oscillator Selection bits
  5623                           ;	FOSC = XT, XT oscillator
  5624                           ;	Watchdog Timer Enable bit
  5625                           ;	WDTE = OFF, WDT disabled
  5626                           ;	Power-up Timer Enable bit
  5627                           ;	PWRTE = OFF, PWRT disabled
  5628                           ;	Brown-out Reset Enable bit
  5629                           ;	BOREN = OFF, BOR disabled
  5630                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5631                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  5632                           ;	Data EEPROM Memory Code Protection bit
  5633                           ;	CPD = OFF, Data EEPROM code protection off
  5634                           ;	Flash Program Memory Write Enable bits
  5635                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  5636                           ;	In-Circuit Debugger Mode bit
  5637                           ;	DEBUG = 0x1, unprogrammed default
  5638                           ;	Flash Program Memory Code Protection bit
  5639                           ;	CP = OFF, Code protection off
  5640  2007                     	org	8199
  5641  2007  3F39               	dw	16185

Data Sizes:
    Strings     92
    Constant    0
    Data        103
    BSS         16
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94     60      90
    BANK1            94      0      92

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_9(CODE[4]), STR_5(CODE[5]), STR_4(CODE[3]), ventilator_screen@vel_value(BANK0[1]), 
		 -> ventilator_screen@vel_number(BANK0[1]), ventilator_screen@vol_value(BANK0[1]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> STR_1(CODE[3]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 14
		 -> screen_selector@value(BANK0[1]), ventilator_screen@vel(BANK0[5]), ventilator_screen@vol(BANK0[10]), conditional_screen@msj(BANK0[14]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 14
		 -> screen_selector@value(BANK0[1]), ventilator_screen@vel(BANK0[5]), ventilator_screen@vol(BANK0[10]), conditional_screen@msj(BANK0[14]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 1
		 -> screen_selector@value(BANK0[1]), ventilator_screen@vel_value(BANK0[1]), ventilator_screen@vel_number(BANK0[1]), ventilator_screen@vol_value(BANK0[1]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 1
		 -> screen_selector@value(BANK0[1]), ventilator_screen@vel_value(BANK0[1]), ventilator_screen@vel_number(BANK0[1]), ventilator_screen@vol_value(BANK0[1]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 1
		 -> screen_selector@value(BANK0[1]), ventilator_screen@vel_value(BANK0[1]), ventilator_screen@vel_number(BANK0[1]), ventilator_screen@vol_value(BANK0[1]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 1
		 -> screen_selector@value(BANK0[1]), ventilator_screen@vel_value(BANK0[1]), ventilator_screen@vel_number(BANK0[1]), ventilator_screen@vol_value(BANK0[1]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 4096
		 -> ROM(CODE[4096]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 1
		 -> screen_selector@value(BANK0[1]), ventilator_screen@vel_value(BANK0[1]), ventilator_screen@vel_number(BANK0[1]), ventilator_screen@vol_value(BANK0[1]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 14
		 -> screen_selector@value(BANK0[1]), ventilator_screen@vel(BANK0[5]), ventilator_screen@vol(BANK0[10]), conditional_screen@msj(BANK0[14]), 

    inicio_presentacion@str	PTR unsigned char  size(1) Largest target is 29
		 -> grupo(BANK1[6]), presentacion(BANK1[29]), saludo(BANK1[23]), 

    LCD_Print@LCD_Str	PTR unsigned char  size(2) Largest target is 29
		 -> grupo(BANK1[6]), presentacion(BANK1[29]), saludo(BANK1[23]), STR_11(CODE[16]), 
		 -> STR_10(CODE[9]), screen_selector@value(BANK0[1]), STR_8(CODE[12]), STR_7(CODE[18]), 
		 -> STR_6(CODE[14]), ventilator_screen@vel(BANK0[5]), ventilator_screen@vol(BANK0[10]), conditional_screen@con(BANK0[10]), 
		 -> conditional_screen@msj(BANK0[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_selector_type
    _selector_type->_ventilator_screen
    _ventilator_screen->_itoa
    _screen_selector->_itoa
    _key_writing_value->_atoi
    _atoi->___wmul
    _LCD_PutC->_LCD_Write_Nibble
    _itoa->_utoa
    _utoa->___lwdiv
    _keypad_getkey->_keypad_readkey
    _conditional_screen->_LCD_Goto
    _load_values->_eeprom_write
    _inicio_presentacion->_LCD_Goto
    _LCD_Print->_LCD_Write_Nibble
    _LCD_Goto->_LCD_Cmd
    _LCD_Begin->_LCD_Cmd
    _LCD_Cmd->_LCD_Write_Nibble

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   26402
                                             56 BANK0      4     4      0
                          _LCD_Begin
                           _LCD_Goto
                           _LCD_PutC
                    _iniciar_puertos
                _inicio_presentacion
                      _keypad_getkey
                        _load_values
                      _selector_type
 ---------------------------------------------------------------------------------
 (1) _selector_type                                        3     3      0   21121
                                             53 BANK0      3     3      0
                 _conditional_screen
                      _keypad_getkey
                    _screen_selector
                  _ventilator_screen
 ---------------------------------------------------------------------------------
 (2) _ventilator_screen                                   30    22      8    6981
                                             23 BANK0     30    22      8
                            _LCD_Cmd
                           _LCD_Goto
                          _LCD_Print
                            ___fltol
                               _itoa
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _screen_selector                                     14    13      1    9846
                                             23 BANK0     10     9      1
                            _LCD_Cmd
                           _LCD_Goto
                          _LCD_Print
                            ___fltol
                               _itoa
                  _key_writing_value
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _key_writing_value                                    4     4      0    3335
                                             14 BANK0      3     3      0
                            _LCD_Cmd
                           _LCD_Goto
                          _LCD_Print
                           _LCD_PutC
                               _atoi
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 8     6      2     606
                                              6 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _LCD_PutC                                             2     2      0     132
                                              3 BANK0      2     2      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 7     3      4    2167
                                             17 BANK0      6     2      4
                            ___fltol (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     5      4    1264
                                              8 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              6     2      4     311
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4     466
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     381
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (2) _keypad_getkey                                        2     2      0      46
                                              1 BANK0      2     2      0
                     _keypad_readkey
 ---------------------------------------------------------------------------------
 (3) _keypad_readkey                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _conditional_screen                                  30    28      2    4002
                                             10 BANK0     30    28      2
                            _LCD_Cmd
                           _LCD_Goto
                          _LCD_Print
                             _strcat
 ---------------------------------------------------------------------------------
 (4) _strcat                                               5     3      2    1079
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _load_values                                          1     1      0     576
                                              3 BANK0      1     1      0
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (2) _eeprom_write                                         3     2      1     576
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _inicio_presentacion                                  8     5      3    3032
                                             10 BANK0      8     5      3
                            _LCD_Cmd
                           _LCD_Goto
                          _LCD_Print
 ---------------------------------------------------------------------------------
 (3) _LCD_Print                                            4     2      2    1058
                                              3 BANK0      4     2      2
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (3) _LCD_Goto                                             4     3      1    1274
                                              6 BANK0      4     3      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _iniciar_puertos                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            3     3      0     176
                                              6 BANK0      3     3      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (4) _LCD_Cmd                                              3     3      0     176
                                              3 BANK0      3     3      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_Nibble                                     3     3      0      88
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Begin
     _LCD_Cmd
       _LCD_Write_Nibble
   _LCD_Goto
     _LCD_Cmd
   _LCD_PutC
     _LCD_Write_Nibble
   _iniciar_puertos
   _inicio_presentacion
     _LCD_Cmd
     _LCD_Goto
     _LCD_Print
       _LCD_Write_Nibble
   _keypad_getkey
     _keypad_readkey
   _load_values
     _eeprom_write
   _selector_type
     _conditional_screen
       _LCD_Cmd
       _LCD_Goto
       _LCD_Print
       _strcat
     _keypad_getkey
     _screen_selector
       _LCD_Cmd
       _LCD_Goto
       _LCD_Print
       ___fltol
       _itoa
         ___fltol (ARG)
         _utoa (ARG)
           ___lwdiv
           ___lwmod
       _key_writing_value
         _LCD_Cmd
         _LCD_Goto
         _LCD_Print
         _LCD_PutC
         _atoi
           ___wmul
           _isdigit
       _strcat
     _ventilator_screen
       _LCD_Cmd
       _LCD_Goto
       _LCD_Print
       ___fltol
       _itoa
       _strcat

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               5E      0      5C       6       97.9%
BITBANK1            5E      0       0       5        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               5E     3C      5A       4       95.7%
BITBANK0            5E      0       1       3        1.1%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      B6       8        0.0%
ABS                  0      0      B6       7        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jun 23 20:01:32 2021

                                 _i 0077                                   pc 0002  
                                l55 0E11                                  l64 0E41  
                                l49 0142                                  l73 0F5D  
                                l67 0D77                                  l76 0706  
                                l94 073E                                  l95 072C  
                                l96 07DE                                  l97 0732  
                                l98 0738                                  _RS 03C8  
                                _va 0062                                  _vb 0060  
                                fsr 0004                 ___wmul@multiplicand 0022  
                               l100 0773                                 l101 0761  
                               l102 0767                                 l111 07CB  
                               l103 076D                                 l112 07D1  
                               l113 07D7                                 l105 07A8  
                               l106 0796                                 l107 079C  
                               l123 0D98                                 l108 07A2  
                               l212 058F                                 l150 0EE2  
                               l320 0E77                                 l153 0D60  
                               l330 0DCB                                 l323 0E99  
                               l171 0328                                 l332 0DE3  
                               l326 0EAA                                 l190 0227  
                               l159 00E1                                 l319 0E77  
                               l184 0649                                 l602 0FA3  
                               l523 028E                                 l516 02A3  
                               l612 0F1E                                 l526 02A3  
                               l199 04E3                                 l810 0197  
                               l812 01AE                                 l804 0DBC  
                               l821 0E73                                 l793 03B1  
                               _ECO 0066                                 l798 0081  
                               _RA0 0028                                 _RA1 0029  
                               _RA2 002A                                 _RA3 002B  
                               _RC0 0038                                 _RA4 002C  
                               _RC1 0039                                 _RA5 002D  
                  ?_iniciar_puertos 0020                                 fsr0 0004  
                               indf 0000                     __end_of_LCD_Cmd 0E12  
                      ___fltol@exp1 002A                                l2001 0235  
                              l2011 025C                                l2021 026A  
                              l2013 025E                                l2005 023E  
                              l2101 05BE                                l2031 0293  
                              l2015 0262                                l2023 027C  
                              l2007 0253                                l2111 05FC  
                              l2103 05C4                                l2201 0D55  
                              l2041 0D8D                                l2033 0298  
                              l2009 0254                                l2121 0636  
                              l2113 060A                                l2105 05DF  
                              l2211 0D5A                                l2203 0D56  
                              l2051 0E91                                l2043 0D95  
                              l2035 0D78                                l2131 045A  
                              l2123 0640                                l2115 0614  
                              l2107 05E9                                l2213 0D5B  
                              l2205 0D57                                l2221 0082  
                              l2061 0EA2                                l2053 0E94  
                              l2037 0D7F                                l2029 0283  
                              l2141 0476                                l2133 0461  
                              l2125 0446                                l2117 061E  
                              l2109 05F2                                l2301 03F1  
                              l2215 0D5C                                l2207 0D58  
                              l2231 00AA                                l2223 008A  
                              l2063 0EA3                                l2055 0E98  
                              l2047 0E7D                                l2071 02D4  
                              l2039 0D87                                l2143 0476  
                              l2135 046B                                l2151 04A8  
                              l2127 044A                                l2119 062C  
                              l2311 0428                                l2303 03FE  
                              l2217 0D5D                                l2209 0D59  
                              l2241 00D9                                l2233 00B5  
                              l2225 0093                                l2065 0EA9  
                              l2057 0E9D                                l2049 0E89  
                              l2081 02FC                                l2073 02DC  
                              l2161 04D0                                l2153 04AE  
                              l2145 0479                                l2137 0475  
                              l2129 0452                                l2313 042C  
                              l2305 0409                                l2171 066F  
                              l2219 0D5E                                l2235 00BD  
                              l2227 00A1                                l2059 0EA1  
                              l2083 0304                                l2075 02E5  
                              l2067 02A4                                l2163 04DF  
                              l2155 04B5                                l2147 0494  
                              l2139 0476                                l2091 0594  
                              l2251 050A                                l2243 04E7  
                              l2315 0432                                l2307 0411  
                              l2181 06AB                                l2173 067E  
                              l2165 064A                                l2237 00CB  
                              l2229 00A6                                l2085 030C  
                              l2077 02EC                                l2069 02D0  
                              l1701 0EF5                                l2157 04C4  
                              l2149 049E                                l2093 05AB  
                              l2261 053C                                l2253 0513  
                              l2245 04EB                                l2309 0420  
                              l1631 00EF                                l2191 06F3  
                              l2183 06BA                                l2175 0689  
                              l2167 065D                                l2239 00D5  
                              l2087 031F                                l2079 02F5  
                              l1711 0F14                                l1703 0EF9  
                              l2159 04C9                                l2095 05BB  
                              l2271 0561                                l2263 0543  
                              l2255 051A                                l2247 04F1  
                              l1641 0136                                l1633 012A  
                              l2185 06CD                                l2177 0698  
                              l2169 066B                                l2193 0EAB  
                              l1705 0EFD                                l1713 0F1A  
                              l1801 015F                                l1721 0078  
                              l2097 05BC                                l2089 0590  
                              l2281 0587                                l2273 0569  
                              l2265 054B                                l2257 052D  
                              l2249 04F7                                l1643 0139  
                              l1635 012B                                l1651 0E01  
                              l2187 06D1                                l2179 069C  
                              l2195 0D4C                                l2347 0E36  
                              l1731 0E16                                l1707 0F07  
                              l1811 018D                                l1803 0165  
                              l1723 007E                                l2099 05BD  
                              l2275 0572                                l2267 0554  
                              l2259 0536                                l2291 03BE  
                              l1637 012F                                l1629 00E5  
                              l1653 0E07                                l1645 0DE7  
                              l2189 06E4                                l2197 0D51  
                              l1733 0E1C                                l1709 0F0D  
                              l1821 01AA                                l1813 0193  
                              l1805 0169                                l1661 0DD2  
                              l1725 0080                                l1717 0071  
                              l2277 0578                                l2269 055A  
                              l2293 03C1                                l2285 03B2  
                              l1639 0132                                l1647 0DE8  
                              l2199 0D54                                l1735 0E22  
                              l1751 0F1F                                l1911 07AC  
                              l1903 07A0                                l1831 071A  
                              l1671 0F62                                l1815 019B  
                              l1807 016B                                l1663 0DD9  
                              l1655 0DBD                                l1719 0072  
                              l2279 057F                                l2295 03CE  
                              l2287 03B8                                l1649 0DFA  
                              l1737 0E28                                l1729 0E15  
                              l1753 0F22                                l1921 07C5  
                              l1913 07B3                                l1833 071E  
                              l1825 0707                                l1681 0F7A  
                              l1673 0F68                                l1817 01A2  
                              l1809 017C                                l1665 0DDF  
                              l1657 0DC1                                l1761 032C  
                              l2297 03D9                                l2289 03BB  
                              l1739 0E2E                                l1755 0F24  
                              l1931 07D5                                l1923 07C9  
                              l1915 07B9                                l1907 07A6  
                              l1851 073C                                l1843 0730  
                              l1835 0722                                l1827 070D  
                              l1683 0F8B                                l1675 0F6B  
                              l1691 0F9F                                l1819 01A4  
                              l1747 0D64                                l1659 0DC5  
                              l1771 0348                                l1763 032D  
                              l2299 03E6                                l1757 0F48  
                              l1917 07BD                                l1861 0753  
                              l1837 0726                                l1829 0714  
                              l1685 0F91                                l1677 0F72  
                              l1669 0F5E                                l1749 0D65  
                              l1773 0352                                l1765 0331  
                              l1759 0F4E                                l1951 0E5B  
                              l1943 0E45                                l1935 07DB  
                              l1927 07CF                                l1919 07C1  
                              l1871 0765                                l1863 0757  
                              l1855 0742                                l1847 0736  
                              l1839 072A                                l1687 0F92  
                              l1679 0F76                                l1695 0EE3  
                              l1791 03AD                                l1783 038E  
                              l1775 035B                                l1767 033B  
                              l1953 0E61                                l1945 0E4A  
                              l1865 075B                                l1857 0749  
                              l1689 0F99                                l1697 0EEB  
                              l1961 0DA7                                l1785 039A  
                              l1777 0365                                l1769 0345  
                              l1947 0E4E                                l1939 07DD  
                              l1891 078C                                l1883 0777  
                              l1875 076B                                l1867 075F  
                              l1859 074F                                l1699 0EEE  
                              l1795 0146                                l1963 0DAB  
                              l1955 0D9C                                l1787 03A1  
                              l1779 036A                                l1971 01AF  
                              l1949 0E57                                l1893 0790  
                              l1885 077E                                l1797 014A  
                              l1965 0DB0                                l1957 0D9C  
                              l1981 01D6                                l1973 01B3  
                              l1895 0794                                l1887 0784  
                              l1879 0771                                l1799 015B  
                              l1959 0DA0                                l1991 01FE  
                              l1983 01DA                                l1975 01BB  
                              l1889 0788                                l1993 0208  
                              l1985 01E9                                l1977 01C4  
                              l1969 01AF                                l1899 079A  
                              l1995 0214                                l1987 01ED  
                              l1979 01CE                                l1997 0223  
                              l1989 01F5                                l1999 0228  
                 ?_LCD_Write_Nibble 0020                                STR_1 006B  
                              STR_2 005C                                STR_3 0060  
                              STR_4 0068                                STR_5 0057  
                              STR_6 0034                                STR_7 0012  
                              STR_8 0042                                STR_9 0064  
                              u1100 0E07                                u1101 0E06  
                              u1110 0DC5                                u1111 0DC4  
                              u1040 00EC                                u2000 00CB  
                              u1041 00E8                                u2001 00CA  
                              u1210 0F9F                                u2010 04F1  
                              u1211 0F9E                                u2011 04F0  
                              u1220 0EEB                                u1140 0DDF  
                              u2020 04F7                                u2005 00C7  
                              u1205 0F93                                u1221 0EEA  
                              u1141 0DDE                                u1125 0DCC  
                              u2021 04F6                                u1054 00EF  
                              u1150 0F68                                u2030 051A  
                              u1151 0F67                                u1135 0DD3  
                              u2031 0519                                u1320 0F5D  
                              u1240 0EFD                                u1400 0193  
                              u2040 053C                                u1065 0108  
                              u1321 0F5C                                u1241 0EFC  
                              u1401 0192                                u1305 0D68  
                              u2041 053B                                u1090 0E01  
                              u1170 0F7A                                u1250 0F07  
                              u1410 01AA                                u1330 033B  
                              u2050 055A                                u1075 011B  
                              u1091 0E00                                u1315 0F30  
                              u1171 0F79                                u1251 0F06  
                              u1235 0EEF                                u1411 01A9  
                              u1331 033A                                u2051 0559  
                              u2107 0419                                u1500 074F  
                              u1420 071A                                u1340 0345  
                              u2060 0578                                u1085 0DEB  
                              u1501 074E                                u1421 0719  
                              u1165 0F6C                                u1341 0344  
                              u2061 0577                                u2117 043A  
                              u1510 0753                                u1430 071E  
                              u1190 0F8B                                u1270 0F1A  
                              u1350 0352                                u2207 009B  
                              u1511 0752                                u1431 071D  
                              u1191 0F8A                                u1271 0F19  
                              u1255 0F03                                u1351 0351  
                              u2127 04BD                                u1600 078C  
                              u1520 0757                                u1440 0722  
                              u1280 0078                                u1360 0365  
                              u2217 00B0                                u1601 078B  
                              u1521 0756                                u1441 0721  
                              u1185 0F7B                                u1265 0F0E  
                              u1281 0077                                u1361 0364  
                              u2137 04D8                                u1610 0790  
                              u1530 075B                                u1450 0726  
                              u1290 007E                                u1370 039A  
                              u2307 06D9                                u2227 00D1  
                              u1611 078F                                u1531 075A  
                              u1451 0725                                u1195 0F87  
                              u1291 007D                                u1371 0399  
                              u2147 01E2                                u1700 07C9  
                              u1620 0794                                u1540 075F  
                              u1460 072A                                u1380 03A1  
                              u2317 06EC                                u2237 0665  
                              u1701 07C8                                u1621 0793  
                              u1541 075E                                u1461 0729  
                              u1381 03A0                                u2157 021C  
                              u2077 03D4                                u1710 07CF  
                              u1630 079A                                u1550 0765  
                              u1470 0730                                u1390 0165  
                              u2327 06FF                                u2247 0675  
                              u1711 07CE                                u1631 0799  
                              u1551 0764                                u1471 072F  
                              u2167 0711                                u1391 0164  
                              u2087 03EC                                u1720 07D5  
                              u1640 07A0                                u1560 076B  
                              u1480 0736                                u1800 0269  
                              u2337 0E0D                                u2257 0684  
                              u1721 07D4                                u1641 079F  
                              u1561 076A                                u2177 0746  
                              u1481 0735                                u1801 0268  
                              u2097 0404                                u1730 07DB  
                              u1650 07A6                                u1570 0771  
                              u1490 073C                                u2347 013D  
                              u2267 0693                                u1731 07DA  
                              u1651 07A5                                u2187 077B  
                              u1571 0770                                u1491 073B  
                              u1900 0E98                                u1740 0E56  
                              u1660 07B9                                u1580 0784  
                              u1820 027B                                u2277 06A2  
                              u1901 0E97                                u1741 0E55  
                              u1661 07B8                                u2197 07B0  
                              u1581 0783                                u1821 027A  
                              u1910 0EA9                                u1750 0E73  
                              u1670 07BD                                u1590 0788  
                              u1830 0282                                u2287 06B3  
                              u1911 0EA8                                u1751 0E72  
                              u1671 07BC                                u1591 0787  
                              u1831 0281                                u1815 026B  
                              u1920 02AE                                u1680 07C1  
                              u1760 0DA0                                u2297 06C6  
                              u1681 07C0                                u1761 0D9F  
                              u1930 02C3                                u1690 07C5  
                              u1850 0293                                u1770 0235  
                              u1691 07C4                                u1851 0292  
                              u1771 0234                                u1940 02DC  
                              u1860 0298                                u1780 024C  
                              u1941 02DB                                u1861 0297  
                              u1845 0285                                u1950 02EC  
                              u1870 0D8D                                u1790 0262  
                              u1951 02EB                                u1871 0D8C  
                              u1791 0261                                u1960 02FC  
                              u1880 0D95                                u1961 02FB  
                              u1881 0D94                                u1785 0247  
                              u1890 0E7D                                u1970 059E  
                              u1891 0E7C                                u1980 045A  
                              u1981 0459                                u1990 04AE  
                              u1991 04AD                      ??_eeprom_write 0021  
                ??_LCD_Write_Nibble 0020                                _atoi 0329  
                              _main 03B2                  __size_of_LCD_Begin 00BD  
                              _itoa 0D99                                btemp 007E  
                              _utoa 0143                  __size_of_LCD_Print 003F  
                              start 0000                         LCD_Goto@col 0029  
                       LCD_Goto@row 0026                    __end_of_LCD_Goto 0E42  
                  __end_of_LCD_PutC 0D78                       ___fltol@sign1 0029  
                             ?_atoi 0026                               ?_main 0020  
                             ?_itoa 0031                               _ADRES 0064  
                             _EEADR 010D                               STR_10 004E  
                             STR_11 0024                     __end_of___fltol 02A4  
                             ?_utoa 0028                        ?_load_values 0020  
                   __end_of___lwdiv 0FA4                     __end_of___lwmod 0F1F  
                             _PORTA 0005                               _PORTB 0006  
                             _PORTC 0007                    ??_keypad_readkey 0020  
                   __end_of_isdigit 0082                               _grupo 00F6  
        __end_of_conditional_screen 0329                               atoi@a 002B  
                             atoi@s 002D                               main@c 005B  
                             pclath 000A                               utoa@c 002F  
                             utoa@v 002D                               status 0003  
                             wtemp0 007E                     __initialization 07DF  
                      __end_of_atoi 03B2                        __end_of_main 0443  
                      __end_of_itoa 0DBD                        __end_of_utoa 01AF  
ventilator_screen@ventilator_number 003D                      selector_type@c 0057  
                    selector_type@k 0056                              ??_atoi 0028  
                            ??_main 0058                              ??_itoa 0035  
                 __end_of_LCD_Begin 0707                              ??_utoa 002C  
                         ??_LCD_Cmd 0023                   __end_of_LCD_Print 0F5E  
                            _ADCON1 009F                              _EEDATA 010C  
                            _EECON1 018C                              _EECON2 018D  
             __end_of_selector_type 0590             conditional_screen@F1120 00B8  
           conditional_screen@F1118 00A0                   _ventilator_screen 0590  
                            ___wmul 0DBD                           ??___fltol 0024  
                         ??___lwdiv 0024                           ??___lwmod 0024  
                ?_ventilator_screen 0037                              _saludo 00DF  
                            _number 005C                __end_of_eeprom_write 0EAB  
                            _strcat 0E42                           ??_isdigit 0000  
               ??_ventilator_screen 003F             __end_of__initialization 07FD  
                         ?_LCD_Goto 0026                           ?_LCD_PutC 0020  
                     _length_saludo 0071                          ___fltol@f1 0020  
            __size_of_keypad_getkey 0021            __size_of_screen_selector 00A1  
         __end_of_ventilator_screen 064A        __size_of_inicio_presentacion 0060  
                    __pcstackCOMMON 0000                        __pidataBANK0 0D30  
                      __pidataBANK1 0FA4                      LCD_Cmd@Command 0025  
            inicio_presentacion@str 002C                __size_of_load_values 0038  
                 eeprom_write@value 0020                          __pbssBANK0 005C  
                        ??_LCD_Goto 0027                          ??_LCD_PutC 0023  
            ventilator_screen@F1130 006B              ventilator_screen@F1132 006A  
            ventilator_screen@F1134 0069              ventilator_screen@F1126 00AE  
            ventilator_screen@F1128 006C                          __pmaintext 03B2  
                           ?___wmul 0020           __size_of_LCD_Write_Nibble 0061  
                           ?_strcat 0020                       _keypad_getkey 0D78  
                           _LCD_Cmd 0DE4                          __stringtab 0002  
          __size_of_iniciar_puertos 0015          __size_of_ventilator_screen 00BA  
                _conditional_screen 02A4               __size_of_eeprom_write 0037  
                  LCD_PutC@LCD_Char 0024                             ___fltol 0228  
                   __size_of___wmul 0027                             ___lwdiv 0F5E  
                           ___lwmod 0EE3                   ??_screen_selector 0038  
               ?_conditional_screen 002A          ventilator_screen@vel_value 0054  
          ventilator_screen@voltaje 0037                             __ptext1 04E4  
                           __ptext2 0590                             __ptext3 0443  
                           __ptext4 01AF                             __ptext5 0329  
                           __ptext6 006E                             __ptext7 0DBD  
                           __ptext8 0D61                             __ptext9 0D99  
                    ?_keypad_getkey 0020                     __size_of_strcat 0032  
                           _isdigit 006E                           _LCD_Begin 064A  
        ventilator_screen@vol_value 0052                           _LCD_Print 0F1F  
                           clrloop0 0D29                end_of_initialization 07FD  
              ??_conditional_screen 002C                             itoa@buf 0036  
                           itoa@val 0031                        _eeprom_write 0E74  
                           utoa@buf 0030                   LCD_Write_Nibble@n 0022  
                           utoa@val 0028                           _PORTBbits 0006  
                         _PORTCbits 0007                           _TRISAbits 0085  
                         _TRISBbits 0086                           _TRISCbits 0087  
                        ?_LCD_Begin 0020                 _inicio_presentacion 0082  
                        ?_LCD_Print 0023             __size_of_keypad_readkey 00D8  
                 __size_of_LCD_Goto 0030                   __size_of_LCD_PutC 0017  
                 ??_iniciar_puertos 0000                ?_inicio_presentacion 002A  
              screen_selector@F1145 0068                    _LCD_Write_Nibble 00E2  
                        LCD_Print@i 0026                      __end_of___wmul 0DE4  
                   ??_keypad_getkey 0021              __size_of_selector_type 00AC  
                     __pbitbssBANK0 03C8               conditional_screen@con 0030  
             conditional_screen@msj 003A                screen_selector@value 0040  
                    __end_of_strcat 0E74                 start_initialization 07DF  
              inicio_presentacion@i 0030               ??_inicio_presentacion 002D  
                          ??___wmul 0000                          init_fetch0 0D3B  
                       __pdataBANK0 006C                         __pdataBANK1 00A0  
               _length_presentacion 0073                            ??_strcat 0022  
                     ??_load_values 0023                            ?_LCD_Cmd 0020  
                      _length_grupo 0075                           ___latbits 0001  
                     __pcstackBANK0 0020                         ??_LCD_Begin 0026  
                       ??_LCD_Print 0025                    eeprom_write@addr 0022  
                     _selector_type 04E4                     _screen_selector 0443  
                         __pnvBANK0 0077                    ___lwdiv@dividend 0022  
                          ?___fltol 0020                            ?___lwdiv 0020  
                          ?___lwmod 0020                   _key_writing_value 01AF  
                  LCD_Print@LCD_Str 0023                           __pstrings 0002  
                ?_key_writing_value 0020                            ?_isdigit 0020  
               ??_key_writing_value 002E                    ___lwdiv@quotient 0025  
               __end_of_load_values 0EE3                      ?_selector_type 0020  
                          _LCD_Goto 0E12                            _LCD_PutC 0D61  
                    ___wmul@product 0024                      _keypad_readkey 0707  
                         clear_ram0 0D28           __end_of_key_writing_value 0228  
                       __stringbase 0011                   ___wmul@multiplier 0020  
                  __size_of_LCD_Cmd 002E             __end_of_screen_selector 04E4  
          __end_of_LCD_Write_Nibble 0143                     _iniciar_puertos 0D4C  
            __end_of_keypad_readkey 07DF         __size_of_conditional_screen 0085  
                  screen_selector@c 003F                    screen_selector@k 0037  
                  screen_selector@v 003B                          _EECON1bits 018C  
                  __size_of___fltol 007C                    __size_of___lwdiv 0046  
                  __size_of___lwmod 003C                  __end_of__stringtab 0012  
                       _isdigit$818 0020                         _load_values 0EAB  
                        strcat@from 0020                    __size_of_isdigit 0014  
                   ___lwdiv@divisor 0020                     ___lwdiv@counter 0027  
       ventilator_screen@vel_number 0053                            __ptext10 0143  
                          __ptext11 0EE3                            __ptext20 0082  
                          __ptext12 0F5E                            __ptext21 0F1F  
                          __ptext13 0228                            __ptext22 0E12  
                          __ptext14 0D78                            __ptext23 0D4C  
                          __ptext15 0707                            __ptext24 064A  
                          __ptext16 02A4                            __ptext25 0DE4  
                          __ptext17 0E42                            __ptext26 00E2  
                          __ptext18 0EAB                            __ptext19 0E74  
              ventilator_screen@vel 004D                ventilator_screen@vol 0043  
              ventilator_screen@vrm 003B                     ??_selector_type 0055  
                   ?_keypad_readkey 0020                       __size_of_atoi 0089  
                     __size_of_main 0091                       __size_of_itoa 0024  
                     __size_of_utoa 006C          __size_of_key_writing_value 0079  
                          atoi@sign 002A               __end_of_keypad_getkey 0D99  
               conditional_screen@x 002A             __end_of_iniciar_puertos 0D61  
                        _INTCONbits 000B                    keypad_getkey@key 0022  
                          itoa@base 0033                            init_ram0 0D3F  
                          isdigit@c 0021           inicio_presentacion@length 002A  
                  ?_screen_selector 0037         __end_of_inicio_presentacion 00E2  
                  ___lwmod@dividend 0022                           stringcode 000C  
                      _presentacion 00C2                            utoa@base 002A  
                          strcat@cp 0023                            strcat@to 0024  
                   ___lwmod@divisor 0020                     ___lwmod@counter 0025  
                          stringdir 000C                            stringtab 0002  
                     ?_eeprom_write 0020                          _STATUSbits 0003  
