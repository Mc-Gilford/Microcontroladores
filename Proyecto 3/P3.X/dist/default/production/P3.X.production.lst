

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jun 23 23:44:14 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F873A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    49                           	dabs	1,0x7E,2
    50  0000                     
    51                           ; Version 2.20
    52                           ; Generated 12/02/2020 GMT
    53                           ; 
    54                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F873A Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  000E                     	;# 
    98  000E                     	;# 
    99  000F                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0014                     	;# 
   105  0015                     	;# 
   106  0015                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001B                     	;# 
   114  001C                     	;# 
   115  001D                     	;# 
   116  001E                     	;# 
   117  001F                     	;# 
   118  0081                     	;# 
   119  0085                     	;# 
   120  0086                     	;# 
   121  0087                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  010C                     	;# 
   192  010D                     	;# 
   193  010E                     	;# 
   194  010F                     	;# 
   195  018C                     	;# 
   196  018D                     	;# 
   197  0000                     	;# 
   198  0001                     	;# 
   199  0002                     	;# 
   200  0003                     	;# 
   201  0004                     	;# 
   202  0005                     	;# 
   203  0006                     	;# 
   204  0007                     	;# 
   205  000A                     	;# 
   206  000B                     	;# 
   207  000C                     	;# 
   208  000D                     	;# 
   209  000E                     	;# 
   210  000E                     	;# 
   211  000F                     	;# 
   212  0010                     	;# 
   213  0011                     	;# 
   214  0012                     	;# 
   215  0013                     	;# 
   216  0014                     	;# 
   217  0015                     	;# 
   218  0015                     	;# 
   219  0016                     	;# 
   220  0017                     	;# 
   221  0018                     	;# 
   222  0019                     	;# 
   223  001A                     	;# 
   224  001B                     	;# 
   225  001B                     	;# 
   226  001C                     	;# 
   227  001D                     	;# 
   228  001E                     	;# 
   229  001F                     	;# 
   230  0081                     	;# 
   231  0085                     	;# 
   232  0086                     	;# 
   233  0087                     	;# 
   234  008C                     	;# 
   235  008D                     	;# 
   236  008E                     	;# 
   237  0091                     	;# 
   238  0092                     	;# 
   239  0093                     	;# 
   240  0094                     	;# 
   241  0098                     	;# 
   242  0099                     	;# 
   243  009C                     	;# 
   244  009D                     	;# 
   245  009E                     	;# 
   246  009F                     	;# 
   247  010C                     	;# 
   248  010D                     	;# 
   249  010E                     	;# 
   250  010F                     	;# 
   251  018C                     	;# 
   252  018D                     	;# 
   253  0000                     	;# 
   254  0001                     	;# 
   255  0002                     	;# 
   256  0003                     	;# 
   257  0004                     	;# 
   258  0005                     	;# 
   259  0006                     	;# 
   260  0007                     	;# 
   261  000A                     	;# 
   262  000B                     	;# 
   263  000C                     	;# 
   264  000D                     	;# 
   265  000E                     	;# 
   266  000E                     	;# 
   267  000F                     	;# 
   268  0010                     	;# 
   269  0011                     	;# 
   270  0012                     	;# 
   271  0013                     	;# 
   272  0014                     	;# 
   273  0015                     	;# 
   274  0015                     	;# 
   275  0016                     	;# 
   276  0017                     	;# 
   277  0018                     	;# 
   278  0019                     	;# 
   279  001A                     	;# 
   280  001B                     	;# 
   281  001B                     	;# 
   282  001C                     	;# 
   283  001D                     	;# 
   284  001E                     	;# 
   285  001F                     	;# 
   286  0081                     	;# 
   287  0085                     	;# 
   288  0086                     	;# 
   289  0087                     	;# 
   290  008C                     	;# 
   291  008D                     	;# 
   292  008E                     	;# 
   293  0091                     	;# 
   294  0092                     	;# 
   295  0093                     	;# 
   296  0094                     	;# 
   297  0098                     	;# 
   298  0099                     	;# 
   299  009C                     	;# 
   300  009D                     	;# 
   301  009E                     	;# 
   302  009F                     	;# 
   303  010C                     	;# 
   304  010D                     	;# 
   305  010E                     	;# 
   306  010F                     	;# 
   307  018C                     	;# 
   308  018D                     	;# 
   309                           
   310                           	psect	idataBANK0
   311  0C9D                     __pidataBANK0:
   312                           
   313                           ;initializer for ventilator_screen@F1129
   314  0C9D  3456               	retlw	86
   315  0C9E  3465               	retlw	101
   316  0C9F  346C               	retlw	108
   317  0CA0  3420               	retlw	32
   318  0CA1  3400               	retlw	0
   319                           
   320                           ;initializer for _length_saludo
   321  0CA2  3416               	retlw	22
   322  0CA3  3400               	retlw	0
   323                           
   324                           ;initializer for _length_presentacion
   325  0CA4  3426               	retlw	38
   326  0CA5  3400               	retlw	0
   327                           
   328                           ;initializer for _length_grupo
   329  0CA6  3405               	retlw	5
   330  0CA7  3400               	retlw	0
   331                           
   332                           	psect	idataBANK1
   333  0F44                     __pidataBANK1:
   334                           
   335                           ;initializer for conditional_screen@F1119
   336  0F44  3443               	retlw	67
   337  0F45  3461               	retlw	97
   338  0F46  346D               	retlw	109
   339  0F47  3462               	retlw	98
   340  0F48  3469               	retlw	105
   341  0F49  3461               	retlw	97
   342  0F4A  3472               	retlw	114
   343  0F4B  3420               	retlw	32
   344  0F4C  3463               	retlw	99
   345  0F4D  346F               	retlw	111
   346  0F4E  346E               	retlw	110
   347  0F4F  3464               	retlw	100
   348  0F50  342E               	retlw	46
   349  0F51  3400               	retlw	0
   350                           
   351                           ;initializer for ventilator_screen@F1127
   352  0F52  3456               	retlw	86
   353  0F53  346F               	retlw	111
   354  0F54  346C               	retlw	108
   355  0F55  3474               	retlw	116
   356  0F56  3461               	retlw	97
   357  0F57  346A               	retlw	106
   358  0F58  3465               	retlw	101
   359  0F59  343A               	retlw	58
   360  0F5A  3420               	retlw	32
   361  0F5B  3400               	retlw	0
   362                           
   363                           ;initializer for conditional_screen@F1121
   364  0F5C  3431               	retlw	49
   365  0F5D  342E               	retlw	46
   366  0F5E  3453               	retlw	83
   367  0F5F  3469               	retlw	105
   368  0F60  3420               	retlw	32
   369  0F61  3432               	retlw	50
   370  0F62  342E               	retlw	46
   371  0F63  344E               	retlw	78
   372  0F64  346F               	retlw	111
   373  0F65  3400               	retlw	0
   374                           
   375                           ;initializer for _presentacion
   376  0F66  344A               	retlw	74
   377  0F67  346F               	retlw	111
   378  0F68  3473               	retlw	115
   379  0F69  3465               	retlw	101
   380  0F6A  3420               	retlw	32
   381  0F6B  3452               	retlw	82
   382  0F6C  346F               	retlw	111
   383  0F6D  3464               	retlw	100
   384  0F6E  3472               	retlw	114
   385  0F6F  3469               	retlw	105
   386  0F70  3467               	retlw	103
   387  0F71  3475               	retlw	117
   388  0F72  3465               	retlw	101
   389  0F73  347A               	retlw	122
   390  0F74  3420               	retlw	32
   391  0F75  3479               	retlw	121
   392  0F76  3420               	retlw	32
   393  0F77  344B               	retlw	75
   394  0F78  3461               	retlw	97
   395  0F79  3472               	retlw	114
   396  0F7A  346C               	retlw	108
   397  0F7B  3461               	retlw	97
   398  0F7C  3420               	retlw	32
   399  0F7D  3452               	retlw	82
   400  0F7E  3465               	retlw	101
   401  0F7F  3479               	retlw	121
   402  0F80  3465               	retlw	101
   403  0F81  3473               	retlw	115
   404  0F82  3400               	retlw	0
   405                           
   406                           ;initializer for _saludo
   407  0F83  3448               	retlw	72
   408  0F84  346F               	retlw	111
   409  0F85  346C               	retlw	108
   410  0F86  3461               	retlw	97
   411  0F87  3420               	retlw	32
   412  0F88  344D               	retlw	77
   413  0F89  3475               	retlw	117
   414  0F8A  346E               	retlw	110
   415  0F8B  3464               	retlw	100
   416  0F8C  346F               	retlw	111
   417  0F8D  3420               	retlw	32
   418  0F8E  3462               	retlw	98
   419  0F8F  3469               	retlw	105
   420  0F90  3465               	retlw	101
   421  0F91  346E               	retlw	110
   422  0F92  3476               	retlw	118
   423  0F93  3465               	retlw	101
   424  0F94  346E               	retlw	110
   425  0F95  3469               	retlw	105
   426  0F96  3464               	retlw	100
   427  0F97  346F               	retlw	111
   428  0F98  3421               	retlw	33
   429  0F99  3400               	retlw	0
   430                           
   431                           ;initializer for _grupo
   432  0F9A  3433               	retlw	51
   433  0F9B  3443               	retlw	67
   434  0F9C  3456               	retlw	86
   435  0F9D  3431               	retlw	49
   436  0F9E  3436               	retlw	54
   437  0F9F  3400               	retlw	0
   438                           
   439                           	psect	nvBANK0
   440  007A                     __pnvBANK0:
   441  007A                     _i:
   442  007A                     	ds	2
   443  000B                     _INTCONbits	set	11
   444  0003                     _STATUSbits	set	3
   445  0013                     _SSPBUF	set	19
   446  0014                     _SSPCON	set	20
   447  001E                     _ADRESH	set	30
   448  0007                     _PORTC	set	7
   449  0006                     _PORTB	set	6
   450  0005                     _PORTA	set	5
   451  0006                     _PORTBbits	set	6
   452  0007                     _PORTCbits	set	7
   453  0066                     _ADIF	set	102
   454  00FA                     _GO	set	250
   455  00F8                     _ADON	set	248
   456  00FB                     _CHS0	set	251
   457  00FC                     _CHS1	set	252
   458  00FD                     _CHS2	set	253
   459  002B                     _RA3	set	43
   460  002A                     _RA2	set	42
   461  0029                     _RA1	set	41
   462  0028                     _RA0	set	40
   463  002C                     _RA4	set	44
   464  002D                     _RA5	set	45
   465  0038                     _RC0	set	56
   466  0039                     _RC1	set	57
   467  0091                     _SSPCON2bits	set	145
   468  0094                     _SSPSTAT	set	148
   469  0093                     _SSPADD	set	147
   470  0091                     _SSPCON2	set	145
   471  009E                     _ADRESL	set	158
   472  009F                     _ADCON1	set	159
   473  0085                     _TRISAbits	set	133
   474  0086                     _TRISBbits	set	134
   475  0087                     _TRISCbits	set	135
   476  010C                     _EEDATA	set	268
   477  010D                     _EEADR	set	269
   478  018D                     _EECON2	set	397
   479  018C                     _EECON1	set	396
   480  018C                     _EECON1bits	set	396
   481                           
   482                           	psect	strings
   483  0002                     __pstrings:
   484  0002                     stringtab:
   485  0002                     __stringtab:
   486                           
   487                           ;	String table - string pointers are 1 byte each
   488  0002  1BFF               	btfsc	btemp+1,7
   489  0003  280C               	ljmp	stringcode
   490  0004  1383               	bcf	3,7
   491  0005  187F               	btfsc	btemp+1,0
   492  0006  1783               	bsf	3,7
   493  0007  0800               	movf	0,w
   494  0008  0A84               	incf	4,f
   495  0009  1903               	skipnz
   496  000A  0AFF               	incf	btemp+1,f
   497  000B  0008               	return
   498  000C                     stringcode:
   499  000C                     stringdir:
   500  000C  3000               	movlw	high stringdir
   501  000D  008A               	movwf	10
   502  000E  0804               	movf	4,w
   503  000F  0A84               	incf	4,f
   504  0010  0782               	addwf	2,f
   505  0011                     __stringbase:
   506  0011  3400               	retlw	0
   507  0012                     __end_of__stringtab:
   508  0012                     STR_7:
   509  0012  3445               	retlw	69	;'E'
   510  0013  3473               	retlw	115	;'s'
   511  0014  3463               	retlw	99	;'c'
   512  0015  3472               	retlw	114	;'r'
   513  0016  3469               	retlw	105	;'i'
   514  0017  3462               	retlw	98	;'b'
   515  0018  3465               	retlw	101	;'e'
   516  0019  3420               	retlw	32	;' '
   517  001A  3444               	retlw	68	;'D'
   518  001B  3469               	retlw	105	;'i'
   519  001C  3472               	retlw	114	;'r'
   520  001D  3465               	retlw	101	;'e'
   521  001E  3463               	retlw	99	;'c'
   522  001F  3463               	retlw	99	;'c'
   523  0020  3469               	retlw	105	;'i'
   524  0021  346F               	retlw	111	;'o'
   525  0022  346E               	retlw	110	;'n'
   526  0023  3400               	retlw	0
   527  0024                     STR_11:
   528  0024  344F               	retlw	79	;'O'
   529  0025  3470               	retlw	112	;'p'
   530  0026  3463               	retlw	99	;'c'
   531  0027  3469               	retlw	105	;'i'
   532  0028  346F               	retlw	111	;'o'
   533  0029  346E               	retlw	110	;'n'
   534  002A  3420               	retlw	32	;' '
   535  002B  3449               	retlw	73	;'I'
   536  002C  346E               	retlw	110	;'n'
   537  002D  3476               	retlw	118	;'v'
   538  002E  3461               	retlw	97	;'a'
   539  002F  346C               	retlw	108	;'l'
   540  0030  3469               	retlw	105	;'i'
   541  0031  3464               	retlw	100	;'d'
   542  0032  3461               	retlw	97	;'a'
   543  0033  3400               	retlw	0
   544  0034                     STR_6:
   545  0034  3445               	retlw	69	;'E'
   546  0035  3473               	retlw	115	;'s'
   547  0036  3463               	retlw	99	;'c'
   548  0037  3472               	retlw	114	;'r'
   549  0038  3469               	retlw	105	;'i'
   550  0039  3462               	retlw	98	;'b'
   551  003A  3465               	retlw	101	;'e'
   552  003B  3420               	retlw	32	;' '
   553  003C  3476               	retlw	118	;'v'
   554  003D  3461               	retlw	97	;'a'
   555  003E  346C               	retlw	108	;'l'
   556  003F  346F               	retlw	111	;'o'
   557  0040  3472               	retlw	114	;'r'
   558  0041  3400               	retlw	0
   559  0042                     STR_8:
   560  0042  344E               	retlw	78	;'N'
   561  0043  3475               	retlw	117	;'u'
   562  0044  3465               	retlw	101	;'e'
   563  0045  3476               	retlw	118	;'v'
   564  0046  346F               	retlw	111	;'o'
   565  0047  3420               	retlw	32	;' '
   566  0048  3456               	retlw	86	;'V'
   567  0049  3461               	retlw	97	;'a'
   568  004A  346C               	retlw	108	;'l'
   569  004B  346F               	retlw	111	;'o'
   570  004C  3472               	retlw	114	;'r'
   571  004D  3400               	retlw	0
   572  004E                     STR_10:
   573  004E  3453               	retlw	83	;'S'
   574  004F  3461               	retlw	97	;'a'
   575  0050  346C               	retlw	108	;'l'
   576  0051  3469               	retlw	105	;'i'
   577  0052  3465               	retlw	101	;'e'
   578  0053  346E               	retlw	110	;'n'
   579  0054  3464               	retlw	100	;'d'
   580  0055  346F               	retlw	111	;'o'
   581  0056  3400               	retlw	0
   582  0057                     STR_5:
   583  0057  3420               	retlw	32	;' '
   584  0058  3452               	retlw	82	;'R'
   585  0059  3450               	retlw	80	;'P'
   586  005A  344D               	retlw	77	;'M'
   587  005B  3400               	retlw	0
   588  005C                     STR_2:
   589  005C  3420               	retlw	32	;' '
   590  005D  3446               	retlw	70	;'F'
   591  005E  3431               	retlw	49	;'1'
   592  005F  3400               	retlw	0
   593  0060                     STR_3:
   594  0060  3420               	retlw	32	;' '
   595  0061  3446               	retlw	70	;'F'
   596  0062  3432               	retlw	50	;'2'
   597  0063  3400               	retlw	0
   598  0064                     STR_9:
   599  0064  3420               	retlw	32	;' '
   600  0065  346D               	retlw	109	;'m'
   601  0066  3476               	retlw	118	;'v'
   602  0067  3400               	retlw	0
   603  0068                     STR_4:
   604  0068  343A               	retlw	58	;':'
   605  0069  3420               	retlw	32	;' '
   606  006A  3400               	retlw	0
   607  006B                     STR_1:
   608  006B  3420               	retlw	32	;' '
   609  006C  3456               	retlw	86	;'V'
   610  006D  3400               	retlw	0
   611                           
   612                           	psect	cinit
   613  07DF                     start_initialization:	
   614                           ; #config settings
   615                           
   616  07DF                     __initialization:
   617                           
   618                           ; Initialize objects allocated to BANK1
   619  07DF  1383               	bcf	3,7	;select IRP bank0
   620  07E0  30FC               	movlw	low (__pdataBANK1+92)
   621  07E1  00FD               	movwf	btemp+-1
   622  07E2  300F               	movlw	high __pidataBANK1
   623  07E3  00FE               	movwf	btemp
   624  07E4  3044               	movlw	low __pidataBANK1
   625  07E5  00FF               	movwf	btemp+1
   626  07E6  30A0               	movlw	low __pdataBANK1
   627  07E7  0084               	movwf	4
   628  07E8  158A  24C8  118A   	fcall	init_ram0
   629                           
   630                           ; Initialize objects allocated to BANK0
   631  07EB  307A               	movlw	low (__pdataBANK0+11)
   632  07EC  00FD               	movwf	btemp+-1
   633  07ED  300C               	movlw	high __pidataBANK0
   634  07EE  00FE               	movwf	btemp
   635  07EF  309D               	movlw	low __pidataBANK0
   636  07F0  00FF               	movwf	btemp+1
   637  07F1  306F               	movlw	low __pdataBANK0
   638  07F2  0084               	movwf	4
   639  07F3  158A  24C8  118A   	fcall	init_ram0
   640                           
   641                           ; Clear objects allocated to BANK0
   642  07F6  305E               	movlw	low __pbssBANK0
   643  07F7  0084               	movwf	4
   644  07F8  306F               	movlw	low (__pbssBANK0+17)
   645  07F9  158A  2495  118A   	fcall	clear_ram0
   646                           
   647                           ; Clear objects allocated to BITBANK0
   648  07FC  01FC               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   649  07FD                     end_of_initialization:	
   650                           ;End of C runtime variable initialization code
   651                           
   652  07FD                     __end_of__initialization:
   653  07FD  0183               	clrf	3
   654  07FE  118A  2B82         	ljmp	_main	;jump to C main() function
   655                           
   656                           	psect	bitbssBANK0
   657  03E0                     __pbitbssBANK0:
   658  03E0                     _RS:
   659  03E0                     	ds	1
   660                           
   661                           	psect	bssBANK0
   662  005E                     __pbssBANK0:
   663  005E                     _number:
   664  005E                     	ds	4
   665  0062                     _ADRES:
   666  0062                     	ds	2
   667  0064                     _vb:
   668  0064                     	ds	2
   669  0066                     _va:
   670  0066                     	ds	2
   671  0068                     _ECO:
   672  0068                     	ds	2
   673  006A                     screen_selector@F1154:
   674  006A                     	ds	1
   675  006B                     ventilator_screen@F1135:
   676  006B                     	ds	1
   677  006C                     ventilator_screen@F1133:
   678  006C                     	ds	1
   679  006D                     ventilator_screen@F1131:
   680  006D                     	ds	1
   681  006E                     _envio:
   682  006E                     	ds	1
   683                           
   684                           	psect	dataBANK0
   685  006F                     __pdataBANK0:
   686  006F                     ventilator_screen@F1129:
   687  006F                     	ds	5
   688  0074                     _length_saludo:
   689  0074                     	ds	2
   690  0076                     _length_presentacion:
   691  0076                     	ds	2
   692  0078                     _length_grupo:
   693  0078                     	ds	2
   694                           
   695                           	psect	dataBANK1
   696  00A0                     __pdataBANK1:
   697  00A0                     conditional_screen@F1119:
   698  00A0                     	ds	14
   699  00AE                     ventilator_screen@F1127:
   700  00AE                     	ds	10
   701  00B8                     conditional_screen@F1121:
   702  00B8                     	ds	10
   703  00C2                     _presentacion:
   704  00C2                     	ds	29
   705  00DF                     _saludo:
   706  00DF                     	ds	23
   707  00F6                     _grupo:
   708  00F6                     	ds	6
   709                           
   710                           	psect	inittext
   711  0CC4                     init_fetch0:	
   712                           ;	Called with low address in FSR and high address in W
   713                           
   714  0CC4  087E               	movf	btemp,w
   715  0CC5  008A               	movwf	10
   716  0CC6  087F               	movf	btemp+1,w
   717  0CC7  0082               	movwf	2
   718  0CC8                     init_ram0:	
   719                           ;Called with:
   720                           ;	high address of idata address in btemp 
   721                           ;	low address of idata address in btemp+1 
   722                           ;	low address of data in FSR
   723                           ;	high address + 1 of data in btemp-1
   724                           
   725  0CC8  158A  24C4  158A   	fcall	init_fetch0
   726  0CCB  0080               	movwf	0
   727  0CCC  0A84               	incf	4,f
   728  0CCD  0804               	movf	4,w
   729  0CCE  067D               	xorwf	btemp+-1,w
   730  0CCF  1903               	btfsc	3,2
   731  0CD0  3400               	retlw	0
   732  0CD1  0AFF               	incf	btemp+1,f
   733  0CD2  1903               	btfsc	3,2
   734  0CD3  0AFE               	incf	btemp,f
   735  0CD4  2CC8               	goto	init_ram0
   736                           
   737                           	psect	clrtext
   738  0C95                     clear_ram0:	
   739                           ;	Called with FSR containing the base address, and
   740                           ;	W with the last address+1
   741                           
   742  0C95  0064               	clrwdt	;clear the watchdog before getting into this loop
   743  0C96                     clrloop0:
   744  0C96  0180               	clrf	0	;clear RAM location pointed to by FSR
   745  0C97  0A84               	incf	4,f	;increment pointer
   746  0C98  0604               	xorwf	4,w	;XOR with final address
   747  0C99  1903               	btfsc	3,2	;have we reached the end yet?
   748  0C9A  3400               	retlw	0	;all done for this memory range, return
   749  0C9B  0604               	xorwf	4,w	;XOR again to restore value
   750  0C9C  2C96               	goto	clrloop0	;do the next byte
   751                           
   752                           	psect	cstackCOMMON
   753  0000                     __pcstackCOMMON:
   754  0000                     ??_isdigit:
   755  0000                     ??_iniciar_puertos:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0000                     ??_C_inicio:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0000                     ??_C_parada:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0000                     ??_Tx_Dato:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0000                     ??___wmul:	
   768                           ; 1 bytes @ 0x0
   769                           
   770                           
   771                           	psect	cstackBANK0
   772  0020                     __pcstackBANK0:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0020                     ?_isdigit:
   776  0020                     ?_eeprom_write:	
   777                           ; 1 bit 
   778                           
   779  0020                     ?_strcat:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0020                     ?_eeprom_read:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0020                     ??_eeprom_read:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0020                     ?_LCD_Write_Nibble:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0020                     ??_LCD_Write_Nibble:	
   792                           ; 1 bytes @ 0x0
   793                           
   794  0020                     ?_LCD_Cmd:	
   795                           ; 1 bytes @ 0x0
   796                           
   797  0020                     ?_LCD_PutC:	
   798                           ; 1 bytes @ 0x0
   799                           
   800  0020                     ?_LCD_Begin:	
   801                           ; 1 bytes @ 0x0
   802                           
   803  0020                     ?_keypad_readkey:	
   804                           ; 1 bytes @ 0x0
   805                           
   806  0020                     ??_keypad_readkey:	
   807                           ; 1 bytes @ 0x0
   808                           
   809  0020                     ?_keypad_getkey:	
   810                           ; 1 bytes @ 0x0
   811                           
   812  0020                     ?_load_values:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0020                     ?_iniciar_puertos:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0020                     ?_C_inicio:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0020                     ?_C_parada:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0020                     ?_Tx_Dato:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0020                     ?_key_writing_value:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0020                     ?_selector_type:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0020                     ?_main:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0020                     ?___wmul:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0020                     ?___lwdiv:	
   840                           ; 2 bytes @ 0x0
   841                           
   842  0020                     ?___lwmod:	
   843                           ; 2 bytes @ 0x0
   844                           
   845  0020                     ?___fltol:	
   846                           ; 2 bytes @ 0x0
   847                           
   848  0020                     Tx_Dato@x:	
   849                           ; 4 bytes @ 0x0
   850                           
   851  0020                     eeprom_write@value:	
   852                           ; 1 bytes @ 0x0
   853                           
   854  0020                     _isdigit$894:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  0020                     ___wmul@multiplier:	
   858                           ; 1 bytes @ 0x0
   859                           
   860  0020                     ___lwdiv@divisor:	
   861                           ; 2 bytes @ 0x0
   862                           
   863  0020                     ___lwmod@divisor:	
   864                           ; 2 bytes @ 0x0
   865                           
   866  0020                     strcat@from:	
   867                           ; 2 bytes @ 0x0
   868                           
   869  0020                     ___fltol@f1:	
   870                           ; 2 bytes @ 0x0
   871                           
   872                           
   873                           ; 4 bytes @ 0x0
   874  0020                     	ds	1
   875  0021                     ??_eeprom_write:
   876  0021                     ??_keypad_getkey:	
   877                           ; 1 bytes @ 0x1
   878                           
   879  0021                     eeprom_read@addr:	
   880                           ; 1 bytes @ 0x1
   881                           
   882  0021                     isdigit@c:	
   883                           ; 1 bytes @ 0x1
   884                           
   885                           
   886                           ; 1 bytes @ 0x1
   887  0021                     	ds	1
   888  0022                     ??_strcat:
   889  0022                     LCD_Write_Nibble@n:	
   890                           ; 1 bytes @ 0x2
   891                           
   892  0022                     keypad_getkey@key:	
   893                           ; 1 bytes @ 0x2
   894                           
   895  0022                     eeprom_write@addr:	
   896                           ; 1 bytes @ 0x2
   897                           
   898  0022                     ___wmul@multiplicand:	
   899                           ; 1 bytes @ 0x2
   900                           
   901  0022                     ___lwdiv@dividend:	
   902                           ; 2 bytes @ 0x2
   903                           
   904  0022                     ___lwmod@dividend:	
   905                           ; 2 bytes @ 0x2
   906                           
   907                           
   908                           ; 2 bytes @ 0x2
   909  0022                     	ds	1
   910  0023                     ??_LCD_Cmd:
   911  0023                     ??_LCD_PutC:	
   912                           ; 1 bytes @ 0x3
   913                           
   914  0023                     ?_LCD_Print:	
   915                           ; 1 bytes @ 0x3
   916                           
   917  0023                     ??_load_values:	
   918                           ; 1 bytes @ 0x3
   919                           
   920  0023                     strcat@cp:	
   921                           ; 1 bytes @ 0x3
   922                           
   923  0023                     LCD_Print@LCD_Str:	
   924                           ; 1 bytes @ 0x3
   925                           
   926                           
   927                           ; 2 bytes @ 0x3
   928  0023                     	ds	1
   929  0024                     ??___fltol:
   930  0024                     ??___lwdiv:	
   931                           ; 1 bytes @ 0x4
   932                           
   933  0024                     ??___lwmod:	
   934                           ; 1 bytes @ 0x4
   935                           
   936  0024                     LCD_PutC@LCD_Char:	
   937                           ; 1 bytes @ 0x4
   938                           
   939  0024                     strcat@to:	
   940                           ; 1 bytes @ 0x4
   941                           
   942  0024                     ___wmul@product:	
   943                           ; 1 bytes @ 0x4
   944                           
   945                           
   946                           ; 2 bytes @ 0x4
   947  0024                     	ds	1
   948  0025                     ??_LCD_Print:
   949  0025                     LCD_Cmd@Command:	
   950                           ; 1 bytes @ 0x5
   951                           
   952  0025                     ___lwmod@counter:	
   953                           ; 1 bytes @ 0x5
   954                           
   955  0025                     ___lwdiv@quotient:	
   956                           ; 1 bytes @ 0x5
   957                           
   958                           
   959                           ; 2 bytes @ 0x5
   960  0025                     	ds	1
   961  0026                     ?_LCD_Goto:
   962  0026                     ??_LCD_Begin:	
   963                           ; 1 bytes @ 0x6
   964                           
   965  0026                     ?_atoi:	
   966                           ; 1 bytes @ 0x6
   967                           
   968  0026                     LCD_Goto@row:	
   969                           ; 2 bytes @ 0x6
   970                           
   971  0026                     LCD_Print@i:	
   972                           ; 1 bytes @ 0x6
   973                           
   974                           
   975                           ; 1 bytes @ 0x6
   976  0026                     	ds	1
   977  0027                     ??_LCD_Goto:
   978  0027                     ___lwdiv@counter:	
   979                           ; 1 bytes @ 0x7
   980                           
   981                           
   982                           ; 1 bytes @ 0x7
   983  0027                     	ds	1
   984  0028                     ??_atoi:
   985  0028                     ?_utoa:	
   986                           ; 1 bytes @ 0x8
   987                           
   988  0028                     utoa@val:	
   989                           ; 1 bytes @ 0x8
   990                           
   991                           
   992                           ; 2 bytes @ 0x8
   993  0028                     	ds	1
   994  0029                     LCD_Goto@col:
   995  0029                     ___fltol@sign1:	
   996                           ; 1 bytes @ 0x9
   997                           
   998                           
   999                           ; 1 bytes @ 0x9
  1000  0029                     	ds	1
  1001  002A                     ?_inicio_presentacion:
  1002  002A                     ?_conditional_screen:	
  1003                           ; 1 bytes @ 0xA
  1004                           
  1005  002A                     ___fltol@exp1:	
  1006                           ; 1 bytes @ 0xA
  1007                           
  1008  002A                     atoi@sign:	
  1009                           ; 1 bytes @ 0xA
  1010                           
  1011  002A                     inicio_presentacion@length:	
  1012                           ; 1 bytes @ 0xA
  1013                           
  1014  002A                     conditional_screen@x:	
  1015                           ; 2 bytes @ 0xA
  1016                           
  1017  002A                     utoa@base:	
  1018                           ; 2 bytes @ 0xA
  1019                           
  1020                           
  1021                           ; 2 bytes @ 0xA
  1022  002A                     	ds	1
  1023  002B                     atoi@a:
  1024                           
  1025                           ; 2 bytes @ 0xB
  1026  002B                     	ds	1
  1027  002C                     ??_utoa:
  1028  002C                     ??_conditional_screen:	
  1029                           ; 1 bytes @ 0xC
  1030                           
  1031  002C                     inicio_presentacion@str:	
  1032                           ; 1 bytes @ 0xC
  1033                           
  1034                           
  1035                           ; 1 bytes @ 0xC
  1036  002C                     	ds	1
  1037  002D                     ??_inicio_presentacion:
  1038  002D                     atoi@s:	
  1039                           ; 1 bytes @ 0xD
  1040                           
  1041  002D                     utoa@v:	
  1042                           ; 1 bytes @ 0xD
  1043                           
  1044                           
  1045                           ; 2 bytes @ 0xD
  1046  002D                     	ds	1
  1047  002E                     ??_key_writing_value:
  1048                           
  1049                           ; 1 bytes @ 0xE
  1050  002E                     	ds	1
  1051  002F                     utoa@c:
  1052                           
  1053                           ; 1 bytes @ 0xF
  1054  002F                     	ds	1
  1055  0030                     utoa@buf:
  1056  0030                     inicio_presentacion@i:	
  1057                           ; 1 bytes @ 0x10
  1058                           
  1059  0030                     conditional_screen@con:	
  1060                           ; 2 bytes @ 0x10
  1061                           
  1062                           
  1063                           ; 10 bytes @ 0x10
  1064  0030                     	ds	1
  1065  0031                     ?_itoa:
  1066  0031                     key_writing_value@c:	
  1067                           ; 1 bytes @ 0x11
  1068                           
  1069  0031                     itoa@val:	
  1070                           ; 1 bytes @ 0x11
  1071                           
  1072                           
  1073                           ; 2 bytes @ 0x11
  1074  0031                     	ds	2
  1075  0033                     itoa@base:
  1076                           
  1077                           ; 2 bytes @ 0x13
  1078  0033                     	ds	2
  1079  0035                     ??_itoa:
  1080                           
  1081                           ; 1 bytes @ 0x15
  1082  0035                     	ds	1
  1083  0036                     itoa@buf:
  1084                           
  1085                           ; 1 bytes @ 0x16
  1086  0036                     	ds	1
  1087  0037                     ?_ventilator_screen:
  1088  0037                     ?_screen_selector:	
  1089                           ; 1 bytes @ 0x17
  1090                           
  1091  0037                     screen_selector@k:	
  1092                           ; 1 bytes @ 0x17
  1093                           
  1094  0037                     ventilator_screen@voltaje:	
  1095                           ; 1 bytes @ 0x17
  1096                           
  1097                           
  1098                           ; 4 bytes @ 0x17
  1099  0037                     	ds	1
  1100  0038                     ??_screen_selector:
  1101                           
  1102                           ; 1 bytes @ 0x18
  1103  0038                     	ds	2
  1104  003A                     conditional_screen@msj:
  1105                           
  1106                           ; 14 bytes @ 0x1A
  1107  003A                     	ds	1
  1108  003B                     ventilator_screen@vrm:
  1109  003B                     screen_selector@v:	
  1110                           ; 2 bytes @ 0x1B
  1111                           
  1112                           
  1113                           ; 4 bytes @ 0x1B
  1114  003B                     	ds	2
  1115  003D                     ventilator_screen@ventilator_number:
  1116                           
  1117                           ; 2 bytes @ 0x1D
  1118  003D                     	ds	2
  1119  003F                     ??_ventilator_screen:
  1120  003F                     screen_selector@c:	
  1121                           ; 1 bytes @ 0x1F
  1122                           
  1123                           
  1124                           ; 1 bytes @ 0x1F
  1125  003F                     	ds	1
  1126  0040                     screen_selector@value:
  1127                           
  1128                           ; 1 bytes @ 0x20
  1129  0040                     	ds	3
  1130  0043                     ventilator_screen@vol:
  1131                           
  1132                           ; 10 bytes @ 0x23
  1133  0043                     	ds	10
  1134  004D                     ventilator_screen@vel:
  1135                           
  1136                           ; 5 bytes @ 0x2D
  1137  004D                     	ds	5
  1138  0052                     ventilator_screen@vol_value:
  1139                           
  1140                           ; 1 bytes @ 0x32
  1141  0052                     	ds	1
  1142  0053                     ventilator_screen@vel_number:
  1143                           
  1144                           ; 1 bytes @ 0x33
  1145  0053                     	ds	1
  1146  0054                     ventilator_screen@vel_value:
  1147                           
  1148                           ; 1 bytes @ 0x34
  1149  0054                     	ds	1
  1150  0055                     ??_selector_type:
  1151                           
  1152                           ; 1 bytes @ 0x35
  1153  0055                     	ds	3
  1154  0058                     selector_type@k:
  1155                           
  1156                           ; 1 bytes @ 0x38
  1157  0058                     	ds	1
  1158  0059                     selector_type@c:
  1159                           
  1160                           ; 1 bytes @ 0x39
  1161  0059                     	ds	1
  1162  005A                     ??_main:
  1163                           
  1164                           ; 1 bytes @ 0x3A
  1165  005A                     	ds	3
  1166  005D                     main@c:
  1167                           
  1168                           ; 1 bytes @ 0x3D
  1169  005D                     	ds	1
  1170                           
  1171                           	psect	maintext
  1172  0382                     __pmaintext:	
  1173 ;;
  1174 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1175 ;;
  1176 ;; *************** function _main *****************
  1177 ;; Defined at:
  1178 ;;		line 342 in file "main.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;		None
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;  c               1   61[BANK0 ] unsigned char 
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  1    wreg      void 
  1185 ;; Registers used:
  1186 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1187 ;; Tracked objects:
  1188 ;;		On entry : B00/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMMON   BANK0   BANK1
  1192 ;;      Params:         0       0       0
  1193 ;;      Locals:         0       1       0
  1194 ;;      Temps:          0       3       0
  1195 ;;      Totals:         0       4       0
  1196 ;;Total ram usage:        4 bytes
  1197 ;; Hardware stack levels required when called: 6
  1198 ;; This function calls:
  1199 ;;		_LCD_Begin
  1200 ;;		_LCD_Goto
  1201 ;;		_LCD_PutC
  1202 ;;		_iniciar_puertos
  1203 ;;		_inicio_presentacion
  1204 ;;		_keypad_getkey
  1205 ;;		_load_values
  1206 ;;		_selector_type
  1207 ;; This function is called by:
  1208 ;;		Startup code after reset
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           
  1213                           ;psect for function _main
  1214  0382                     _main:
  1215  0382                     l2497:	
  1216                           ;incstack = 0
  1217                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1218                           
  1219                           
  1220                           ;main.c: 344:     i=1;
  1221  0382  3001               	movlw	1
  1222  0383  1283               	bcf	3,5	;RP0=0, select bank0
  1223  0384  1303               	bcf	3,6	;RP1=0, select bank0
  1224  0385  00FA               	movwf	_i
  1225  0386  3000               	movlw	0
  1226  0387  00FB               	movwf	_i+1
  1227  0388                     l2499:
  1228                           
  1229                           ;main.c: 346:     load_values();
  1230  0388  158A  264B  118A   	fcall	_load_values
  1231  038B                     l2501:
  1232                           
  1233                           ;main.c: 347:     iniciar_puertos();
  1234  038B  158A  24FD  118A   	fcall	_iniciar_puertos
  1235  038E                     l2503:
  1236                           
  1237                           ;main.c: 349:     LCD_Begin();
  1238  038E  118A  256E  118A   	fcall	_LCD_Begin
  1239  0391                     l2505:
  1240                           
  1241                           ;main.c: 350:     inicio_presentacion(length_saludo, saludo);
  1242  0391  3016               	movlw	22
  1243  0392  1283               	bcf	3,5	;RP0=0, select bank0
  1244  0393  1303               	bcf	3,6	;RP1=0, select bank0
  1245  0394  00AA               	movwf	inicio_presentacion@length
  1246  0395  3000               	movlw	0
  1247  0396  00AB               	movwf	inicio_presentacion@length+1
  1248  0397  30DF               	movlw	(low (_saludo| 0))& (0+255)
  1249  0398  00DA               	movwf	??_main
  1250  0399  085A               	movf	??_main,w
  1251  039A  00AC               	movwf	inicio_presentacion@str
  1252  039B  158A  27A0  118A   	fcall	_inicio_presentacion
  1253  039E                     l2507:
  1254                           
  1255                           ;main.c: 351:     _delay((unsigned long)((20)*(32000000/4000.0)));
  1256  039E  30D0               	movlw	208
  1257  039F  1283               	bcf	3,5	;RP0=0, select bank0
  1258  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  1259  03A1  00DB               	movwf	??_main+1
  1260  03A2  30C9               	movlw	201
  1261  03A3  00DA               	movwf	??_main
  1262  03A4                     u2327:
  1263  03A4  0BDA               	decfsz	??_main,f
  1264  03A5  2BA4               	goto	u2327
  1265  03A6  0BDB               	decfsz	??_main+1,f
  1266  03A7  2BA4               	goto	u2327
  1267  03A8  0000               	nop
  1268  03A9                     l2509:
  1269                           
  1270                           ;main.c: 352:     inicio_presentacion(length_presentacion,presentacion);
  1271  03A9  3026               	movlw	38
  1272  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  1273  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  1274  03AC  00AA               	movwf	inicio_presentacion@length
  1275  03AD  3000               	movlw	0
  1276  03AE  00AB               	movwf	inicio_presentacion@length+1
  1277  03AF  30C2               	movlw	(low (_presentacion| 0))& (0+255)
  1278  03B0  00DA               	movwf	??_main
  1279  03B1  085A               	movf	??_main,w
  1280  03B2  00AC               	movwf	inicio_presentacion@str
  1281  03B3  158A  27A0  118A   	fcall	_inicio_presentacion
  1282  03B6                     l2511:
  1283                           
  1284                           ;main.c: 353:     _delay((unsigned long)((20)*(32000000/4000.0)));
  1285  03B6  30D0               	movlw	208
  1286  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  1287  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  1288  03B9  00DB               	movwf	??_main+1
  1289  03BA  30C9               	movlw	201
  1290  03BB  00DA               	movwf	??_main
  1291  03BC                     u2337:
  1292  03BC  0BDA               	decfsz	??_main,f
  1293  03BD  2BBC               	goto	u2337
  1294  03BE  0BDB               	decfsz	??_main+1,f
  1295  03BF  2BBC               	goto	u2337
  1296  03C0  0000               	nop
  1297  03C1                     l2513:
  1298                           
  1299                           ;main.c: 354:     inicio_presentacion(length_grupo,grupo);
  1300  03C1  3005               	movlw	5
  1301  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  1302  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  1303  03C4  00AA               	movwf	inicio_presentacion@length
  1304  03C5  3000               	movlw	0
  1305  03C6  00AB               	movwf	inicio_presentacion@length+1
  1306  03C7  30F6               	movlw	(low (_grupo| 0))& (0+255)
  1307  03C8  00DA               	movwf	??_main
  1308  03C9  085A               	movf	??_main,w
  1309  03CA  00AC               	movwf	inicio_presentacion@str
  1310  03CB  158A  27A0  118A   	fcall	_inicio_presentacion
  1311  03CE                     l2515:
  1312                           
  1313                           ;main.c: 355:     _delay((unsigned long)((20)*(32000000/4000.0)));
  1314  03CE  30D0               	movlw	208
  1315  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  1316  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  1317  03D1  00DB               	movwf	??_main+1
  1318  03D2  30C9               	movlw	201
  1319  03D3  00DA               	movwf	??_main
  1320  03D4                     u2347:
  1321  03D4  0BDA               	decfsz	??_main,f
  1322  03D5  2BD4               	goto	u2347
  1323  03D6  0BDB               	decfsz	??_main+1,f
  1324  03D7  2BD4               	goto	u2347
  1325  03D8  0000               	nop
  1326  03D9                     l2517:
  1327                           
  1328                           ;main.c: 356:     LCD_Goto(1, 1);
  1329  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  1330  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  1331  03DB  01A6               	clrf	LCD_Goto@row
  1332  03DC  0AA6               	incf	LCD_Goto@row,f
  1333  03DD  3001               	movlw	1
  1334  03DE  118A  206E  118A   	fcall	_LCD_Goto
  1335  03E1                     l2519:
  1336                           
  1337                           ;main.c: 357:     _delay((unsigned long)((50)*(32000000/4000.0)));
  1338  03E1  3003               	movlw	3
  1339  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  1340  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  1341  03E4  00DC               	movwf	??_main+2
  1342  03E5  3008               	movlw	8
  1343  03E6  00DB               	movwf	??_main+1
  1344  03E7  3076               	movlw	118
  1345  03E8  00DA               	movwf	??_main
  1346  03E9                     u2357:
  1347  03E9  0BDA               	decfsz	??_main,f
  1348  03EA  2BE9               	goto	u2357
  1349  03EB  0BDB               	decfsz	??_main+1,f
  1350  03EC  2BE9               	goto	u2357
  1351  03ED  0BDC               	decfsz	??_main+2,f
  1352  03EE  2BE9               	goto	u2357
  1353  03EF  2BF0               	nop2
  1354  03F0                     l2521:
  1355                           
  1356                           ;main.c: 360:     char c = keypad_getkey();
  1357  03F0  158A  2548  118A   	fcall	_keypad_getkey
  1358  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  1359  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  1360  03F5  00DA               	movwf	??_main
  1361  03F6  085A               	movf	??_main,w
  1362  03F7  00DD               	movwf	main@c
  1363  03F8                     l2523:
  1364                           
  1365                           ;main.c: 361:         LCD_PutC(c);
  1366  03F8  085D               	movf	main@c,w
  1367  03F9  158A  2512  118A   	fcall	_LCD_PutC
  1368  03FC                     l2525:
  1369                           
  1370                           ;main.c: 362:         selector_type(c);
  1371  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  1372  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  1373  03FE  085D               	movf	main@c,w
  1374  03FF  118A  2703  118A   	fcall	_selector_type
  1375  0402                     l2527:
  1376                           
  1377                           ;main.c: 363:     _delay((unsigned long)((60)*(32000000/4000.0)));
  1378  0402  3003               	movlw	3
  1379  0403  1283               	bcf	3,5	;RP0=0, select bank0
  1380  0404  1303               	bcf	3,6	;RP1=0, select bank0
  1381  0405  00DC               	movwf	??_main+2
  1382  0406  3070               	movlw	112
  1383  0407  00DB               	movwf	??_main+1
  1384  0408  305C               	movlw	92
  1385  0409  00DA               	movwf	??_main
  1386  040A                     u2367:
  1387  040A  0BDA               	decfsz	??_main,f
  1388  040B  2C0A               	goto	u2367
  1389  040C  0BDB               	decfsz	??_main+1,f
  1390  040D  2C0A               	goto	u2367
  1391  040E  0BDC               	decfsz	??_main+2,f
  1392  040F  2C0A               	goto	u2367
  1393  0410  2BF0               	goto	l2521
  1394  0411  118A  2800         	ljmp	start
  1395  0413                     __end_of_main:
  1396                           
  1397                           	psect	text1
  1398  0703                     __ptext1:	
  1399 ;; *************** function _selector_type *****************
  1400 ;; Defined at:
  1401 ;;		line 297 in file "main.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;  c               1    wreg     unsigned char 
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;  c               1   57[BANK0 ] unsigned char 
  1406 ;;  Sadc            2    0        int 
  1407 ;;  k               1   56[BANK0 ] unsigned char 
  1408 ;; Return value:  Size  Location     Type
  1409 ;;                  1    wreg      void 
  1410 ;; Registers used:
  1411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1412 ;; Tracked objects:
  1413 ;;		On entry : 0/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMMON   BANK0   BANK1
  1417 ;;      Params:         0       0       0
  1418 ;;      Locals:         0       2       0
  1419 ;;      Temps:          0       3       0
  1420 ;;      Totals:         0       5       0
  1421 ;;Total ram usage:        5 bytes
  1422 ;; Hardware stack levels used: 1
  1423 ;; Hardware stack levels required when called: 5
  1424 ;; This function calls:
  1425 ;;		_C_inicio
  1426 ;;		_C_parada
  1427 ;;		_Tx_Dato
  1428 ;;		_atoi
  1429 ;;		_conditional_screen
  1430 ;;		_eeprom_read
  1431 ;;		_keypad_getkey
  1432 ;;		_screen_selector
  1433 ;;		_ventilator_screen
  1434 ;; This function is called by:
  1435 ;;		_main
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           
  1440                           ;psect for function _selector_type
  1441  0703                     _selector_type:
  1442                           
  1443                           ;incstack = 0
  1444                           ; Regs used in _selector_type: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1445                           ;selector_type@c stored from wreg
  1446  0703  1283               	bcf	3,5	;RP0=0, select bank0
  1447  0704  1303               	bcf	3,6	;RP1=0, select bank0
  1448  0705  00D9               	movwf	selector_type@c
  1449  0706                     l2441:
  1450                           
  1451                           ;main.c: 297: void selector_type(char c);main.c: 298: {;main.c: 299:     char k=c;
  1452  0706  0859               	movf	selector_type@c,w
  1453  0707  00D5               	movwf	??_selector_type
  1454  0708  0855               	movf	??_selector_type,w
  1455  0709  00D8               	movwf	selector_type@k
  1456  070A                     l2443:
  1457                           
  1458                           ;main.c: 300:     if(c=='A')
  1459  070A  3041               	movlw	65
  1460  070B  0659               	xorwf	selector_type@c,w
  1461  070C  1D03               	btfss	3,2
  1462  070D  2F0F               	goto	u2261
  1463  070E  2F10               	goto	u2260
  1464  070F                     u2261:
  1465  070F  2F55               	goto	l2457
  1466  0710                     u2260:
  1467  0710                     l2445:
  1468                           
  1469                           ;main.c: 301:         {;main.c: 302:             if(i==1){
  1470  0710  037A               	decf	_i,w
  1471  0711  047B               	iorwf	_i+1,w
  1472  0712  1D03               	btfss	3,2
  1473  0713  2F15               	goto	u2271
  1474  0714  2F16               	goto	u2270
  1475  0715                     u2271:
  1476  0715  2F32               	goto	l2451
  1477  0716                     u2270:
  1478  0716                     l2447:
  1479                           
  1480                           ;main.c: 303:                 ventilator_screen(1.1,1000,1);
  1481  0716  303F               	movlw	63
  1482  0717  00BA               	movwf	ventilator_screen@voltaje+3
  1483  0718  308C               	movlw	140
  1484  0719  00B9               	movwf	ventilator_screen@voltaje+2
  1485  071A  30CC               	movlw	204
  1486  071B  00B8               	movwf	ventilator_screen@voltaje+1
  1487  071C  30CD               	movlw	205
  1488  071D  00B7               	movwf	ventilator_screen@voltaje
  1489  071E  30E8               	movlw	232
  1490  071F  00BB               	movwf	ventilator_screen@vrm
  1491  0720  3003               	movlw	3
  1492  0721  00BC               	movwf	ventilator_screen@vrm+1
  1493  0722  3001               	movlw	1
  1494  0723  00BD               	movwf	ventilator_screen@ventilator_number
  1495  0724  3000               	movlw	0
  1496  0725  00BE               	movwf	ventilator_screen@ventilator_number+1
  1497  0726  118A  24B4  118A   	fcall	_ventilator_screen
  1498  0729                     l2449:
  1499                           
  1500                           ;main.c: 304:             ++i;
  1501  0729  3001               	movlw	1
  1502  072A  1283               	bcf	3,5	;RP0=0, select bank0
  1503  072B  1303               	bcf	3,6	;RP1=0, select bank0
  1504  072C  07FA               	addwf	_i,f
  1505  072D  1803               	skipnc
  1506  072E  0AFB               	incf	_i+1,f
  1507  072F  3000               	movlw	0
  1508  0730  07FB               	addwf	_i+1,f
  1509                           
  1510                           ;main.c: 305:             }
  1511  0731  2FDE               	goto	l283
  1512  0732                     l2451:
  1513  0732  3002               	movlw	2
  1514  0733  067A               	xorwf	_i,w
  1515  0734  047B               	iorwf	_i+1,w
  1516  0735  1D03               	btfss	3,2
  1517  0736  2F38               	goto	u2281
  1518  0737  2F39               	goto	u2280
  1519  0738                     u2281:
  1520  0738  2FDE               	goto	l283
  1521  0739                     u2280:
  1522  0739                     l2453:
  1523                           
  1524                           ;main.c: 307:                 ventilator_screen(2.2,1000,2);
  1525  0739  3040               	movlw	64
  1526  073A  00BA               	movwf	ventilator_screen@voltaje+3
  1527  073B  300C               	movlw	12
  1528  073C  00B9               	movwf	ventilator_screen@voltaje+2
  1529  073D  30CC               	movlw	204
  1530  073E  00B8               	movwf	ventilator_screen@voltaje+1
  1531  073F  30CD               	movlw	205
  1532  0740  00B7               	movwf	ventilator_screen@voltaje
  1533  0741  30E8               	movlw	232
  1534  0742  00BB               	movwf	ventilator_screen@vrm
  1535  0743  3003               	movlw	3
  1536  0744  00BC               	movwf	ventilator_screen@vrm+1
  1537  0745  3002               	movlw	2
  1538  0746  00BD               	movwf	ventilator_screen@ventilator_number
  1539  0747  3000               	movlw	0
  1540  0748  00BE               	movwf	ventilator_screen@ventilator_number+1
  1541  0749  118A  24B4  118A   	fcall	_ventilator_screen
  1542  074C                     l2455:
  1543                           
  1544                           ;main.c: 308:                 --i;
  1545  074C  30FF               	movlw	255
  1546  074D  1283               	bcf	3,5	;RP0=0, select bank0
  1547  074E  1303               	bcf	3,6	;RP1=0, select bank0
  1548  074F  07FA               	addwf	_i,f
  1549  0750  1803               	skipnc
  1550  0751  0AFB               	incf	_i+1,f
  1551  0752  30FF               	movlw	255
  1552  0753  07FB               	addwf	_i+1,f
  1553  0754  2FDE               	goto	l283
  1554  0755                     l2457:
  1555  0755  3042               	movlw	66
  1556  0756  0659               	xorwf	selector_type@c,w
  1557  0757  1D03               	btfss	3,2
  1558  0758  2F5A               	goto	u2291
  1559  0759  2F5B               	goto	u2290
  1560  075A                     u2291:
  1561  075A  2F73               	goto	l2465
  1562  075B                     u2290:
  1563  075B                     l2459:
  1564                           
  1565                           ;main.c: 313:     {;main.c: 314:         conditional_screen(1);
  1566  075B  3001               	movlw	1
  1567  075C  00AA               	movwf	conditional_screen@x
  1568  075D  3000               	movlw	0
  1569  075E  00AB               	movwf	conditional_screen@x+1
  1570  075F  118A  21E7  118A   	fcall	_conditional_screen
  1571  0762                     l2461:
  1572                           
  1573                           ;main.c: 315:         c = keypad_getkey();
  1574  0762  158A  2548  118A   	fcall	_keypad_getkey
  1575  0765  1283               	bcf	3,5	;RP0=0, select bank0
  1576  0766  1303               	bcf	3,6	;RP1=0, select bank0
  1577  0767  00D5               	movwf	??_selector_type
  1578  0768  0855               	movf	??_selector_type,w
  1579  0769  00D9               	movwf	selector_type@c
  1580  076A                     l2463:
  1581                           
  1582                           ;main.c: 316:         screen_selector(c,k);
  1583  076A  0858               	movf	selector_type@k,w
  1584  076B  00D5               	movwf	??_selector_type
  1585  076C  0855               	movf	??_selector_type,w
  1586  076D  00B7               	movwf	screen_selector@k
  1587  076E  0859               	movf	selector_type@c,w
  1588  076F  118A  2413  118A   	fcall	_screen_selector
  1589                           
  1590                           ;main.c: 317:     }
  1591  0772  2FDE               	goto	l283
  1592  0773                     l2465:
  1593  0773  3043               	movlw	67
  1594  0774  0659               	xorwf	selector_type@c,w
  1595  0775  1D03               	btfss	3,2
  1596  0776  2F78               	goto	u2301
  1597  0777  2F79               	goto	u2300
  1598  0778                     u2301:
  1599  0778  2F91               	goto	l2473
  1600  0779                     u2300:
  1601  0779                     l2467:
  1602                           
  1603                           ;main.c: 319:     {;main.c: 320:         conditional_screen(2);
  1604  0779  3002               	movlw	2
  1605  077A  00AA               	movwf	conditional_screen@x
  1606  077B  3000               	movlw	0
  1607  077C  00AB               	movwf	conditional_screen@x+1
  1608  077D  118A  21E7  118A   	fcall	_conditional_screen
  1609  0780                     l2469:
  1610                           
  1611                           ;main.c: 321:         c = keypad_getkey();
  1612  0780  158A  2548  118A   	fcall	_keypad_getkey
  1613  0783  1283               	bcf	3,5	;RP0=0, select bank0
  1614  0784  1303               	bcf	3,6	;RP1=0, select bank0
  1615  0785  00D5               	movwf	??_selector_type
  1616  0786  0855               	movf	??_selector_type,w
  1617  0787  00D9               	movwf	selector_type@c
  1618  0788                     l2471:
  1619                           
  1620                           ;main.c: 322:         screen_selector(c,k);
  1621  0788  0858               	movf	selector_type@k,w
  1622  0789  00D5               	movwf	??_selector_type
  1623  078A  0855               	movf	??_selector_type,w
  1624  078B  00B7               	movwf	screen_selector@k
  1625  078C  0859               	movf	selector_type@c,w
  1626  078D  118A  2413  118A   	fcall	_screen_selector
  1627                           
  1628                           ;main.c: 323:     }
  1629  0790  2FDE               	goto	l283
  1630  0791                     l2473:
  1631  0791  3044               	movlw	68
  1632  0792  0659               	xorwf	selector_type@c,w
  1633  0793  1D03               	btfss	3,2
  1634  0794  2F96               	goto	u2311
  1635  0795  2F97               	goto	u2310
  1636  0796                     u2311:
  1637  0796  2FAF               	goto	l2481
  1638  0797                     u2310:
  1639  0797                     l2475:
  1640                           
  1641                           ;main.c: 325:     {;main.c: 326:         conditional_screen(3);
  1642  0797  3003               	movlw	3
  1643  0798  00AA               	movwf	conditional_screen@x
  1644  0799  3000               	movlw	0
  1645  079A  00AB               	movwf	conditional_screen@x+1
  1646  079B  118A  21E7  118A   	fcall	_conditional_screen
  1647  079E                     l2477:
  1648                           
  1649                           ;main.c: 327:         c = keypad_getkey();
  1650  079E  158A  2548  118A   	fcall	_keypad_getkey
  1651  07A1  1283               	bcf	3,5	;RP0=0, select bank0
  1652  07A2  1303               	bcf	3,6	;RP1=0, select bank0
  1653  07A3  00D5               	movwf	??_selector_type
  1654  07A4  0855               	movf	??_selector_type,w
  1655  07A5  00D9               	movwf	selector_type@c
  1656  07A6                     l2479:
  1657                           
  1658                           ;main.c: 328:         screen_selector(c,k);
  1659  07A6  0858               	movf	selector_type@k,w
  1660  07A7  00D5               	movwf	??_selector_type
  1661  07A8  0855               	movf	??_selector_type,w
  1662  07A9  00B7               	movwf	screen_selector@k
  1663  07AA  0859               	movf	selector_type@c,w
  1664  07AB  118A  2413  118A   	fcall	_screen_selector
  1665                           
  1666                           ;main.c: 329:     }
  1667  07AE  2FDE               	goto	l283
  1668  07AF                     l2481:
  1669  07AF  0859               	movf	selector_type@c,w
  1670  07B0  118A  226C  118A   	fcall	_atoi
  1671  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  1672  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  1673  07B5  0826               	movf	?_atoi,w
  1674  07B6  158A  2529  118A   	fcall	_eeprom_read
  1675  07B9                     l2483:
  1676                           
  1677                           ;main.c: 333:         envio=c;
  1678  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  1679  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  1680  07BB  0859               	movf	selector_type@c,w
  1681  07BC  00D5               	movwf	??_selector_type
  1682  07BD  0855               	movf	??_selector_type,w
  1683  07BE  00EE               	movwf	_envio
  1684  07BF                     l2485:
  1685                           
  1686                           ;main.c: 334:         C_inicio();
  1687  07BF  158A  24A8  118A   	fcall	_C_inicio
  1688  07C2                     l2487:
  1689                           
  1690                           ;main.c: 335:         Tx_Dato(0xA0);
  1691  07C2  30A0               	movlw	160
  1692  07C3  158A  24D5  118A   	fcall	_Tx_Dato
  1693  07C6                     l2489:
  1694                           
  1695                           ;main.c: 336:         Tx_Dato(envio);
  1696  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  1697  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  1698  07C8  086E               	movf	_envio,w
  1699  07C9  158A  24D5  118A   	fcall	_Tx_Dato
  1700  07CC                     l2491:
  1701                           
  1702                           ;main.c: 337:         C_parada();
  1703  07CC  158A  24B6  118A   	fcall	_C_parada
  1704  07CF                     l2493:
  1705                           
  1706                           ;main.c: 338:         _delay((unsigned long)((100)*(32000000/4000.0)));
  1707  07CF  3005               	movlw	5
  1708  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  1709  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  1710  07D2  00D7               	movwf	??_selector_type+2
  1711  07D3  300F               	movlw	15
  1712  07D4  00D6               	movwf	??_selector_type+1
  1713  07D5  30F0               	movlw	240
  1714  07D6  00D5               	movwf	??_selector_type
  1715  07D7                     u2377:
  1716  07D7  0BD5               	decfsz	??_selector_type,f
  1717  07D8  2FD7               	goto	u2377
  1718  07D9  0BD6               	decfsz	??_selector_type+1,f
  1719  07DA  2FD7               	goto	u2377
  1720  07DB  0BD7               	decfsz	??_selector_type+2,f
  1721  07DC  2FD7               	goto	u2377
  1722  07DD  2FDE               	nop2
  1723  07DE                     l283:
  1724  07DE  0008               	return
  1725  07DF                     __end_of_selector_type:
  1726                           
  1727                           	psect	text2
  1728  04B4                     __ptext2:	
  1729 ;; *************** function _ventilator_screen *****************
  1730 ;; Defined at:
  1731 ;;		line 126 in file "main.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;  voltaje         4   23[BANK0 ] float 
  1734 ;;  vrm             2   27[BANK0 ] int 
  1735 ;;  ventilator_n    2   29[BANK0 ] int 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;  vol            10   35[BANK0 ] unsigned char [10]
  1738 ;;  vel             5   45[BANK0 ] unsigned char [5]
  1739 ;;  vel_value       1   52[BANK0 ] unsigned char [1]
  1740 ;;  vel_number      1   51[BANK0 ] unsigned char [1]
  1741 ;;  vol_value       1   50[BANK0 ] unsigned char [1]
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      void 
  1744 ;; Registers used:
  1745 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMMON   BANK0   BANK1
  1751 ;;      Params:         0       8       0
  1752 ;;      Locals:         0      18       0
  1753 ;;      Temps:          0       4       0
  1754 ;;      Totals:         0      30       0
  1755 ;;Total ram usage:       30 bytes
  1756 ;; Hardware stack levels used: 1
  1757 ;; Hardware stack levels required when called: 3
  1758 ;; This function calls:
  1759 ;;		_LCD_Cmd
  1760 ;;		_LCD_Goto
  1761 ;;		_LCD_Print
  1762 ;;		___fltol
  1763 ;;		_itoa
  1764 ;;		_strcat
  1765 ;; This function is called by:
  1766 ;;		_selector_type
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           
  1771                           ;psect for function _ventilator_screen
  1772  04B4                     _ventilator_screen:
  1773  04B4                     l2269:	
  1774                           ;incstack = 0
  1775                           ; Regs used in _ventilator_screen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1776                           
  1777                           
  1778                           ;main.c: 126: void ventilator_screen(float voltaje, int vrm, int ventilator_number);main
      +                          .c: 127: {;main.c: 128:     LCD_Cmd(0x01);
  1779  04B4  3001               	movlw	1
  1780  04B5  158A  25B4  118A   	fcall	_LCD_Cmd
  1781  04B8                     l2271:
  1782                           
  1783                           ;main.c: 129:     unsigned char vol[]="Voltaje: ";
  1784  04B8  3043               	movlw	ventilator_screen@vol& (0+255)
  1785  04B9  0084               	movwf	4
  1786  04BA  30AE               	movlw	low ventilator_screen@F1127
  1787  04BB  1283               	bcf	3,5	;RP0=0, select bank0
  1788  04BC  1303               	bcf	3,6	;RP1=0, select bank0
  1789  04BD  00BF               	movwf	??_ventilator_screen
  1790  04BE  0804               	movf	4,w
  1791  04BF  00C0               	movwf	??_ventilator_screen+1
  1792  04C0  300A               	movlw	10
  1793  04C1  00C1               	movwf	??_ventilator_screen+2
  1794  04C2                     u2150:
  1795  04C2  083F               	movf	??_ventilator_screen,w
  1796  04C3  0084               	movwf	4
  1797  04C4  1383               	bcf	3,7	;select IRP bank1
  1798  04C5  0800               	movf	0,w
  1799  04C6  00C2               	movwf	??_ventilator_screen+3
  1800  04C7  0ABF               	incf	??_ventilator_screen,f
  1801  04C8  0840               	movf	??_ventilator_screen+1,w
  1802  04C9  0084               	movwf	4
  1803  04CA  0842               	movf	??_ventilator_screen+3,w
  1804  04CB  0080               	movwf	0
  1805  04CC  0AC0               	incf	??_ventilator_screen+1,f
  1806  04CD  0BC1               	decfsz	??_ventilator_screen+2,f
  1807  04CE  2CC2               	goto	u2150
  1808  04CF                     l2273:
  1809                           
  1810                           ;main.c: 130:     unsigned char vel[]="Vel ";
  1811  04CF  304D               	movlw	ventilator_screen@vel& (0+255)
  1812  04D0  0084               	movwf	4
  1813  04D1  086F               	movf	ventilator_screen@F1129,w
  1814  04D2  0080               	movwf	0
  1815  04D3  0A84               	incf	4,f
  1816  04D4  0870               	movf	ventilator_screen@F1129+1,w
  1817  04D5  0080               	movwf	0
  1818  04D6  0A84               	incf	4,f
  1819  04D7  0871               	movf	ventilator_screen@F1129+2,w
  1820  04D8  0080               	movwf	0
  1821  04D9  0A84               	incf	4,f
  1822  04DA  0872               	movf	ventilator_screen@F1129+3,w
  1823  04DB  0080               	movwf	0
  1824  04DC  0A84               	incf	4,f
  1825  04DD  0873               	movf	ventilator_screen@F1129+4,w
  1826  04DE  0080               	movwf	0
  1827  04DF                     l2275:
  1828                           
  1829                           ;main.c: 131:     char vol_value[]="";
  1830  04DF  01D2               	clrf	ventilator_screen@vol_value
  1831  04E0                     l2277:
  1832                           
  1833                           ;main.c: 132:     char vel_number[]="";
  1834  04E0  01D3               	clrf	ventilator_screen@vel_number
  1835  04E1                     l2279:
  1836                           
  1837                           ;main.c: 133:     char vel_value[]="";
  1838  04E1  01D4               	clrf	ventilator_screen@vel_value
  1839  04E2                     l2281:
  1840                           
  1841                           ;main.c: 134:     LCD_Goto(1,1);
  1842  04E2  01A6               	clrf	LCD_Goto@row
  1843  04E3  0AA6               	incf	LCD_Goto@row,f
  1844  04E4  3001               	movlw	1
  1845  04E5  118A  206E  118A   	fcall	_LCD_Goto
  1846  04E8                     l2283:
  1847                           
  1848                           ;main.c: 137:     itoa(vol_value,voltaje,10);
  1849  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  1850  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  1851  04EA  083A               	movf	ventilator_screen@voltaje+3,w
  1852  04EB  00A3               	movwf	___fltol@f1+3
  1853  04EC  0839               	movf	ventilator_screen@voltaje+2,w
  1854  04ED  00A2               	movwf	___fltol@f1+2
  1855  04EE  0838               	movf	ventilator_screen@voltaje+1,w
  1856  04EF  00A1               	movwf	___fltol@f1+1
  1857  04F0  0837               	movf	ventilator_screen@voltaje,w
  1858  04F1  00A0               	movwf	___fltol@f1
  1859  04F2  118A  216B  118A   	fcall	___fltol
  1860  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  1861  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  1862  04F7  0821               	movf	?___fltol+1,w
  1863  04F8  00B2               	movwf	itoa@val+1
  1864  04F9  0820               	movf	?___fltol,w
  1865  04FA  00B1               	movwf	itoa@val
  1866  04FB  300A               	movlw	10
  1867  04FC  00B3               	movwf	itoa@base
  1868  04FD  3000               	movlw	0
  1869  04FE  00B4               	movwf	itoa@base+1
  1870  04FF  3052               	movlw	(low (ventilator_screen@vol_value| 0))& (0+255)
  1871  0500  158A  2569  118A   	fcall	_itoa
  1872  0503                     l2285:
  1873                           
  1874                           ;main.c: 138:     strcat(vol,vol_value);
  1875  0503  3052               	movlw	(low (ventilator_screen@vol_value| 0))& (0+255)
  1876  0504  1283               	bcf	3,5	;RP0=0, select bank0
  1877  0505  1303               	bcf	3,6	;RP1=0, select bank0
  1878  0506  00A0               	movwf	strcat@from
  1879  0507  3000               	movlw	0
  1880  0508  00A1               	movwf	strcat@from+1
  1881  0509  3043               	movlw	(low (ventilator_screen@vol| 0))& (0+255)
  1882  050A  158A  25E2  118A   	fcall	_strcat
  1883  050D                     l2287:
  1884                           
  1885                           ;main.c: 140:     LCD_Print(vol);
  1886  050D  3043               	movlw	(low (ventilator_screen@vol| 0))& (0+255)
  1887  050E  1283               	bcf	3,5	;RP0=0, select bank0
  1888  050F  1303               	bcf	3,6	;RP1=0, select bank0
  1889  0510  00A3               	movwf	LCD_Print@LCD_Str
  1890  0511  3000               	movlw	0
  1891  0512  00A4               	movwf	LCD_Print@LCD_Str+1
  1892  0513  158A  26BF  118A   	fcall	_LCD_Print
  1893  0516                     l2289:
  1894                           
  1895                           ;main.c: 141:     LCD_Goto(1,2);
  1896  0516  3002               	movlw	2
  1897  0517  1283               	bcf	3,5	;RP0=0, select bank0
  1898  0518  1303               	bcf	3,6	;RP1=0, select bank0
  1899  0519  00BF               	movwf	??_ventilator_screen
  1900  051A  083F               	movf	??_ventilator_screen,w
  1901  051B  00A6               	movwf	LCD_Goto@row
  1902  051C  3001               	movlw	1
  1903  051D  118A  206E  118A   	fcall	_LCD_Goto
  1904  0520                     l2291:
  1905                           
  1906                           ;main.c: 142:     itoa(vel_number,ventilator_number,10);
  1907  0520  1283               	bcf	3,5	;RP0=0, select bank0
  1908  0521  1303               	bcf	3,6	;RP1=0, select bank0
  1909  0522  083E               	movf	ventilator_screen@ventilator_number+1,w
  1910  0523  00B2               	movwf	itoa@val+1
  1911  0524  083D               	movf	ventilator_screen@ventilator_number,w
  1912  0525  00B1               	movwf	itoa@val
  1913  0526  300A               	movlw	10
  1914  0527  00B3               	movwf	itoa@base
  1915  0528  3000               	movlw	0
  1916  0529  00B4               	movwf	itoa@base+1
  1917  052A  3053               	movlw	(low (ventilator_screen@vel_number| 0))& (0+255)
  1918  052B  158A  2569  118A   	fcall	_itoa
  1919  052E                     l2293:
  1920                           
  1921                           ;main.c: 143:     strcat(vel,vel_number);
  1922  052E  3053               	movlw	(low (ventilator_screen@vel_number| 0))& (0+255)
  1923  052F  1283               	bcf	3,5	;RP0=0, select bank0
  1924  0530  1303               	bcf	3,6	;RP1=0, select bank0
  1925  0531  00A0               	movwf	strcat@from
  1926  0532  3000               	movlw	0
  1927  0533  00A1               	movwf	strcat@from+1
  1928  0534  304D               	movlw	(low (ventilator_screen@vel| 0))& (0+255)
  1929  0535  158A  25E2  118A   	fcall	_strcat
  1930  0538                     l2295:
  1931                           
  1932                           ;main.c: 144:     strcat(vel,": ");
  1933  0538  3057               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1934  0539  1283               	bcf	3,5	;RP0=0, select bank0
  1935  053A  1303               	bcf	3,6	;RP1=0, select bank0
  1936  053B  00A0               	movwf	strcat@from
  1937  053C  3080               	movlw	128
  1938  053D  00A1               	movwf	strcat@from+1
  1939  053E  304D               	movlw	(low (ventilator_screen@vel| 0))& (0+255)
  1940  053F  158A  25E2  118A   	fcall	_strcat
  1941  0542                     l2297:
  1942                           
  1943                           ;main.c: 145:     itoa(vel_value,vrm,10);
  1944  0542  1283               	bcf	3,5	;RP0=0, select bank0
  1945  0543  1303               	bcf	3,6	;RP1=0, select bank0
  1946  0544  083C               	movf	ventilator_screen@vrm+1,w
  1947  0545  00B2               	movwf	itoa@val+1
  1948  0546  083B               	movf	ventilator_screen@vrm,w
  1949  0547  00B1               	movwf	itoa@val
  1950  0548  300A               	movlw	10
  1951  0549  00B3               	movwf	itoa@base
  1952  054A  3000               	movlw	0
  1953  054B  00B4               	movwf	itoa@base+1
  1954  054C  3054               	movlw	(low (ventilator_screen@vel_value| 0))& (0+255)
  1955  054D  158A  2569  118A   	fcall	_itoa
  1956  0550                     l2299:
  1957                           
  1958                           ;main.c: 146:     strcat(vel,vel_value);
  1959  0550  3054               	movlw	(low (ventilator_screen@vel_value| 0))& (0+255)
  1960  0551  1283               	bcf	3,5	;RP0=0, select bank0
  1961  0552  1303               	bcf	3,6	;RP1=0, select bank0
  1962  0553  00A0               	movwf	strcat@from
  1963  0554  3000               	movlw	0
  1964  0555  00A1               	movwf	strcat@from+1
  1965  0556  304D               	movlw	(low (ventilator_screen@vel| 0))& (0+255)
  1966  0557  158A  25E2  118A   	fcall	_strcat
  1967  055A                     l2301:
  1968                           
  1969                           ;main.c: 147:     strcat(vel," RPM");
  1970  055A  3046               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1971  055B  1283               	bcf	3,5	;RP0=0, select bank0
  1972  055C  1303               	bcf	3,6	;RP1=0, select bank0
  1973  055D  00A0               	movwf	strcat@from
  1974  055E  3080               	movlw	128
  1975  055F  00A1               	movwf	strcat@from+1
  1976  0560  304D               	movlw	(low (ventilator_screen@vel| 0))& (0+255)
  1977  0561  158A  25E2  118A   	fcall	_strcat
  1978  0564                     l2303:
  1979                           
  1980                           ;main.c: 149:     LCD_Print(vel);
  1981  0564  304D               	movlw	(low (ventilator_screen@vel| 0))& (0+255)
  1982  0565  1283               	bcf	3,5	;RP0=0, select bank0
  1983  0566  1303               	bcf	3,6	;RP1=0, select bank0
  1984  0567  00A3               	movwf	LCD_Print@LCD_Str
  1985  0568  3000               	movlw	0
  1986  0569  00A4               	movwf	LCD_Print@LCD_Str+1
  1987  056A  158A  26BF  118A   	fcall	_LCD_Print
  1988  056D                     l216:
  1989  056D  0008               	return
  1990  056E                     __end_of_ventilator_screen:
  1991                           
  1992                           	psect	text3
  1993  0413                     __ptext3:	
  1994 ;; *************** function _screen_selector *****************
  1995 ;; Defined at:
  1996 ;;		line 260 in file "main.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;  c               1    wreg     unsigned char 
  1999 ;;  k               1   23[BANK0 ] unsigned char 
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;  c               1   31[BANK0 ] unsigned char 
  2002 ;;  v               4   27[BANK0 ] float 
  2003 ;;  val             2    0        int 
  2004 ;;  dir             2    0        int 
  2005 ;;  value           1   32[BANK0 ] unsigned char [1]
  2006 ;; Return value:  Size  Location     Type
  2007 ;;                  1    wreg      void 
  2008 ;; Registers used:
  2009 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMMON   BANK0   BANK1
  2015 ;;      Params:         0       1       0
  2016 ;;      Locals:         0       6       0
  2017 ;;      Temps:          0       3       0
  2018 ;;      Totals:         0      10       0
  2019 ;;Total ram usage:       10 bytes
  2020 ;; Hardware stack levels used: 1
  2021 ;; Hardware stack levels required when called: 4
  2022 ;; This function calls:
  2023 ;;		_LCD_Cmd
  2024 ;;		_LCD_Goto
  2025 ;;		_LCD_Print
  2026 ;;		___fltol
  2027 ;;		_itoa
  2028 ;;		_key_writing_value
  2029 ;;		_strcat
  2030 ;; This function is called by:
  2031 ;;		_selector_type
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           
  2036                           ;psect for function _screen_selector
  2037  0413                     _screen_selector:
  2038                           
  2039                           ;incstack = 0
  2040                           ; Regs used in _screen_selector: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2041                           ;screen_selector@c stored from wreg
  2042  0413  1283               	bcf	3,5	;RP0=0, select bank0
  2043  0414  1303               	bcf	3,6	;RP1=0, select bank0
  2044  0415  00BF               	movwf	screen_selector@c
  2045  0416                     l2319:
  2046                           
  2047                           ;main.c: 260: void screen_selector(char c, char k);main.c: 261: {;main.c: 263:     LCD_C
      +                          md(0x01);
  2048  0416  3001               	movlw	1
  2049  0417  158A  25B4  118A   	fcall	_LCD_Cmd
  2050  041A                     l2321:
  2051                           
  2052                           ;main.c: 264:     LCD_Goto(1,1);
  2053  041A  1283               	bcf	3,5	;RP0=0, select bank0
  2054  041B  1303               	bcf	3,6	;RP1=0, select bank0
  2055  041C  01A6               	clrf	LCD_Goto@row
  2056  041D  0AA6               	incf	LCD_Goto@row,f
  2057  041E  3001               	movlw	1
  2058  041F  118A  206E  118A   	fcall	_LCD_Goto
  2059  0422                     l2323:
  2060                           
  2061                           ;main.c: 265:     if(c=='1')
  2062  0422  3031               	movlw	49
  2063  0423  1283               	bcf	3,5	;RP0=0, select bank0
  2064  0424  1303               	bcf	3,6	;RP1=0, select bank0
  2065  0425  063F               	xorwf	screen_selector@c,w
  2066  0426  1D03               	btfss	3,2
  2067  0427  2C29               	goto	u2221
  2068  0428  2C2A               	goto	u2220
  2069  0429                     u2221:
  2070  0429  2C78               	goto	l2345
  2071  042A                     u2220:
  2072  042A                     l2325:
  2073                           
  2074                           ;main.c: 266:     {;main.c: 267:         LCD_Print("Nuevo Valor");
  2075  042A  3031               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2076  042B  00A3               	movwf	LCD_Print@LCD_Str
  2077  042C  3080               	movlw	128
  2078  042D  00A4               	movwf	LCD_Print@LCD_Str+1
  2079  042E  158A  26BF  118A   	fcall	_LCD_Print
  2080  0431                     l2327:
  2081                           
  2082                           ;main.c: 268:         LCD_Goto(1,2);
  2083  0431  3002               	movlw	2
  2084  0432  1283               	bcf	3,5	;RP0=0, select bank0
  2085  0433  1303               	bcf	3,6	;RP1=0, select bank0
  2086  0434  00B8               	movwf	??_screen_selector
  2087  0435  0838               	movf	??_screen_selector,w
  2088  0436  00A6               	movwf	LCD_Goto@row
  2089  0437  3001               	movlw	1
  2090  0438  118A  206E  118A   	fcall	_LCD_Goto
  2091  043B                     l2329:
  2092                           
  2093                           ;main.c: 269:         float v=5.12;
  2094  043B  3040               	movlw	64
  2095  043C  1283               	bcf	3,5	;RP0=0, select bank0
  2096  043D  1303               	bcf	3,6	;RP1=0, select bank0
  2097  043E  00BE               	movwf	screen_selector@v+3
  2098  043F  30A3               	movlw	163
  2099  0440  00BD               	movwf	screen_selector@v+2
  2100  0441  30D7               	movlw	215
  2101  0442  00BC               	movwf	screen_selector@v+1
  2102  0443  300A               	movlw	10
  2103  0444  00BB               	movwf	screen_selector@v
  2104  0445                     l2331:
  2105                           
  2106                           ;main.c: 270:         char value[]="";
  2107  0445  01C0               	clrf	screen_selector@value
  2108  0446                     l2333:
  2109  0446                     l2335:
  2110  0446                     l2337:
  2111                           
  2112                           ;main.c: 274:         key_writing_value();
  2113  0446  118A  22F5  118A   	fcall	_key_writing_value
  2114  0449                     l2339:
  2115                           
  2116                           ;main.c: 278:         itoa(value,v,10);
  2117  0449  1283               	bcf	3,5	;RP0=0, select bank0
  2118  044A  1303               	bcf	3,6	;RP1=0, select bank0
  2119  044B  083E               	movf	screen_selector@v+3,w
  2120  044C  00A3               	movwf	___fltol@f1+3
  2121  044D  083D               	movf	screen_selector@v+2,w
  2122  044E  00A2               	movwf	___fltol@f1+2
  2123  044F  083C               	movf	screen_selector@v+1,w
  2124  0450  00A1               	movwf	___fltol@f1+1
  2125  0451  083B               	movf	screen_selector@v,w
  2126  0452  00A0               	movwf	___fltol@f1
  2127  0453  118A  216B  118A   	fcall	___fltol
  2128  0456  1283               	bcf	3,5	;RP0=0, select bank0
  2129  0457  1303               	bcf	3,6	;RP1=0, select bank0
  2130  0458  0821               	movf	?___fltol+1,w
  2131  0459  00B2               	movwf	itoa@val+1
  2132  045A  0820               	movf	?___fltol,w
  2133  045B  00B1               	movwf	itoa@val
  2134  045C  300A               	movlw	10
  2135  045D  00B3               	movwf	itoa@base
  2136  045E  3000               	movlw	0
  2137  045F  00B4               	movwf	itoa@base+1
  2138  0460  3040               	movlw	(low (screen_selector@value| 0))& (0+255)
  2139  0461  158A  2569  118A   	fcall	_itoa
  2140  0464                     l2341:
  2141                           
  2142                           ;main.c: 279:         strcat(value," mv");
  2143  0464  3053               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2144  0465  1283               	bcf	3,5	;RP0=0, select bank0
  2145  0466  1303               	bcf	3,6	;RP1=0, select bank0
  2146  0467  00A0               	movwf	strcat@from
  2147  0468  3080               	movlw	128
  2148  0469  00A1               	movwf	strcat@from+1
  2149  046A  3040               	movlw	(low (screen_selector@value| 0))& (0+255)
  2150  046B  158A  25E2  118A   	fcall	_strcat
  2151  046E                     l2343:
  2152                           
  2153                           ;main.c: 280:         LCD_Print(value);
  2154  046E  3040               	movlw	(low (screen_selector@value| 0))& (0+255)
  2155  046F  1283               	bcf	3,5	;RP0=0, select bank0
  2156  0470  1303               	bcf	3,6	;RP1=0, select bank0
  2157  0471  00A3               	movwf	LCD_Print@LCD_Str
  2158  0472  3000               	movlw	0
  2159  0473  00A4               	movwf	LCD_Print@LCD_Str+1
  2160  0474  158A  26BF  118A   	fcall	_LCD_Print
  2161                           
  2162                           ;main.c: 281:     }
  2163  0477  2CB3               	goto	l269
  2164  0478                     l2345:
  2165  0478  3032               	movlw	50
  2166  0479  063F               	xorwf	screen_selector@c,w
  2167  047A  1D03               	btfss	3,2
  2168  047B  2C7D               	goto	u2231
  2169  047C  2C7E               	goto	u2230
  2170  047D                     u2231:
  2171  047D  2C99               	goto	l2353
  2172  047E                     u2230:
  2173  047E                     l2347:
  2174                           
  2175                           ;main.c: 283:     {;main.c: 284:          LCD_Print("Saliendo");
  2176  047E  303D               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2177  047F  00A3               	movwf	LCD_Print@LCD_Str
  2178  0480  3080               	movlw	128
  2179  0481  00A4               	movwf	LCD_Print@LCD_Str+1
  2180  0482  158A  26BF  118A   	fcall	_LCD_Print
  2181  0485                     l2349:
  2182                           
  2183                           ;main.c: 285:         _delay((unsigned long)((50)*(32000000/4000.0)));
  2184  0485  3003               	movlw	3
  2185  0486  1283               	bcf	3,5	;RP0=0, select bank0
  2186  0487  1303               	bcf	3,6	;RP1=0, select bank0
  2187  0488  00BA               	movwf	??_screen_selector+2
  2188  0489  3008               	movlw	8
  2189  048A  00B9               	movwf	??_screen_selector+1
  2190  048B  3076               	movlw	118
  2191  048C  00B8               	movwf	??_screen_selector
  2192  048D                     u2387:
  2193  048D  0BB8               	decfsz	??_screen_selector,f
  2194  048E  2C8D               	goto	u2387
  2195  048F  0BB9               	decfsz	??_screen_selector+1,f
  2196  0490  2C8D               	goto	u2387
  2197  0491  0BBA               	decfsz	??_screen_selector+2,f
  2198  0492  2C8D               	goto	u2387
  2199  0493  2C94               	nop2
  2200  0494                     l2351:
  2201                           
  2202                           ;main.c: 286:         LCD_Cmd(0x01);
  2203  0494  3001               	movlw	1
  2204  0495  158A  25B4  118A   	fcall	_LCD_Cmd
  2205                           
  2206                           ;main.c: 287:     }
  2207  0498  2CB3               	goto	l269
  2208  0499                     l2353:
  2209                           
  2210                           ;main.c: 290:         LCD_Print("Opcion Invalida");
  2211  0499  3013               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2212  049A  00A3               	movwf	LCD_Print@LCD_Str
  2213  049B  3080               	movlw	128
  2214  049C  00A4               	movwf	LCD_Print@LCD_Str+1
  2215  049D  158A  26BF  118A   	fcall	_LCD_Print
  2216  04A0                     l2355:
  2217                           
  2218                           ;main.c: 291:         _delay((unsigned long)((50)*(32000000/4000.0)));
  2219  04A0  3003               	movlw	3
  2220  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  2221  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  2222  04A3  00BA               	movwf	??_screen_selector+2
  2223  04A4  3008               	movlw	8
  2224  04A5  00B9               	movwf	??_screen_selector+1
  2225  04A6  3076               	movlw	118
  2226  04A7  00B8               	movwf	??_screen_selector
  2227  04A8                     u2397:
  2228  04A8  0BB8               	decfsz	??_screen_selector,f
  2229  04A9  2CA8               	goto	u2397
  2230  04AA  0BB9               	decfsz	??_screen_selector+1,f
  2231  04AB  2CA8               	goto	u2397
  2232  04AC  0BBA               	decfsz	??_screen_selector+2,f
  2233  04AD  2CA8               	goto	u2397
  2234  04AE  2CAF               	nop2
  2235  04AF                     l2357:
  2236                           
  2237                           ;main.c: 293:         LCD_Cmd(0x01);
  2238  04AF  3001               	movlw	1
  2239  04B0  158A  25B4  118A   	fcall	_LCD_Cmd
  2240  04B3                     l269:
  2241  04B3  0008               	return
  2242  04B4                     __end_of_screen_selector:
  2243                           
  2244                           	psect	text4
  2245  02F5                     __ptext4:	
  2246 ;; *************** function _key_writing_value *****************
  2247 ;; Defined at:
  2248 ;;		line 237 in file "main.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;		None
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;  c               1   17[BANK0 ] unsigned char 
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  1    wreg      void 
  2255 ;; Registers used:
  2256 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMMON   BANK0   BANK1
  2262 ;;      Params:         0       0       0
  2263 ;;      Locals:         0       1       0
  2264 ;;      Temps:          0       3       0
  2265 ;;      Totals:         0       4       0
  2266 ;;Total ram usage:        4 bytes
  2267 ;; Hardware stack levels used: 1
  2268 ;; Hardware stack levels required when called: 3
  2269 ;; This function calls:
  2270 ;;		_LCD_Cmd
  2271 ;;		_LCD_Goto
  2272 ;;		_LCD_Print
  2273 ;;		_LCD_PutC
  2274 ;;		_atoi
  2275 ;;		_keypad_readkey
  2276 ;; This function is called by:
  2277 ;;		_screen_selector
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           
  2282                           ;psect for function _key_writing_value
  2283  02F5                     _key_writing_value:
  2284  02F5                     l2147:	
  2285                           ;incstack = 0
  2286                           ; Regs used in _key_writing_value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2287                           
  2288                           
  2289                           ;main.c: 239:    char c;;main.c: 240:    LCD_Cmd(0x01);
  2290  02F5  3001               	movlw	1
  2291  02F6  158A  25B4  118A   	fcall	_LCD_Cmd
  2292  02F9                     l2149:
  2293                           
  2294                           ;main.c: 241:    LCD_Goto(1,1);
  2295  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  2296  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  2297  02FB  01A6               	clrf	LCD_Goto@row
  2298  02FC  0AA6               	incf	LCD_Goto@row,f
  2299  02FD  3001               	movlw	1
  2300  02FE  118A  206E  118A   	fcall	_LCD_Goto
  2301  0301                     l2151:
  2302                           
  2303                           ;main.c: 242:    LCD_Print("Escribe valor");
  2304  0301  3023               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2305  0302  1283               	bcf	3,5	;RP0=0, select bank0
  2306  0303  1303               	bcf	3,6	;RP1=0, select bank0
  2307  0304  00A3               	movwf	LCD_Print@LCD_Str
  2308  0305  3080               	movlw	128
  2309  0306  00A4               	movwf	LCD_Print@LCD_Str+1
  2310  0307  158A  26BF  118A   	fcall	_LCD_Print
  2311  030A                     l2153:
  2312                           
  2313                           ;main.c: 243:    c = keypad_readkey();
  2314  030A  118A  262B  118A   	fcall	_keypad_readkey
  2315  030D  1283               	bcf	3,5	;RP0=0, select bank0
  2316  030E  1303               	bcf	3,6	;RP1=0, select bank0
  2317  030F  00AE               	movwf	??_key_writing_value
  2318  0310  082E               	movf	??_key_writing_value,w
  2319  0311  00B1               	movwf	key_writing_value@c
  2320  0312                     l2155:
  2321                           
  2322                           ;main.c: 244:    va = atoi(c);
  2323  0312  0831               	movf	key_writing_value@c,w
  2324  0313  118A  226C  118A   	fcall	_atoi
  2325  0316  1283               	bcf	3,5	;RP0=0, select bank0
  2326  0317  1303               	bcf	3,6	;RP1=0, select bank0
  2327  0318  0827               	movf	?_atoi+1,w
  2328  0319  00E7               	movwf	_va+1
  2329  031A  0826               	movf	?_atoi,w
  2330  031B  00E6               	movwf	_va
  2331  031C                     l2157:
  2332                           
  2333                           ;main.c: 245:    LCD_Goto(1,2);
  2334  031C  3002               	movlw	2
  2335  031D  00AE               	movwf	??_key_writing_value
  2336  031E  082E               	movf	??_key_writing_value,w
  2337  031F  00A6               	movwf	LCD_Goto@row
  2338  0320  3001               	movlw	1
  2339  0321  118A  206E  118A   	fcall	_LCD_Goto
  2340  0324                     l2159:
  2341                           
  2342                           ;main.c: 246:    LCD_PutC(c);
  2343  0324  1283               	bcf	3,5	;RP0=0, select bank0
  2344  0325  1303               	bcf	3,6	;RP1=0, select bank0
  2345  0326  0831               	movf	key_writing_value@c,w
  2346  0327  158A  2512  118A   	fcall	_LCD_PutC
  2347  032A                     l2161:
  2348                           
  2349                           ;main.c: 247:    _delay((unsigned long)((50)*(32000000/4000.0)));
  2350  032A  3003               	movlw	3
  2351  032B  1283               	bcf	3,5	;RP0=0, select bank0
  2352  032C  1303               	bcf	3,6	;RP1=0, select bank0
  2353  032D  00B0               	movwf	??_key_writing_value+2
  2354  032E  3008               	movlw	8
  2355  032F  00AF               	movwf	??_key_writing_value+1
  2356  0330  3076               	movlw	118
  2357  0331  00AE               	movwf	??_key_writing_value
  2358  0332                     u2407:
  2359  0332  0BAE               	decfsz	??_key_writing_value,f
  2360  0333  2B32               	goto	u2407
  2361  0334  0BAF               	decfsz	??_key_writing_value+1,f
  2362  0335  2B32               	goto	u2407
  2363  0336  0BB0               	decfsz	??_key_writing_value+2,f
  2364  0337  2B32               	goto	u2407
  2365  0338  2B39               	nop2
  2366  0339                     l2163:
  2367                           
  2368                           ;main.c: 248:    LCD_Cmd(0x01);
  2369  0339  3001               	movlw	1
  2370  033A  158A  25B4  118A   	fcall	_LCD_Cmd
  2371  033D                     l2165:
  2372                           
  2373                           ;main.c: 249:    LCD_Goto(1,1);
  2374  033D  1283               	bcf	3,5	;RP0=0, select bank0
  2375  033E  1303               	bcf	3,6	;RP1=0, select bank0
  2376  033F  01A6               	clrf	LCD_Goto@row
  2377  0340  0AA6               	incf	LCD_Goto@row,f
  2378  0341  3001               	movlw	1
  2379  0342  118A  206E  118A   	fcall	_LCD_Goto
  2380  0345                     l2167:
  2381                           
  2382                           ;main.c: 250:    LCD_Print("Escribe Direccion");
  2383  0345  3001               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2384  0346  1283               	bcf	3,5	;RP0=0, select bank0
  2385  0347  1303               	bcf	3,6	;RP1=0, select bank0
  2386  0348  00A3               	movwf	LCD_Print@LCD_Str
  2387  0349  3080               	movlw	128
  2388  034A  00A4               	movwf	LCD_Print@LCD_Str+1
  2389  034B  158A  26BF  118A   	fcall	_LCD_Print
  2390  034E                     l2169:
  2391                           
  2392                           ;main.c: 251:    c = keypad_readkey();
  2393  034E  118A  262B  118A   	fcall	_keypad_readkey
  2394  0351  1283               	bcf	3,5	;RP0=0, select bank0
  2395  0352  1303               	bcf	3,6	;RP1=0, select bank0
  2396  0353  00AE               	movwf	??_key_writing_value
  2397  0354  082E               	movf	??_key_writing_value,w
  2398  0355  00B1               	movwf	key_writing_value@c
  2399  0356                     l2171:
  2400                           
  2401                           ;main.c: 252:    vb = atoi(c);
  2402  0356  0831               	movf	key_writing_value@c,w
  2403  0357  118A  226C  118A   	fcall	_atoi
  2404  035A  1283               	bcf	3,5	;RP0=0, select bank0
  2405  035B  1303               	bcf	3,6	;RP1=0, select bank0
  2406  035C  0827               	movf	?_atoi+1,w
  2407  035D  00E5               	movwf	_vb+1
  2408  035E  0826               	movf	?_atoi,w
  2409  035F  00E4               	movwf	_vb
  2410  0360                     l2173:
  2411                           
  2412                           ;main.c: 253:    LCD_Goto(1,2);
  2413  0360  3002               	movlw	2
  2414  0361  00AE               	movwf	??_key_writing_value
  2415  0362  082E               	movf	??_key_writing_value,w
  2416  0363  00A6               	movwf	LCD_Goto@row
  2417  0364  3001               	movlw	1
  2418  0365  118A  206E  118A   	fcall	_LCD_Goto
  2419  0368                     l2175:
  2420                           
  2421                           ;main.c: 254:    LCD_PutC(c);
  2422  0368  1283               	bcf	3,5	;RP0=0, select bank0
  2423  0369  1303               	bcf	3,6	;RP1=0, select bank0
  2424  036A  0831               	movf	key_writing_value@c,w
  2425  036B  158A  2512  118A   	fcall	_LCD_PutC
  2426                           
  2427                           ;main.c: 255:    _delay((unsigned long)((50)*(32000000/4000.0)));
  2428  036E  3003               	movlw	3
  2429  036F  1283               	bcf	3,5	;RP0=0, select bank0
  2430  0370  1303               	bcf	3,6	;RP1=0, select bank0
  2431  0371  00B0               	movwf	??_key_writing_value+2
  2432  0372  3008               	movlw	8
  2433  0373  00AF               	movwf	??_key_writing_value+1
  2434  0374  3076               	movlw	118
  2435  0375  00AE               	movwf	??_key_writing_value
  2436  0376                     u2417:
  2437  0376  0BAE               	decfsz	??_key_writing_value,f
  2438  0377  2B76               	goto	u2417
  2439  0378  0BAF               	decfsz	??_key_writing_value+1,f
  2440  0379  2B76               	goto	u2417
  2441  037A  0BB0               	decfsz	??_key_writing_value+2,f
  2442  037B  2B76               	goto	u2417
  2443  037C  2B7D               	nop2
  2444  037D                     l2177:
  2445                           
  2446                           ;main.c: 256:    LCD_Cmd(0x01);
  2447  037D  3001               	movlw	1
  2448  037E  158A  25B4  118A   	fcall	_LCD_Cmd
  2449  0381                     l260:
  2450  0381  0008               	return
  2451  0382                     __end_of_key_writing_value:
  2452                           
  2453                           	psect	text5
  2454  026C                     __ptext5:	
  2455 ;; *************** function _atoi *****************
  2456 ;; Defined at:
  2457 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\atoi.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;  s               1    wreg     PTR const unsigned char 
  2460 ;;		 -> ROM(4096), 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  s               1   13[BANK0 ] PTR const unsigned char 
  2463 ;;		 -> ROM(4096), 
  2464 ;;  a               2   11[BANK0 ] int 
  2465 ;;  sign            1   10[BANK0 ] unsigned char 
  2466 ;; Return value:  Size  Location     Type
  2467 ;;                  2    6[BANK0 ] int 
  2468 ;; Registers used:
  2469 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMMON   BANK0   BANK1
  2475 ;;      Params:         0       2       0
  2476 ;;      Locals:         0       4       0
  2477 ;;      Temps:          0       2       0
  2478 ;;      Totals:         0       8       0
  2479 ;;Total ram usage:        8 bytes
  2480 ;; Hardware stack levels used: 1
  2481 ;; Hardware stack levels required when called: 1
  2482 ;; This function calls:
  2483 ;;		___wmul
  2484 ;;		_isdigit
  2485 ;; This function is called by:
  2486 ;;		_key_writing_value
  2487 ;;		_selector_type
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           
  2492                           ;psect for function _atoi
  2493  026C                     _atoi:
  2494                           
  2495                           ;incstack = 0
  2496                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2497                           ;atoi@s stored from wreg
  2498  026C  1283               	bcf	3,5	;RP0=0, select bank0
  2499  026D  1303               	bcf	3,6	;RP1=0, select bank0
  2500  026E  00AD               	movwf	atoi@s
  2501  026F                     l2057:
  2502  026F  2A74               	goto	l2061
  2503  0270                     l2059:
  2504  0270  3001               	movlw	1
  2505  0271  00A8               	movwf	??_atoi
  2506  0272  0828               	movf	??_atoi,w
  2507  0273  07AD               	addwf	atoi@s,f
  2508  0274                     l2061:
  2509  0274  082D               	movf	atoi@s,w
  2510  0275  0084               	movwf	4
  2511  0276  118A  200C  118A   	fcall	stringdir
  2512  0279  3A20               	xorlw	32
  2513  027A  1903               	skipnz
  2514  027B  2A7D               	goto	u1831
  2515  027C  2A7E               	goto	u1830
  2516  027D                     u1831:
  2517  027D  2A70               	goto	l2059
  2518  027E                     u1830:
  2519  027E                     l2063:
  2520  027E  082D               	movf	atoi@s,w
  2521  027F  0084               	movwf	4
  2522  0280  118A  200C  118A   	fcall	stringdir
  2523  0283  3A09               	xorlw	9
  2524  0284  1903               	skipnz
  2525  0285  2A87               	goto	u1841
  2526  0286  2A88               	goto	u1840
  2527  0287                     u1841:
  2528  0287  2A70               	goto	l2059
  2529  0288                     u1840:
  2530  0288                     l2065:
  2531  0288  01AB               	clrf	atoi@a
  2532  0289  01AC               	clrf	atoi@a+1
  2533  028A  01AA               	clrf	atoi@sign
  2534  028B                     l2067:
  2535  028B  082D               	movf	atoi@s,w
  2536  028C  0084               	movwf	4
  2537  028D  118A  200C  118A   	fcall	stringdir
  2538  0290  3A2D               	xorlw	45
  2539  0291  1D03               	skipz
  2540  0292  2A94               	goto	u1851
  2541  0293  2A95               	goto	u1850
  2542  0294                     u1851:
  2543  0294  2A9E               	goto	l2071
  2544  0295                     u1850:
  2545  0295                     l2069:
  2546  0295  3001               	movlw	1
  2547  0296  00A8               	movwf	??_atoi
  2548  0297  0828               	movf	??_atoi,w
  2549  0298  07AA               	addwf	atoi@sign,f
  2550  0299  3001               	movlw	1
  2551  029A  00A8               	movwf	??_atoi
  2552  029B  0828               	movf	??_atoi,w
  2553  029C  07AD               	addwf	atoi@s,f
  2554  029D  2AD1               	goto	l2079
  2555  029E                     l2071:
  2556  029E  082D               	movf	atoi@s,w
  2557  029F  0084               	movwf	4
  2558  02A0  118A  200C  118A   	fcall	stringdir
  2559  02A3  3A2B               	xorlw	43
  2560  02A4  1D03               	skipz
  2561  02A5  2AA7               	goto	u1861
  2562  02A6  2AA8               	goto	u1860
  2563  02A7                     u1861:
  2564  02A7  2AD1               	goto	l2079
  2565  02A8                     u1860:
  2566  02A8                     l2073:
  2567  02A8  3001               	movlw	1
  2568  02A9  00A8               	movwf	??_atoi
  2569  02AA  0828               	movf	??_atoi,w
  2570  02AB  07AD               	addwf	atoi@s,f
  2571  02AC  2AD1               	goto	l2079
  2572  02AD                     l2075:
  2573  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  2574  02AE  1303               	bcf	3,6	;RP1=0, select bank0
  2575  02AF  082C               	movf	atoi@a+1,w
  2576  02B0  00A1               	movwf	___wmul@multiplier+1
  2577  02B1  082B               	movf	atoi@a,w
  2578  02B2  00A0               	movwf	___wmul@multiplier
  2579  02B3  300A               	movlw	10
  2580  02B4  00A2               	movwf	___wmul@multiplicand
  2581  02B5  3000               	movlw	0
  2582  02B6  00A3               	movwf	___wmul@multiplicand+1
  2583  02B7  158A  258D  118A   	fcall	___wmul
  2584  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  2585  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  2586  02BC  082D               	movf	atoi@s,w
  2587  02BD  0084               	movwf	4
  2588  02BE  118A  200C  118A   	fcall	stringdir
  2589  02C1  0720               	addwf	?___wmul,w
  2590  02C2  00A8               	movwf	??_atoi
  2591  02C3  3000               	movlw	0
  2592  02C4  1803               	skipnc
  2593  02C5  3001               	movlw	1
  2594  02C6  0721               	addwf	?___wmul+1,w
  2595  02C7  00A9               	movwf	??_atoi+1
  2596  02C8  0828               	movf	??_atoi,w
  2597  02C9  3ED0               	addlw	208
  2598  02CA  00AB               	movwf	atoi@a
  2599  02CB  0829               	movf	??_atoi+1,w
  2600  02CC  1803               	skipnc
  2601  02CD  3E01               	addlw	1
  2602  02CE  3EFF               	addlw	255
  2603  02CF  00AC               	movwf	atoi@a+1
  2604  02D0  2AA8               	goto	l2073
  2605  02D1                     l2079:
  2606  02D1  082D               	movf	atoi@s,w
  2607  02D2  0084               	movwf	4
  2608  02D3  118A  200C  118A   	fcall	stringdir
  2609  02D6  158A  24E9  118A   	fcall	_isdigit
  2610  02D9  1803               	btfsc	3,0
  2611  02DA  2ADC               	goto	u1871
  2612  02DB  2ADD               	goto	u1870
  2613  02DC                     u1871:
  2614  02DC  2AAD               	goto	l2075
  2615  02DD                     u1870:
  2616  02DD                     l2081:
  2617  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  2618  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  2619  02DF  082A               	movf	atoi@sign,w
  2620  02E0  1903               	btfsc	3,2
  2621  02E1  2AE3               	goto	u1881
  2622  02E2  2AE4               	goto	u1880
  2623  02E3                     u1881:
  2624  02E3  2AF0               	goto	l2087
  2625  02E4                     u1880:
  2626  02E4                     l2083:
  2627  02E4  092B               	comf	atoi@a,w
  2628  02E5  00A8               	movwf	??_atoi
  2629  02E6  092C               	comf	atoi@a+1,w
  2630  02E7  00A9               	movwf	??_atoi+1
  2631  02E8  0AA8               	incf	??_atoi,f
  2632  02E9  1903               	skipnz
  2633  02EA  0AA9               	incf	??_atoi+1,f
  2634  02EB  0828               	movf	??_atoi,w
  2635  02EC  00A6               	movwf	?_atoi
  2636  02ED  0829               	movf	??_atoi+1,w
  2637  02EE  00A7               	movwf	?_atoi+1
  2638  02EF  2AF4               	goto	l877
  2639  02F0                     l2087:
  2640  02F0  082C               	movf	atoi@a+1,w
  2641  02F1  00A7               	movwf	?_atoi+1
  2642  02F2  082B               	movf	atoi@a,w
  2643  02F3  00A6               	movwf	?_atoi
  2644  02F4                     l877:
  2645  02F4  0008               	return
  2646  02F5                     __end_of_atoi:
  2647                           
  2648                           	psect	text6
  2649  0CE9                     __ptext6:	
  2650 ;; *************** function _isdigit *****************
  2651 ;; Defined at:
  2652 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isdigit.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;  c               1    wreg     unsigned char 
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;  c               1    1[BANK0 ] unsigned char 
  2657 ;; Return value:  Size  Location     Type
  2658 ;;		None               void
  2659 ;; Registers used:
  2660 ;;		wreg, status,2, status,0
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMMON   BANK0   BANK1
  2666 ;;      Params:         0       0       0
  2667 ;;      Locals:         0       2       0
  2668 ;;      Temps:          0       0       0
  2669 ;;      Totals:         0       2       0
  2670 ;;Total ram usage:        2 bytes
  2671 ;; Hardware stack levels used: 1
  2672 ;; This function calls:
  2673 ;;		Nothing
  2674 ;; This function is called by:
  2675 ;;		_atoi
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           
  2680                           ;psect for function _isdigit
  2681  0CE9                     _isdigit:
  2682                           
  2683                           ;incstack = 0
  2684                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2685                           ;isdigit@c stored from wreg
  2686  0CE9  1283               	bcf	3,5	;RP0=0, select bank0
  2687  0CEA  1303               	bcf	3,6	;RP1=0, select bank0
  2688  0CEB  00A1               	movwf	isdigit@c
  2689  0CEC                     l1895:
  2690  0CEC  01A0               	clrf	_isdigit$894
  2691  0CED                     l1897:
  2692  0CED  303A               	movlw	58
  2693  0CEE  0221               	subwf	isdigit@c,w
  2694  0CEF  1803               	skipnc
  2695  0CF0  2CF2               	goto	u1461
  2696  0CF1  2CF3               	goto	u1460
  2697  0CF2                     u1461:
  2698  0CF2  2CFB               	goto	l1903
  2699  0CF3                     u1460:
  2700  0CF3                     l1899:
  2701  0CF3  3030               	movlw	48
  2702  0CF4  0221               	subwf	isdigit@c,w
  2703  0CF5  1C03               	skipc
  2704  0CF6  2CF8               	goto	u1471
  2705  0CF7  2CF9               	goto	u1470
  2706  0CF8                     u1471:
  2707  0CF8  2CFB               	goto	l1903
  2708  0CF9                     u1470:
  2709  0CF9                     l1901:
  2710  0CF9  01A0               	clrf	_isdigit$894
  2711  0CFA  0AA0               	incf	_isdigit$894,f
  2712  0CFB                     l1903:
  2713  0CFB  0C20               	rrf	_isdigit$894,w
  2714  0CFC                     l882:
  2715  0CFC  0008               	return
  2716  0CFD                     __end_of_isdigit:
  2717                           
  2718                           	psect	text7
  2719  0D8D                     __ptext7:	
  2720 ;; *************** function ___wmul *****************
  2721 ;; Defined at:
  2722 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2725 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;  product         2    4[BANK0 ] unsigned int 
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  2    0[BANK0 ] unsigned int 
  2730 ;; Registers used:
  2731 ;;		wreg, status,2, status,0
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMMON   BANK0   BANK1
  2737 ;;      Params:         0       4       0
  2738 ;;      Locals:         0       2       0
  2739 ;;      Temps:          0       0       0
  2740 ;;      Totals:         0       6       0
  2741 ;;Total ram usage:        6 bytes
  2742 ;; Hardware stack levels used: 1
  2743 ;; This function calls:
  2744 ;;		Nothing
  2745 ;; This function is called by:
  2746 ;;		_atoi
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           
  2751                           ;psect for function ___wmul
  2752  0D8D                     ___wmul:
  2753  0D8D                     l1833:	
  2754                           ;incstack = 0
  2755                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2756                           
  2757  0D8D  1283               	bcf	3,5	;RP0=0, select bank0
  2758  0D8E  1303               	bcf	3,6	;RP1=0, select bank0
  2759  0D8F  01A4               	clrf	___wmul@product
  2760  0D90  01A5               	clrf	___wmul@product+1
  2761  0D91                     l1835:
  2762  0D91  1C20               	btfss	___wmul@multiplier,0
  2763  0D92  2D94               	goto	u1291
  2764  0D93  2D95               	goto	u1290
  2765  0D94                     u1291:
  2766  0D94  2D9B               	goto	l414
  2767  0D95                     u1290:
  2768  0D95                     l1837:
  2769  0D95  0822               	movf	___wmul@multiplicand,w
  2770  0D96  07A4               	addwf	___wmul@product,f
  2771  0D97  1803               	skipnc
  2772  0D98  0AA5               	incf	___wmul@product+1,f
  2773  0D99  0823               	movf	___wmul@multiplicand+1,w
  2774  0D9A  07A5               	addwf	___wmul@product+1,f
  2775  0D9B                     l414:
  2776  0D9B  3001               	movlw	1
  2777  0D9C                     u1305:
  2778  0D9C  1003               	clrc
  2779  0D9D  0DA2               	rlf	___wmul@multiplicand,f
  2780  0D9E  0DA3               	rlf	___wmul@multiplicand+1,f
  2781  0D9F  3EFF               	addlw	-1
  2782  0DA0  1D03               	skipz
  2783  0DA1  2D9C               	goto	u1305
  2784  0DA2                     l1839:
  2785  0DA2  3001               	movlw	1
  2786  0DA3                     u1315:
  2787  0DA3  1003               	clrc
  2788  0DA4  0CA1               	rrf	___wmul@multiplier+1,f
  2789  0DA5  0CA0               	rrf	___wmul@multiplier,f
  2790  0DA6  3EFF               	addlw	-1
  2791  0DA7  1D03               	skipz
  2792  0DA8  2DA3               	goto	u1315
  2793  0DA9                     l1841:
  2794  0DA9  0820               	movf	___wmul@multiplier,w
  2795  0DAA  0421               	iorwf	___wmul@multiplier+1,w
  2796  0DAB  1D03               	btfss	3,2
  2797  0DAC  2DAE               	goto	u1321
  2798  0DAD  2DAF               	goto	u1320
  2799  0DAE                     u1321:
  2800  0DAE  2D91               	goto	l1835
  2801  0DAF                     u1320:
  2802  0DAF                     l1843:
  2803  0DAF  0825               	movf	___wmul@product+1,w
  2804  0DB0  00A1               	movwf	?___wmul+1
  2805  0DB1  0824               	movf	___wmul@product,w
  2806  0DB2  00A0               	movwf	?___wmul
  2807  0DB3                     l416:
  2808  0DB3  0008               	return
  2809  0DB4                     __end_of___wmul:
  2810                           
  2811                           	psect	text8
  2812  0D12                     __ptext8:	
  2813 ;; *************** function _LCD_PutC *****************
  2814 ;; Defined at:
  2815 ;;		line 106 in file "./lcd.h"
  2816 ;; Parameters:    Size  Location     Type
  2817 ;;  LCD_Char        1    wreg     unsigned char 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  LCD_Char        1    4[BANK0 ] unsigned char 
  2820 ;; Return value:  Size  Location     Type
  2821 ;;                  1    wreg      void 
  2822 ;; Registers used:
  2823 ;;		wreg, status,2, status,0, pclath, cstack
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/0
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMMON   BANK0   BANK1
  2829 ;;      Params:         0       0       0
  2830 ;;      Locals:         0       1       0
  2831 ;;      Temps:          0       1       0
  2832 ;;      Totals:         0       2       0
  2833 ;;Total ram usage:        2 bytes
  2834 ;; Hardware stack levels used: 1
  2835 ;; Hardware stack levels required when called: 1
  2836 ;; This function calls:
  2837 ;;		_LCD_Write_Nibble
  2838 ;; This function is called by:
  2839 ;;		_key_writing_value
  2840 ;;		_main
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           
  2844                           
  2845                           ;psect for function _LCD_PutC
  2846  0D12                     _LCD_PutC:
  2847                           
  2848                           ;incstack = 0
  2849                           ; Regs used in _LCD_PutC: [wreg+status,2+status,0+pclath+cstack]
  2850                           ;LCD_PutC@LCD_Char stored from wreg
  2851  0D12  1283               	bcf	3,5	;RP0=0, select bank0
  2852  0D13  1303               	bcf	3,6	;RP1=0, select bank0
  2853  0D14  00A4               	movwf	LCD_PutC@LCD_Char
  2854  0D15                     l1925:
  2855                           
  2856                           ;./lcd.h: 106: void LCD_PutC(char LCD_Char);./lcd.h: 107: {;./lcd.h: 108:   RS = 1;
  2857  0D15  147C               	bsf	_RS/(0+8),_RS& (0+7)
  2858  0D16                     l1927:
  2859                           
  2860                           ;./lcd.h: 109:   LCD_Write_Nibble(LCD_Char >> 4);
  2861  0D16  0824               	movf	LCD_PutC@LCD_Char,w
  2862  0D17  00A3               	movwf	??_LCD_PutC
  2863  0D18  3004               	movlw	4
  2864  0D19                     u1485:
  2865  0D19  1003               	clrc
  2866  0D1A  0CA3               	rrf	??_LCD_PutC,f
  2867  0D1B  3EFF               	addlw	-1
  2868  0D1C  1D03               	skipz
  2869  0D1D  2D19               	goto	u1485
  2870  0D1E  0823               	movf	??_LCD_PutC,w
  2871  0D1F  118A  209E  158A   	fcall	_LCD_Write_Nibble
  2872                           
  2873                           ;./lcd.h: 110:   LCD_Write_Nibble(LCD_Char );
  2874  0D22  1283               	bcf	3,5	;RP0=0, select bank0
  2875  0D23  1303               	bcf	3,6	;RP1=0, select bank0
  2876  0D24  0824               	movf	LCD_PutC@LCD_Char,w
  2877  0D25  118A  209E  158A   	fcall	_LCD_Write_Nibble
  2878  0D28                     l97:
  2879  0D28  0008               	return
  2880  0D29                     __end_of_LCD_PutC:
  2881                           
  2882                           	psect	text9
  2883  0D69                     __ptext9:	
  2884 ;; *************** function _itoa *****************
  2885 ;; Defined at:
  2886 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\itoa.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;  buf             1    wreg     PTR unsigned char 
  2889 ;;		 -> screen_selector@value(1), ventilator_screen@vel_value(1), ventilator_screen@vel_number(1), ventilator_screen@vol
      +_value(1), 
  2890 ;;  val             2   17[BANK0 ] int 
  2891 ;;  base            2   19[BANK0 ] int 
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;  buf             1   22[BANK0 ] PTR unsigned char 
  2894 ;;		 -> screen_selector@value(1), ventilator_screen@vel_value(1), ventilator_screen@vel_number(1), ventilator_screen@vol
      +_value(1), 
  2895 ;;  cp              1    0        PTR unsigned char 
  2896 ;;		 -> screen_selector@value(1), ventilator_screen@vel_value(1), ventilator_screen@vel_number(1), ventilator_screen@vol
      +_value(1), 
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  1    wreg      PTR unsigned char 
  2899 ;; Registers used:
  2900 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMMON   BANK0   BANK1
  2906 ;;      Params:         0       4       0
  2907 ;;      Locals:         0       1       0
  2908 ;;      Temps:          0       1       0
  2909 ;;      Totals:         0       6       0
  2910 ;;Total ram usage:        6 bytes
  2911 ;; Hardware stack levels used: 1
  2912 ;; Hardware stack levels required when called: 2
  2913 ;; This function calls:
  2914 ;;		_utoa
  2915 ;; This function is called by:
  2916 ;;		_ventilator_screen
  2917 ;;		_screen_selector
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920                           
  2921                           
  2922                           ;psect for function _itoa
  2923  0D69                     _itoa:
  2924                           
  2925                           ;incstack = 0
  2926                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2927                           ;itoa@buf stored from wreg
  2928  0D69  1283               	bcf	3,5	;RP0=0, select bank0
  2929  0D6A  1303               	bcf	3,6	;RP1=0, select bank0
  2930  0D6B  00B6               	movwf	itoa@buf
  2931  0D6C                     l2133:
  2932  0D6C                     l2135:
  2933  0D6C  1FB2               	btfss	itoa@val+1,7
  2934  0D6D  2D6F               	goto	u1941
  2935  0D6E  2D70               	goto	u1940
  2936  0D6F                     u1941:
  2937  0D6F  2D80               	goto	l2143
  2938  0D70                     u1940:
  2939  0D70                     l2137:
  2940  0D70  302D               	movlw	45
  2941  0D71  00B5               	movwf	??_itoa
  2942  0D72  0836               	movf	itoa@buf,w
  2943  0D73  0084               	movwf	4
  2944  0D74  0835               	movf	??_itoa,w
  2945  0D75  1383               	bcf	3,7	;select IRP bank0
  2946  0D76  0080               	movwf	0
  2947  0D77                     l2139:
  2948  0D77  3001               	movlw	1
  2949  0D78  00B5               	movwf	??_itoa
  2950  0D79  0835               	movf	??_itoa,w
  2951  0D7A  07B6               	addwf	itoa@buf,f
  2952  0D7B                     l2141:
  2953  0D7B  09B1               	comf	itoa@val,f
  2954  0D7C  09B2               	comf	itoa@val+1,f
  2955  0D7D  0AB1               	incf	itoa@val,f
  2956  0D7E  1903               	skipnz
  2957  0D7F  0AB2               	incf	itoa@val+1,f
  2958  0D80                     l2143:
  2959  0D80  0832               	movf	itoa@val+1,w
  2960  0D81  00A9               	movwf	utoa@val+1
  2961  0D82  0831               	movf	itoa@val,w
  2962  0D83  00A8               	movwf	utoa@val
  2963  0D84  0834               	movf	itoa@base+1,w
  2964  0D85  00AB               	movwf	utoa@base+1
  2965  0D86  0833               	movf	itoa@base,w
  2966  0D87  00AA               	movwf	utoa@base
  2967  0D88  0836               	movf	itoa@buf,w
  2968  0D89  118A  20FF  158A   	fcall	_utoa
  2969  0D8C                     l888:
  2970  0D8C  0008               	return
  2971  0D8D                     __end_of_itoa:
  2972                           
  2973                           	psect	text10
  2974  00FF                     __ptext10:	
  2975 ;; *************** function _utoa *****************
  2976 ;; Defined at:
  2977 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\itoa.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;  buf             1    wreg     PTR unsigned char 
  2980 ;;		 -> screen_selector@value(1), ventilator_screen@vel_value(1), ventilator_screen@vel_number(1), ventilator_screen@vol
      +_value(1), 
  2981 ;;  val             2    8[BANK0 ] unsigned int 
  2982 ;;  base            2   10[BANK0 ] int 
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;  buf             1   16[BANK0 ] PTR unsigned char 
  2985 ;;		 -> screen_selector@value(1), ventilator_screen@vel_value(1), ventilator_screen@vel_number(1), ventilator_screen@vol
      +_value(1), 
  2986 ;;  v               2   13[BANK0 ] unsigned int 
  2987 ;;  c               1   15[BANK0 ] unsigned char 
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  1    wreg      PTR unsigned char 
  2990 ;; Registers used:
  2991 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMMON   BANK0   BANK1
  2997 ;;      Params:         0       4       0
  2998 ;;      Locals:         0       4       0
  2999 ;;      Temps:          0       1       0
  3000 ;;      Totals:         0       9       0
  3001 ;;Total ram usage:        9 bytes
  3002 ;; Hardware stack levels used: 1
  3003 ;; Hardware stack levels required when called: 1
  3004 ;; This function calls:
  3005 ;;		___lwdiv
  3006 ;;		___lwmod
  3007 ;; This function is called by:
  3008 ;;		_itoa
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           
  3013                           ;psect for function _utoa
  3014  00FF                     _utoa:
  3015                           
  3016                           ;incstack = 0
  3017                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3018                           ;utoa@buf stored from wreg
  3019  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  3020  0100  1303               	bcf	3,6	;RP1=0, select bank0
  3021  0101  00B0               	movwf	utoa@buf
  3022  0102                     l2091:
  3023  0102  0829               	movf	utoa@val+1,w
  3024  0103  00AE               	movwf	utoa@v+1
  3025  0104  0828               	movf	utoa@val,w
  3026  0105  00AD               	movwf	utoa@v
  3027  0106                     l2093:
  3028  0106  082B               	movf	utoa@base+1,w
  3029  0107  00A1               	movwf	___lwdiv@divisor+1
  3030  0108  082A               	movf	utoa@base,w
  3031  0109  00A0               	movwf	___lwdiv@divisor
  3032  010A  082E               	movf	utoa@v+1,w
  3033  010B  00A3               	movwf	___lwdiv@dividend+1
  3034  010C  082D               	movf	utoa@v,w
  3035  010D  00A2               	movwf	___lwdiv@dividend
  3036  010E  158A  26FE  118A   	fcall	___lwdiv
  3037  0111  1283               	bcf	3,5	;RP0=0, select bank0
  3038  0112  1303               	bcf	3,6	;RP1=0, select bank0
  3039  0113  0821               	movf	?___lwdiv+1,w
  3040  0114  00AE               	movwf	utoa@v+1
  3041  0115  0820               	movf	?___lwdiv,w
  3042  0116  00AD               	movwf	utoa@v
  3043  0117                     l2095:
  3044  0117  3001               	movlw	1
  3045  0118  00AC               	movwf	??_utoa
  3046  0119  082C               	movf	??_utoa,w
  3047  011A  07B0               	addwf	utoa@buf,f
  3048  011B                     l2097:
  3049  011B  082D               	movf	utoa@v,w
  3050  011C  042E               	iorwf	utoa@v+1,w
  3051  011D  1D03               	btfss	3,2
  3052  011E  2920               	goto	u1891
  3053  011F  2921               	goto	u1890
  3054  0120                     u1891:
  3055  0120  2906               	goto	l2093
  3056  0121                     u1890:
  3057  0121                     l2099:
  3058  0121  0830               	movf	utoa@buf,w
  3059  0122  0084               	movwf	4
  3060  0123  1383               	bcf	3,7	;select IRP bank0
  3061  0124  0180               	clrf	0
  3062  0125                     l2101:
  3063  0125  3001               	movlw	1
  3064  0126  02B0               	subwf	utoa@buf,f
  3065  0127                     l2103:
  3066  0127  082B               	movf	utoa@base+1,w
  3067  0128  00A1               	movwf	___lwmod@divisor+1
  3068  0129  082A               	movf	utoa@base,w
  3069  012A  00A0               	movwf	___lwmod@divisor
  3070  012B  0829               	movf	utoa@val+1,w
  3071  012C  00A3               	movwf	___lwmod@dividend+1
  3072  012D  0828               	movf	utoa@val,w
  3073  012E  00A2               	movwf	___lwmod@dividend
  3074  012F  158A  2683  118A   	fcall	___lwmod
  3075  0132  1283               	bcf	3,5	;RP0=0, select bank0
  3076  0133  1303               	bcf	3,6	;RP1=0, select bank0
  3077  0134  0820               	movf	?___lwmod,w
  3078  0135  00AC               	movwf	??_utoa
  3079  0136  082C               	movf	??_utoa,w
  3080  0137  00AF               	movwf	utoa@c
  3081  0138                     l2105:
  3082  0138  082B               	movf	utoa@base+1,w
  3083  0139  00A1               	movwf	___lwdiv@divisor+1
  3084  013A  082A               	movf	utoa@base,w
  3085  013B  00A0               	movwf	___lwdiv@divisor
  3086  013C  0829               	movf	utoa@val+1,w
  3087  013D  00A3               	movwf	___lwdiv@dividend+1
  3088  013E  0828               	movf	utoa@val,w
  3089  013F  00A2               	movwf	___lwdiv@dividend
  3090  0140  158A  26FE  118A   	fcall	___lwdiv
  3091  0143  1283               	bcf	3,5	;RP0=0, select bank0
  3092  0144  1303               	bcf	3,6	;RP1=0, select bank0
  3093  0145  0821               	movf	?___lwdiv+1,w
  3094  0146  00A9               	movwf	utoa@val+1
  3095  0147  0820               	movf	?___lwdiv,w
  3096  0148  00A8               	movwf	utoa@val
  3097  0149                     l2107:
  3098  0149  300A               	movlw	10
  3099  014A  022F               	subwf	utoa@c,w
  3100  014B  1C03               	skipc
  3101  014C  294E               	goto	u1901
  3102  014D  294F               	goto	u1900
  3103  014E                     u1901:
  3104  014E  2953               	goto	l894
  3105  014F                     u1900:
  3106  014F                     l2109:
  3107  014F  3007               	movlw	7
  3108  0150  00AC               	movwf	??_utoa
  3109  0151  082C               	movf	??_utoa,w
  3110  0152  07AF               	addwf	utoa@c,f
  3111  0153                     l894:
  3112  0153  3030               	movlw	48
  3113  0154  00AC               	movwf	??_utoa
  3114  0155  082C               	movf	??_utoa,w
  3115  0156  07AF               	addwf	utoa@c,f
  3116  0157                     l2111:
  3117  0157  082F               	movf	utoa@c,w
  3118  0158  00AC               	movwf	??_utoa
  3119  0159  0830               	movf	utoa@buf,w
  3120  015A  0084               	movwf	4
  3121  015B  082C               	movf	??_utoa,w
  3122  015C  1383               	bcf	3,7	;select IRP bank0
  3123  015D  0080               	movwf	0
  3124  015E                     l2113:
  3125  015E  3001               	movlw	1
  3126  015F  02B0               	subwf	utoa@buf,f
  3127  0160                     l2115:
  3128  0160  0828               	movf	utoa@val,w
  3129  0161  0429               	iorwf	utoa@val+1,w
  3130  0162  1D03               	btfss	3,2
  3131  0163  2965               	goto	u1911
  3132  0164  2966               	goto	u1910
  3133  0165                     u1911:
  3134  0165  2927               	goto	l2103
  3135  0166                     u1910:
  3136  0166                     l2117:
  3137                           
  3138                           ;	Return value of _utoa is never used
  3139  0166  3001               	movlw	1
  3140  0167  00AC               	movwf	??_utoa
  3141  0168  082C               	movf	??_utoa,w
  3142  0169  07B0               	addwf	utoa@buf,f
  3143  016A                     l896:
  3144  016A  0008               	return
  3145  016B                     __end_of_utoa:
  3146                           
  3147                           	psect	text11
  3148  0E83                     __ptext11:	
  3149 ;; *************** function ___lwmod *****************
  3150 ;; Defined at:
  3151 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;  divisor         2    0[BANK0 ] unsigned int 
  3154 ;;  dividend        2    2[BANK0 ] unsigned int 
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  counter         1    5[BANK0 ] unsigned char 
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  2    0[BANK0 ] unsigned int 
  3159 ;; Registers used:
  3160 ;;		wreg, status,2, status,0
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMMON   BANK0   BANK1
  3166 ;;      Params:         0       4       0
  3167 ;;      Locals:         0       1       0
  3168 ;;      Temps:          0       1       0
  3169 ;;      Totals:         0       6       0
  3170 ;;Total ram usage:        6 bytes
  3171 ;; Hardware stack levels used: 1
  3172 ;; This function calls:
  3173 ;;		Nothing
  3174 ;; This function is called by:
  3175 ;;		_utoa
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           
  3180                           ;psect for function ___lwmod
  3181  0E83                     ___lwmod:
  3182  0E83                     l1873:	
  3183                           ;incstack = 0
  3184                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3185                           
  3186  0E83  1283               	bcf	3,5	;RP0=0, select bank0
  3187  0E84  1303               	bcf	3,6	;RP1=0, select bank0
  3188  0E85  0820               	movf	___lwmod@divisor,w
  3189  0E86  0421               	iorwf	___lwmod@divisor+1,w
  3190  0E87  1903               	btfsc	3,2
  3191  0E88  2E8A               	goto	u1401
  3192  0E89  2E8B               	goto	u1400
  3193  0E8A                     u1401:
  3194  0E8A  2EBA               	goto	l1891
  3195  0E8B                     u1400:
  3196  0E8B                     l1875:
  3197  0E8B  01A5               	clrf	___lwmod@counter
  3198  0E8C  0AA5               	incf	___lwmod@counter,f
  3199  0E8D  2E99               	goto	l1881
  3200  0E8E                     l1877:
  3201  0E8E  3001               	movlw	1
  3202  0E8F                     u1415:
  3203  0E8F  1003               	clrc
  3204  0E90  0DA0               	rlf	___lwmod@divisor,f
  3205  0E91  0DA1               	rlf	___lwmod@divisor+1,f
  3206  0E92  3EFF               	addlw	-1
  3207  0E93  1D03               	skipz
  3208  0E94  2E8F               	goto	u1415
  3209  0E95                     l1879:
  3210  0E95  3001               	movlw	1
  3211  0E96  00A4               	movwf	??___lwmod
  3212  0E97  0824               	movf	??___lwmod,w
  3213  0E98  07A5               	addwf	___lwmod@counter,f
  3214  0E99                     l1881:
  3215  0E99  1FA1               	btfss	___lwmod@divisor+1,7
  3216  0E9A  2E9C               	goto	u1421
  3217  0E9B  2E9D               	goto	u1420
  3218  0E9C                     u1421:
  3219  0E9C  2E8E               	goto	l1877
  3220  0E9D                     u1420:
  3221  0E9D                     l1883:
  3222  0E9D  0821               	movf	___lwmod@divisor+1,w
  3223  0E9E  0223               	subwf	___lwmod@dividend+1,w
  3224  0E9F  1D03               	skipz
  3225  0EA0  2EA3               	goto	u1435
  3226  0EA1  0820               	movf	___lwmod@divisor,w
  3227  0EA2  0222               	subwf	___lwmod@dividend,w
  3228  0EA3                     u1435:
  3229  0EA3  1C03               	skipc
  3230  0EA4  2EA6               	goto	u1431
  3231  0EA5  2EA7               	goto	u1430
  3232  0EA6                     u1431:
  3233  0EA6  2EAD               	goto	l1887
  3234  0EA7                     u1430:
  3235  0EA7                     l1885:
  3236  0EA7  0820               	movf	___lwmod@divisor,w
  3237  0EA8  02A2               	subwf	___lwmod@dividend,f
  3238  0EA9  0821               	movf	___lwmod@divisor+1,w
  3239  0EAA  1C03               	skipc
  3240  0EAB  03A3               	decf	___lwmod@dividend+1,f
  3241  0EAC  02A3               	subwf	___lwmod@dividend+1,f
  3242  0EAD                     l1887:
  3243  0EAD  3001               	movlw	1
  3244  0EAE                     u1445:
  3245  0EAE  1003               	clrc
  3246  0EAF  0CA1               	rrf	___lwmod@divisor+1,f
  3247  0EB0  0CA0               	rrf	___lwmod@divisor,f
  3248  0EB1  3EFF               	addlw	-1
  3249  0EB2  1D03               	skipz
  3250  0EB3  2EAE               	goto	u1445
  3251  0EB4                     l1889:
  3252  0EB4  3001               	movlw	1
  3253  0EB5  02A5               	subwf	___lwmod@counter,f
  3254  0EB6  1D03               	btfss	3,2
  3255  0EB7  2EB9               	goto	u1451
  3256  0EB8  2EBA               	goto	u1450
  3257  0EB9                     u1451:
  3258  0EB9  2E9D               	goto	l1883
  3259  0EBA                     u1450:
  3260  0EBA                     l1891:
  3261  0EBA  0823               	movf	___lwmod@dividend+1,w
  3262  0EBB  00A1               	movwf	?___lwmod+1
  3263  0EBC  0822               	movf	___lwmod@dividend,w
  3264  0EBD  00A0               	movwf	?___lwmod
  3265  0EBE                     l696:
  3266  0EBE  0008               	return
  3267  0EBF                     __end_of___lwmod:
  3268                           
  3269                           	psect	text12
  3270  0EFE                     __ptext12:	
  3271 ;; *************** function ___lwdiv *****************
  3272 ;; Defined at:
  3273 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  3274 ;; Parameters:    Size  Location     Type
  3275 ;;  divisor         2    0[BANK0 ] unsigned int 
  3276 ;;  dividend        2    2[BANK0 ] unsigned int 
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;  quotient        2    5[BANK0 ] unsigned int 
  3279 ;;  counter         1    7[BANK0 ] unsigned char 
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  2    0[BANK0 ] unsigned int 
  3282 ;; Registers used:
  3283 ;;		wreg, status,2, status,0
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMMON   BANK0   BANK1
  3289 ;;      Params:         0       4       0
  3290 ;;      Locals:         0       3       0
  3291 ;;      Temps:          0       1       0
  3292 ;;      Totals:         0       8       0
  3293 ;;Total ram usage:        8 bytes
  3294 ;; Hardware stack levels used: 1
  3295 ;; This function calls:
  3296 ;;		Nothing
  3297 ;; This function is called by:
  3298 ;;		_utoa
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           
  3303                           ;psect for function ___lwdiv
  3304  0EFE                     ___lwdiv:
  3305  0EFE                     l1847:	
  3306                           ;incstack = 0
  3307                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3308                           
  3309  0EFE  1283               	bcf	3,5	;RP0=0, select bank0
  3310  0EFF  1303               	bcf	3,6	;RP1=0, select bank0
  3311  0F00  01A5               	clrf	___lwdiv@quotient
  3312  0F01  01A6               	clrf	___lwdiv@quotient+1
  3313  0F02                     l1849:
  3314  0F02  0820               	movf	___lwdiv@divisor,w
  3315  0F03  0421               	iorwf	___lwdiv@divisor+1,w
  3316  0F04  1903               	btfsc	3,2
  3317  0F05  2F07               	goto	u1331
  3318  0F06  2F08               	goto	u1330
  3319  0F07                     u1331:
  3320  0F07  2F3F               	goto	l1869
  3321  0F08                     u1330:
  3322  0F08                     l1851:
  3323  0F08  01A7               	clrf	___lwdiv@counter
  3324  0F09  0AA7               	incf	___lwdiv@counter,f
  3325  0F0A  2F16               	goto	l1857
  3326  0F0B                     l1853:
  3327  0F0B  3001               	movlw	1
  3328  0F0C                     u1345:
  3329  0F0C  1003               	clrc
  3330  0F0D  0DA0               	rlf	___lwdiv@divisor,f
  3331  0F0E  0DA1               	rlf	___lwdiv@divisor+1,f
  3332  0F0F  3EFF               	addlw	-1
  3333  0F10  1D03               	skipz
  3334  0F11  2F0C               	goto	u1345
  3335  0F12                     l1855:
  3336  0F12  3001               	movlw	1
  3337  0F13  00A4               	movwf	??___lwdiv
  3338  0F14  0824               	movf	??___lwdiv,w
  3339  0F15  07A7               	addwf	___lwdiv@counter,f
  3340  0F16                     l1857:
  3341  0F16  1FA1               	btfss	___lwdiv@divisor+1,7
  3342  0F17  2F19               	goto	u1351
  3343  0F18  2F1A               	goto	u1350
  3344  0F19                     u1351:
  3345  0F19  2F0B               	goto	l1853
  3346  0F1A                     u1350:
  3347  0F1A                     l1859:
  3348  0F1A  3001               	movlw	1
  3349  0F1B                     u1365:
  3350  0F1B  1003               	clrc
  3351  0F1C  0DA5               	rlf	___lwdiv@quotient,f
  3352  0F1D  0DA6               	rlf	___lwdiv@quotient+1,f
  3353  0F1E  3EFF               	addlw	-1
  3354  0F1F  1D03               	skipz
  3355  0F20  2F1B               	goto	u1365
  3356  0F21  0821               	movf	___lwdiv@divisor+1,w
  3357  0F22  0223               	subwf	___lwdiv@dividend+1,w
  3358  0F23  1D03               	skipz
  3359  0F24  2F27               	goto	u1375
  3360  0F25  0820               	movf	___lwdiv@divisor,w
  3361  0F26  0222               	subwf	___lwdiv@dividend,w
  3362  0F27                     u1375:
  3363  0F27  1C03               	skipc
  3364  0F28  2F2A               	goto	u1371
  3365  0F29  2F2B               	goto	u1370
  3366  0F2A                     u1371:
  3367  0F2A  2F32               	goto	l1865
  3368  0F2B                     u1370:
  3369  0F2B                     l1861:
  3370  0F2B  0820               	movf	___lwdiv@divisor,w
  3371  0F2C  02A2               	subwf	___lwdiv@dividend,f
  3372  0F2D  0821               	movf	___lwdiv@divisor+1,w
  3373  0F2E  1C03               	skipc
  3374  0F2F  03A3               	decf	___lwdiv@dividend+1,f
  3375  0F30  02A3               	subwf	___lwdiv@dividend+1,f
  3376  0F31                     l1863:
  3377  0F31  1425               	bsf	___lwdiv@quotient,0
  3378  0F32                     l1865:
  3379  0F32  3001               	movlw	1
  3380  0F33                     u1385:
  3381  0F33  1003               	clrc
  3382  0F34  0CA1               	rrf	___lwdiv@divisor+1,f
  3383  0F35  0CA0               	rrf	___lwdiv@divisor,f
  3384  0F36  3EFF               	addlw	-1
  3385  0F37  1D03               	skipz
  3386  0F38  2F33               	goto	u1385
  3387  0F39                     l1867:
  3388  0F39  3001               	movlw	1
  3389  0F3A  02A7               	subwf	___lwdiv@counter,f
  3390  0F3B  1D03               	btfss	3,2
  3391  0F3C  2F3E               	goto	u1391
  3392  0F3D  2F3F               	goto	u1390
  3393  0F3E                     u1391:
  3394  0F3E  2F1A               	goto	l1859
  3395  0F3F                     u1390:
  3396  0F3F                     l1869:
  3397  0F3F  0826               	movf	___lwdiv@quotient+1,w
  3398  0F40  00A1               	movwf	?___lwdiv+1
  3399  0F41  0825               	movf	___lwdiv@quotient,w
  3400  0F42  00A0               	movwf	?___lwdiv
  3401  0F43                     l686:
  3402  0F43  0008               	return
  3403  0F44                     __end_of___lwdiv:
  3404                           
  3405                           	psect	text13
  3406  016B                     __ptext13:	
  3407 ;; *************** function ___fltol *****************
  3408 ;; Defined at:
  3409 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;  f1              4    0[BANK0 ] unsigned int 
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;  exp1            1   10[BANK0 ] unsigned char 
  3414 ;;  sign1           1    9[BANK0 ] unsigned char 
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  4    0[BANK0 ] long 
  3417 ;; Registers used:
  3418 ;;		wreg, status,2, status,0
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMMON   BANK0   BANK1
  3424 ;;      Params:         0       4       0
  3425 ;;      Locals:         0       2       0
  3426 ;;      Temps:          0       5       0
  3427 ;;      Totals:         0      11       0
  3428 ;;Total ram usage:       11 bytes
  3429 ;; Hardware stack levels used: 1
  3430 ;; This function calls:
  3431 ;;		Nothing
  3432 ;; This function is called by:
  3433 ;;		_ventilator_screen
  3434 ;;		_screen_selector
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438                           
  3439                           ;psect for function ___fltol
  3440  016B                     ___fltol:
  3441  016B                     l2179:	
  3442                           ;incstack = 0
  3443                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3444                           
  3445  016B  1003               	clrc
  3446  016C  1283               	bcf	3,5	;RP0=0, select bank0
  3447  016D  1303               	bcf	3,6	;RP1=0, select bank0
  3448  016E  0D22               	rlf	___fltol@f1+2,w
  3449  016F  0D23               	rlf	___fltol@f1+3,w
  3450  0170  00A4               	movwf	??___fltol
  3451  0171  0824               	movf	??___fltol,w
  3452  0172  00AA               	movwf	___fltol@exp1
  3453  0173  082A               	movf	___fltol@exp1,w
  3454  0174  1D03               	btfss	3,2
  3455  0175  2977               	goto	u1951
  3456  0176  2978               	goto	u1950
  3457  0177                     u1951:
  3458  0177  2981               	goto	l2185
  3459  0178                     u1950:
  3460  0178                     l2181:
  3461  0178  3000               	movlw	0
  3462  0179  00A3               	movwf	?___fltol+3
  3463  017A  3000               	movlw	0
  3464  017B  00A2               	movwf	?___fltol+2
  3465  017C  3000               	movlw	0
  3466  017D  00A1               	movwf	?___fltol+1
  3467  017E  3000               	movlw	0
  3468  017F  00A0               	movwf	?___fltol
  3469  0180  29E6               	goto	l600
  3470  0181                     l2185:
  3471  0181  0820               	movf	___fltol@f1,w
  3472  0182  00A4               	movwf	??___fltol
  3473  0183  0821               	movf	___fltol@f1+1,w
  3474  0184  00A5               	movwf	??___fltol+1
  3475  0185  0822               	movf	___fltol@f1+2,w
  3476  0186  00A6               	movwf	??___fltol+2
  3477  0187  0823               	movf	___fltol@f1+3,w
  3478  0188  00A7               	movwf	??___fltol+3
  3479  0189  301F               	movlw	31
  3480  018A                     u1965:
  3481  018A  1003               	clrc
  3482  018B  0CA7               	rrf	??___fltol+3,f
  3483  018C  0CA6               	rrf	??___fltol+2,f
  3484  018D  0CA5               	rrf	??___fltol+1,f
  3485  018E  0CA4               	rrf	??___fltol,f
  3486  018F                     u1960:
  3487  018F  3EFF               	addlw	-1
  3488  0190  1D03               	skipz
  3489  0191  298A               	goto	u1965
  3490  0192  0824               	movf	??___fltol,w
  3491  0193  00A8               	movwf	??___fltol+4
  3492  0194  0828               	movf	??___fltol+4,w
  3493  0195  00A9               	movwf	___fltol@sign1
  3494  0196                     l2187:
  3495  0196  17A2               	bsf	___fltol@f1+2,7
  3496  0197                     l2189:
  3497  0197  30FF               	movlw	255
  3498  0198  05A0               	andwf	___fltol@f1,f
  3499  0199  30FF               	movlw	255
  3500  019A  05A1               	andwf	___fltol@f1+1,f
  3501  019B  30FF               	movlw	255
  3502  019C  05A2               	andwf	___fltol@f1+2,f
  3503  019D  3000               	movlw	0
  3504  019E  05A3               	andwf	___fltol@f1+3,f
  3505  019F                     l2191:
  3506  019F  3096               	movlw	150
  3507  01A0  02AA               	subwf	___fltol@exp1,f
  3508  01A1                     l2193:
  3509  01A1  1FAA               	btfss	___fltol@exp1,7
  3510  01A2  29A4               	goto	u1971
  3511  01A3  29A5               	goto	u1970
  3512  01A4                     u1971:
  3513  01A4  29BF               	goto	l2203
  3514  01A5                     u1970:
  3515  01A5                     l2195:
  3516  01A5  082A               	movf	___fltol@exp1,w
  3517  01A6  3A80               	xorlw	128
  3518  01A7  3E97               	addlw	151
  3519  01A8  1803               	skipnc
  3520  01A9  29AB               	goto	u1981
  3521  01AA  29AC               	goto	u1980
  3522  01AB                     u1981:
  3523  01AB  29AD               	goto	l2201
  3524  01AC                     u1980:
  3525  01AC  2978               	goto	l2181
  3526  01AD                     l2201:
  3527  01AD  3001               	movlw	1
  3528  01AE                     u1995:
  3529  01AE  1003               	clrc
  3530  01AF  0CA3               	rrf	___fltol@f1+3,f
  3531  01B0  0CA2               	rrf	___fltol@f1+2,f
  3532  01B1  0CA1               	rrf	___fltol@f1+1,f
  3533  01B2  0CA0               	rrf	___fltol@f1,f
  3534  01B3  3EFF               	addlw	-1
  3535  01B4  1D03               	skipz
  3536  01B5  29AE               	goto	u1995
  3537  01B6  3001               	movlw	1
  3538  01B7  00A4               	movwf	??___fltol
  3539  01B8  0824               	movf	??___fltol,w
  3540  01B9  07AA               	addwf	___fltol@exp1,f
  3541  01BA  1D03               	btfss	3,2
  3542  01BB  29BD               	goto	u2001
  3543  01BC  29BE               	goto	u2000
  3544  01BD                     u2001:
  3545  01BD  29AD               	goto	l2201
  3546  01BE                     u2000:
  3547  01BE  29D6               	goto	l2211
  3548  01BF                     l2203:
  3549  01BF  3020               	movlw	32
  3550  01C0  022A               	subwf	___fltol@exp1,w
  3551  01C1  1C03               	skipc
  3552  01C2  29C4               	goto	u2011
  3553  01C3  29C5               	goto	u2010
  3554  01C4                     u2011:
  3555  01C4  29D1               	goto	l607
  3556  01C5                     u2010:
  3557  01C5  2978               	goto	l2181
  3558  01C6                     l2209:
  3559  01C6  3001               	movlw	1
  3560  01C7  00A4               	movwf	??___fltol
  3561  01C8                     u2025:
  3562  01C8  1003               	clrc
  3563  01C9  0DA0               	rlf	___fltol@f1,f
  3564  01CA  0DA1               	rlf	___fltol@f1+1,f
  3565  01CB  0DA2               	rlf	___fltol@f1+2,f
  3566  01CC  0DA3               	rlf	___fltol@f1+3,f
  3567  01CD  0BA4               	decfsz	??___fltol,f
  3568  01CE  29C8               	goto	u2025
  3569  01CF  3001               	movlw	1
  3570  01D0  02AA               	subwf	___fltol@exp1,f
  3571  01D1                     l607:
  3572  01D1  082A               	movf	___fltol@exp1,w
  3573  01D2  1D03               	btfss	3,2
  3574  01D3  29D5               	goto	u2031
  3575  01D4  29D6               	goto	u2030
  3576  01D5                     u2031:
  3577  01D5  29C6               	goto	l2209
  3578  01D6                     u2030:
  3579  01D6                     l2211:
  3580  01D6  0829               	movf	___fltol@sign1,w
  3581  01D7  1903               	btfsc	3,2
  3582  01D8  29DA               	goto	u2041
  3583  01D9  29DB               	goto	u2040
  3584  01DA                     u2041:
  3585  01DA  29E6               	goto	l610
  3586  01DB                     u2040:
  3587  01DB                     l2213:
  3588  01DB  09A0               	comf	___fltol@f1,f
  3589  01DC  09A1               	comf	___fltol@f1+1,f
  3590  01DD  09A2               	comf	___fltol@f1+2,f
  3591  01DE  09A3               	comf	___fltol@f1+3,f
  3592  01DF  0AA0               	incf	___fltol@f1,f
  3593  01E0  1903               	skipnz
  3594  01E1  0AA1               	incf	___fltol@f1+1,f
  3595  01E2  1903               	skipnz
  3596  01E3  0AA2               	incf	___fltol@f1+2,f
  3597  01E4  1903               	skipnz
  3598  01E5  0AA3               	incf	___fltol@f1+3,f
  3599  01E6                     l610:
  3600  01E6                     l600:
  3601  01E6  0008               	return
  3602  01E7                     __end_of___fltol:
  3603                           
  3604                           	psect	text14
  3605  0D48                     __ptext14:	
  3606 ;; *************** function _keypad_getkey *****************
  3607 ;; Defined at:
  3608 ;;		line 91 in file "./kbd.h"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;		None
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;  key             1    2[BANK0 ] unsigned char 
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  1    wreg      unsigned char 
  3615 ;; Registers used:
  3616 ;;		wreg, status,2, status,0, pclath, cstack
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMMON   BANK0   BANK1
  3622 ;;      Params:         0       0       0
  3623 ;;      Locals:         0       1       0
  3624 ;;      Temps:          0       1       0
  3625 ;;      Totals:         0       2       0
  3626 ;;Total ram usage:        2 bytes
  3627 ;; Hardware stack levels used: 1
  3628 ;; Hardware stack levels required when called: 1
  3629 ;; This function calls:
  3630 ;;		_keypad_readkey
  3631 ;; This function is called by:
  3632 ;;		_selector_type
  3633 ;;		_main
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           
  3638                           ;psect for function _keypad_getkey
  3639  0D48                     _keypad_getkey:
  3640  0D48                     l2215:	
  3641                           ;incstack = 0
  3642                           ; Regs used in _keypad_getkey: [wreg+status,2+status,0+pclath+cstack]
  3643                           
  3644                           
  3645                           ;./kbd.h: 93:  unsigned char key = 'x';
  3646  0D48  3078               	movlw	120
  3647  0D49  1283               	bcf	3,5	;RP0=0, select bank0
  3648  0D4A  1303               	bcf	3,6	;RP1=0, select bank0
  3649  0D4B  00A1               	movwf	??_keypad_getkey
  3650  0D4C  0821               	movf	??_keypad_getkey,w
  3651  0D4D  00A2               	movwf	keypad_getkey@key
  3652                           
  3653                           ;./kbd.h: 96:  while(key == 'x')
  3654  0D4E  2D57               	goto	l2219
  3655  0D4F                     l2217:
  3656                           
  3657                           ;./kbd.h: 97:   key = keypad_readkey();
  3658  0D4F  118A  262B  158A   	fcall	_keypad_readkey
  3659  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  3660  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  3661  0D54  00A1               	movwf	??_keypad_getkey
  3662  0D55  0821               	movf	??_keypad_getkey,w
  3663  0D56  00A2               	movwf	keypad_getkey@key
  3664  0D57                     l2219:
  3665                           
  3666                           ;./kbd.h: 96:  while(key == 'x')
  3667  0D57  3078               	movlw	120
  3668  0D58  0622               	xorwf	keypad_getkey@key,w
  3669  0D59  1903               	btfsc	3,2
  3670  0D5A  2D5C               	goto	u2051
  3671  0D5B  2D5D               	goto	u2050
  3672  0D5C                     u2051:
  3673  0D5C  2D4F               	goto	l2217
  3674  0D5D                     u2050:
  3675  0D5D                     l2221:
  3676  0D5D  118A  262B  158A   	fcall	_keypad_readkey
  3677  0D60  3A78               	xorlw	120
  3678  0D61  1D03               	skipz
  3679  0D62  2D64               	goto	u2061
  3680  0D63  2D65               	goto	u2060
  3681  0D64                     u2061:
  3682  0D64  2D5D               	goto	l2221
  3683  0D65                     u2060:
  3684  0D65                     l2223:
  3685                           
  3686                           ;./kbd.h: 102:  return key;
  3687  0D65  1283               	bcf	3,5	;RP0=0, select bank0
  3688  0D66  1303               	bcf	3,6	;RP1=0, select bank0
  3689  0D67  0822               	movf	keypad_getkey@key,w
  3690  0D68                     l153:
  3691  0D68  0008               	return
  3692  0D69                     __end_of_keypad_getkey:
  3693                           
  3694                           	psect	text15
  3695  062B                     __ptext15:	
  3696 ;; *************** function _keypad_readkey *****************
  3697 ;; Defined at:
  3698 ;;		line 36 in file "./kbd.h"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;		None
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;		None
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  1    wreg      unsigned char 
  3705 ;; Registers used:
  3706 ;;		wreg
  3707 ;; Tracked objects:
  3708 ;;		On entry : 0/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMMON   BANK0   BANK1
  3712 ;;      Params:         0       0       0
  3713 ;;      Locals:         0       0       0
  3714 ;;      Temps:          0       1       0
  3715 ;;      Totals:         0       1       0
  3716 ;;Total ram usage:        1 bytes
  3717 ;; Hardware stack levels used: 1
  3718 ;; This function calls:
  3719 ;;		Nothing
  3720 ;; This function is called by:
  3721 ;;		_keypad_getkey
  3722 ;;		_key_writing_value
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           
  3727                           ;psect for function _keypad_readkey
  3728  062B                     _keypad_readkey:
  3729  062B                     l1939:	
  3730                           ;incstack = 0
  3731                           ; Regs used in _keypad_readkey: [wreg]
  3732                           
  3733                           
  3734                           ;./kbd.h: 38:     RC1 = 1;
  3735  062B  1283               	bcf	3,5	;RP0=0, select bank0
  3736  062C  1303               	bcf	3,6	;RP1=0, select bank0
  3737  062D  1487               	bsf	7,1	;volatile
  3738                           
  3739                           ;./kbd.h: 39:     RC0 = 0;
  3740  062E  1007               	bcf	7,0	;volatile
  3741                           
  3742                           ;./kbd.h: 40:     RA5 = 0;
  3743  062F  1285               	bcf	5,5	;volatile
  3744                           
  3745                           ;./kbd.h: 41:     RA4 = 0;
  3746  0630  1205               	bcf	5,4	;volatile
  3747  0631                     l1941:
  3748                           
  3749                           ;./kbd.h: 42:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  3750  0631  304F               	movlw	79
  3751  0632  1283               	bcf	3,5	;RP0=0, select bank0
  3752  0633  1303               	bcf	3,6	;RP1=0, select bank0
  3753  0634  00A0               	movwf	??_keypad_readkey
  3754  0635                     u2427:
  3755  0635  0BA0               	decfsz	??_keypad_readkey,f
  3756  0636  2E35               	goto	u2427
  3757  0637  0000               	nop
  3758  0638                     l1943:
  3759                           
  3760                           ;./kbd.h: 44:     if(RC1==1 && RC0==0 && RA5==0 && RA4==0) {
  3761  0638  1283               	bcf	3,5	;RP0=0, select bank0
  3762  0639  1303               	bcf	3,6	;RP1=0, select bank0
  3763  063A  1C87               	btfss	7,1	;volatile
  3764  063B  2E3D               	goto	u1511
  3765  063C  2E3E               	goto	u1510
  3766  063D                     u1511:
  3767  063D  2E62               	goto	l124
  3768  063E                     u1510:
  3769  063E                     l1945:
  3770  063E  1807               	btfsc	7,0	;volatile
  3771  063F  2E41               	goto	u1521
  3772  0640  2E42               	goto	u1520
  3773  0641                     u1521:
  3774  0641  2E62               	goto	l124
  3775  0642                     u1520:
  3776  0642                     l1947:
  3777  0642  1A85               	btfsc	5,5	;volatile
  3778  0643  2E45               	goto	u1531
  3779  0644  2E46               	goto	u1530
  3780  0645                     u1531:
  3781  0645  2E62               	goto	l124
  3782  0646                     u1530:
  3783  0646                     l1949:
  3784  0646  1A05               	btfsc	5,4	;volatile
  3785  0647  2E49               	goto	u1541
  3786  0648  2E4A               	goto	u1540
  3787  0649                     u1541:
  3788  0649  2E62               	goto	l124
  3789  064A                     u1540:
  3790  064A                     l1951:
  3791                           
  3792                           ;./kbd.h: 45:         if (RA0 == 1) return '*';
  3793  064A  1C05               	btfss	5,0	;volatile
  3794  064B  2E4D               	goto	u1551
  3795  064C  2E4E               	goto	u1550
  3796  064D                     u1551:
  3797  064D  2E50               	goto	l125
  3798  064E                     u1550:
  3799  064E                     l1953:
  3800  064E  302A               	movlw	42
  3801  064F  2F02               	goto	l126
  3802  0650                     l125:
  3803                           
  3804                           ;./kbd.h: 46:         if (RA1 == 1) return '0';
  3805  0650  1C85               	btfss	5,1	;volatile
  3806  0651  2E53               	goto	u1561
  3807  0652  2E54               	goto	u1560
  3808  0653                     u1561:
  3809  0653  2E56               	goto	l127
  3810  0654                     u1560:
  3811  0654                     l1957:
  3812  0654  3030               	movlw	48
  3813  0655  2F02               	goto	l126
  3814  0656                     l127:
  3815                           
  3816                           ;./kbd.h: 47:         if (RA2 == 1) return '#';
  3817  0656  1D05               	btfss	5,2	;volatile
  3818  0657  2E59               	goto	u1571
  3819  0658  2E5A               	goto	u1570
  3820  0659                     u1571:
  3821  0659  2E5C               	goto	l128
  3822  065A                     u1570:
  3823  065A                     l1961:
  3824  065A  3023               	movlw	35
  3825  065B  2F02               	goto	l126
  3826  065C                     l128:
  3827                           
  3828                           ;./kbd.h: 48:         if (RA3 == 1) return 'D';
  3829  065C  1D85               	btfss	5,3	;volatile
  3830  065D  2E5F               	goto	u1581
  3831  065E  2E60               	goto	u1580
  3832  065F                     u1581:
  3833  065F  2E62               	goto	l124
  3834  0660                     u1580:
  3835  0660                     l1965:
  3836  0660  3044               	movlw	68
  3837  0661  2F02               	goto	l126
  3838  0662                     l124:	
  3839                           ;./kbd.h: 49:     }
  3840                           
  3841                           
  3842                           ;./kbd.h: 50:     RC1 = 0;
  3843  0662  1087               	bcf	7,1	;volatile
  3844                           
  3845                           ;./kbd.h: 51:     RC0 = 1;
  3846  0663  1407               	bsf	7,0	;volatile
  3847                           
  3848                           ;./kbd.h: 52:     RA5 = 0;
  3849  0664  1285               	bcf	5,5	;volatile
  3850                           
  3851                           ;./kbd.h: 53:     RA4 = 0;
  3852  0665  1205               	bcf	5,4	;volatile
  3853  0666                     l1969:
  3854                           
  3855                           ;./kbd.h: 54:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  3856  0666  304F               	movlw	79
  3857  0667  1283               	bcf	3,5	;RP0=0, select bank0
  3858  0668  1303               	bcf	3,6	;RP1=0, select bank0
  3859  0669  00A0               	movwf	??_keypad_readkey
  3860  066A                     u2437:
  3861  066A  0BA0               	decfsz	??_keypad_readkey,f
  3862  066B  2E6A               	goto	u2437
  3863  066C  0000               	nop
  3864  066D                     l1971:
  3865                           
  3866                           ;./kbd.h: 56:     if(RC1==0 && RC0==1 && RA5==0 && RA4==0) {
  3867  066D  1283               	bcf	3,5	;RP0=0, select bank0
  3868  066E  1303               	bcf	3,6	;RP1=0, select bank0
  3869  066F  1887               	btfsc	7,1	;volatile
  3870  0670  2E72               	goto	u1591
  3871  0671  2E73               	goto	u1590
  3872  0672                     u1591:
  3873  0672  2E97               	goto	l130
  3874  0673                     u1590:
  3875  0673                     l1973:
  3876  0673  1C07               	btfss	7,0	;volatile
  3877  0674  2E76               	goto	u1601
  3878  0675  2E77               	goto	u1600
  3879  0676                     u1601:
  3880  0676  2E97               	goto	l130
  3881  0677                     u1600:
  3882  0677                     l1975:
  3883  0677  1A85               	btfsc	5,5	;volatile
  3884  0678  2E7A               	goto	u1611
  3885  0679  2E7B               	goto	u1610
  3886  067A                     u1611:
  3887  067A  2E97               	goto	l130
  3888  067B                     u1610:
  3889  067B                     l1977:
  3890  067B  1A05               	btfsc	5,4	;volatile
  3891  067C  2E7E               	goto	u1621
  3892  067D  2E7F               	goto	u1620
  3893  067E                     u1621:
  3894  067E  2E97               	goto	l130
  3895  067F                     u1620:
  3896  067F                     l1979:
  3897                           
  3898                           ;./kbd.h: 57:         if (RA0 == 1) return '1';
  3899  067F  1C05               	btfss	5,0	;volatile
  3900  0680  2E82               	goto	u1631
  3901  0681  2E83               	goto	u1630
  3902  0682                     u1631:
  3903  0682  2E85               	goto	l131
  3904  0683                     u1630:
  3905  0683                     l1981:
  3906  0683  3031               	movlw	49
  3907  0684  2F02               	goto	l126
  3908  0685                     l131:
  3909                           
  3910                           ;./kbd.h: 58:         if (RA1 == 1) return '2';
  3911  0685  1C85               	btfss	5,1	;volatile
  3912  0686  2E88               	goto	u1641
  3913  0687  2E89               	goto	u1640
  3914  0688                     u1641:
  3915  0688  2E8B               	goto	l132
  3916  0689                     u1640:
  3917  0689                     l1985:
  3918  0689  3032               	movlw	50
  3919  068A  2F02               	goto	l126
  3920  068B                     l132:
  3921                           
  3922                           ;./kbd.h: 59:         if (RA2 == 1) return '3';
  3923  068B  1D05               	btfss	5,2	;volatile
  3924  068C  2E8E               	goto	u1651
  3925  068D  2E8F               	goto	u1650
  3926  068E                     u1651:
  3927  068E  2E91               	goto	l133
  3928  068F                     u1650:
  3929  068F                     l1989:
  3930  068F  3033               	movlw	51
  3931  0690  2F02               	goto	l126
  3932  0691                     l133:
  3933                           
  3934                           ;./kbd.h: 60:         if (RA3 == 1) return 'C';
  3935  0691  1D85               	btfss	5,3	;volatile
  3936  0692  2E94               	goto	u1661
  3937  0693  2E95               	goto	u1660
  3938  0694                     u1661:
  3939  0694  2E97               	goto	l130
  3940  0695                     u1660:
  3941  0695                     l1993:
  3942  0695  3043               	movlw	67
  3943  0696  2F02               	goto	l126
  3944  0697                     l130:	
  3945                           ;./kbd.h: 61:     }
  3946                           
  3947                           
  3948                           ;./kbd.h: 63:     RC1 = 0;
  3949  0697  1087               	bcf	7,1	;volatile
  3950                           
  3951                           ;./kbd.h: 64:     RC0 = 0;
  3952  0698  1007               	bcf	7,0	;volatile
  3953                           
  3954                           ;./kbd.h: 65:     RA5 = 1;
  3955  0699  1685               	bsf	5,5	;volatile
  3956                           
  3957                           ;./kbd.h: 66:     RA4 = 0;
  3958  069A  1205               	bcf	5,4	;volatile
  3959  069B                     l1997:
  3960                           
  3961                           ;./kbd.h: 67:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  3962  069B  304F               	movlw	79
  3963  069C  1283               	bcf	3,5	;RP0=0, select bank0
  3964  069D  1303               	bcf	3,6	;RP1=0, select bank0
  3965  069E  00A0               	movwf	??_keypad_readkey
  3966  069F                     u2447:
  3967  069F  0BA0               	decfsz	??_keypad_readkey,f
  3968  06A0  2E9F               	goto	u2447
  3969  06A1  0000               	nop
  3970  06A2                     l1999:
  3971                           
  3972                           ;./kbd.h: 69:     if(RC1==0 && RC0==0 && RA5==1 && RA4==0) {
  3973  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  3974  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  3975  06A4  1887               	btfsc	7,1	;volatile
  3976  06A5  2EA7               	goto	u1671
  3977  06A6  2EA8               	goto	u1670
  3978  06A7                     u1671:
  3979  06A7  2ECC               	goto	l135
  3980  06A8                     u1670:
  3981  06A8                     l2001:
  3982  06A8  1807               	btfsc	7,0	;volatile
  3983  06A9  2EAB               	goto	u1681
  3984  06AA  2EAC               	goto	u1680
  3985  06AB                     u1681:
  3986  06AB  2ECC               	goto	l135
  3987  06AC                     u1680:
  3988  06AC                     l2003:
  3989  06AC  1E85               	btfss	5,5	;volatile
  3990  06AD  2EAF               	goto	u1691
  3991  06AE  2EB0               	goto	u1690
  3992  06AF                     u1691:
  3993  06AF  2ECC               	goto	l135
  3994  06B0                     u1690:
  3995  06B0                     l2005:
  3996  06B0  1A05               	btfsc	5,4	;volatile
  3997  06B1  2EB3               	goto	u1701
  3998  06B2  2EB4               	goto	u1700
  3999  06B3                     u1701:
  4000  06B3  2ECC               	goto	l135
  4001  06B4                     u1700:
  4002  06B4                     l2007:
  4003                           
  4004                           ;./kbd.h: 70:         if (RA0 == 1) return '4';
  4005  06B4  1C05               	btfss	5,0	;volatile
  4006  06B5  2EB7               	goto	u1711
  4007  06B6  2EB8               	goto	u1710
  4008  06B7                     u1711:
  4009  06B7  2EBA               	goto	l136
  4010  06B8                     u1710:
  4011  06B8                     l2009:
  4012  06B8  3034               	movlw	52
  4013  06B9  2F02               	goto	l126
  4014  06BA                     l136:
  4015                           
  4016                           ;./kbd.h: 71:         if (RA1 == 1) return '5';
  4017  06BA  1C85               	btfss	5,1	;volatile
  4018  06BB  2EBD               	goto	u1721
  4019  06BC  2EBE               	goto	u1720
  4020  06BD                     u1721:
  4021  06BD  2EC0               	goto	l137
  4022  06BE                     u1720:
  4023  06BE                     l2013:
  4024  06BE  3035               	movlw	53
  4025  06BF  2F02               	goto	l126
  4026  06C0                     l137:
  4027                           
  4028                           ;./kbd.h: 72:         if (RA2 == 1) return '6';
  4029  06C0  1D05               	btfss	5,2	;volatile
  4030  06C1  2EC3               	goto	u1731
  4031  06C2  2EC4               	goto	u1730
  4032  06C3                     u1731:
  4033  06C3  2EC6               	goto	l138
  4034  06C4                     u1730:
  4035  06C4                     l2017:
  4036  06C4  3036               	movlw	54
  4037  06C5  2F02               	goto	l126
  4038  06C6                     l138:
  4039                           
  4040                           ;./kbd.h: 73:         if (RA3 == 1) return 'B';
  4041  06C6  1D85               	btfss	5,3	;volatile
  4042  06C7  2EC9               	goto	u1741
  4043  06C8  2ECA               	goto	u1740
  4044  06C9                     u1741:
  4045  06C9  2ECC               	goto	l135
  4046  06CA                     u1740:
  4047  06CA                     l2021:
  4048  06CA  3042               	movlw	66
  4049  06CB  2F02               	goto	l126
  4050  06CC                     l135:	
  4051                           ;./kbd.h: 74:     }
  4052                           
  4053                           
  4054                           ;./kbd.h: 76:     RC1 = 0;
  4055  06CC  1087               	bcf	7,1	;volatile
  4056                           
  4057                           ;./kbd.h: 77:     RC0 = 0;
  4058  06CD  1007               	bcf	7,0	;volatile
  4059                           
  4060                           ;./kbd.h: 78:     RA5 = 0;
  4061  06CE  1285               	bcf	5,5	;volatile
  4062                           
  4063                           ;./kbd.h: 79:     RA4 = 1;
  4064  06CF  1605               	bsf	5,4	;volatile
  4065  06D0                     l2025:
  4066                           
  4067                           ;./kbd.h: 80:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  4068  06D0  304F               	movlw	79
  4069  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  4070  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  4071  06D3  00A0               	movwf	??_keypad_readkey
  4072  06D4                     u2457:
  4073  06D4  0BA0               	decfsz	??_keypad_readkey,f
  4074  06D5  2ED4               	goto	u2457
  4075  06D6  0000               	nop
  4076  06D7                     l2027:
  4077                           
  4078                           ;./kbd.h: 82:     if(RC1==0 && RC0==0 && RA5==0 && RA4==1) {
  4079  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  4080  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  4081  06D9  1887               	btfsc	7,1	;volatile
  4082  06DA  2EDC               	goto	u1751
  4083  06DB  2EDD               	goto	u1750
  4084  06DC                     u1751:
  4085  06DC  2F01               	goto	l2053
  4086  06DD                     u1750:
  4087  06DD                     l2029:
  4088  06DD  1807               	btfsc	7,0	;volatile
  4089  06DE  2EE0               	goto	u1761
  4090  06DF  2EE1               	goto	u1760
  4091  06E0                     u1761:
  4092  06E0  2F01               	goto	l2053
  4093  06E1                     u1760:
  4094  06E1                     l2031:
  4095  06E1  1A85               	btfsc	5,5	;volatile
  4096  06E2  2EE4               	goto	u1771
  4097  06E3  2EE5               	goto	u1770
  4098  06E4                     u1771:
  4099  06E4  2F01               	goto	l2053
  4100  06E5                     u1770:
  4101  06E5                     l2033:
  4102  06E5  1E05               	btfss	5,4	;volatile
  4103  06E6  2EE8               	goto	u1781
  4104  06E7  2EE9               	goto	u1780
  4105  06E8                     u1781:
  4106  06E8  2F01               	goto	l2053
  4107  06E9                     u1780:
  4108  06E9                     l2035:
  4109                           
  4110                           ;./kbd.h: 83:         if (RA0 == 1) return '7';
  4111  06E9  1C05               	btfss	5,0	;volatile
  4112  06EA  2EEC               	goto	u1791
  4113  06EB  2EED               	goto	u1790
  4114  06EC                     u1791:
  4115  06EC  2EEF               	goto	l141
  4116  06ED                     u1790:
  4117  06ED                     l2037:
  4118  06ED  3037               	movlw	55
  4119  06EE  2F02               	goto	l126
  4120  06EF                     l141:
  4121                           
  4122                           ;./kbd.h: 84:         if (RA1 == 1) return '8';
  4123  06EF  1C85               	btfss	5,1	;volatile
  4124  06F0  2EF2               	goto	u1801
  4125  06F1  2EF3               	goto	u1800
  4126  06F2                     u1801:
  4127  06F2  2EF5               	goto	l142
  4128  06F3                     u1800:
  4129  06F3                     l2041:
  4130  06F3  3038               	movlw	56
  4131  06F4  2F02               	goto	l126
  4132  06F5                     l142:
  4133                           
  4134                           ;./kbd.h: 85:         if (RA2 == 1) return '9';
  4135  06F5  1D05               	btfss	5,2	;volatile
  4136  06F6  2EF8               	goto	u1811
  4137  06F7  2EF9               	goto	u1810
  4138  06F8                     u1811:
  4139  06F8  2EFB               	goto	l143
  4140  06F9                     u1810:
  4141  06F9                     l2045:
  4142  06F9  3039               	movlw	57
  4143  06FA  2F02               	goto	l126
  4144  06FB                     l143:
  4145                           
  4146                           ;./kbd.h: 86:         if (RA3 == 1) return 'A';
  4147  06FB  1D85               	btfss	5,3	;volatile
  4148  06FC  2EFE               	goto	u1821
  4149  06FD  2EFF               	goto	u1820
  4150  06FE                     u1821:
  4151  06FE  2F01               	goto	l2053
  4152  06FF                     u1820:
  4153  06FF                     l2049:
  4154  06FF  3041               	movlw	65
  4155  0700  2F02               	goto	l126
  4156  0701                     l2053:
  4157                           
  4158                           ;./kbd.h: 88:  return 'x';
  4159  0701  3078               	movlw	120
  4160  0702                     l126:
  4161  0702  0008               	return
  4162  0703                     __end_of_keypad_readkey:
  4163                           
  4164                           	psect	text16
  4165  0D29                     __ptext16:	
  4166 ;; *************** function _eeprom_read *****************
  4167 ;; Defined at:
  4168 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\pic\__eeread.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;  addr            1    wreg     unsigned char 
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;  addr            1    1[BANK0 ] unsigned char 
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  1    wreg      unsigned char 
  4175 ;; Registers used:
  4176 ;;		wreg, status,2, status,0
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMMON   BANK0   BANK1
  4182 ;;      Params:         0       0       0
  4183 ;;      Locals:         0       1       0
  4184 ;;      Temps:          0       1       0
  4185 ;;      Totals:         0       2       0
  4186 ;;Total ram usage:        2 bytes
  4187 ;; Hardware stack levels used: 1
  4188 ;; This function calls:
  4189 ;;		Nothing
  4190 ;; This function is called by:
  4191 ;;		_selector_type
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           
  4196                           ;psect for function _eeprom_read
  4197  0D29                     _eeprom_read:
  4198                           
  4199                           ;incstack = 0
  4200                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  4201                           ;eeprom_read@addr stored from wreg
  4202  0D29  1283               	bcf	3,5	;RP0=0, select bank0
  4203  0D2A  1303               	bcf	3,6	;RP1=0, select bank0
  4204  0D2B  00A1               	movwf	eeprom_read@addr
  4205  0D2C                     l384:	
  4206                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\pic\__eeread.c: 6: eeprom_read(uns
      +                          igned char addr);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\pic\__eeread.c: 7:
      +                           {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\pic\__eeread.c: 8:  do
  4207                           
  4208  0D2C  0064               	clrwdt	;# 
  4209  0D2D  1683               	bsf	3,5	;RP0=1, select bank3
  4210  0D2E  1703               	bsf	3,6	;RP1=1, select bank3
  4211  0D2F  188C               	btfsc	12,1	;volsfr
  4212  0D30  2D32               	goto	u2241
  4213  0D31  2D35               	goto	u2240
  4214  0D32                     u2241:
  4215  0D32  1283               	bcf	3,5	;RP0=0, select bank0
  4216  0D33  1303               	bcf	3,6	;RP1=0, select bank0
  4217  0D34  2D2C               	goto	l384
  4218  0D35                     u2240:
  4219  0D35                     l2359:
  4220                           
  4221                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\pic\__eeread.c: 18:  return ( EEAD
      +                          R = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  4222  0D35  1283               	bcf	3,5	;RP0=0, select bank0
  4223  0D36  1303               	bcf	3,6	;RP1=0, select bank0
  4224  0D37  0821               	movf	eeprom_read@addr,w
  4225  0D38  1283               	bcf	3,5	;RP0=0, select bank2
  4226  0D39  1703               	bsf	3,6	;RP1=1, select bank2
  4227  0D3A  008D               	movwf	13	;volatile
  4228  0D3B  303F               	movlw	63
  4229  0D3C  1283               	bcf	3,5	;RP0=0, select bank0
  4230  0D3D  1303               	bcf	3,6	;RP1=0, select bank0
  4231  0D3E  00A0               	movwf	??_eeprom_read
  4232  0D3F  0820               	movf	??_eeprom_read,w
  4233  0D40  1683               	bsf	3,5	;RP0=1, select bank3
  4234  0D41  1703               	bsf	3,6	;RP1=1, select bank3
  4235  0D42  058C               	andwf	12,f	;volsfr
  4236  0D43  140C               	bsf	12,0	;volsfr
  4237  0D44  1283               	bcf	3,5	;RP0=0, select bank2
  4238  0D45  1703               	bsf	3,6	;RP1=1, select bank2
  4239  0D46  080C               	movf	12,w	;volatile
  4240  0D47                     l386:
  4241  0D47  0008               	return
  4242  0D48                     __end_of_eeprom_read:
  4243                           
  4244                           	psect	text17
  4245  01E7                     __ptext17:	
  4246 ;; *************** function _conditional_screen *****************
  4247 ;; Defined at:
  4248 ;;		line 102 in file "main.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;  x               2   10[BANK0 ] int 
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;  msj            14   26[BANK0 ] unsigned char [14]
  4253 ;;  con            10   16[BANK0 ] unsigned char [10]
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  1    wreg      void 
  4256 ;; Registers used:
  4257 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMMON   BANK0   BANK1
  4263 ;;      Params:         0       2       0
  4264 ;;      Locals:         0      24       0
  4265 ;;      Temps:          0       4       0
  4266 ;;      Totals:         0      30       0
  4267 ;;Total ram usage:       30 bytes
  4268 ;; Hardware stack levels used: 1
  4269 ;; Hardware stack levels required when called: 3
  4270 ;; This function calls:
  4271 ;;		_LCD_Cmd
  4272 ;;		_LCD_Goto
  4273 ;;		_LCD_Print
  4274 ;;		_strcat
  4275 ;; This function is called by:
  4276 ;;		_selector_type
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           
  4281                           ;psect for function _conditional_screen
  4282  01E7                     _conditional_screen:
  4283  01E7                     l2247:	
  4284                           ;incstack = 0
  4285                           ; Regs used in _conditional_screen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4286                           
  4287                           
  4288                           ;main.c: 102: void conditional_screen(int x);main.c: 103: {;main.c: 104:     char msj[]=
      +                          "Cambiar cond.";
  4289  01E7  303A               	movlw	conditional_screen@msj& (0+255)
  4290  01E8  0084               	movwf	4
  4291  01E9  30A0               	movlw	low conditional_screen@F1119
  4292  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  4293  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  4294  01EC  00AC               	movwf	??_conditional_screen
  4295  01ED  0804               	movf	4,w
  4296  01EE  00AD               	movwf	??_conditional_screen+1
  4297  01EF  300E               	movlw	14
  4298  01F0  00AE               	movwf	??_conditional_screen+2
  4299  01F1                     u2100:
  4300  01F1  082C               	movf	??_conditional_screen,w
  4301  01F2  0084               	movwf	4
  4302  01F3  1383               	bcf	3,7	;select IRP bank1
  4303  01F4  0800               	movf	0,w
  4304  01F5  00AF               	movwf	??_conditional_screen+3
  4305  01F6  0AAC               	incf	??_conditional_screen,f
  4306  01F7  082D               	movf	??_conditional_screen+1,w
  4307  01F8  0084               	movwf	4
  4308  01F9  082F               	movf	??_conditional_screen+3,w
  4309  01FA  0080               	movwf	0
  4310  01FB  0AAD               	incf	??_conditional_screen+1,f
  4311  01FC  0BAE               	decfsz	??_conditional_screen+2,f
  4312  01FD  29F1               	goto	u2100
  4313                           
  4314                           ;main.c: 105:     char con[]="1.Si 2.No";
  4315  01FE  3030               	movlw	conditional_screen@con& (0+255)
  4316  01FF  0084               	movwf	4
  4317  0200  30B8               	movlw	low conditional_screen@F1121
  4318  0201  00AC               	movwf	??_conditional_screen
  4319  0202  0804               	movf	4,w
  4320  0203  00AD               	movwf	??_conditional_screen+1
  4321  0204  300A               	movlw	10
  4322  0205  00AE               	movwf	??_conditional_screen+2
  4323  0206                     u2110:
  4324  0206  082C               	movf	??_conditional_screen,w
  4325  0207  0084               	movwf	4
  4326  0208  1383               	bcf	3,7	;select IRP bank1
  4327  0209  0800               	movf	0,w
  4328  020A  00AF               	movwf	??_conditional_screen+3
  4329  020B  0AAC               	incf	??_conditional_screen,f
  4330  020C  082D               	movf	??_conditional_screen+1,w
  4331  020D  0084               	movwf	4
  4332  020E  082F               	movf	??_conditional_screen+3,w
  4333  020F  0080               	movwf	0
  4334  0210  0AAD               	incf	??_conditional_screen+1,f
  4335  0211  0BAE               	decfsz	??_conditional_screen+2,f
  4336  0212  2A06               	goto	u2110
  4337  0213                     l2249:
  4338                           
  4339                           ;main.c: 106:     LCD_Cmd(0x01);
  4340  0213  3001               	movlw	1
  4341  0214  158A  25B4  118A   	fcall	_LCD_Cmd
  4342  0217                     l2251:
  4343                           
  4344                           ;main.c: 107:     if(x==1)
  4345  0217  1283               	bcf	3,5	;RP0=0, select bank0
  4346  0218  1303               	bcf	3,6	;RP1=0, select bank0
  4347  0219  032A               	decf	conditional_screen@x,w
  4348  021A  042B               	iorwf	conditional_screen@x+1,w
  4349  021B  1D03               	btfss	3,2
  4350  021C  2A1E               	goto	u2121
  4351  021D  2A1F               	goto	u2120
  4352  021E                     u2121:
  4353  021E  2A28               	goto	l2255
  4354  021F                     u2120:
  4355  021F                     l2253:
  4356                           
  4357                           ;main.c: 108:     {;main.c: 109:         strcat(msj," V");
  4358  021F  305A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  4359  0220  00A0               	movwf	strcat@from
  4360  0221  3080               	movlw	128
  4361  0222  00A1               	movwf	strcat@from+1
  4362  0223  303A               	movlw	(low (conditional_screen@msj| 0))& (0+255)
  4363  0224  158A  25E2  118A   	fcall	_strcat
  4364                           
  4365                           ;main.c: 110:     }
  4366  0227  2A47               	goto	l2263
  4367  0228                     l2255:
  4368  0228  3002               	movlw	2
  4369  0229  062A               	xorwf	conditional_screen@x,w
  4370  022A  042B               	iorwf	conditional_screen@x+1,w
  4371  022B  1D03               	btfss	3,2
  4372  022C  2A2E               	goto	u2131
  4373  022D  2A2F               	goto	u2130
  4374  022E                     u2131:
  4375  022E  2A38               	goto	l2259
  4376  022F                     u2130:
  4377  022F                     l2257:
  4378                           
  4379                           ;main.c: 112:     {;main.c: 113:         strcat(msj," F1");
  4380  022F  304B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  4381  0230  00A0               	movwf	strcat@from
  4382  0231  3080               	movlw	128
  4383  0232  00A1               	movwf	strcat@from+1
  4384  0233  303A               	movlw	(low (conditional_screen@msj| 0))& (0+255)
  4385  0234  158A  25E2  118A   	fcall	_strcat
  4386                           
  4387                           ;main.c: 114:     }
  4388  0237  2A47               	goto	l2263
  4389  0238                     l2259:
  4390  0238  3003               	movlw	3
  4391  0239  062A               	xorwf	conditional_screen@x,w
  4392  023A  042B               	iorwf	conditional_screen@x+1,w
  4393  023B  1D03               	btfss	3,2
  4394  023C  2A3E               	goto	u2141
  4395  023D  2A3F               	goto	u2140
  4396  023E                     u2141:
  4397  023E  2A47               	goto	l2263
  4398  023F                     u2140:
  4399  023F                     l2261:
  4400                           
  4401                           ;main.c: 116:     {;main.c: 117:         strcat(msj," F2");
  4402  023F  304F               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  4403  0240  00A0               	movwf	strcat@from
  4404  0241  3080               	movlw	128
  4405  0242  00A1               	movwf	strcat@from+1
  4406  0243  303A               	movlw	(low (conditional_screen@msj| 0))& (0+255)
  4407  0244  158A  25E2  118A   	fcall	_strcat
  4408  0247                     l2263:
  4409                           
  4410                           ;main.c: 119:     LCD_Goto(1,1);
  4411  0247  1283               	bcf	3,5	;RP0=0, select bank0
  4412  0248  1303               	bcf	3,6	;RP1=0, select bank0
  4413  0249  01A6               	clrf	LCD_Goto@row
  4414  024A  0AA6               	incf	LCD_Goto@row,f
  4415  024B  3001               	movlw	1
  4416  024C  118A  206E  118A   	fcall	_LCD_Goto
  4417  024F                     l2265:
  4418                           
  4419                           ;main.c: 120:     LCD_Print(msj);
  4420  024F  303A               	movlw	(low (conditional_screen@msj| 0))& (0+255)
  4421  0250  1283               	bcf	3,5	;RP0=0, select bank0
  4422  0251  1303               	bcf	3,6	;RP1=0, select bank0
  4423  0252  00A3               	movwf	LCD_Print@LCD_Str
  4424  0253  3000               	movlw	0
  4425  0254  00A4               	movwf	LCD_Print@LCD_Str+1
  4426  0255  158A  26BF  118A   	fcall	_LCD_Print
  4427                           
  4428                           ;main.c: 121:     LCD_Goto(1,2);
  4429  0258  3002               	movlw	2
  4430  0259  1283               	bcf	3,5	;RP0=0, select bank0
  4431  025A  1303               	bcf	3,6	;RP1=0, select bank0
  4432  025B  00AC               	movwf	??_conditional_screen
  4433  025C  082C               	movf	??_conditional_screen,w
  4434  025D  00A6               	movwf	LCD_Goto@row
  4435  025E  3001               	movlw	1
  4436  025F  118A  206E  118A   	fcall	_LCD_Goto
  4437  0262                     l2267:
  4438                           
  4439                           ;main.c: 122:     LCD_Print(con);
  4440  0262  3030               	movlw	(low (conditional_screen@con| 0))& (0+255)
  4441  0263  1283               	bcf	3,5	;RP0=0, select bank0
  4442  0264  1303               	bcf	3,6	;RP1=0, select bank0
  4443  0265  00A3               	movwf	LCD_Print@LCD_Str
  4444  0266  3000               	movlw	0
  4445  0267  00A4               	movwf	LCD_Print@LCD_Str+1
  4446  0268  158A  26BF  118A   	fcall	_LCD_Print
  4447  026B                     l203:
  4448  026B  0008               	return
  4449  026C                     __end_of_conditional_screen:
  4450                           
  4451                           	psect	text18
  4452  0DE2                     __ptext18:	
  4453 ;; *************** function _strcat *****************
  4454 ;; Defined at:
  4455 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strcat.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;  to              1    wreg     PTR unsigned char 
  4458 ;;		 -> screen_selector@value(1), ventilator_screen@vel(5), ventilator_screen@vol(10), conditional_screen@msj(14), 
  4459 ;;  from            2    0[BANK0 ] PTR const unsigned char 
  4460 ;;		 -> STR_9(4), STR_5(5), STR_4(3), ventilator_screen@vel_value(1), 
  4461 ;;		 -> ventilator_screen@vel_number(1), ventilator_screen@vol_value(1), STR_3(4), STR_2(4), 
  4462 ;;		 -> STR_1(3), 
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;  to              1    4[BANK0 ] PTR unsigned char 
  4465 ;;		 -> screen_selector@value(1), ventilator_screen@vel(5), ventilator_screen@vol(10), conditional_screen@msj(14), 
  4466 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  4467 ;;		 -> screen_selector@value(1), ventilator_screen@vel(5), ventilator_screen@vol(10), conditional_screen@msj(14), 
  4468 ;; Return value:  Size  Location     Type
  4469 ;;                  1    wreg      PTR unsigned char 
  4470 ;; Registers used:
  4471 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  4472 ;; Tracked objects:
  4473 ;;		On entry : 0/0
  4474 ;;		On exit  : 0/0
  4475 ;;		Unchanged: 0/0
  4476 ;; Data sizes:     COMMON   BANK0   BANK1
  4477 ;;      Params:         0       2       0
  4478 ;;      Locals:         0       2       0
  4479 ;;      Temps:          0       1       0
  4480 ;;      Totals:         0       5       0
  4481 ;;Total ram usage:        5 bytes
  4482 ;; Hardware stack levels used: 2
  4483 ;; This function calls:
  4484 ;;		Nothing
  4485 ;; This function is called by:
  4486 ;;		_conditional_screen
  4487 ;;		_ventilator_screen
  4488 ;;		_screen_selector
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           
  4493                           ;psect for function _strcat
  4494  0DE2                     _strcat:
  4495                           
  4496                           ;incstack = 0
  4497                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  4498                           ;strcat@to stored from wreg
  4499  0DE2  1283               	bcf	3,5	;RP0=0, select bank0
  4500  0DE3  1303               	bcf	3,6	;RP1=0, select bank0
  4501  0DE4  00A4               	movwf	strcat@to
  4502  0DE5                     l2121:
  4503  0DE5  0824               	movf	strcat@to,w
  4504  0DE6  00A2               	movwf	??_strcat
  4505  0DE7  0822               	movf	??_strcat,w
  4506  0DE8  00A3               	movwf	strcat@cp
  4507  0DE9  2DEE               	goto	l2125
  4508  0DEA                     l2123:
  4509  0DEA  3001               	movlw	1
  4510  0DEB  00A2               	movwf	??_strcat
  4511  0DEC  0822               	movf	??_strcat,w
  4512  0DED  07A3               	addwf	strcat@cp,f
  4513  0DEE                     l2125:
  4514  0DEE  0823               	movf	strcat@cp,w
  4515  0DEF  0084               	movwf	4
  4516  0DF0  1383               	bcf	3,7	;select IRP bank0
  4517  0DF1  0800               	movf	0,w
  4518  0DF2  1D03               	btfss	3,2
  4519  0DF3  2DF5               	goto	u1921
  4520  0DF4  2DF6               	goto	u1920
  4521  0DF5                     u1921:
  4522  0DF5  2DEA               	goto	l2123
  4523  0DF6                     u1920:
  4524  0DF6  2E01               	goto	l2131
  4525  0DF7                     l2127:
  4526  0DF7  3001               	movlw	1
  4527  0DF8  00A2               	movwf	??_strcat
  4528  0DF9  0822               	movf	??_strcat,w
  4529  0DFA  07A3               	addwf	strcat@cp,f
  4530  0DFB                     l2129:
  4531  0DFB  3001               	movlw	1
  4532  0DFC  07A0               	addwf	strcat@from,f
  4533  0DFD  1803               	skipnc
  4534  0DFE  0AA1               	incf	strcat@from+1,f
  4535  0DFF  3000               	movlw	0
  4536  0E00  07A1               	addwf	strcat@from+1,f
  4537  0E01                     l2131:
  4538  0E01  0821               	movf	strcat@from+1,w
  4539  0E02  00FF               	movwf	btemp+1
  4540  0E03  0820               	movf	strcat@from,w
  4541  0E04  0084               	movwf	4
  4542  0E05  118A  2002  158A   	fcall	stringtab
  4543  0E08  00A2               	movwf	??_strcat
  4544  0E09  0823               	movf	strcat@cp,w
  4545  0E0A  0084               	movwf	4
  4546  0E0B  0822               	movf	??_strcat,w
  4547  0E0C  1383               	bcf	3,7	;select IRP bank0
  4548  0E0D  0080               	movwf	0
  4549  0E0E  0800               	movf	0,w
  4550  0E0F  1D03               	btfss	3,2
  4551  0E10  2E12               	goto	u1931
  4552  0E11  2E13               	goto	u1930
  4553  0E12                     u1931:
  4554  0E12  2DF7               	goto	l2127
  4555  0E13                     u1930:
  4556  0E13                     l905:
  4557  0E13  0008               	return
  4558  0E14                     __end_of_strcat:
  4559                           
  4560                           	psect	text19
  4561  0CD5                     __ptext19:	
  4562 ;; *************** function _Tx_Dato *****************
  4563 ;; Defined at:
  4564 ;;		line 227 in file "main.c"
  4565 ;; Parameters:    Size  Location     Type
  4566 ;;  x               1    wreg     unsigned char 
  4567 ;; Auto vars:     Size  Location     Type
  4568 ;;  x               1    0[BANK0 ] unsigned char 
  4569 ;; Return value:  Size  Location     Type
  4570 ;;                  1    wreg      void 
  4571 ;; Registers used:
  4572 ;;		wreg, status,2
  4573 ;; Tracked objects:
  4574 ;;		On entry : 0/0
  4575 ;;		On exit  : 0/0
  4576 ;;		Unchanged: 0/0
  4577 ;; Data sizes:     COMMON   BANK0   BANK1
  4578 ;;      Params:         0       0       0
  4579 ;;      Locals:         0       1       0
  4580 ;;      Temps:          0       0       0
  4581 ;;      Totals:         0       1       0
  4582 ;;Total ram usage:        1 bytes
  4583 ;; Hardware stack levels used: 1
  4584 ;; This function calls:
  4585 ;;		Nothing
  4586 ;; This function is called by:
  4587 ;;		_selector_type
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591                           
  4592                           ;psect for function _Tx_Dato
  4593  0CD5                     _Tx_Dato:
  4594                           
  4595                           ;incstack = 0
  4596                           ; Regs used in _Tx_Dato: [wreg+status,2]
  4597                           ;Tx_Dato@x stored from wreg
  4598  0CD5  1283               	bcf	3,5	;RP0=0, select bank0
  4599  0CD6  1303               	bcf	3,6	;RP1=0, select bank0
  4600  0CD7  00A0               	movwf	Tx_Dato@x
  4601  0CD8                     l2313:
  4602  0CD8                     l251:	
  4603                           ;main.c: 227: void Tx_Dato(unsigned char x);main.c: 228: {;main.c: 229:     while((SSPST
      +                          AT & 0x04) || (SSPCON2 & 0x1F));
  4604                           
  4605  0CD8  1683               	bsf	3,5	;RP0=1, select bank1
  4606  0CD9  1303               	bcf	3,6	;RP1=0, select bank1
  4607  0CDA  1914               	btfsc	20,2	;volatile
  4608  0CDB  2CDD               	goto	u2201
  4609  0CDC  2CDE               	goto	u2200
  4610  0CDD                     u2201:
  4611  0CDD  2CD8               	goto	l251
  4612  0CDE                     u2200:
  4613  0CDE                     l2315:
  4614  0CDE  0811               	movf	17,w	;volatile
  4615  0CDF  391F               	andlw	31
  4616  0CE0  1D03               	btfss	3,2
  4617  0CE1  2CE3               	goto	u2211
  4618  0CE2  2CE4               	goto	u2210
  4619  0CE3                     u2211:
  4620  0CE3  2CD8               	goto	l251
  4621  0CE4                     u2210:
  4622  0CE4                     l2317:
  4623                           
  4624                           ;main.c: 230:     SSPBUF = x;
  4625  0CE4  1283               	bcf	3,5	;RP0=0, select bank0
  4626  0CE5  1303               	bcf	3,6	;RP1=0, select bank0
  4627  0CE6  0820               	movf	Tx_Dato@x,w
  4628  0CE7  0093               	movwf	19	;volatile
  4629  0CE8                     l254:
  4630  0CE8  0008               	return
  4631  0CE9                     __end_of_Tx_Dato:
  4632                           
  4633                           	psect	text20
  4634  0CB6                     __ptext20:	
  4635 ;; *************** function _C_parada *****************
  4636 ;; Defined at:
  4637 ;;		line 220 in file "main.c"
  4638 ;; Parameters:    Size  Location     Type
  4639 ;;		None
  4640 ;; Auto vars:     Size  Location     Type
  4641 ;;		None
  4642 ;; Return value:  Size  Location     Type
  4643 ;;                  1    wreg      void 
  4644 ;; Registers used:
  4645 ;;		wreg, status,2
  4646 ;; Tracked objects:
  4647 ;;		On entry : 0/0
  4648 ;;		On exit  : 0/0
  4649 ;;		Unchanged: 0/0
  4650 ;; Data sizes:     COMMON   BANK0   BANK1
  4651 ;;      Params:         0       0       0
  4652 ;;      Locals:         0       0       0
  4653 ;;      Temps:          0       0       0
  4654 ;;      Totals:         0       0       0
  4655 ;;Total ram usage:        0 bytes
  4656 ;; Hardware stack levels used: 1
  4657 ;; This function calls:
  4658 ;;		Nothing
  4659 ;; This function is called by:
  4660 ;;		_selector_type
  4661 ;; This function uses a non-reentrant model
  4662 ;;
  4663                           
  4664                           
  4665                           ;psect for function _C_parada
  4666  0CB6                     _C_parada:
  4667  0CB6                     l2309:	
  4668                           ;incstack = 0
  4669                           ; Regs used in _C_parada: [wreg+status,2]
  4670                           
  4671  0CB6                     l245:	
  4672                           ;main.c: 222:     while((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4673                           
  4674  0CB6  1683               	bsf	3,5	;RP0=1, select bank1
  4675  0CB7  1303               	bcf	3,6	;RP1=0, select bank1
  4676  0CB8  1914               	btfsc	20,2	;volatile
  4677  0CB9  2CBB               	goto	u2181
  4678  0CBA  2CBC               	goto	u2180
  4679  0CBB                     u2181:
  4680  0CBB  2CB6               	goto	l245
  4681  0CBC                     u2180:
  4682  0CBC                     l2311:
  4683  0CBC  0811               	movf	17,w	;volatile
  4684  0CBD  391F               	andlw	31
  4685  0CBE  1D03               	btfss	3,2
  4686  0CBF  2CC1               	goto	u2191
  4687  0CC0  2CC2               	goto	u2190
  4688  0CC1                     u2191:
  4689  0CC1  2CB6               	goto	l245
  4690  0CC2                     u2190:
  4691  0CC2                     l247:
  4692                           
  4693                           ;main.c: 223:     SSPCON2bits.PEN =1;
  4694  0CC2  1511               	bsf	17,2	;volatile
  4695  0CC3                     l248:
  4696  0CC3  0008               	return
  4697  0CC4                     __end_of_C_parada:
  4698                           
  4699                           	psect	text21
  4700  0CA8                     __ptext21:	
  4701 ;; *************** function _C_inicio *****************
  4702 ;; Defined at:
  4703 ;;		line 213 in file "main.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;		None
  4706 ;; Auto vars:     Size  Location     Type
  4707 ;;		None
  4708 ;; Return value:  Size  Location     Type
  4709 ;;                  1    wreg      void 
  4710 ;; Registers used:
  4711 ;;		wreg, status,2
  4712 ;; Tracked objects:
  4713 ;;		On entry : 0/0
  4714 ;;		On exit  : 0/0
  4715 ;;		Unchanged: 0/0
  4716 ;; Data sizes:     COMMON   BANK0   BANK1
  4717 ;;      Params:         0       0       0
  4718 ;;      Locals:         0       0       0
  4719 ;;      Temps:          0       0       0
  4720 ;;      Totals:         0       0       0
  4721 ;;Total ram usage:        0 bytes
  4722 ;; Hardware stack levels used: 1
  4723 ;; This function calls:
  4724 ;;		Nothing
  4725 ;; This function is called by:
  4726 ;;		_selector_type
  4727 ;; This function uses a non-reentrant model
  4728 ;;
  4729                           
  4730                           
  4731                           ;psect for function _C_inicio
  4732  0CA8                     _C_inicio:
  4733  0CA8                     l2305:	
  4734                           ;incstack = 0
  4735                           ; Regs used in _C_inicio: [wreg+status,2]
  4736                           
  4737  0CA8                     l239:	
  4738                           ;main.c: 215:     while((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4739                           
  4740  0CA8  1683               	bsf	3,5	;RP0=1, select bank1
  4741  0CA9  1303               	bcf	3,6	;RP1=0, select bank1
  4742  0CAA  1914               	btfsc	20,2	;volatile
  4743  0CAB  2CAD               	goto	u2161
  4744  0CAC  2CAE               	goto	u2160
  4745  0CAD                     u2161:
  4746  0CAD  2CA8               	goto	l239
  4747  0CAE                     u2160:
  4748  0CAE                     l2307:
  4749  0CAE  0811               	movf	17,w	;volatile
  4750  0CAF  391F               	andlw	31
  4751  0CB0  1D03               	btfss	3,2
  4752  0CB1  2CB3               	goto	u2171
  4753  0CB2  2CB4               	goto	u2170
  4754  0CB3                     u2171:
  4755  0CB3  2CA8               	goto	l239
  4756  0CB4                     u2170:
  4757  0CB4                     l241:
  4758                           
  4759                           ;main.c: 216:     SSPCON2bits.SEN =1;
  4760  0CB4  1411               	bsf	17,0	;volatile
  4761  0CB5                     l242:
  4762  0CB5  0008               	return
  4763  0CB6                     __end_of_C_inicio:
  4764                           
  4765                           	psect	text22
  4766  0E4B                     __ptext22:	
  4767 ;; *************** function _load_values *****************
  4768 ;; Defined at:
  4769 ;;		line 48 in file "main.c"
  4770 ;; Parameters:    Size  Location     Type
  4771 ;;		None
  4772 ;; Auto vars:     Size  Location     Type
  4773 ;;		None
  4774 ;; Return value:  Size  Location     Type
  4775 ;;                  1    wreg      void 
  4776 ;; Registers used:
  4777 ;;		wreg, status,2, status,0, pclath, cstack
  4778 ;; Tracked objects:
  4779 ;;		On entry : 0/0
  4780 ;;		On exit  : 0/0
  4781 ;;		Unchanged: 0/0
  4782 ;; Data sizes:     COMMON   BANK0   BANK1
  4783 ;;      Params:         0       0       0
  4784 ;;      Locals:         0       0       0
  4785 ;;      Temps:          0       1       0
  4786 ;;      Totals:         0       1       0
  4787 ;;Total ram usage:        1 bytes
  4788 ;; Hardware stack levels used: 1
  4789 ;; Hardware stack levels required when called: 1
  4790 ;; This function calls:
  4791 ;;		_eeprom_write
  4792 ;; This function is called by:
  4793 ;;		_main
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           
  4797                           
  4798                           ;psect for function _load_values
  4799  0E4B                     _load_values:
  4800  0E4B                     l2391:	
  4801                           ;incstack = 0
  4802                           ; Regs used in _load_values: [wreg+status,2+status,0+pclath+cstack]
  4803                           
  4804                           
  4805                           ;main.c: 50:         eeprom_write(0x00,4);
  4806  0E4B  3004               	movlw	4
  4807  0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  4808  0E4D  1303               	bcf	3,6	;RP1=0, select bank0
  4809  0E4E  00A3               	movwf	??_load_values
  4810  0E4F  0823               	movf	??_load_values,w
  4811  0E50  00A0               	movwf	eeprom_write@value
  4812  0E51  3000               	movlw	0
  4813  0E52  158A  2614  158A   	fcall	_eeprom_write
  4814                           
  4815                           ;main.c: 51:         eeprom_write(0x01,5);
  4816  0E55  3005               	movlw	5
  4817  0E56  1283               	bcf	3,5	;RP0=0, select bank0
  4818  0E57  1303               	bcf	3,6	;RP1=0, select bank0
  4819  0E58  00A3               	movwf	??_load_values
  4820  0E59  0823               	movf	??_load_values,w
  4821  0E5A  00A0               	movwf	eeprom_write@value
  4822  0E5B  3001               	movlw	1
  4823  0E5C  158A  2614  158A   	fcall	_eeprom_write
  4824                           
  4825                           ;main.c: 52:         eeprom_write(0x02,3);
  4826  0E5F  3003               	movlw	3
  4827  0E60  1283               	bcf	3,5	;RP0=0, select bank0
  4828  0E61  1303               	bcf	3,6	;RP1=0, select bank0
  4829  0E62  00A3               	movwf	??_load_values
  4830  0E63  0823               	movf	??_load_values,w
  4831  0E64  00A0               	movwf	eeprom_write@value
  4832  0E65  3002               	movlw	2
  4833  0E66  158A  2614  158A   	fcall	_eeprom_write
  4834                           
  4835                           ;main.c: 53:         eeprom_write(0x03,1);
  4836  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  4837  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  4838  0E6B  01A0               	clrf	eeprom_write@value
  4839  0E6C  0AA0               	incf	eeprom_write@value,f
  4840  0E6D  3003               	movlw	3
  4841  0E6E  158A  2614  158A   	fcall	_eeprom_write
  4842                           
  4843                           ;main.c: 54:         eeprom_write(0x04,2);
  4844  0E71  3002               	movlw	2
  4845  0E72  1283               	bcf	3,5	;RP0=0, select bank0
  4846  0E73  1303               	bcf	3,6	;RP1=0, select bank0
  4847  0E74  00A3               	movwf	??_load_values
  4848  0E75  0823               	movf	??_load_values,w
  4849  0E76  00A0               	movwf	eeprom_write@value
  4850  0E77  3004               	movlw	4
  4851  0E78  158A  2614  158A   	fcall	_eeprom_write
  4852                           
  4853                           ;main.c: 55:         eeprom_write(0x05,0);
  4854  0E7B  1283               	bcf	3,5	;RP0=0, select bank0
  4855  0E7C  1303               	bcf	3,6	;RP1=0, select bank0
  4856  0E7D  01A0               	clrf	eeprom_write@value
  4857  0E7E  3005               	movlw	5
  4858  0E7F  158A  2614  158A   	fcall	_eeprom_write
  4859  0E82                     l182:
  4860  0E82  0008               	return
  4861  0E83                     __end_of_load_values:
  4862                           
  4863                           	psect	text23
  4864  0E14                     __ptext23:	
  4865 ;; *************** function _eeprom_write *****************
  4866 ;; Defined at:
  4867 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\pic\__eewrite.c"
  4868 ;; Parameters:    Size  Location     Type
  4869 ;;  addr            1    wreg     unsigned char 
  4870 ;;  value           1    0[BANK0 ] unsigned char 
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;  addr            1    2[BANK0 ] unsigned char 
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      void 
  4875 ;; Registers used:
  4876 ;;		wreg, status,2, status,0
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMMON   BANK0   BANK1
  4882 ;;      Params:         0       1       0
  4883 ;;      Locals:         0       1       0
  4884 ;;      Temps:          0       1       0
  4885 ;;      Totals:         0       3       0
  4886 ;;Total ram usage:        3 bytes
  4887 ;; Hardware stack levels used: 1
  4888 ;; This function calls:
  4889 ;;		Nothing
  4890 ;; This function is called by:
  4891 ;;		_load_values
  4892 ;;		_write_value
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           
  4897                           ;psect for function _eeprom_write
  4898  0E14                     _eeprom_write:
  4899                           
  4900                           ;incstack = 0
  4901                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  4902                           ;eeprom_write@addr stored from wreg
  4903  0E14  1283               	bcf	3,5	;RP0=0, select bank0
  4904  0E15  1303               	bcf	3,6	;RP1=0, select bank0
  4905  0E16  00A2               	movwf	eeprom_write@addr
  4906  0E17                     l403:	
  4907                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\pic\__eewrite.c: 6: eeprom_write(u
      +                          nsigned char addr, unsigned char value);C:\Program Files\Microchip\xc8\v2.32\pic\sources
      +                          \c90\pic\__eewrite.c: 7: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\pic\__ee
      +                          write.c: 8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value); E
      +                          ECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCO
      +                          Nbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1; EEC
      +                          ON1bits.WREN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } while (0);
  4908                           
  4909  0E17                     l404:
  4910  0E17  1683               	bsf	3,5	;RP0=1, select bank3
  4911  0E18  1703               	bsf	3,6	;RP1=1, select bank3
  4912  0E19  188C               	btfsc	12,1	;volsfr
  4913  0E1A  2E1C               	goto	u2071
  4914  0E1B  2E1D               	goto	u2070
  4915  0E1C                     u2071:
  4916  0E1C  2E17               	goto	l404
  4917  0E1D                     u2070:
  4918  0E1D                     l2227:
  4919  0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  4920  0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  4921  0E1F  0822               	movf	eeprom_write@addr,w
  4922  0E20  1283               	bcf	3,5	;RP0=0, select bank2
  4923  0E21  1703               	bsf	3,6	;RP1=1, select bank2
  4924  0E22  008D               	movwf	13	;volatile
  4925  0E23  1283               	bcf	3,5	;RP0=0, select bank0
  4926  0E24  1303               	bcf	3,6	;RP1=0, select bank0
  4927  0E25  0820               	movf	eeprom_write@value,w
  4928  0E26  1283               	bcf	3,5	;RP0=0, select bank2
  4929  0E27  1703               	bsf	3,6	;RP1=1, select bank2
  4930  0E28  008C               	movwf	12	;volatile
  4931  0E29                     l2229:
  4932  0E29  303F               	movlw	63
  4933  0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  4934  0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  4935  0E2C  00A1               	movwf	??_eeprom_write
  4936  0E2D  0821               	movf	??_eeprom_write,w
  4937  0E2E  1683               	bsf	3,5	;RP0=1, select bank3
  4938  0E2F  1703               	bsf	3,6	;RP1=1, select bank3
  4939  0E30  058C               	andwf	12,f	;volsfr
  4940  0E31                     l2231:
  4941  0E31  1283               	bcf	3,5	;RP0=0, select bank0
  4942  0E32  1303               	bcf	3,6	;RP1=0, select bank0
  4943  0E33  1003               	bcf	3,0	;volatile
  4944  0E34                     l2233:
  4945  0E34  1F8B               	btfss	11,7	;volatile
  4946  0E35  2E37               	goto	u2081
  4947  0E36  2E38               	goto	u2080
  4948  0E37                     u2081:
  4949  0E37  2E39               	goto	l407
  4950  0E38                     u2080:
  4951  0E38                     l2235:
  4952  0E38  1403               	bsf	3,0	;volatile
  4953  0E39                     l407:
  4954  0E39  138B               	bcf	11,7	;volatile
  4955  0E3A  1683               	bsf	3,5	;RP0=1, select bank3
  4956  0E3B  1703               	bsf	3,6	;RP1=1, select bank3
  4957  0E3C  150C               	bsf	12,2	;volsfr
  4958  0E3D                     l2237:
  4959  0E3D  3055               	movlw	85
  4960  0E3E  008D               	movwf	13	;volsfr
  4961  0E3F  30AA               	movlw	170
  4962  0E40  008D               	movwf	13	;volsfr
  4963  0E41                     l2239:
  4964  0E41  148C               	bsf	12,1	;volsfr
  4965  0E42                     l2241:
  4966  0E42  110C               	bcf	12,2	;volsfr
  4967  0E43                     l2243:
  4968  0E43  1283               	bcf	3,5	;RP0=0, select bank0
  4969  0E44  1303               	bcf	3,6	;RP1=0, select bank0
  4970  0E45  1C03               	btfss	3,0	;volatile
  4971  0E46  2E48               	goto	u2091
  4972  0E47  2E49               	goto	u2090
  4973  0E48                     u2091:
  4974  0E48  2E4A               	goto	l410
  4975  0E49                     u2090:
  4976  0E49                     l2245:
  4977  0E49  178B               	bsf	11,7	;volatile
  4978  0E4A                     l410:
  4979  0E4A  0008               	return
  4980  0E4B                     __end_of_eeprom_write:
  4981                           
  4982                           	psect	text24
  4983  0FA0                     __ptext24:	
  4984 ;; *************** function _inicio_presentacion *****************
  4985 ;; Defined at:
  4986 ;;		line 88 in file "main.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;  length          2   10[BANK0 ] int 
  4989 ;;  str             1   12[BANK0 ] PTR unsigned char 
  4990 ;;		 -> grupo(6), presentacion(29), saludo(23), 
  4991 ;; Auto vars:     Size  Location     Type
  4992 ;;  i               2   16[BANK0 ] int 
  4993 ;; Return value:  Size  Location     Type
  4994 ;;                  1    wreg      void 
  4995 ;; Registers used:
  4996 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4997 ;; Tracked objects:
  4998 ;;		On entry : 0/0
  4999 ;;		On exit  : 0/0
  5000 ;;		Unchanged: 0/0
  5001 ;; Data sizes:     COMMON   BANK0   BANK1
  5002 ;;      Params:         0       3       0
  5003 ;;      Locals:         0       2       0
  5004 ;;      Temps:          0       3       0
  5005 ;;      Totals:         0       8       0
  5006 ;;Total ram usage:        8 bytes
  5007 ;; Hardware stack levels used: 1
  5008 ;; Hardware stack levels required when called: 3
  5009 ;; This function calls:
  5010 ;;		_LCD_Cmd
  5011 ;;		_LCD_Goto
  5012 ;;		_LCD_Print
  5013 ;; This function is called by:
  5014 ;;		_main
  5015 ;; This function uses a non-reentrant model
  5016 ;;
  5017                           
  5018                           
  5019                           ;psect for function _inicio_presentacion
  5020  0FA0                     _inicio_presentacion:
  5021  0FA0                     l2419:	
  5022                           ;incstack = 0
  5023                           ; Regs used in _inicio_presentacion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  5024                           
  5025                           
  5026                           ;main.c: 88: void inicio_presentacion (int length, char *str);main.c: 89: {;main.c: 90: 
      +                              LCD_Goto(1,1);
  5027  0FA0  1283               	bcf	3,5	;RP0=0, select bank0
  5028  0FA1  1303               	bcf	3,6	;RP1=0, select bank0
  5029  0FA2  01A6               	clrf	LCD_Goto@row
  5030  0FA3  0AA6               	incf	LCD_Goto@row,f
  5031  0FA4  3001               	movlw	1
  5032  0FA5  118A  206E  158A   	fcall	_LCD_Goto
  5033  0FA8                     l2421:
  5034                           
  5035                           ;main.c: 91:     LCD_Print(str);
  5036  0FA8  1283               	bcf	3,5	;RP0=0, select bank0
  5037  0FA9  1303               	bcf	3,6	;RP1=0, select bank0
  5038  0FAA  082C               	movf	inicio_presentacion@str,w
  5039  0FAB  00A3               	movwf	LCD_Print@LCD_Str
  5040  0FAC  3000               	movlw	0
  5041  0FAD  00A4               	movwf	LCD_Print@LCD_Str+1
  5042  0FAE  158A  26BF  158A   	fcall	_LCD_Print
  5043  0FB1                     l2423:
  5044                           
  5045                           ;main.c: 92:     _delay((unsigned long)((25)*(32000000/4000.0)));
  5046  0FB1  3002               	movlw	2
  5047  0FB2  1283               	bcf	3,5	;RP0=0, select bank0
  5048  0FB3  1303               	bcf	3,6	;RP1=0, select bank0
  5049  0FB4  00AF               	movwf	??_inicio_presentacion+2
  5050  0FB5  3004               	movlw	4
  5051  0FB6  00AE               	movwf	??_inicio_presentacion+1
  5052  0FB7  30BA               	movlw	186
  5053  0FB8  00AD               	movwf	??_inicio_presentacion
  5054  0FB9                     u2467:
  5055  0FB9  0BAD               	decfsz	??_inicio_presentacion,f
  5056  0FBA  2FB9               	goto	u2467
  5057  0FBB  0BAE               	decfsz	??_inicio_presentacion+1,f
  5058  0FBC  2FB9               	goto	u2467
  5059  0FBD  0BAF               	decfsz	??_inicio_presentacion+2,f
  5060  0FBE  2FB9               	goto	u2467
  5061  0FBF                     l2425:
  5062                           
  5063                           ;main.c: 93:     for(int i=0;i<length;i++){
  5064  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  5065  0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  5066  0FC1  01B0               	clrf	inicio_presentacion@i
  5067  0FC2  01B1               	clrf	inicio_presentacion@i+1
  5068  0FC3  2FDB               	goto	l2433
  5069  0FC4                     l2427:
  5070                           
  5071                           ;main.c: 94:         LCD_Cmd(0x18);
  5072  0FC4  3018               	movlw	24
  5073  0FC5  158A  25B4  158A   	fcall	_LCD_Cmd
  5074  0FC8                     l2429:
  5075                           
  5076                           ;main.c: 95:         _delay((unsigned long)((20)*(32000000/4000.0)));
  5077  0FC8  30D0               	movlw	208
  5078  0FC9  1283               	bcf	3,5	;RP0=0, select bank0
  5079  0FCA  1303               	bcf	3,6	;RP1=0, select bank0
  5080  0FCB  00AE               	movwf	??_inicio_presentacion+1
  5081  0FCC  30C9               	movlw	201
  5082  0FCD  00AD               	movwf	??_inicio_presentacion
  5083  0FCE                     u2477:
  5084  0FCE  0BAD               	decfsz	??_inicio_presentacion,f
  5085  0FCF  2FCE               	goto	u2477
  5086  0FD0  0BAE               	decfsz	??_inicio_presentacion+1,f
  5087  0FD1  2FCE               	goto	u2477
  5088  0FD2  0000               	nop
  5089  0FD3                     l2431:
  5090                           
  5091                           ;main.c: 96:     }
  5092  0FD3  3001               	movlw	1
  5093  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  5094  0FD5  1303               	bcf	3,6	;RP1=0, select bank0
  5095  0FD6  07B0               	addwf	inicio_presentacion@i,f
  5096  0FD7  1803               	skipnc
  5097  0FD8  0AB1               	incf	inicio_presentacion@i+1,f
  5098  0FD9  3000               	movlw	0
  5099  0FDA  07B1               	addwf	inicio_presentacion@i+1,f
  5100  0FDB                     l2433:
  5101  0FDB  0831               	movf	inicio_presentacion@i+1,w
  5102  0FDC  3A80               	xorlw	128
  5103  0FDD  00AD               	movwf	??_inicio_presentacion
  5104  0FDE  082B               	movf	inicio_presentacion@length+1,w
  5105  0FDF  3A80               	xorlw	128
  5106  0FE0  022D               	subwf	??_inicio_presentacion,w
  5107  0FE1  1D03               	skipz
  5108  0FE2  2FE5               	goto	u2255
  5109  0FE3  082A               	movf	inicio_presentacion@length,w
  5110  0FE4  0230               	subwf	inicio_presentacion@i,w
  5111  0FE5                     u2255:
  5112  0FE5  1C03               	skipc
  5113  0FE6  2FE8               	goto	u2251
  5114  0FE7  2FE9               	goto	u2250
  5115  0FE8                     u2251:
  5116  0FE8  2FC4               	goto	l2427
  5117  0FE9                     u2250:
  5118  0FE9                     l2435:
  5119                           
  5120                           ;main.c: 97:     _delay((unsigned long)((10)*(32000000/4000.0)));
  5121  0FE9  3068               	movlw	104
  5122  0FEA  1283               	bcf	3,5	;RP0=0, select bank0
  5123  0FEB  1303               	bcf	3,6	;RP1=0, select bank0
  5124  0FEC  00AE               	movwf	??_inicio_presentacion+1
  5125  0FED  30E4               	movlw	228
  5126  0FEE  00AD               	movwf	??_inicio_presentacion
  5127  0FEF                     u2487:
  5128  0FEF  0BAD               	decfsz	??_inicio_presentacion,f
  5129  0FF0  2FEF               	goto	u2487
  5130  0FF1  0BAE               	decfsz	??_inicio_presentacion+1,f
  5131  0FF2  2FEF               	goto	u2487
  5132  0FF3                     l2437:
  5133                           
  5134                           ;main.c: 98:     LCD_Cmd(0x01);
  5135  0FF3  3001               	movlw	1
  5136  0FF4  158A  25B4  158A   	fcall	_LCD_Cmd
  5137  0FF7                     l2439:
  5138                           
  5139                           ;main.c: 99:     LCD_Goto(1, 1);
  5140  0FF7  1283               	bcf	3,5	;RP0=0, select bank0
  5141  0FF8  1303               	bcf	3,6	;RP1=0, select bank0
  5142  0FF9  01A6               	clrf	LCD_Goto@row
  5143  0FFA  0AA6               	incf	LCD_Goto@row,f
  5144  0FFB  3001               	movlw	1
  5145  0FFC  118A  206E  158A   	fcall	_LCD_Goto
  5146  0FFF                     l191:
  5147  0FFF  0008               	return
  5148  1000                     __end_of_inicio_presentacion:
  5149                           
  5150                           	psect	text25
  5151  0EBF                     __ptext25:	
  5152 ;; *************** function _LCD_Print *****************
  5153 ;; Defined at:
  5154 ;;		line 113 in file "./lcd.h"
  5155 ;; Parameters:    Size  Location     Type
  5156 ;;  LCD_Str         2    3[BANK0 ] PTR unsigned char 
  5157 ;;		 -> grupo(6), presentacion(29), saludo(23), STR_11(16), 
  5158 ;;		 -> STR_10(9), screen_selector@value(1), STR_8(12), STR_7(18), 
  5159 ;;		 -> STR_6(14), ventilator_screen@vel(5), ventilator_screen@vol(10), conditional_screen@con(10), 
  5160 ;;		 -> conditional_screen@msj(14), 
  5161 ;; Auto vars:     Size  Location     Type
  5162 ;;  i               1    6[BANK0 ] unsigned char 
  5163 ;; Return value:  Size  Location     Type
  5164 ;;                  1    wreg      void 
  5165 ;; Registers used:
  5166 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5167 ;; Tracked objects:
  5168 ;;		On entry : 0/0
  5169 ;;		On exit  : 0/0
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:     COMMON   BANK0   BANK1
  5172 ;;      Params:         0       2       0
  5173 ;;      Locals:         0       1       0
  5174 ;;      Temps:          0       1       0
  5175 ;;      Totals:         0       4       0
  5176 ;;Total ram usage:        4 bytes
  5177 ;; Hardware stack levels used: 1
  5178 ;; Hardware stack levels required when called: 1
  5179 ;; This function calls:
  5180 ;;		_LCD_Write_Nibble
  5181 ;; This function is called by:
  5182 ;;		_inicio_presentacion
  5183 ;;		_conditional_screen
  5184 ;;		_ventilator_screen
  5185 ;;		_key_writing_value
  5186 ;;		_screen_selector
  5187 ;; This function uses a non-reentrant model
  5188 ;;
  5189                           
  5190                           
  5191                           ;psect for function _LCD_Print
  5192  0EBF                     _LCD_Print:
  5193  0EBF                     l1929:	
  5194                           ;incstack = 0
  5195                           ; Regs used in _LCD_Print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5196                           
  5197                           
  5198                           ;./lcd.h: 113: void LCD_Print(char* LCD_Str);./lcd.h: 114: {;./lcd.h: 115:   uint8_t i =
      +                           0;
  5199  0EBF  1283               	bcf	3,5	;RP0=0, select bank0
  5200  0EC0  1303               	bcf	3,6	;RP1=0, select bank0
  5201  0EC1  01A6               	clrf	LCD_Print@i
  5202  0EC2                     l1931:
  5203                           
  5204                           ;./lcd.h: 116:   RS = 1;
  5205  0EC2  147C               	bsf	_RS/(0+8),_RS& (0+7)
  5206                           
  5207                           ;./lcd.h: 117:   while(LCD_Str[i] != '\0')
  5208  0EC3  2EEE               	goto	l1937
  5209  0EC4                     l1933:
  5210                           
  5211                           ;./lcd.h: 118:   {;./lcd.h: 119:     LCD_Write_Nibble(LCD_Str[i] >> 4);
  5212  0EC4  0826               	movf	LCD_Print@i,w
  5213  0EC5  0723               	addwf	LCD_Print@LCD_Str,w
  5214  0EC6  0084               	movwf	4
  5215  0EC7  0824               	movf	LCD_Print@LCD_Str+1,w
  5216  0EC8  1803               	skipnc
  5217  0EC9  0A24               	incf	LCD_Print@LCD_Str+1,w
  5218  0ECA  00FF               	movwf	btemp+1
  5219  0ECB  118A  2002  158A   	fcall	stringtab
  5220  0ECE  00A5               	movwf	??_LCD_Print
  5221  0ECF  3004               	movlw	4
  5222  0ED0                     u1495:
  5223  0ED0  1003               	clrc
  5224  0ED1  0CA5               	rrf	??_LCD_Print,f
  5225  0ED2  3EFF               	addlw	-1
  5226  0ED3  1D03               	skipz
  5227  0ED4  2ED0               	goto	u1495
  5228  0ED5  0825               	movf	??_LCD_Print,w
  5229  0ED6  118A  209E  158A   	fcall	_LCD_Write_Nibble
  5230                           
  5231                           ;./lcd.h: 120:     LCD_Write_Nibble(LCD_Str[i++] );
  5232  0ED9  1283               	bcf	3,5	;RP0=0, select bank0
  5233  0EDA  1303               	bcf	3,6	;RP1=0, select bank0
  5234  0EDB  0826               	movf	LCD_Print@i,w
  5235  0EDC  0723               	addwf	LCD_Print@LCD_Str,w
  5236  0EDD  0084               	movwf	4
  5237  0EDE  0824               	movf	LCD_Print@LCD_Str+1,w
  5238  0EDF  1803               	skipnc
  5239  0EE0  0A24               	incf	LCD_Print@LCD_Str+1,w
  5240  0EE1  00FF               	movwf	btemp+1
  5241  0EE2  118A  2002  158A   	fcall	stringtab
  5242  0EE5  118A  209E  158A   	fcall	_LCD_Write_Nibble
  5243  0EE8                     l1935:
  5244  0EE8  3001               	movlw	1
  5245  0EE9  1283               	bcf	3,5	;RP0=0, select bank0
  5246  0EEA  1303               	bcf	3,6	;RP1=0, select bank0
  5247  0EEB  00A5               	movwf	??_LCD_Print
  5248  0EEC  0825               	movf	??_LCD_Print,w
  5249  0EED  07A6               	addwf	LCD_Print@i,f
  5250  0EEE                     l1937:
  5251                           
  5252                           ;./lcd.h: 117:   while(LCD_Str[i] != '\0')
  5253  0EEE  0826               	movf	LCD_Print@i,w
  5254  0EEF  0723               	addwf	LCD_Print@LCD_Str,w
  5255  0EF0  0084               	movwf	4
  5256  0EF1  0824               	movf	LCD_Print@LCD_Str+1,w
  5257  0EF2  1803               	skipnc
  5258  0EF3  0A24               	incf	LCD_Print@LCD_Str+1,w
  5259  0EF4  00FF               	movwf	btemp+1
  5260  0EF5  118A  2002  158A   	fcall	stringtab
  5261  0EF8  3A00               	xorlw	0
  5262  0EF9  1D03               	skipz
  5263  0EFA  2EFC               	goto	u1501
  5264  0EFB  2EFD               	goto	u1500
  5265  0EFC                     u1501:
  5266  0EFC  2EC4               	goto	l1933
  5267  0EFD                     u1500:
  5268  0EFD                     l103:
  5269  0EFD  0008               	return
  5270  0EFE                     __end_of_LCD_Print:
  5271                           
  5272                           	psect	text26
  5273  006E                     __ptext26:	
  5274 ;; *************** function _LCD_Goto *****************
  5275 ;; Defined at:
  5276 ;;		line 87 in file "./lcd.h"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;  col             1    wreg     unsigned char 
  5279 ;;  row             1    6[BANK0 ] unsigned char 
  5280 ;; Auto vars:     Size  Location     Type
  5281 ;;  col             1    9[BANK0 ] unsigned char 
  5282 ;; Return value:  Size  Location     Type
  5283 ;;                  1    wreg      void 
  5284 ;; Registers used:
  5285 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5286 ;; Tracked objects:
  5287 ;;		On entry : 0/0
  5288 ;;		On exit  : 0/0
  5289 ;;		Unchanged: 0/0
  5290 ;; Data sizes:     COMMON   BANK0   BANK1
  5291 ;;      Params:         0       1       0
  5292 ;;      Locals:         0       1       0
  5293 ;;      Temps:          0       2       0
  5294 ;;      Totals:         0       4       0
  5295 ;;Total ram usage:        4 bytes
  5296 ;; Hardware stack levels used: 1
  5297 ;; Hardware stack levels required when called: 2
  5298 ;; This function calls:
  5299 ;;		_LCD_Cmd
  5300 ;; This function is called by:
  5301 ;;		_inicio_presentacion
  5302 ;;		_conditional_screen
  5303 ;;		_ventilator_screen
  5304 ;;		_key_writing_value
  5305 ;;		_screen_selector
  5306 ;;		_main
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           
  5310                           
  5311                           ;psect for function _LCD_Goto
  5312  006E                     _LCD_Goto:
  5313                           
  5314                           ;incstack = 0
  5315                           ; Regs used in _LCD_Goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5316                           ;LCD_Goto@col stored from wreg
  5317  006E  1283               	bcf	3,5	;RP0=0, select bank0
  5318  006F  1303               	bcf	3,6	;RP1=0, select bank0
  5319  0070  00A9               	movwf	LCD_Goto@col
  5320  0071                     l1907:
  5321                           
  5322                           ;./lcd.h: 87: void LCD_Goto(uint8_t col, uint8_t row);./lcd.h: 88: {;./lcd.h: 89:   swit
      +                          ch(row)
  5323  0071  288A               	goto	l1917
  5324  0072                     l1909:
  5325                           
  5326                           ;./lcd.h: 92:       LCD_Cmd(0xC0 + col - 1);
  5327  0072  0829               	movf	LCD_Goto@col,w
  5328  0073  3EBF               	addlw	191
  5329  0074  158A  25B4  118A   	fcall	_LCD_Cmd
  5330                           
  5331                           ;./lcd.h: 93:       break;
  5332  0077  289D               	goto	l94
  5333  0078                     l1911:
  5334                           
  5335                           ;./lcd.h: 95:       LCD_Cmd(0x94 + col - 1);
  5336  0078  0829               	movf	LCD_Goto@col,w
  5337  0079  3E93               	addlw	147
  5338  007A  158A  25B4  118A   	fcall	_LCD_Cmd
  5339                           
  5340                           ;./lcd.h: 96:       break;
  5341  007D  289D               	goto	l94
  5342  007E                     l1913:
  5343                           
  5344                           ;./lcd.h: 98:       LCD_Cmd(0xD4 + col - 1);
  5345  007E  0829               	movf	LCD_Goto@col,w
  5346  007F  3ED3               	addlw	211
  5347  0080  158A  25B4  118A   	fcall	_LCD_Cmd
  5348                           
  5349                           ;./lcd.h: 99:     break;
  5350  0083  289D               	goto	l94
  5351  0084                     l1915:
  5352                           
  5353                           ;./lcd.h: 101:       LCD_Cmd(0x80 + col - 1);
  5354  0084  0829               	movf	LCD_Goto@col,w
  5355  0085  3E7F               	addlw	127
  5356  0086  158A  25B4  118A   	fcall	_LCD_Cmd
  5357                           
  5358                           ;./lcd.h: 102:   }
  5359  0089  289D               	goto	l94
  5360  008A                     l1917:
  5361  008A  0826               	movf	LCD_Goto@row,w
  5362  008B  00A7               	movwf	??_LCD_Goto
  5363  008C  01A8               	clrf	??_LCD_Goto+1
  5364                           
  5365                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5366                           ; Switch size 1, requested type "simple"
  5367                           ; Number of cases is 1, Range of values is 0 to 0
  5368                           ; switch strategies available:
  5369                           ; Name         Instructions Cycles
  5370                           ; simple_byte            4     3 (average)
  5371                           ; direct_byte            9     7 (fixed)
  5372                           ; jumptable            260     6 (fixed)
  5373                           ;	Chosen strategy is simple_byte
  5374  008D  0828               	movf	??_LCD_Goto+1,w
  5375  008E  3A00               	xorlw	0	; case 0
  5376  008F  1903               	skipnz
  5377  0090  2892               	goto	l2559
  5378  0091  2884               	goto	l1915
  5379  0092                     l2559:
  5380                           
  5381                           ; Switch size 1, requested type "simple"
  5382                           ; Number of cases is 3, Range of values is 2 to 4
  5383                           ; switch strategies available:
  5384                           ; Name         Instructions Cycles
  5385                           ; simple_byte           10     6 (average)
  5386                           ; direct_byte           16    10 (fixed)
  5387                           ; jumptable            263     9 (fixed)
  5388                           ;	Chosen strategy is simple_byte
  5389  0092  0827               	movf	??_LCD_Goto,w
  5390  0093  3A02               	xorlw	2	; case 2
  5391  0094  1903               	skipnz
  5392  0095  2872               	goto	l1909
  5393  0096  3A01               	xorlw	1	; case 3
  5394  0097  1903               	skipnz
  5395  0098  2878               	goto	l1911
  5396  0099  3A07               	xorlw	7	; case 4
  5397  009A  1903               	skipnz
  5398  009B  287E               	goto	l1913
  5399  009C  2884               	goto	l1915
  5400  009D                     l94:
  5401  009D  0008               	return
  5402  009E                     __end_of_LCD_Goto:
  5403                           
  5404                           	psect	text27
  5405  0CFD                     __ptext27:	
  5406 ;; *************** function _iniciar_puertos *****************
  5407 ;; Defined at:
  5408 ;;		line 58 in file "main.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;		None
  5411 ;; Auto vars:     Size  Location     Type
  5412 ;;		None
  5413 ;; Return value:  Size  Location     Type
  5414 ;;                  1    wreg      void 
  5415 ;; Registers used:
  5416 ;;		wreg, status,2
  5417 ;; Tracked objects:
  5418 ;;		On entry : 0/0
  5419 ;;		On exit  : 0/0
  5420 ;;		Unchanged: 0/0
  5421 ;; Data sizes:     COMMON   BANK0   BANK1
  5422 ;;      Params:         0       0       0
  5423 ;;      Locals:         0       0       0
  5424 ;;      Temps:          0       0       0
  5425 ;;      Totals:         0       0       0
  5426 ;;Total ram usage:        0 bytes
  5427 ;; Hardware stack levels used: 1
  5428 ;; This function calls:
  5429 ;;		Nothing
  5430 ;; This function is called by:
  5431 ;;		_main
  5432 ;; This function uses a non-reentrant model
  5433 ;;
  5434                           
  5435                           
  5436                           ;psect for function _iniciar_puertos
  5437  0CFD                     _iniciar_puertos:
  5438  0CFD                     l2393:	
  5439                           ;incstack = 0
  5440                           ; Regs used in _iniciar_puertos: [wreg+status,2]
  5441                           
  5442                           
  5443                           ;main.c: 60:     PORTA = 0x00;
  5444  0CFD  1283               	bcf	3,5	;RP0=0, select bank0
  5445  0CFE  1303               	bcf	3,6	;RP1=0, select bank0
  5446  0CFF  0185               	clrf	5	;volatile
  5447                           
  5448                           ;main.c: 61:     PORTB = 0x00;
  5449  0D00  0186               	clrf	6	;volatile
  5450                           
  5451                           ;main.c: 62:     PORTC = 0x00;
  5452  0D01  0187               	clrf	7	;volatile
  5453  0D02                     l2395:
  5454                           
  5455                           ;main.c: 67:     TRISCbits.TRISC0 = 0;
  5456  0D02  1683               	bsf	3,5	;RP0=1, select bank1
  5457  0D03  1303               	bcf	3,6	;RP1=0, select bank1
  5458  0D04  1007               	bcf	7,0	;volatile
  5459  0D05                     l2397:
  5460                           
  5461                           ;main.c: 68:     TRISCbits.TRISC1 = 0;
  5462  0D05  1087               	bcf	7,1	;volatile
  5463  0D06                     l2399:
  5464                           
  5465                           ;main.c: 70:     TRISCbits.TRISC3 = 1;
  5466  0D06  1587               	bsf	7,3	;volatile
  5467  0D07                     l2401:
  5468                           
  5469                           ;main.c: 71:     TRISCbits.TRISC4 = 1;
  5470  0D07  1607               	bsf	7,4	;volatile
  5471  0D08                     l2403:
  5472                           
  5473                           ;main.c: 73:     TRISCbits.TRISC6 = 0;
  5474  0D08  1307               	bcf	7,6	;volatile
  5475  0D09                     l2405:
  5476                           
  5477                           ;main.c: 77:     TRISAbits.TRISA0 = 1;
  5478  0D09  1405               	bsf	5,0	;volatile
  5479  0D0A                     l2407:
  5480                           
  5481                           ;main.c: 78:     TRISAbits.TRISA1 = 1;
  5482  0D0A  1485               	bsf	5,1	;volatile
  5483  0D0B                     l2409:
  5484                           
  5485                           ;main.c: 79:     TRISAbits.TRISA2 = 1;
  5486  0D0B  1505               	bsf	5,2	;volatile
  5487  0D0C                     l2411:
  5488                           
  5489                           ;main.c: 80:     TRISAbits.TRISA3 = 1;
  5490  0D0C  1585               	bsf	5,3	;volatile
  5491  0D0D                     l2413:
  5492                           
  5493                           ;main.c: 81:     TRISAbits.TRISA4 = 0;
  5494  0D0D  1205               	bcf	5,4	;volatile
  5495  0D0E                     l2415:
  5496                           
  5497                           ;main.c: 82:     TRISAbits.TRISA5 = 0;
  5498  0D0E  1285               	bcf	5,5	;volatile
  5499  0D0F                     l2417:
  5500                           
  5501                           ;main.c: 84:     ADCON1 = 0x07;
  5502  0D0F  3007               	movlw	7
  5503  0D10  009F               	movwf	31	;volatile
  5504  0D11                     l185:
  5505  0D11  0008               	return
  5506  0D12                     __end_of_iniciar_puertos:
  5507                           
  5508                           	psect	text28
  5509  056E                     __ptext28:	
  5510 ;; *************** function _LCD_Begin *****************
  5511 ;; Defined at:
  5512 ;;		line 124 in file "./lcd.h"
  5513 ;; Parameters:    Size  Location     Type
  5514 ;;		None
  5515 ;; Auto vars:     Size  Location     Type
  5516 ;;		None
  5517 ;; Return value:  Size  Location     Type
  5518 ;;                  1    wreg      void 
  5519 ;; Registers used:
  5520 ;;		wreg, status,2, status,0, pclath, cstack
  5521 ;; Tracked objects:
  5522 ;;		On entry : 0/0
  5523 ;;		On exit  : 0/0
  5524 ;;		Unchanged: 0/0
  5525 ;; Data sizes:     COMMON   BANK0   BANK1
  5526 ;;      Params:         0       0       0
  5527 ;;      Locals:         0       0       0
  5528 ;;      Temps:          0       3       0
  5529 ;;      Totals:         0       3       0
  5530 ;;Total ram usage:        3 bytes
  5531 ;; Hardware stack levels used: 1
  5532 ;; Hardware stack levels required when called: 2
  5533 ;; This function calls:
  5534 ;;		_LCD_Cmd
  5535 ;; This function is called by:
  5536 ;;		_main
  5537 ;; This function uses a non-reentrant model
  5538 ;;
  5539                           
  5540                           
  5541                           ;psect for function _LCD_Begin
  5542  056E                     _LCD_Begin:
  5543  056E                     l2363:	
  5544                           ;incstack = 0
  5545                           ; Regs used in _LCD_Begin: [wreg+status,2+status,0+pclath+cstack]
  5546                           
  5547                           
  5548                           ;./lcd.h: 126:   RS = 0;
  5549  056E  1283               	bcf	3,5	;RP0=0, select bank0
  5550  056F  1303               	bcf	3,6	;RP1=0, select bank0
  5551  0570  107C               	bcf	_RS/(0+8),_RS& (0+7)
  5552                           
  5553                           ;./lcd.h: 127:   PORTCbits.RC5 = 0;
  5554  0571  1287               	bcf	7,5	;volatile
  5555                           
  5556                           ;./lcd.h: 128:   PORTCbits.RC6 = 0;
  5557  0572  1307               	bcf	7,6	;volatile
  5558                           
  5559                           ;./lcd.h: 129:   PORTCbits.RC7 = 0;
  5560  0573  1387               	bcf	7,7	;volatile
  5561                           
  5562                           ;./lcd.h: 134:   PORTBbits.RB4 = 0;
  5563  0574  1206               	bcf	6,4	;volatile
  5564                           
  5565                           ;./lcd.h: 135:   PORTBbits.RB5 = 0;
  5566  0575  1286               	bcf	6,5	;volatile
  5567                           
  5568                           ;./lcd.h: 136:   PORTBbits.RB6 = 0;
  5569  0576  1306               	bcf	6,6	;volatile
  5570                           
  5571                           ;./lcd.h: 137:   PORTBbits.RB7 = 0;
  5572  0577  1386               	bcf	6,7	;volatile
  5573                           
  5574                           ;./lcd.h: 138:   TRISCbits.TRISC5 = 0;
  5575  0578  1683               	bsf	3,5	;RP0=1, select bank1
  5576  0579  1303               	bcf	3,6	;RP1=0, select bank1
  5577  057A  1287               	bcf	7,5	;volatile
  5578                           
  5579                           ;./lcd.h: 139:   TRISCbits.TRISC6 = 0;
  5580  057B  1307               	bcf	7,6	;volatile
  5581                           
  5582                           ;./lcd.h: 140:   TRISCbits.TRISC7 = 0;
  5583  057C  1387               	bcf	7,7	;volatile
  5584                           
  5585                           ;./lcd.h: 145:   TRISBbits.TRISB4 = 0;
  5586  057D  1206               	bcf	6,4	;volatile
  5587                           
  5588                           ;./lcd.h: 146:   TRISBbits.TRISB5 = 0;
  5589  057E  1286               	bcf	6,5	;volatile
  5590                           
  5591                           ;./lcd.h: 147:   TRISBbits.TRISB6 = 0;
  5592  057F  1306               	bcf	6,6	;volatile
  5593                           
  5594                           ;./lcd.h: 148:   TRISBbits.TRISB7 = 0;
  5595  0580  1386               	bcf	6,7	;volatile
  5596  0581                     l2365:
  5597                           
  5598                           ;./lcd.h: 149:   _delay((unsigned long)((40)*(32000000/4000.0)));
  5599  0581  3002               	movlw	2
  5600  0582  1283               	bcf	3,5	;RP0=0, select bank0
  5601  0583  1303               	bcf	3,6	;RP1=0, select bank0
  5602  0584  00A8               	movwf	??_LCD_Begin+2
  5603  0585  30A0               	movlw	160
  5604  0586  00A7               	movwf	??_LCD_Begin+1
  5605  0587  3092               	movlw	146
  5606  0588  00A6               	movwf	??_LCD_Begin
  5607  0589                     u2497:
  5608  0589  0BA6               	decfsz	??_LCD_Begin,f
  5609  058A  2D89               	goto	u2497
  5610  058B  0BA7               	decfsz	??_LCD_Begin+1,f
  5611  058C  2D89               	goto	u2497
  5612  058D  0BA8               	decfsz	??_LCD_Begin+2,f
  5613  058E  2D89               	goto	u2497
  5614  058F                     l2367:
  5615                           
  5616                           ;./lcd.h: 150:   LCD_Cmd(3);
  5617  058F  3003               	movlw	3
  5618  0590  158A  25B4  118A   	fcall	_LCD_Cmd
  5619  0593                     l2369:
  5620                           
  5621                           ;./lcd.h: 151:   _delay((unsigned long)((5)*(32000000/4000.0)));
  5622  0593  3034               	movlw	52
  5623  0594  1283               	bcf	3,5	;RP0=0, select bank0
  5624  0595  1303               	bcf	3,6	;RP1=0, select bank0
  5625  0596  00A7               	movwf	??_LCD_Begin+1
  5626  0597  30F1               	movlw	241
  5627  0598  00A6               	movwf	??_LCD_Begin
  5628  0599                     u2507:
  5629  0599  0BA6               	decfsz	??_LCD_Begin,f
  5630  059A  2D99               	goto	u2507
  5631  059B  0BA7               	decfsz	??_LCD_Begin+1,f
  5632  059C  2D99               	goto	u2507
  5633  059D  0000               	nop
  5634                           
  5635                           ;./lcd.h: 152:   LCD_Cmd(3);
  5636  059E  3003               	movlw	3
  5637  059F  158A  25B4  118A   	fcall	_LCD_Cmd
  5638  05A2                     l2371:
  5639                           
  5640                           ;./lcd.h: 153:   _delay((unsigned long)((5)*(32000000/4000.0)));
  5641  05A2  3034               	movlw	52
  5642  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  5643  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  5644  05A5  00A7               	movwf	??_LCD_Begin+1
  5645  05A6  30F1               	movlw	241
  5646  05A7  00A6               	movwf	??_LCD_Begin
  5647  05A8                     u2517:
  5648  05A8  0BA6               	decfsz	??_LCD_Begin,f
  5649  05A9  2DA8               	goto	u2517
  5650  05AA  0BA7               	decfsz	??_LCD_Begin+1,f
  5651  05AB  2DA8               	goto	u2517
  5652  05AC  0000               	nop
  5653  05AD                     l2373:
  5654                           
  5655                           ;./lcd.h: 154:   LCD_Cmd(3);
  5656  05AD  3003               	movlw	3
  5657  05AE  158A  25B4  118A   	fcall	_LCD_Cmd
  5658                           
  5659                           ;./lcd.h: 155:   _delay((unsigned long)((5)*(32000000/4000.0)));
  5660  05B1  3034               	movlw	52
  5661  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  5662  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  5663  05B4  00A7               	movwf	??_LCD_Begin+1
  5664  05B5  30F1               	movlw	241
  5665  05B6  00A6               	movwf	??_LCD_Begin
  5666  05B7                     u2527:
  5667  05B7  0BA6               	decfsz	??_LCD_Begin,f
  5668  05B8  2DB7               	goto	u2527
  5669  05B9  0BA7               	decfsz	??_LCD_Begin+1,f
  5670  05BA  2DB7               	goto	u2527
  5671  05BB  0000               	nop
  5672  05BC                     l2375:
  5673                           
  5674                           ;./lcd.h: 156:   LCD_Cmd(0x02);
  5675  05BC  3002               	movlw	2
  5676  05BD  158A  25B4  118A   	fcall	_LCD_Cmd
  5677  05C0                     l2377:
  5678                           
  5679                           ;./lcd.h: 157:   _delay((unsigned long)((5)*(32000000/4000.0)));
  5680  05C0  3034               	movlw	52
  5681  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  5682  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  5683  05C3  00A7               	movwf	??_LCD_Begin+1
  5684  05C4  30F1               	movlw	241
  5685  05C5  00A6               	movwf	??_LCD_Begin
  5686  05C6                     u2537:
  5687  05C6  0BA6               	decfsz	??_LCD_Begin,f
  5688  05C7  2DC6               	goto	u2537
  5689  05C8  0BA7               	decfsz	??_LCD_Begin+1,f
  5690  05C9  2DC6               	goto	u2537
  5691  05CA  0000               	nop
  5692                           
  5693                           ;./lcd.h: 158:   LCD_Cmd(0x20 | (2 << 2));
  5694  05CB  3028               	movlw	40
  5695  05CC  158A  25B4  118A   	fcall	_LCD_Cmd
  5696  05CF                     l2379:
  5697                           
  5698                           ;./lcd.h: 159:   _delay((unsigned long)((50)*(32000000/4000.0)));
  5699  05CF  3003               	movlw	3
  5700  05D0  1283               	bcf	3,5	;RP0=0, select bank0
  5701  05D1  1303               	bcf	3,6	;RP1=0, select bank0
  5702  05D2  00A8               	movwf	??_LCD_Begin+2
  5703  05D3  3008               	movlw	8
  5704  05D4  00A7               	movwf	??_LCD_Begin+1
  5705  05D5  3076               	movlw	118
  5706  05D6  00A6               	movwf	??_LCD_Begin
  5707  05D7                     u2547:
  5708  05D7  0BA6               	decfsz	??_LCD_Begin,f
  5709  05D8  2DD7               	goto	u2547
  5710  05D9  0BA7               	decfsz	??_LCD_Begin+1,f
  5711  05DA  2DD7               	goto	u2547
  5712  05DB  0BA8               	decfsz	??_LCD_Begin+2,f
  5713  05DC  2DD7               	goto	u2547
  5714  05DD  2DDE               	nop2
  5715  05DE                     l2381:
  5716                           
  5717                           ;./lcd.h: 160:   LCD_Cmd(0x0C);
  5718  05DE  300C               	movlw	12
  5719  05DF  158A  25B4  118A   	fcall	_LCD_Cmd
  5720                           
  5721                           ;./lcd.h: 161:   _delay((unsigned long)((50)*(32000000/4000.0)));
  5722  05E2  3003               	movlw	3
  5723  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  5724  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  5725  05E5  00A8               	movwf	??_LCD_Begin+2
  5726  05E6  3008               	movlw	8
  5727  05E7  00A7               	movwf	??_LCD_Begin+1
  5728  05E8  3076               	movlw	118
  5729  05E9  00A6               	movwf	??_LCD_Begin
  5730  05EA                     u2557:
  5731  05EA  0BA6               	decfsz	??_LCD_Begin,f
  5732  05EB  2DEA               	goto	u2557
  5733  05EC  0BA7               	decfsz	??_LCD_Begin+1,f
  5734  05ED  2DEA               	goto	u2557
  5735  05EE  0BA8               	decfsz	??_LCD_Begin+2,f
  5736  05EF  2DEA               	goto	u2557
  5737  05F0  2DF1               	nop2
  5738  05F1                     l2383:
  5739                           
  5740                           ;./lcd.h: 162:   LCD_Cmd(0x01);
  5741  05F1  3001               	movlw	1
  5742  05F2  158A  25B4  118A   	fcall	_LCD_Cmd
  5743  05F5                     l2385:
  5744                           
  5745                           ;./lcd.h: 163:   _delay((unsigned long)((50)*(32000000/4000.0)));
  5746  05F5  3003               	movlw	3
  5747  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  5748  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  5749  05F8  00A8               	movwf	??_LCD_Begin+2
  5750  05F9  3008               	movlw	8
  5751  05FA  00A7               	movwf	??_LCD_Begin+1
  5752  05FB  3076               	movlw	118
  5753  05FC  00A6               	movwf	??_LCD_Begin
  5754  05FD                     u2567:
  5755  05FD  0BA6               	decfsz	??_LCD_Begin,f
  5756  05FE  2DFD               	goto	u2567
  5757  05FF  0BA7               	decfsz	??_LCD_Begin+1,f
  5758  0600  2DFD               	goto	u2567
  5759  0601  0BA8               	decfsz	??_LCD_Begin+2,f
  5760  0602  2DFD               	goto	u2567
  5761  0603  2E04               	nop2
  5762                           
  5763                           ;./lcd.h: 164:   LCD_Cmd(0x04 | 0x02);
  5764  0604  3006               	movlw	6
  5765  0605  158A  25B4  118A   	fcall	_LCD_Cmd
  5766  0608                     l2387:
  5767                           
  5768                           ;./lcd.h: 165:   _delay((unsigned long)((50)*(32000000/4000.0)));
  5769  0608  3003               	movlw	3
  5770  0609  1283               	bcf	3,5	;RP0=0, select bank0
  5771  060A  1303               	bcf	3,6	;RP1=0, select bank0
  5772  060B  00A8               	movwf	??_LCD_Begin+2
  5773  060C  3008               	movlw	8
  5774  060D  00A7               	movwf	??_LCD_Begin+1
  5775  060E  3076               	movlw	118
  5776  060F  00A6               	movwf	??_LCD_Begin
  5777  0610                     u2577:
  5778  0610  0BA6               	decfsz	??_LCD_Begin,f
  5779  0611  2E10               	goto	u2577
  5780  0612  0BA7               	decfsz	??_LCD_Begin+1,f
  5781  0613  2E10               	goto	u2577
  5782  0614  0BA8               	decfsz	??_LCD_Begin+2,f
  5783  0615  2E10               	goto	u2577
  5784  0616  2E17               	nop2
  5785  0617                     l2389:
  5786                           
  5787                           ;./lcd.h: 166:   LCD_Cmd(0x0F);
  5788  0617  300F               	movlw	15
  5789  0618  158A  25B4  118A   	fcall	_LCD_Cmd
  5790                           
  5791                           ;./lcd.h: 167:   _delay((unsigned long)((50)*(32000000/4000.0)));
  5792  061B  3003               	movlw	3
  5793  061C  1283               	bcf	3,5	;RP0=0, select bank0
  5794  061D  1303               	bcf	3,6	;RP1=0, select bank0
  5795  061E  00A8               	movwf	??_LCD_Begin+2
  5796  061F  3008               	movlw	8
  5797  0620  00A7               	movwf	??_LCD_Begin+1
  5798  0621  3076               	movlw	118
  5799  0622  00A6               	movwf	??_LCD_Begin
  5800  0623                     u2587:
  5801  0623  0BA6               	decfsz	??_LCD_Begin,f
  5802  0624  2E23               	goto	u2587
  5803  0625  0BA7               	decfsz	??_LCD_Begin+1,f
  5804  0626  2E23               	goto	u2587
  5805  0627  0BA8               	decfsz	??_LCD_Begin+2,f
  5806  0628  2E23               	goto	u2587
  5807  0629  2E2A               	nop2
  5808  062A                     l106:
  5809  062A  0008               	return
  5810  062B                     __end_of_LCD_Begin:
  5811                           
  5812                           	psect	text29
  5813  0DB4                     __ptext29:	
  5814 ;; *************** function _LCD_Cmd *****************
  5815 ;; Defined at:
  5816 ;;		line 78 in file "./lcd.h"
  5817 ;; Parameters:    Size  Location     Type
  5818 ;;  Command         1    wreg     unsigned char 
  5819 ;; Auto vars:     Size  Location     Type
  5820 ;;  Command         1    5[BANK0 ] unsigned char 
  5821 ;; Return value:  Size  Location     Type
  5822 ;;                  1    wreg      void 
  5823 ;; Registers used:
  5824 ;;		wreg, status,2, status,0, pclath, cstack
  5825 ;; Tracked objects:
  5826 ;;		On entry : 0/0
  5827 ;;		On exit  : 0/0
  5828 ;;		Unchanged: 0/0
  5829 ;; Data sizes:     COMMON   BANK0   BANK1
  5830 ;;      Params:         0       0       0
  5831 ;;      Locals:         0       1       0
  5832 ;;      Temps:          0       2       0
  5833 ;;      Totals:         0       3       0
  5834 ;;Total ram usage:        3 bytes
  5835 ;; Hardware stack levels used: 1
  5836 ;; Hardware stack levels required when called: 1
  5837 ;; This function calls:
  5838 ;;		_LCD_Write_Nibble
  5839 ;; This function is called by:
  5840 ;;		_LCD_Goto
  5841 ;;		_LCD_Begin
  5842 ;;		_inicio_presentacion
  5843 ;;		_conditional_screen
  5844 ;;		_ventilator_screen
  5845 ;;		_key_writing_value
  5846 ;;		_screen_selector
  5847 ;; This function uses a non-reentrant model
  5848 ;;
  5849                           
  5850                           
  5851                           ;psect for function _LCD_Cmd
  5852  0DB4                     _LCD_Cmd:
  5853                           
  5854                           ;incstack = 0
  5855                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  5856                           ;LCD_Cmd@Command stored from wreg
  5857  0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  5858  0DB5  1303               	bcf	3,6	;RP1=0, select bank0
  5859  0DB6  00A5               	movwf	LCD_Cmd@Command
  5860  0DB7                     l1823:
  5861                           
  5862                           ;./lcd.h: 78: void LCD_Cmd(uint8_t Command);./lcd.h: 79: {;./lcd.h: 80:   RS = 0;
  5863  0DB7  107C               	bcf	_RS/(0+8),_RS& (0+7)
  5864  0DB8                     l1825:
  5865                           
  5866                           ;./lcd.h: 81:   LCD_Write_Nibble(Command >> 4);
  5867  0DB8  0825               	movf	LCD_Cmd@Command,w
  5868  0DB9  00A3               	movwf	??_LCD_Cmd
  5869  0DBA  3004               	movlw	4
  5870  0DBB                     u1265:
  5871  0DBB  1003               	clrc
  5872  0DBC  0CA3               	rrf	??_LCD_Cmd,f
  5873  0DBD  3EFF               	addlw	-1
  5874  0DBE  1D03               	skipz
  5875  0DBF  2DBB               	goto	u1265
  5876  0DC0  0823               	movf	??_LCD_Cmd,w
  5877  0DC1  118A  209E  158A   	fcall	_LCD_Write_Nibble
  5878                           
  5879                           ;./lcd.h: 82:   LCD_Write_Nibble(Command);
  5880  0DC4  1283               	bcf	3,5	;RP0=0, select bank0
  5881  0DC5  1303               	bcf	3,6	;RP1=0, select bank0
  5882  0DC6  0825               	movf	LCD_Cmd@Command,w
  5883  0DC7  118A  209E  158A   	fcall	_LCD_Write_Nibble
  5884  0DCA                     l1827:
  5885                           
  5886                           ;./lcd.h: 83:   if((Command == 0x01) || (Command == 0x02))
  5887  0DCA  1283               	bcf	3,5	;RP0=0, select bank0
  5888  0DCB  1303               	bcf	3,6	;RP1=0, select bank0
  5889  0DCC  0325               	decf	LCD_Cmd@Command,w
  5890  0DCD  1903               	btfsc	3,2
  5891  0DCE  2DD0               	goto	u1271
  5892  0DCF  2DD1               	goto	u1270
  5893  0DD0                     u1271:
  5894  0DD0  2DD7               	goto	l1831
  5895  0DD1                     u1270:
  5896  0DD1                     l1829:
  5897  0DD1  3002               	movlw	2
  5898  0DD2  0625               	xorwf	LCD_Cmd@Command,w
  5899  0DD3  1D03               	btfss	3,2
  5900  0DD4  2DD6               	goto	u1281
  5901  0DD5  2DD7               	goto	u1280
  5902  0DD6                     u1281:
  5903  0DD6  2DE1               	goto	l85
  5904  0DD7                     u1280:
  5905  0DD7                     l1831:
  5906                           
  5907                           ;./lcd.h: 84:     _delay((unsigned long)((2)*(32000000/4000.0)));
  5908  0DD7  3015               	movlw	21
  5909  0DD8  1283               	bcf	3,5	;RP0=0, select bank0
  5910  0DD9  1303               	bcf	3,6	;RP1=0, select bank0
  5911  0DDA  00A4               	movwf	??_LCD_Cmd+1
  5912  0DDB  30C6               	movlw	198
  5913  0DDC  00A3               	movwf	??_LCD_Cmd
  5914  0DDD                     u2597:
  5915  0DDD  0BA3               	decfsz	??_LCD_Cmd,f
  5916  0DDE  2DDD               	goto	u2597
  5917  0DDF  0BA4               	decfsz	??_LCD_Cmd+1,f
  5918  0DE0  2DDD               	goto	u2597
  5919  0DE1                     l85:
  5920  0DE1  0008               	return
  5921  0DE2                     __end_of_LCD_Cmd:
  5922                           
  5923                           	psect	text30
  5924  009E                     __ptext30:	
  5925 ;; *************** function _LCD_Write_Nibble *****************
  5926 ;; Defined at:
  5927 ;;		line 61 in file "./lcd.h"
  5928 ;; Parameters:    Size  Location     Type
  5929 ;;  n               1    wreg     unsigned char 
  5930 ;; Auto vars:     Size  Location     Type
  5931 ;;  n               1    2[BANK0 ] unsigned char 
  5932 ;; Return value:  Size  Location     Type
  5933 ;;                  1    wreg      void 
  5934 ;; Registers used:
  5935 ;;		wreg, status,2, status,0
  5936 ;; Tracked objects:
  5937 ;;		On entry : 0/0
  5938 ;;		On exit  : 0/0
  5939 ;;		Unchanged: 0/0
  5940 ;; Data sizes:     COMMON   BANK0   BANK1
  5941 ;;      Params:         0       0       0
  5942 ;;      Locals:         0       1       0
  5943 ;;      Temps:          0       2       0
  5944 ;;      Totals:         0       3       0
  5945 ;;Total ram usage:        3 bytes
  5946 ;; Hardware stack levels used: 1
  5947 ;; This function calls:
  5948 ;;		Nothing
  5949 ;; This function is called by:
  5950 ;;		_LCD_Cmd
  5951 ;;		_LCD_PutC
  5952 ;;		_LCD_Print
  5953 ;; This function uses a non-reentrant model
  5954 ;;
  5955                           
  5956                           
  5957                           ;psect for function _LCD_Write_Nibble
  5958  009E                     _LCD_Write_Nibble:
  5959                           
  5960                           ;incstack = 0
  5961                           ; Regs used in _LCD_Write_Nibble: [wreg+status,2+status,0]
  5962                           ;LCD_Write_Nibble@n stored from wreg
  5963  009E  1283               	bcf	3,5	;RP0=0, select bank0
  5964  009F  1303               	bcf	3,6	;RP1=0, select bank0
  5965  00A0  00A2               	movwf	LCD_Write_Nibble@n
  5966  00A1                     l1807:
  5967                           
  5968                           ;./lcd.h: 61: void LCD_Write_Nibble(uint8_t n);./lcd.h: 62: {;./lcd.h: 63:   PORTCbits.R
      +                          C5 = RS;
  5969  00A1  187C               	btfsc	_RS/(0+8),_RS& (0+7)
  5970  00A2  28A4               	goto	u1221
  5971  00A3  28A8               	goto	u1220
  5972  00A4                     u1221:
  5973  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  5974  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  5975  00A6  1687               	bsf	7,5	;volatile
  5976  00A7  28AB               	goto	u1234
  5977  00A8                     u1220:
  5978  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  5979  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  5980  00AA  1287               	bcf	7,5	;volatile
  5981  00AB                     u1234:
  5982  00AB                     l1809:
  5983                           
  5984                           ;./lcd.h: 64:   PORTBbits.RB4 = n & 0x01;
  5985  00AB  0822               	movf	LCD_Write_Nibble@n,w
  5986  00AC  3901               	andlw	1
  5987  00AD  00A0               	movwf	??_LCD_Write_Nibble
  5988  00AE  0EA0               	swapf	??_LCD_Write_Nibble,f
  5989  00AF  0806               	movf	6,w	;volatile
  5990  00B0  0620               	xorwf	??_LCD_Write_Nibble,w
  5991  00B1  39EF               	andlw	-17
  5992  00B2  0620               	xorwf	??_LCD_Write_Nibble,w
  5993  00B3  0086               	movwf	6	;volatile
  5994                           
  5995                           ;./lcd.h: 65:   PORTBbits.RB5 = (n >> 1) & 0x01;
  5996  00B4  0822               	movf	LCD_Write_Nibble@n,w
  5997  00B5  00A0               	movwf	??_LCD_Write_Nibble
  5998  00B6  1003               	clrc
  5999  00B7  0C20               	rrf	??_LCD_Write_Nibble,w
  6000  00B8  3901               	andlw	1
  6001  00B9  00A1               	movwf	??_LCD_Write_Nibble+1
  6002  00BA  0EA1               	swapf	??_LCD_Write_Nibble+1,f
  6003  00BB  0DA1               	rlf	??_LCD_Write_Nibble+1,f
  6004  00BC  0806               	movf	6,w	;volatile
  6005  00BD  0621               	xorwf	??_LCD_Write_Nibble+1,w
  6006  00BE  39DF               	andlw	-33
  6007  00BF  0621               	xorwf	??_LCD_Write_Nibble+1,w
  6008  00C0  0086               	movwf	6	;volatile
  6009                           
  6010                           ;./lcd.h: 66:   PORTBbits.RB6 = (n >> 2) & 0x01;
  6011  00C1  0822               	movf	LCD_Write_Nibble@n,w
  6012  00C2  00A0               	movwf	??_LCD_Write_Nibble
  6013  00C3  3002               	movlw	2
  6014  00C4                     u1245:
  6015  00C4  1003               	clrc
  6016  00C5  0CA0               	rrf	??_LCD_Write_Nibble,f
  6017  00C6  3EFF               	addlw	-1
  6018  00C7  1D03               	skipz
  6019  00C8  28C4               	goto	u1245
  6020  00C9  0820               	movf	??_LCD_Write_Nibble,w
  6021  00CA  3901               	andlw	1
  6022  00CB  00A1               	movwf	??_LCD_Write_Nibble+1
  6023  00CC  0EA1               	swapf	??_LCD_Write_Nibble+1,f
  6024  00CD  0DA1               	rlf	??_LCD_Write_Nibble+1,f
  6025  00CE  0DA1               	rlf	??_LCD_Write_Nibble+1,f
  6026  00CF  0806               	movf	6,w	;volatile
  6027  00D0  0621               	xorwf	??_LCD_Write_Nibble+1,w
  6028  00D1  39BF               	andlw	-65
  6029  00D2  0621               	xorwf	??_LCD_Write_Nibble+1,w
  6030  00D3  0086               	movwf	6	;volatile
  6031                           
  6032                           ;./lcd.h: 67:   PORTBbits.RB7 = (n >> 3) & 0x01;
  6033  00D4  0822               	movf	LCD_Write_Nibble@n,w
  6034  00D5  00A0               	movwf	??_LCD_Write_Nibble
  6035  00D6  3003               	movlw	3
  6036  00D7                     u1255:
  6037  00D7  1003               	clrc
  6038  00D8  0CA0               	rrf	??_LCD_Write_Nibble,f
  6039  00D9  3EFF               	addlw	-1
  6040  00DA  1D03               	skipz
  6041  00DB  28D7               	goto	u1255
  6042  00DC  0820               	movf	??_LCD_Write_Nibble,w
  6043  00DD  3901               	andlw	1
  6044  00DE  00A1               	movwf	??_LCD_Write_Nibble+1
  6045  00DF  0CA1               	rrf	??_LCD_Write_Nibble+1,f
  6046  00E0  0CA1               	rrf	??_LCD_Write_Nibble+1,f
  6047  00E1  0806               	movf	6,w	;volatile
  6048  00E2  0621               	xorwf	??_LCD_Write_Nibble+1,w
  6049  00E3  397F               	andlw	-129
  6050  00E4  0621               	xorwf	??_LCD_Write_Nibble+1,w
  6051  00E5  0086               	movwf	6	;volatile
  6052  00E6                     l1811:
  6053                           
  6054                           ;./lcd.h: 70:   PORTCbits.RC7 = 0;
  6055  00E6  1387               	bcf	7,7	;volatile
  6056  00E7                     l1813:
  6057                           
  6058                           ;./lcd.h: 71:   _delay((unsigned long)((1)*(32000000/4000000.0)));
  6059  00E7  28E8               	nop2	;2 cycle nop
  6060  00E8  28E9               	nop2	;2 cycle nop
  6061  00E9  28EA               	nop2	;2 cycle nop
  6062  00EA  28EB               	nop2	;2 cycle nop
  6063  00EB                     l1815:
  6064                           
  6065                           ;./lcd.h: 72:   PORTCbits.RC7 = 1;
  6066  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  6067  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  6068  00ED  1787               	bsf	7,7	;volatile
  6069  00EE                     l1817:
  6070                           
  6071                           ;./lcd.h: 73:   _delay((unsigned long)((1)*(32000000/4000000.0)));
  6072  00EE  28EF               	nop2	;2 cycle nop
  6073  00EF  28F0               	nop2	;2 cycle nop
  6074  00F0  28F1               	nop2	;2 cycle nop
  6075  00F1  28F2               	nop2	;2 cycle nop
  6076  00F2                     l1819:
  6077                           
  6078                           ;./lcd.h: 74:   PORTCbits.RC7 = 0;
  6079  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  6080  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  6081  00F4  1387               	bcf	7,7	;volatile
  6082  00F5                     l1821:
  6083                           
  6084                           ;./lcd.h: 75:   _delay((unsigned long)((100)*(32000000/4000000.0)));
  6085  00F5  309F               	movlw	159
  6086  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  6087  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  6088  00F8  00A0               	movwf	??_LCD_Write_Nibble
  6089  00F9                     u2607:
  6090  00F9  28FA               	nop2
  6091  00FA  0BA0               	decfsz	??_LCD_Write_Nibble,f
  6092  00FB  28F9               	goto	u2607
  6093  00FC  28FD               	nop2
  6094  00FD  0000               	nop
  6095  00FE                     l79:
  6096  00FE  0008               	return
  6097  00FF                     __end_of_LCD_Write_Nibble:
  6098  007E                     btemp	set	126	;btemp
  6099  007E                     wtemp0	set	126
  6100                           
  6101                           	psect	config
  6102                           
  6103                           ;Config register CONFIG @ 0x2007
  6104                           ;	Oscillator Selection bits
  6105                           ;	FOSC = XT, XT oscillator
  6106                           ;	Watchdog Timer Enable bit
  6107                           ;	WDTE = OFF, WDT disabled
  6108                           ;	Power-up Timer Enable bit
  6109                           ;	PWRTE = OFF, PWRT disabled
  6110                           ;	Brown-out Reset Enable bit
  6111                           ;	BOREN = OFF, BOR disabled
  6112                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  6113                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  6114                           ;	Data EEPROM Memory Code Protection bit
  6115                           ;	CPD = OFF, Data EEPROM code protection off
  6116                           ;	Flash Program Memory Write Enable bits
  6117                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  6118                           ;	In-Circuit Debugger Mode bit
  6119                           ;	DEBUG = 0x1, unprogrammed default
  6120                           ;	Flash Program Memory Code Protection bit
  6121                           ;	CP = OFF, Code protection off
  6122  2007                     	org	8199
  6123  2007  3F39               	dw	16185

Data Sizes:
    Strings     92
    Constant    0
    Data        103
    BSS         17
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94     62      93
    BANK1            94      0      92

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_9(CODE[4]), STR_5(CODE[5]), STR_4(CODE[3]), ventilator_screen@vel_value(BANK0[1]), 
		 -> ventilator_screen@vel_number(BANK0[1]), ventilator_screen@vol_value(BANK0[1]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> STR_1(CODE[3]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 14
		 -> screen_selector@value(BANK0[1]), ventilator_screen@vel(BANK0[5]), ventilator_screen@vol(BANK0[10]), conditional_screen@msj(BANK0[14]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 14
		 -> screen_selector@value(BANK0[1]), ventilator_screen@vel(BANK0[5]), ventilator_screen@vol(BANK0[10]), conditional_screen@msj(BANK0[14]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 1
		 -> screen_selector@value(BANK0[1]), ventilator_screen@vel_value(BANK0[1]), ventilator_screen@vel_number(BANK0[1]), ventilator_screen@vol_value(BANK0[1]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 1
		 -> screen_selector@value(BANK0[1]), ventilator_screen@vel_value(BANK0[1]), ventilator_screen@vel_number(BANK0[1]), ventilator_screen@vol_value(BANK0[1]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 1
		 -> screen_selector@value(BANK0[1]), ventilator_screen@vel_value(BANK0[1]), ventilator_screen@vel_number(BANK0[1]), ventilator_screen@vol_value(BANK0[1]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 1
		 -> screen_selector@value(BANK0[1]), ventilator_screen@vel_value(BANK0[1]), ventilator_screen@vel_number(BANK0[1]), ventilator_screen@vol_value(BANK0[1]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 4096
		 -> ROM(CODE[4096]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 1
		 -> screen_selector@value(BANK0[1]), ventilator_screen@vel_value(BANK0[1]), ventilator_screen@vel_number(BANK0[1]), ventilator_screen@vol_value(BANK0[1]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 14
		 -> screen_selector@value(BANK0[1]), ventilator_screen@vel(BANK0[5]), ventilator_screen@vol(BANK0[10]), conditional_screen@msj(BANK0[14]), 

    inicio_presentacion@str	PTR unsigned char  size(1) Largest target is 29
		 -> grupo(BANK1[6]), presentacion(BANK1[29]), saludo(BANK1[23]), 

    LCD_Print@LCD_Str	PTR unsigned char  size(2) Largest target is 29
		 -> grupo(BANK1[6]), presentacion(BANK1[29]), saludo(BANK1[23]), STR_11(CODE[16]), 
		 -> STR_10(CODE[9]), screen_selector@value(BANK0[1]), STR_8(CODE[12]), STR_7(CODE[18]), 
		 -> STR_6(CODE[14]), ventilator_screen@vel(BANK0[5]), ventilator_screen@vol(BANK0[10]), conditional_screen@con(BANK0[10]), 
		 -> conditional_screen@msj(BANK0[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_selector_type
    _selector_type->_ventilator_screen
    _ventilator_screen->_itoa
    _screen_selector->_itoa
    _key_writing_value->_atoi
    _atoi->___wmul
    _LCD_PutC->_LCD_Write_Nibble
    _itoa->_utoa
    _utoa->___lwdiv
    _keypad_getkey->_keypad_readkey
    _conditional_screen->_LCD_Goto
    _load_values->_eeprom_write
    _inicio_presentacion->_LCD_Goto
    _LCD_Print->_LCD_Write_Nibble
    _LCD_Goto->_LCD_Cmd
    _LCD_Begin->_LCD_Cmd
    _LCD_Cmd->_LCD_Write_Nibble

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   27164
                                             58 BANK0      4     4      0
                          _LCD_Begin
                           _LCD_Goto
                           _LCD_PutC
                    _iniciar_puertos
                _inicio_presentacion
                      _keypad_getkey
                        _load_values
                      _selector_type
 ---------------------------------------------------------------------------------
 (1) _selector_type                                        7     7      0   21883
                                             53 BANK0      5     5      0
                           _C_inicio
                           _C_parada
                            _Tx_Dato
                               _atoi
                 _conditional_screen
                        _eeprom_read
                      _keypad_getkey
                    _screen_selector
                  _ventilator_screen
 ---------------------------------------------------------------------------------
 (2) _ventilator_screen                                   30    22      8    6981
                                             23 BANK0     30    22      8
                            _LCD_Cmd
                           _LCD_Goto
                          _LCD_Print
                            ___fltol
                               _itoa
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _screen_selector                                     14    13      1    9880
                                             23 BANK0     10     9      1
                            _LCD_Cmd
                           _LCD_Goto
                          _LCD_Print
                            ___fltol
                               _itoa
                  _key_writing_value
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _key_writing_value                                    4     4      0    3369
                                             14 BANK0      4     4      0
                            _LCD_Cmd
                           _LCD_Goto
                          _LCD_Print
                           _LCD_PutC
                               _atoi
                     _keypad_readkey
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 8     6      2     639
                                              6 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _LCD_PutC                                             2     2      0     132
                                              3 BANK0      2     2      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 7     3      4    2167
                                             17 BANK0      6     2      4
                            ___fltol (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     5      4    1264
                                              8 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              6     2      4     311
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4     466
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     381
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (2) _keypad_getkey                                        2     2      0      46
                                              1 BANK0      2     2      0
                     _keypad_readkey
 ---------------------------------------------------------------------------------
 (4) _keypad_readkey                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _eeprom_read                                          2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _conditional_screen                                  30    28      2    4002
                                             10 BANK0     30    28      2
                            _LCD_Cmd
                           _LCD_Goto
                          _LCD_Print
                             _strcat
 ---------------------------------------------------------------------------------
 (4) _strcat                                               5     3      2    1079
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _Tx_Dato                                              1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _C_parada                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _C_inicio                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _load_values                                          1     1      0     576
                                              3 BANK0      1     1      0
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (2) _eeprom_write                                         3     2      1     576
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _inicio_presentacion                                  8     5      3    3032
                                             10 BANK0      8     5      3
                            _LCD_Cmd
                           _LCD_Goto
                          _LCD_Print
 ---------------------------------------------------------------------------------
 (3) _LCD_Print                                            4     2      2    1058
                                              3 BANK0      4     2      2
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (3) _LCD_Goto                                             4     3      1    1274
                                              6 BANK0      4     3      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _iniciar_puertos                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            3     3      0     176
                                              6 BANK0      3     3      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (4) _LCD_Cmd                                              3     3      0     176
                                              3 BANK0      3     3      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_Nibble                                     3     3      0      88
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Begin
     _LCD_Cmd
       _LCD_Write_Nibble
   _LCD_Goto
     _LCD_Cmd
   _LCD_PutC
     _LCD_Write_Nibble
   _iniciar_puertos
   _inicio_presentacion
     _LCD_Cmd
     _LCD_Goto
     _LCD_Print
       _LCD_Write_Nibble
   _keypad_getkey
     _keypad_readkey
   _load_values
     _eeprom_write
   _selector_type
     _C_inicio
     _C_parada
     _Tx_Dato
     _atoi
       ___wmul
       _isdigit
     _conditional_screen
       _LCD_Cmd
       _LCD_Goto
       _LCD_Print
       _strcat
     _eeprom_read
     _keypad_getkey
     _screen_selector
       _LCD_Cmd
       _LCD_Goto
       _LCD_Print
       ___fltol
       _itoa
         ___fltol (ARG)
         _utoa (ARG)
           ___lwdiv
           ___lwmod
       _key_writing_value
         _LCD_Cmd
         _LCD_Goto
         _LCD_Print
         _LCD_PutC
         _atoi
         _keypad_readkey
       _strcat
     _ventilator_screen
       _LCD_Cmd
       _LCD_Goto
       _LCD_Print
       ___fltol
       _itoa
       _strcat

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               5E      0      5C       6       97.9%
BITBANK1            5E      0       0       5        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               5E     3E      5D       4       98.9%
BITBANK0            5E      0       1       3        1.1%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      B9       8        0.0%
ABS                  0      0      B9       7        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jun 23 23:44:14 2021

                                 _i 007A                                   pc 0002  
                                l85 0DE1                                  l94 009D  
                                l79 00FE                                  l97 0D28  
                                _GO 00FA                                  _RS 03E0  
                                _va 0066                                  _vb 0064  
                                fsr 0004                 ___wmul@multiplicand 0022  
                               l103 0EFD                                 l106 062A  
                               l130 0697                                 l203 026B  
                               l131 0685                                 l132 068B  
                               l124 0662                                 l141 06EF  
                               l133 0691                                 l125 0650  
                               l142 06F5                                 l126 0702  
                               l143 06FB                                 l135 06CC  
                               l127 0656                                 l136 06BA  
                               l128 065C                                 l216 056D  
                               l241 0CB4                                 l137 06C0  
                               l153 0D68                                 l410 0E4A  
                               l242 0CB5                                 l138 06C6  
                               l403 0E17                                 l251 0CD8  
                               l404 0E17                                 l260 0381  
                               l245 0CB6                                 l182 0E82  
                               l254 0CE8                                 l414 0D9B  
                               l191 0FFF                                 l407 0E39  
                               l239 0CA8                                 l247 0CC2  
                               l248 0CC3                                 l600 01E6  
                               l416 0DB3                                 l185 0D11  
                               l610 01E6                                 l283 07DE  
                               l269 04B3                                 l607 01D1  
                               l384 0D2C                                 l386 0D47  
                               l905 0E13                                 l686 0F43  
                               l696 0EBE                                 _ECO 0068  
                               l882 0CFC                                 l877 02F4  
                               l894 0153                                 l896 016A  
                               l888 0D8C                                 _RA0 0028  
                               _RA1 0029                                 _RA2 002A  
                               _RA3 002B                                 _RC0 0038  
                               _RA4 002C                                 _RC1 0039  
                               _RA5 002D                    ?_iniciar_puertos 0020  
                               fsr0 0004                                 indf 0000  
                   __end_of_LCD_Cmd 0DE2                        ___fltol@exp1 002A  
                              l2001 06A8                                l2003 06AC  
                              l2021 06CA                                l2013 06BE  
                              l2005 06B0                                l2101 0125  
                              l2031 06E1                                l2007 06B4  
                              l2111 0157                                l2103 0127  
                              l2121 0DE5                                l2041 06F3  
                              l2033 06E5                                l2025 06D0  
                              l2017 06C4                                l2009 06B8  
                              l2201 01AD                                l2113 015E  
                              l2105 0138                                l2131 0E01  
                              l2123 0DEA                                l2035 06E9  
                              l2027 06D7                                l2211 01D6  
                              l2203 01BF                                l2115 0160  
                              l2107 0149                                l2125 0DEE  
                              l2045 06F9                                l2037 06ED  
                              l2029 06DD                                l2053 0701  
                              l2221 0D5D                                l2213 01DB  
                              l2117 0166                                l2109 014F  
                              l2141 0D7B                                l2133 0D6C  
                              l2061 0274                                l2301 055A  
                              l2231 0E31                                l2311 0CBC  
                              l2127 0DF7                                l2223 0D65  
                              l2215 0D48                                l2143 0D80  
                              l2135 0D6C                                l2071 029E  
                              l2063 027E                                l2151 0301  
                              l2303 0564                                l2401 0D07  
                              l2241 0E42                                l2233 0E34  
                              l2305 0CA8                                l2313 0CD8  
                              l2129 0DFB                                l2049 06FF  
                              l2217 0D4F                                l2209 01C6  
                              l2137 0D70                                l2081 02DD  
                              l2073 02A8                                l2065 0288  
                              l2057 026F                                l2161 032A  
                              l2153 030A                                l2321 041A  
                              l2411 0D0C                                l2403 0D08  
                              l2243 0E43                                l2235 0E38  
                              l2227 0E1D                                l2307 0CAE  
                              l2315 0CDE                                l2251 0217  
                              l2219 0D57                                l2091 0102  
                              l2139 0D77                                l2083 02E4  
                              l2075 02AD                                l2067 028B  
                              l2059 0270                                l2171 0356  
                              l2163 0339                                l2155 0312  
                              l2147 02F5                                l2331 0445  
                              l2323 0422                                l2413 0D0D  
                              l2405 0D09                                l2421 0FA8  
                              l2245 0E49                                l2237 0E3D  
                              l2229 0E29                                l2309 0CB6  
                              l2317 0CE4                                l2261 023F  
                              l2253 021F                                l2181 0178  
                              l2093 0106                                l2069 0295  
                              l2173 0360                                l2165 033D  
                              l2157 031C                                l2149 02F9  
                              l2341 0464                                l2333 0446  
                              l2325 042A                                l2501 038B  
                              l2415 0D0E                                l2407 0D0A  
                              l2431 0FD3                                l2423 0FB1  
                              l2239 0E41                                l2263 0247  
                              l2255 0228                                l2247 01E7  
                              l2191 019F                                l2095 0117  
                              l2087 02F0                                l2079 02D1  
                              l2175 0368                                l2167 0345  
                              l2159 0324                                l2351 0494  
                              l2343 046E                                l2335 0446  
                              l2327 0431                                l2319 0416  
                              l2271 04B8                                l2511 03B6  
                              l2503 038E                                l2417 0D0F  
                              l2409 0D0B                                l2433 0FDB  
                              l2425 0FBF                                l2265 024F  
                              l2257 022F                                l2249 0213  
                              l2193 01A1                                l2185 0181  
                              l2097 011B                                l2177 037D  
                              l2169 034E                                l2353 0499  
                              l2337 0446                                l2329 043B  
                              l2345 0478                                l2281 04E2  
                              l2273 04CF                                l2441 0706  
                              l2521 03F0                                l2513 03C1  
                              l2505 0391                                l1811 00E6  
                              l2371 05A2                                l2363 056E  
                              l2435 0FE9                                l2427 0FC4  
                              l2419 0FA0                                l2267 0262  
                              l2259 0238                                l2195 01A5  
                              l2187 0196                                l2179 016B  
                              l2099 0121                                l2355 04A0  
                              l2347 047E                                l2339 0449  
                              l2291 0520                                l2283 04E8  
                              l2275 04DF                                l2451 0732  
                              l2443 070A                                l2523 03F8  
                              l2515 03CE                                l2507 039E  
                              l1821 00F5                                l1813 00E7  
                              l2381 05DE                                l2373 05AD  
                              l2365 0581                                l2437 0FF3  
                              l2429 0FC8                                l2189 0197  
                              l1901 0CF9                                l2357 04AF  
                              l2349 0485                                l2293 052E  
                              l2285 0503                                l2277 04E0  
                              l2269 04B4                                l2461 0762  
                              l2453 0739                                l2445 0710  
                              l2525 03FC                                l2517 03D9  
                              l2509 03A9                                l1815 00EB  
                              l1807 00A1                                l1831 0DD7  
                              l1823 0DB7                                l2383 05F1  
                              l2375 05BC                                l2367 058F  
                              l1911 0078                                l2439 0FF7  
                              l2391 0E4B                                l2359 0D35  
                              l1903 0CFB                                l2295 0538  
                              l2287 050D                                l2279 04E1  
                              l2471 0788                                l2463 076A  
                              l2455 074C                                l2447 0716  
                              l2527 0402                                l2519 03E1  
                              l1817 00EE                                l1809 00AB  
                              l1825 0DB8                                l2385 05F5  
                              l2377 05C0                                l2369 0593  
                              l2393 0CFD                                l1913 007E  
                              l1841 0DA9                                l1833 0D8D  
                              l2297 0542                                l2289 0516  
                              l2481 07AF                                l2473 0791  
                              l2465 0773                                l2449 0729  
                              l2457 0755                                l1819 00F2  
                              l1827 0DCA                                l2387 0608  
                              l2379 05CF                                l2395 0D02  
                              l1915 0084                                l1907 0071  
                              l1931 0EC2                                l1851 0F08  
                              l1843 0DAF                                l1835 0D91  
                              l2299 0550                                l2491 07CC  
                              l2483 07B9                                l2475 0797  
                              l2467 0779                                l2459 075B  
                              l1829 0DD1                                l2389 0617  
                              l2397 0D05                                l1909 0072  
                              l1917 008A                                l1933 0EC4  
                              l1941 0631                                l1861 0F2B  
                              l1853 0F0B                                l1925 0D15  
                              l1837 0D95                                l2493 07CF  
                              l2485 07BF                                l2477 079E  
                              l2469 0780                                l2399 0D06  
                              l2559 0092                                l1935 0EE8  
                              l1951 064A                                l1943 0638  
                              l1863 0F31                                l1855 0F12  
                              l1847 0EFE                                l1927 0D16  
                              l1839 0DA2                                l2487 07C2  
                              l2479 07A6                                l1937 0EEE  
                              l1929 0EBF                                l1961 065A  
                              l1953 064E                                l1945 063E  
                              l1865 0F32                                l1857 0F16  
                              l1849 0F02                                l1881 0E99  
                              l1873 0E83                                l2489 07C6  
                              l2497 0382                                l1971 066D  
                              l1947 0642                                l1939 062B  
                              l1867 0F39                                l1859 0F1A  
                              l1883 0E9D                                l1875 0E8B  
                              l1891 0EBA                                l2499 0388  
                              l1981 0683                                l1973 0673  
                              l1965 0660                                l1957 0654  
                              l1949 0646                                l1869 0F3F  
                              l1885 0EA7                                l1877 0E8E  
                              l1975 0677                                l1887 0EAD  
                              l1879 0E95                                l1895 0CEC  
                              l1993 0695                                l1985 0689  
                              l1977 067B                                l1969 0666  
                              l1889 0EB4                                l1897 0CED  
                              l1979 067F                                l1899 0CF3  
                              l1997 069B                                l1989 068F  
                              l1999 06A2                   ?_LCD_Write_Nibble 0020  
                              _ADIF 0066                                _ADON 00F8  
                              _CHS0 00FB                                _CHS1 00FC  
                              _CHS2 00FD                                STR_1 006B  
                              STR_2 005C                                STR_3 0060  
                              STR_4 0068                                STR_5 0057  
                              STR_6 0034                                STR_7 0012  
                              STR_8 0042                                STR_9 0064  
                              u2000 01BE                                u2001 01BD  
                              u2010 01C5                                u2011 01C4  
                              u1220 00A8                                u2100 01F1  
                              u1221 00A4                                u2110 0206  
                              u2030 01D6                                u2031 01D5  
                              u2200 0CDE                                u2120 021F  
                              u2040 01DB                                u1400 0E8B  
                              u1320 0DAF                                u2201 0CDD  
                              u2121 021E                                u2041 01DA  
                              u2025 01C8                                u1401 0E8A  
                              u1321 0DAE                                u1305 0D9C  
                              u1234 00AB                                u2210 0CE4  
                              u2130 022F                                u2050 0D5D  
                              u1330 0F08                                u2211 0CE3  
                              u2131 022E                                u2051 0D5C  
                              u1331 0F07                                u1315 0DA3  
                              u1500 0EFD                                u2140 023F  
                              u2060 0D65                                u1420 0E9D  
                              u2220 042A                                u2300 0779  
                              u1245 00C4                                u1501 0EFC  
                              u2141 023E                                u2061 0D64  
                              u1421 0E9C                                u2221 0429  
                              u2301 0778                                u1270 0DD1  
                              u2070 0E1D                                u1510 063E  
                              u1350 0F1A                                u1430 0EA7  
                              u2230 047E                                u2150 04C2  
                              u2310 0797                                u1255 00D7  
                              u1271 0DD0                                u2071 0E1C  
                              u1511 063D                                u1351 0F19  
                              u1431 0EA6                                u1415 0E8F  
                              u2231 047D                                u2311 0796  
                              u1280 0DD7                                u2080 0E38  
                              u2160 0CAE                                u2240 0D35  
                              u1600 0677                                u1520 0642  
                              u1281 0DD6                                u1265 0DBB  
                              u2081 0E37                                u2161 0CAD  
                              u2241 0D32                                u1601 0676  
                              u1521 0641                                u1345 0F0C  
                              u2250 0FE9                                u2090 0E49  
                              u2170 0CB4                                u1610 067B  
                              u1530 0646                                u1370 0F2B  
                              u1450 0EBA                                u1290 0D95  
                              u2251 0FE8                                u2091 0E48  
                              u2171 0CB3                                u1611 067A  
                              u1531 0645                                u1371 0F2A  
                              u1451 0EB9                                u1435 0EA3  
                              u1291 0D94                                u2180 0CBC  
                              u1700 06B4                                u1620 067F  
                              u1540 064A                                u1460 0CF3  
                              u2260 0710                                u2181 0CBB  
                              u1701 06B3                                u1621 067E  
                              u1541 0649                                u1365 0F1B  
                              u1445 0EAE                                u1461 0CF2  
                              u2261 070F                                u2190 0CC2  
                              u1710 06B8                                u1630 0683  
                              u1550 064E                                u1390 0F3F  
                              u1470 0CF9                                u2270 0716  
                              u2255 0FE5                                u2191 0CC1  
                              u1711 06B7                                u1631 0682  
                              u1551 064D                                u1391 0F3E  
                              u1375 0F27                                u1471 0CF8  
                              u2407 0332                                u2271 0715  
                              u2327 03A4                                u1800 06F3  
                              u1720 06BE                                u1640 0689  
                              u1560 0654                                u2280 0739  
                              u1801 06F2                                u1721 06BD  
                              u1641 0688                                u1561 0653  
                              u1385 0F33                                u2417 0376  
                              u2281 0738                                u2337 03BC  
                              u1810 06F9                                u1730 06C4  
                              u1650 068F                                u1570 065A  
                              u2290 075B                                u2507 0599  
                              u1811 06F8                                u1731 06C3  
                              u1651 068E                                u1571 0659  
                              u2427 0635                                u2291 075A  
                              u2347 03D4                                u1820 06FF  
                              u1740 06CA                                u1660 0695  
                              u1580 0660                                u1900 014F  
                              u2517 05A8                                u1821 06FE  
                              u1741 06C9                                u1661 0694  
                              u2437 066A                                u1581 065F  
                              u1901 014E                                u1485 0D19  
                              u2357 03E9                                u1750 06DD  
                              u1670 06A8                                u1590 0673  
                              u1910 0166                                u1830 027E  
                              u2607 00F9                                u2527 05B7  
                              u1495 0ED0                                u1751 06DC  
                              u1671 06A7                                u2447 069F  
                              u1591 0672                                u1911 0165  
                              u1831 027D                                u2367 040A  
                              u1920 0DF6                                u1760 06E1  
                              u1680 06AC                                u1840 0288  
                              u2537 05C6                                u1921 0DF5  
                              u1761 06E0                                u2457 06D4  
                              u1681 06AB                                u1841 0287  
                              u2377 07D7                                u1930 0E13  
                              u1770 06E5                                u1690 06B0  
                              u1850 0295                                u2547 05D7  
                              u2467 0FB9                                u1931 0E12  
                              u1771 06E4                                u1691 06AF  
                              u1851 0294                                u2387 048D  
                              u1780 06E9                                u1940 0D70  
                              u1860 02A8                                u2557 05EA  
                              u2477 0FCE                                u1781 06E8  
                              u1941 0D6F                                u1861 02A7  
                              u2397 04A8                                u1790 06ED  
                              u1950 0178                                u1870 02DD  
                              u2567 05FD                                u2487 0FEF  
                              u1791 06EC                                u1951 0177  
                              u1871 02DC                                u1960 018F  
                              u1880 02E4                                u2577 0610  
                              u2497 0589                                u1881 02E3  
                              u1970 01A5                                u1890 0121  
                              u2587 0623                                u1971 01A4  
                              u1891 0120                                u1980 01AC  
                              u2597 0DDD                                u1981 01AB  
                              u1965 018A                                u1995 01AE  
                    ??_eeprom_write 0021                  ??_LCD_Write_Nibble 0020  
                              _atoi 026C                                _main 0382  
                __size_of_LCD_Begin 00BD                                _itoa 0D69  
                              btemp 007E                                _utoa 00FF  
                __size_of_LCD_Print 003F                                start 0000  
                       LCD_Goto@col 0029                         LCD_Goto@row 0026  
                  __end_of_LCD_Goto 009E                    __end_of_LCD_PutC 0D29  
                   __end_of_Tx_Dato 0CE9                       ___fltol@sign1 0029  
                             ?_atoi 0026                               ?_main 0020  
                             ?_itoa 0031                               _ADRES 0062  
                             _EEADR 010D                               STR_10 004E  
                             STR_11 0024                     __end_of___fltol 01E7  
                             ?_utoa 0028                        ?_load_values 0020  
                   __end_of___lwdiv 0F44                     __end_of___lwmod 0EBF  
                             _PORTA 0005                               _PORTB 0006  
                             _PORTC 0007                    ??_keypad_readkey 0020  
                             _envio 006E                     __end_of_isdigit 0CFD  
                             _grupo 00F6          __end_of_conditional_screen 026C  
                             atoi@a 002B                               atoi@s 002D  
                             main@c 005D                               pclath 000A  
                  __end_of_C_inicio 0CB6                    __end_of_C_parada 0CC4  
                             utoa@c 002F                               utoa@v 002D  
                             status 0003                               wtemp0 007E  
                   __initialization 07DF                        __end_of_atoi 02F5  
                      __end_of_main 0413                        __end_of_itoa 0D8D  
                      __end_of_utoa 016B  ventilator_screen@ventilator_number 003D  
                    selector_type@c 0059                      selector_type@k 0058  
                            ??_atoi 0028                              ??_main 005A  
                            ??_itoa 0035                   __end_of_LCD_Begin 062B  
                            ??_utoa 002C                           ??_LCD_Cmd 0023  
                 __end_of_LCD_Print 0EFE                              _ADCON1 009F  
                            _ADRESH 001E                              _ADRESL 009E  
                            _EEDATA 010C                              _EECON1 018C  
                            _EECON2 018D               __end_of_selector_type 07DF  
                            _SSPADD 0093                              _SSPCON 0014  
                            _SSPBUF 0013             conditional_screen@F1121 00B8  
           conditional_screen@F1119 00A0                __size_of_eeprom_read 001F  
                         ??_Tx_Dato 0000                   _ventilator_screen 04B4  
                            ___wmul 0D8D                           ??___fltol 0024  
                         ??___lwdiv 0024                           ??___lwmod 0024  
                ?_ventilator_screen 0037                              _saludo 00DF  
                            _number 005E                __end_of_eeprom_write 0E4B  
                            _strcat 0DE2                           ??_isdigit 0000  
               ??_ventilator_screen 003F             __end_of__initialization 07FD  
                         ?_LCD_Goto 0026                     eeprom_read@addr 0021  
                         ?_LCD_PutC 0020                       _length_saludo 0074  
                        ___fltol@f1 0020              __size_of_keypad_getkey 0021  
          __size_of_screen_selector 00A1           __end_of_ventilator_screen 056E  
      __size_of_inicio_presentacion 0060                      __pcstackCOMMON 0000  
                      __pidataBANK0 0C9D                        __pidataBANK1 0F44  
                    LCD_Cmd@Command 0025                           ?_C_inicio 0020  
            inicio_presentacion@str 002C                           ?_C_parada 0020  
              __size_of_load_values 0038                   eeprom_write@value 0020  
                        __pbssBANK0 005E                          ??_LCD_Goto 0027  
                        ??_LCD_PutC 0023              ventilator_screen@F1131 006D  
            ventilator_screen@F1133 006C              ventilator_screen@F1135 006B  
            ventilator_screen@F1127 00AE              ventilator_screen@F1129 006F  
                        __pmaintext 0382                             ?___wmul 0020  
         __size_of_LCD_Write_Nibble 0061                  key_writing_value@c 0031  
                           ?_strcat 0020                          ??_C_inicio 0000  
                        ??_C_parada 0000                       _keypad_getkey 0D48  
                           _LCD_Cmd 0DB4                             _SSPCON2 0091  
                           _SSPSTAT 0094                          __stringtab 0002  
          __size_of_iniciar_puertos 0015          __size_of_ventilator_screen 00BA  
                _conditional_screen 01E7                             _Tx_Dato 0CD5  
             __size_of_eeprom_write 0037                    LCD_PutC@LCD_Char 0024  
                           ___fltol 016B                     __size_of___wmul 0027  
                           ___lwdiv 0EFE                             ___lwmod 0E83  
                 ??_screen_selector 0038                 ?_conditional_screen 002A  
        ventilator_screen@vel_value 0054            ventilator_screen@voltaje 0037  
                           __ptext1 0703                             __ptext2 04B4  
                           __ptext3 0413                             __ptext4 02F5  
                           __ptext5 026C                             __ptext6 0CE9  
                           __ptext7 0D8D                             __ptext8 0D12  
                           __ptext9 0D69                      ?_keypad_getkey 0020  
                   __size_of_strcat 0032                             _isdigit 0CE9  
                         _LCD_Begin 056E          ventilator_screen@vol_value 0052  
                         _LCD_Print 0EBF                             clrloop0 0C96  
              end_of_initialization 07FD                ??_conditional_screen 002C  
                           itoa@buf 0036                             itoa@val 0031  
                      _eeprom_write 0E14                             utoa@buf 0030  
                 LCD_Write_Nibble@n 0022                             utoa@val 0028  
                         _PORTBbits 0006                           _PORTCbits 0007  
                         _TRISAbits 0085                           _TRISBbits 0086  
                         _TRISCbits 0087                          ?_LCD_Begin 0020  
               _inicio_presentacion 0FA0                          ?_LCD_Print 0023  
                     ??_eeprom_read 0020             __size_of_keypad_readkey 00D8  
                 __size_of_LCD_Goto 0030                   __size_of_LCD_PutC 0017  
                 ??_iniciar_puertos 0000                ?_inicio_presentacion 002A  
              screen_selector@F1154 006A                    _LCD_Write_Nibble 009E  
                        LCD_Print@i 0026                      __end_of___wmul 0DB4  
                   ??_keypad_getkey 0021              __size_of_selector_type 00DC  
                     __pbitbssBANK0 03E0               conditional_screen@con 0030  
             conditional_screen@msj 003A                screen_selector@value 0040  
                    __end_of_strcat 0E14                 start_initialization 07DF  
                 __size_of_C_inicio 000E                   __size_of_C_parada 000E  
              inicio_presentacion@i 0030               ??_inicio_presentacion 002D  
                          ??___wmul 0000                 __end_of_eeprom_read 0D48  
                        init_fetch0 0CC4                         __pdataBANK0 006F  
                       __pdataBANK1 00A0                 _length_presentacion 0076  
                          ??_strcat 0022                       ??_load_values 0023  
                          ?_LCD_Cmd 0020                        _length_grupo 0078  
                         ___latbits 0001                       __pcstackBANK0 0020  
                       ??_LCD_Begin 0026                         ??_LCD_Print 0025  
                  eeprom_write@addr 0022                       _selector_type 0703  
                   _screen_selector 0413                           __pnvBANK0 007A  
                  ___lwdiv@dividend 0022                            ?_Tx_Dato 0020  
                          ?___fltol 0020                            ?___lwdiv 0020  
                          ?___lwmod 0020                   _key_writing_value 02F5  
                  LCD_Print@LCD_Str 0023                           __pstrings 0002  
                ?_key_writing_value 0020                            ?_isdigit 0020  
               ??_key_writing_value 002E                    ___lwdiv@quotient 0025  
               __end_of_load_values 0E83                      ?_selector_type 0020  
                          _LCD_Goto 006E                            _LCD_PutC 0D12  
                    ___wmul@product 0024                      _keypad_readkey 062B  
                         clear_ram0 0C95                         _eeprom_read 0D29  
         __end_of_key_writing_value 0382                         __stringbase 0011  
                 ___wmul@multiplier 0020                            _C_inicio 0CA8  
                          _C_parada 0CB6                    __size_of_LCD_Cmd 002E  
           __end_of_screen_selector 04B4            __end_of_LCD_Write_Nibble 00FF  
                   _iniciar_puertos 0CFD              __end_of_keypad_readkey 0703  
       __size_of_conditional_screen 0085                    screen_selector@c 003F  
                  screen_selector@k 0037                    screen_selector@v 003B  
                        _EECON1bits 018C                            Tx_Dato@x 0020  
                  __size_of_Tx_Dato 0014                    __size_of___fltol 007C  
                  __size_of___lwdiv 0046                    __size_of___lwmod 003C  
                __end_of__stringtab 0012                         _isdigit$894 0020  
                       _load_values 0E4B                          strcat@from 0020  
                  __size_of_isdigit 0014                     ___lwdiv@divisor 0020  
                   ___lwdiv@counter 0027         ventilator_screen@vel_number 0053  
                          __ptext10 00FF                            __ptext11 0E83  
                          __ptext20 0CB6                            __ptext12 0EFE  
                          __ptext21 0CA8                            __ptext13 016B  
                          __ptext30 009E                            __ptext22 0E4B  
                          __ptext14 0D48                            __ptext23 0E14  
                          __ptext15 062B                            __ptext24 0FA0  
                          __ptext16 0D29                            __ptext25 0EBF  
                          __ptext17 01E7                            __ptext26 006E  
                          __ptext18 0DE2                            __ptext27 0CFD  
                          __ptext19 0CD5                            __ptext28 056E  
                          __ptext29 0DB4                ventilator_screen@vel 004D  
              ventilator_screen@vol 0043                ventilator_screen@vrm 003B  
                   ??_selector_type 0055                     ?_keypad_readkey 0020  
                     __size_of_atoi 0089                       __size_of_main 0091  
                     __size_of_itoa 0024                       __size_of_utoa 006C  
        __size_of_key_writing_value 008D                            atoi@sign 002A  
             __end_of_keypad_getkey 0D69                 conditional_screen@x 002A  
           __end_of_iniciar_puertos 0D12                          _INTCONbits 000B  
                  keypad_getkey@key 0022                            itoa@base 0033  
                          init_ram0 0CC8                            isdigit@c 0021  
         inicio_presentacion@length 002A                    ?_screen_selector 0037  
       __end_of_inicio_presentacion 1000                    ___lwmod@dividend 0022  
                         stringcode 000C                        _presentacion 00C2  
                          utoa@base 002A                            strcat@cp 0023  
                          strcat@to 0024                     ___lwmod@divisor 0020  
                   ___lwmod@counter 0025                            stringdir 000C  
                          stringtab 0002                         _SSPCON2bits 0091  
                     ?_eeprom_write 0020                          _STATUSbits 0003  
                      ?_eeprom_read 0020  
